{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "feeRatePerDayScaled",
          "type": "uint256"
        }
      ],
      "name": "FeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "FeeReceiverSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "methodologist",
          "type": "address"
        }
      ],
      "name": "MethodologistSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "methodology",
          "type": "string"
        }
      ],
      "name": "MethodologySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintFeeToReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "SupplyCeilingSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRestricted",
          "type": "bool"
        }
      ],
      "name": "ToggledRestricted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BNB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BONE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BabyDoge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CURVE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ELON",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FLOKI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FactoryV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FactoryV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HarryPotterObamaSonic10Inu",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEASH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LINK",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MEME",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PEPE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SHIB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SwapRouterV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SwapRouterV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WSM",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WXRP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assetList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethPriceOracle",
      "outputs": [
        {
          "internalType": "contract MockV3Aggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IndexFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryV3",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexToken",
      "outputs": [
        {
          "internalType": "contract IndexToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeAssetList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract MockApiOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoter",
      "outputs": [
        {
          "internalType": "contract IQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "swapVersions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIssuanceWithEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIssuanceWithTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIssuanceWithTokensOutput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOracleList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwap",
      "outputs": [
        {
          "internalType": "contract TestSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateOracleList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "825:17816:78:-:0;;;;;1609:26:27;;;1631:4;-1:-1:-1;;1609:26:27;;;;;;;;3191:44:30;;;;;;;;;;-1:-1:-1;;;;;;1148:10:78;;;;1555:25:80;-1:-1:-1;;;;;;;;;;;1148:7:78;1528:18:80;1148:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1126:32;;;-1:-1:-1;;;;;;1126:32:78;-1:-1:-1;;;;;1126:32:78;;;;;;;;;;1190:10;;-1:-1:-1;;;;;;1190:10:78;;1198:1;1190:10;;;1555:25:80;-1:-1:-1;;;;;;;;;;;1190:7:78;;;1528:18:80;;1190:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1165:35;;;-1:-1:-1;;;;;;1165:35:78;-1:-1:-1;;;;;1165:35:78;;;;;;;;;;1224:10;;-1:-1:-1;;;;;;1224:10:78;;1232:1;1224:10;;;1555:25:80;-1:-1:-1;;;;;;;;;;;1224:7:78;;;1528:18:80;;1224:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1207:27;;;-1:-1:-1;;;;;;1207:27:78;-1:-1:-1;;;;;1207:27:78;;;;;;;;;;1261:10;;-1:-1:-1;;;;;;1261:10:78;;1269:1;1261:10;;;1555:25:80;-1:-1:-1;;;;;;;;;;;1261:7:78;;;1528:18:80;;1261:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1241:30;;;-1:-1:-1;;;;;;1241:30:78;-1:-1:-1;;;;;1241:30:78;;;;;;;;;;1302:10;;-1:-1:-1;;;;;;1302:10:78;;1310:1;1302:10;;;1555:25:80;-1:-1:-1;;;;;;;;;;;1302:7:78;;;1528:18:80;1302:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1278:34;;;-1:-1:-1;;;;;;1278:34:78;-1:-1:-1;;;;;1278:34:78;;;;;;;;;;1335:10;;-1:-1:-1;;;;;;1335:10:78;;1343:1;1335:10;;;1555:25:80;-1:-1:-1;;;;;;;;;;;1335:7:78;;;1528:18:80;;1335:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1319:26;;;-1:-1:-1;;;;;;1319:26:78;-1:-1:-1;;;;;1319:26:78;;;;;;;;;;1367:10;;-1:-1:-1;;;;;;1367:10:78;;1375:1;1367:10;;;1555:25:80;-1:-1:-1;;;;;;;;;;;1367:7:78;;;1528:18:80;;1367:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1352:25;;;-1:-1:-1;;;;;1352:25:78;;;;-1:-1:-1;;;;;;1352:25:78;;;;;;1765:64;;;;;;1787:42;1765:64;;;3066:312;;;;;;;;2616:42;3066:312;;2695:42;3066:312;;;;2856:42;3066:312;;;;;;;2936:42;3066:312;;;;3015:42;3066:312;;;;;;;;;;:::i;:::-;-1:-1:-1;3387:209:78;;;;;;;;3426:5;3387:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3605:243:78;;;;;;;;3645:1;3605:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4628:31:78;;-1:-1:-1;;;4628:31:78;;2933:2:80;4628:31:78;;;2915:21:80;2972:2;2952:18;;;2945:30;-1:-1:-1;;;2991:18:80;;;2984:45;-1:-1:-1;;;;;;;;;;;4628:12:78;;;3046:18:80;;4628:31:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4628:31:78;;;;;;;;;;;;:::i;:::-;4603:56;;;;;;;;;;;;:::i;:::-;;4666:50;;;825:17816;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;825:17816:78;-1:-1:-1;;;;;825:17816:78;;;;;;;;;;;-1:-1:-1;825:17816:78;;;;;;;-1:-1:-1;825:17816:78;;;-1:-1:-1;825:17816:78;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;825:17816:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:290:80;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:80;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:80:o;309:1087::-;389:6;420:2;463;451:9;442:7;438:23;434:32;431:52;;;479:1;476;469:12;431:52;506:16;;-1:-1:-1;;;;;571:14:80;;;568:34;;;598:1;595;588:12;568:34;636:6;625:9;621:22;611:32;;681:7;674:4;670:2;666:13;662:27;652:55;;703:1;700;693:12;652:55;732:2;726:9;754:2;750;747:10;744:36;;;760:18;;:::i;:::-;835:2;829:9;803:2;889:13;;-1:-1:-1;;885:22:80;;;909:2;881:31;877:40;865:53;;;933:18;;;953:22;;;930:46;927:72;;;979:18;;:::i;:::-;1019:10;1015:2;1008:22;1054:2;1046:6;1039:18;1094:7;1089:2;1084;1080;1076:11;1072:20;1069:33;1066:53;;;1115:1;1112;1105:12;1066:53;1137:1;1128:10;;1147:129;1161:2;1158:1;1155:9;1147:129;;;1249:10;;;1245:19;;1239:26;1218:14;;;1214:23;;1207:59;1172:10;;;;1147:129;;;1294:2;1291:1;1288:9;1285:80;;;1353:1;1348:2;1343;1335:6;1331:15;1327:24;1320:35;1285:80;1384:6;309:1087;-1:-1:-1;;;;;;;;309:1087:80:o;3075:380::-;3154:1;3150:12;;;;3197;;;3218:61;;3272:4;3264:6;3260:17;3250:27;;3218:61;3325:2;3317:6;3314:14;3294:18;3291:38;3288:161;;;3371:10;3366:3;3362:20;3359:1;3352:31;3406:4;3403:1;3396:15;3434:4;3431:1;3424:15;3288:161;;3075:380;;;:::o;3460:127::-;3521:10;3516:3;3512:20;3509:1;3502:31;3552:4;3549:1;3542:15;3576:4;3573:1;3566:15;3460:127;825:17816:78;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620003cd5760003560e01c80637dc0d1d01162000205578063c45a01551162000125578063e0bab4c411620000bb578063e4fbaecb1162000086578063e4fbaecb1462000828578063e7d015f21462000844578063f4b9fa751462000858578063fa7626d4146200086c57600080fd5b8063e0bab4c414620007e9578063e1497cff1462000800578063e20c9f71146200080a578063e24b85e7146200081457600080fd5b8063d1a3925a11620000fc578063d1a3925a1462000719578063d1a72ed61462000795578063d5bfbe4c14620007b1578063d8280a7e14620007cd57600080fd5b8063c45a01551462000751578063c6bbd5a71462000765578063ce2da055146200077957600080fd5b8063ac0e47f5116200019b578063ba414fa61162000172578063ba414fa614620006fe578063c2867f201462000447578063c31c9c071462000719578063c36596a6146200073557600080fd5b8063ac0e47f514620006c4578063ad39e5fd14620006d8578063b5508aa914620006f457600080fd5b80638dae88c211620001dc5780638dae88c2146200067d578063916a17c6146200069957806395d5772d14620006a3578063a0b4b30114620006ad57600080fd5b80637dc0d1d0146200064657806385226c81146200065a57806385f65a27146200067357600080fd5b80633a3c3b8711620002f1578063541bcb7611620002875780635b718560116200025e5780635b71856014620005f85780635cc6f954146200060f57806366d9a9a014620006195780636e008a03146200063257600080fd5b8063541bcb7614620005a45780635725a97714620005c057806358f7f6d214620005dc57600080fd5b80633f7286f411620002c85780633f7286f414620005535780633fc8cef3146200055d5780634aa4a4fc14620005715780634dede3de146200058857600080fd5b80633a3c3b8714620005075780633ae64e0c14620005235780633e5e3c23146200054957600080fd5b80632a88873511620003675780632f9f8c13116200033e5780632f9f8c1314620004bb5780632fab7aea14620004d757806338d6c81c14620004f357806339c66af114620004fd57600080fd5b80632a888735146200047c5780632ade388014620004865780632e7b0948146200049f57600080fd5b80630fb405b711620003a85780630fb405b714620003f25780631b6b6d23146200042b5780631d5f45f514620004475780631ed7831c146200046357600080fd5b8063037e5f6814620003d25780630a9254e414620003de5780630e7628c614620003e8575b600080fd5b620003dc6200087a565b005b620003dc620014dc565b620003dc62001a91565b6200040e7372e4f9f808c49a2a61de9c5896298920dc4eeea981565b6040516001600160a01b0390911681526020015b60405180910390f35b6200040e73514910771af9ca656af840dff83e8264ecf986ca81565b6200040e731f98431c8ad98523631ae4a59f267346ea31f98481565b6200046d62001e94565b60405162000422919062006a61565b620003dc62001ef8565b620004906200231e565b60405162000422919062006ac5565b6200040e73b131f4a55907b10d1f0a50d8ab8fa09ec342cd7481565b6200040e73cf0c122c6b73ff809c693db761e7baebe62b6a2e81565b6200040e73761d38e5ddf6ccf6cf7c55759d5210750b5d60f381565b620003dc6200246c565b620003dc620027ae565b6200040e73d533a949740bb3306d119cc777fa900ba034cd5281565b6200053a6200053436600462006887565b620032ed565b60405190815260200162000422565b6200046d6200330f565b6200046d62003371565b602d546200040e906001600160a01b031681565b6200040e60008051602062012f8f83398151915281565b6200040e732260fac5e5542a773aa44fbcfedf7c193bc2c59981565b6200040e731f9840a85d5af5bf1d1762f925bdaddc4201f98481565b6200040e73b62e45c3df611dce236a6ddc7a493d79f9dfadef81565b6200040e73418d75f65a02b3d53b2418fb8e1fe493759c760581565b6200053a6200060936600462006887565b620033d3565b620003dc620033e4565b6200062362003cc4565b60405162000422919062006b46565b601e546200040e906001600160a01b031681565b6031546200040e906001600160a01b031681565b6200066462003dae565b60405162000422919062006ab0565b620003dc62003e88565b6200040e73b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b62000623620043eb565b620003dc620044d5565b6200040e620006be36600462006887565b62004684565b601f546200040e906001600160a01b031681565b6200040e7327c70cd1946795b66be9d954418546998b54663481565b62000664620046af565b6200070862004789565b604051901515815260200162000422565b6200040e73e592427a0aece92de3edee1f18e0157c0586156481565b6200040e739813037ee2218799597d83d4a5b6f3b6778218d981565b601d546200040e906001600160a01b031681565b602e546200040e906001600160a01b031681565b6200040e737a250d5630b4cf539739df2c5dacb4c659f2488d81565b6200040e73ac57de9c1a09fec648e93eb98875b212db0d460b81565b6200040e735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f81565b6200040e731e02e2ed139f5baf6bfad04c0e61ebb0110da65381565b6200040e60008051602062012faf83398151915281565b620003dc620048bc565b6200046d62004bd6565b6028546200040e906001600160a01b031681565b6200040e736982508145454ce325ddbe47a25d4ec3d231193381565b601c546200040e906001600160a01b031681565b602c546200040e906001600160a01b031681565b600754620007089060ff1681565b602d5460408051630d0e30db60e41b81529051655af3107a4000926001600160a01b03169163d0e30db091678ac7230489e800009160048082019260009290919082900301818588803b158015620008d157600080fd5b505af1158015620008e6573d6000803e3d6000fd5b505060405163095ea7b360e01b815260008051602062012f8f833981519152935063095ea7b392506200093d915073e592427a0aece92de3edee1f18e0157c0586156490678ac7230489e8000090600401620069f7565b602060405180830381600087803b1580156200095857600080fd5b505af11580156200096d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000993919062006709565b50601d5460405163156a5da160e01b815260008051602062012f8f833981519152600482015260008051602062012faf8339815191526024820152678ac7230489e8000060448201526003606482015262000a57916001600160a01b03169063156a5da190608401602060405180830381600087803b15801562000a1657600080fd5b505af115801562000a2b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a51919062006727565b62004c38565b604080516101008101825260008051602062012f8f833981519152815260008051602062012faf8339815191526020820152610bb881830152306060820152426080820152678ac7230489e8000060a0820152600060c0820181905260e08201819052915163414bf38960e01b815290919073e592427a0aece92de3edee1f18e0157c058615649063414bf3899062000af590859060040162007028565b602060405180830381600087803b15801562000b1057600080fd5b505af115801562000b25573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b4b919062006727565b604080518082018252600c81526b6461692062616c616c6e636560a01b602082015290516370a0823160e01b815230600482015291925062000bfc9160008051602062012faf833981519152906370a08231906024015b60206040518083038186803b15801562000bbb57600080fd5b505afa15801562000bd0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bf6919062006727565b62004c80565b62000c06620044d5565b601d54602654604051635af694c560e11b81526001600160a01b03918216600482015291169063b5ed298a90602401600060405180830381600087803b15801562000c5057600080fd5b505af115801562000c65573d6000803e3d6000fd5b50506026546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012f6f83398151915292506306447d569150602401600060405180830381600087803b15801562000cbe57600080fd5b505af115801562000cd3573d6000803e3d6000fd5b5050601d5460265460405163f2fde38b60e01b81526001600160a01b0391821660048201529116925063f2fde38b9150602401600060405180830381600087803b15801562000d2157600080fd5b505af115801562000d36573d6000803e3d6000fd5b5050505060008051602062012fcf83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000d8857600080fd5b505af115801562000d9d573d6000803e3d6000fd5b505060275460405163a9059cbb60e01b815260008051602062012faf833981519152935063a9059cbb925062000deb916001600160a01b031690683643aa64798604000090600401620069f7565b602060405180830381600087803b15801562000e0657600080fd5b505af115801562000e1b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e41919062006709565b506027546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012f6f833981519152906306447d5690602401600060405180830381600087803b15801562000e9757600080fd5b505af115801562000eac573d6000803e3d6000fd5b50506040805180820182526005815264464c4f4b4960d81b6020820152601d5491516370a0823160e01b81526001600160a01b03909216600483015262000f159350915073cf0c122c6b73ff809c693db761e7baebe62b6a2e906370a082319060240162000ba2565b601d5460405163095ea7b360e01b815260008051602062012faf8339815191529163095ea7b39162000f5f916001600160a01b031690683643aa64798604000090600401620069f7565b602060405180830381600087803b15801562000f7a57600080fd5b505af115801562000f8f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fb5919062006709565b5060408051808201825260168152751a5cdcdd585b98d9481bdd5d1c1d5d08185b5bdd5b9d60521b6020820152601d549151630c8b76e760e41b815262001063926001600160a01b03169063c8b76e70906200103390683635c9adc5dea000009060008051602062012faf8339815191529060039060040162006c87565b602060405180830381600087803b1580156200104e57600080fd5b505af115801562000bd0573d6000803e3d6000fd5b601d5460405163abdd5f3f60e01b81526001600160a01b039091169063abdd5f3f90620010b29060008051602062012faf83398151915290683635c9adc5dea000009060039060040162006a10565b600060405180830381600087803b158015620010cd57600080fd5b505af1158015620010e2573d6000803e3d6000fd5b50506040805180820182526013815272696e64657820746f6b656e2062616c616e636560681b6020820152601c5460275492516370a0823160e01b81526001600160a01b0393841660048201526200114c955091935091909116906370a082319060240162000ba2565b604080518082018252600f81526e706f7274666f6c696f2076616c756560881b602080830191909152601d54835163150a13fb60e31b81529351620011b9946001600160a01b039092169263a8509fd89260048082019391829003018186803b15801562000bbb57600080fd5b604080518082018252601881527f726564656d7074696f6e206f757470757420616d6f756e7400000000000000006020820152601d54601c5460275493516370a0823160e01b81526001600160a01b039485166004820152620012b19492831692631ff015639216906370a082319060240160206040518083038186803b1580156200124457600080fd5b505afa15801562001259573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200127f919062006727565b60008051602062012faf83398151915260036040518463ffffffff1660e01b8152600401620010339392919062006c87565b60408051808201825260158152743bb2ba341030b33a32b9103932b232b6b83a34b7b760591b602082015260275491516370a0823160e01b81526001600160a01b039092166004830152620013209160008051602062012faf833981519152906370a082319060240162000ba2565b601d54601c546027546040516370a0823160e01b81526001600160a01b039182166004820152600093821692632b9522e09216906370a082319060240160206040518083038186803b1580156200137657600080fd5b505afa1580156200138b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013b1919062006727565b60008051602062012faf83398151915260036040518463ffffffff1660e01b8152600401620013e39392919062006c87565b602060405180830381600087803b158015620013fe57600080fd5b505af115801562001413573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001439919062006727565b905062001467604051806040016040528060088152602001671c99585b081bdd5d60c21b8152508262004c80565b60408051808201825260158152743bb2ba341030b33a32b9103932b232b6b83a34b7b760591b602082015260275491516370a0823160e01b81526001600160a01b039092166004830152620014d69160008051602062012faf833981519152906370a082319060240162000ba2565b50505050565b604051630637469360e31b815260008051602062012f6f833981519152906331ba3498906200151190602f9060040162006cdf565b602060405180830381600087803b1580156200152c57600080fd5b505af115801562001541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001567919062006727565b6020819055604051639ebf682760e01b8152600481019190915260008051602062012f6f83398151915290639ebf682790602401600060405180830381600087803b158015620015b657600080fd5b505af1158015620015cb573d6000803e3d6000fd5b50505050604051620015dd9062006542565b604051809103906000f080158015620015fa573d6000803e3d6000fd5b50603280546001600160a01b0319166001600160a01b03929092169182179055604051620016289062006550565b6001600160a01b039091168152602001604051809103906000f08015801562001655573d6000803e3d6000fd5b50603160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506012686c6b935b8bbd40000060405162001696906200655e565b60ff90921682526020820152604001604051809103906000f080158015620016c2573d6000803e3d6000fd5b50601f80546001600160a01b0319166001600160a01b0392909216919091179055604051620016f1906200656c565b604051809103906000f0801580156200170e573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392831690811790915560215460405163ed1c11cb60e01b8152919263ed1c11cb92620017eb92670de0b6b3a764000092169069d3c21bcecceda10000009060008051602062012f8f8339815191529073b27308f9f90d607463bb33ea1bebb41c27ce5ab69073e592427a0aece92de3edee1f18e0157c0586156490731f98431c8ad98523631ae4a59f267346ea31f98490737a250d5630b4cf539739df2c5dacb4c659f2488d90735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9060040162006eef565b600060405180830381600087803b1580156200180657600080fd5b505af11580156200181b573d6000803e3d6000fd5b505050506040516200182d906200657a565b604051809103906000f0801580156200184a573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b03928316908117909155601c54603254603154603054601f54604051631196932560e21b81529487166004860152928616602485015290851660448401526064830152909216608483015260008051602062012f8f83398151915260a483015273b27308f9f90d607463bb33ea1bebb41c27ce5ab660c483015273e592427a0aece92de3edee1f18e0157c0586156460e4830152731f98431c8ad98523631ae4a59f267346ea31f984610104830152737a250d5630b4cf539739df2c5dacb4c659f2488d610124830152735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f6101448301529063465a4c949061016401600060405180830381600087803b1580156200196b57600080fd5b505af115801562001980573d6000803e3d6000fd5b5050601c54601d54604051637e51dad560e11b81526001600160a01b0391821660048201529116925063fca3b5aa9150602401600060405180830381600087803b158015620019ce57600080fd5b505af1158015620019e3573d6000803e3d6000fd5b5050602c80546001600160a01b031990811660008051602062012faf83398151915217909155602d8054821660008051602062012f8f833981519152179055602e805490911673b27308f9f90d607463bb33ea1bebb41c27ce5ab6179055505060405162001a519062006588565b604051809103906000f08015801562001a6e573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b0392909216919091179055565b601c5460408051638da5cb5b60e01b8152905162001b1b926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801562001ad957600080fd5b505afa15801562001aee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b1491906200667e565b3062004cc9565b601c5460408051632fecd58960e01b8152905162001bad926001600160a01b031691632fecd589916004808301926020929190829003018186803b15801562001b6357600080fd5b505afa15801562001b78573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b9e919062006727565b670de0b6b3a764000062004dd5565b601c546040805163184a732f60e01b8152905162001c37926001600160a01b03169163184a732f916004808301926020929190829003018186803b15801562001bf557600080fd5b505afa15801562001c0a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c30919062006727565b4262004dd5565b601c5460408051632cfc019d60e21b8152905162001ccc926001600160a01b03169163b3f00674916004808301926020929190829003018186803b15801562001c7f57600080fd5b505afa15801562001c94573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cba91906200667e565b6021546001600160a01b031662004cc9565b601c54604080516309eeb1d560e41b8152905162001d69926001600160a01b031691639eeb1d50916004808301926000929190829003018186803b15801562001d1457600080fd5b505afa15801562001d29573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001d53919081019062006741565b6040518060200160405280600081525062004eba565b601c5460408051632b52684d60e01b8152905162001dfd926001600160a01b031691632b52684d916004808301926020929190829003018186803b15801562001db157600080fd5b505afa15801562001dc6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dec919062006727565b69d3c21bcecceda100000062004dd5565b601c54604080516303aa30b960e11b8152905162001e92926001600160a01b0316916307546172916004808301926020929190829003018186803b15801562001e4557600080fd5b505afa15801562001e5a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e8091906200667e565b601d546001600160a01b031662004cc9565b565b6060601480548060200260200160405190810160405280929190818152602001828054801562001eee57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162001ecf575b5050505050905090565b604051630b4c774160e11b815260008051602062012f8f8339815191526004820152732260fac5e5542a773aa44fbcfedf7c193bc2c5996024820152610bb86044820152600090731f98431c8ad98523631ae4a59f267346ea31f98490631698ee829060640160206040518083038186803b15801562001f7757600080fd5b505afa15801562001f8c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fb291906200667e565b90506000806000806000806000876001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801562001ff957600080fd5b505afa1580156200200e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020349190620067e0565b965096509650965096509650965062002056876001600160a01b031662004c38565b601d546040516313cb1f8360e01b815260008051602062012f8f8339815191526004820152732260fac5e5542a773aa44fbcfedf7c193bc2c5996024820152670de0b6b3a7640000604482015260036064820152620020f0916001600160a01b0316906313cb1f839060840160206040518083038186803b158015620020db57600080fd5b505afa15801562000a2b573d6000803e3d6000fd5b602d60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200214957600080fd5b505af11580156200215e573d6000803e3d6000fd5b505060405163095ea7b360e01b815260008051602062012f8f833981519152935063095ea7b39250620021b5915073e592427a0aece92de3edee1f18e0157c0586156490670de0b6b3a764000090600401620069f7565b602060405180830381600087803b158015620021d057600080fd5b505af1158015620021e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200220b919062006709565b50604080516101008101825260008051602062012f8f8339815191528152732260fac5e5542a773aa44fbcfedf7c193bc2c5996020820152610bb881830152306060820152426080820152670de0b6b3a764000060a0820152600060c0820181905260e08201819052915163414bf38960e01b815290919073e592427a0aece92de3edee1f18e0157c058615649063414bf38990620022af90859060040162007028565b602060405180830381600087803b158015620022ca57600080fd5b505af1158015620022df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002305919062006727565b9050620023128162004c38565b50505050505050505050565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200246357600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200244b578382906000526020600020018054620023b79062007131565b80601f0160208091040260200160405190810160405280929190818152602001828054620023e59062007131565b8015620024365780601f106200240a5761010080835404028352916020019162002436565b820191906000526020600020905b8154815290600101906020018083116200241857829003601f168201915b50505050508152602001906001019062002395565b50505050815250508152602001906001019062002342565b50505050905090565b62002476620048bc565b60408051808201909152601281527162616c616e63654f6628616464726573732960701b6020820152601c54620024ea91678ac7230489e8000091620024e3913091620024dc9190620024d5906000906001600160a01b031662004ff1565b9062005019565b9062005042565b906200506b565b60408051808201909152600d81526c746f74616c537570706c79282960981b6020820152601c546200253d91678ac7230489e8000091620024e39190620024d5906000906001600160a01b031662004ff1565b60005b602954811015620025eb57620025d6680ad78ebc5ac6200000620024e3601d60009054906101000a90046001600160a01b0316620024dc6040518060400160405280601281526020017162616c616e63654f6628616464726573732960701b815250620024d560298881548110620025bc57620025bc620071a2565b60009182526020822001546001600160a01b031662004ff1565b80620025e2816200716e565b91505062002540565b5060005b6029548110156200260f578062002606816200716e565b915050620025ef565b50601d546040805163150a13fb60e31b8152905162002658926001600160a01b03169163a8509fd8916004808301926020929190829003018186803b158015620020db57600080fd5b620026986040518060400160405280601781526020017f726564656d7074696f6e2068617070656e696e672e2e2e00000000000000000081525062005077565b601d54601c546040516370a0823160e01b81523060048201526001600160a01b0392831692632b9522e09216906370a082319060240160206040518083038186803b158015620026e757600080fd5b505afa158015620026fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002722919062006727565b602d546040516001600160e01b031960e085901b1681526200275592916001600160a01b03169060039060040162006c87565b602060405180830381600087803b1580156200277057600080fd5b505af115801562002785573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027ab919062006727565b50565b620027b8620044d5565b601d5460405163239aad0d60e01b8152600060048201526200286d916001600160a01b03169063239aad0d9060240160206040518083038186803b1580156200280057600080fd5b505afa15801562002815573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200283b91906200667e565b6029600081548110620028525762002852620071a2565b6000918252602090912001546001600160a01b031662004cc9565b601d5460405163239aad0d60e01b81526001600482015262002907916001600160a01b03169063239aad0d9060240160206040518083038186803b158015620028b557600080fd5b505afa158015620028ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028f091906200667e565b6029600181548110620028525762002852620071a2565b601d5460405163239aad0d60e01b815260026004820152620029a1916001600160a01b03169063239aad0d9060240160206040518083038186803b1580156200294f57600080fd5b505afa15801562002964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200298a91906200667e565b6029600281548110620028525762002852620071a2565b601d5460405163239aad0d60e01b81526003600482015262002a3b916001600160a01b03169063239aad0d9060240160206040518083038186803b158015620029e957600080fd5b505afa158015620029fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a2491906200667e565b6029600381548110620028525762002852620071a2565b601d5460405163239aad0d60e01b815260048082015262002ad4916001600160a01b03169063239aad0d9060240160206040518083038186803b15801562002a8257600080fd5b505afa15801562002a97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002abd91906200667e565b6029600481548110620028525762002852620071a2565b601d546029805462002bb1926001600160a01b031691634b3e0b809160009062002b025762002b02620071a2565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002b4e57600080fd5b505afa15801562002b63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b89919062006727565b602a60008154811062002ba05762002ba0620071a2565b906000526020600020015462004dd5565b601d546029805462002c7f926001600160a01b031691634b3e0b8091600190811062002be15762002be1620071a2565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002c2d57600080fd5b505afa15801562002c42573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c68919062006727565b602a60018154811062002ba05762002ba0620071a2565b601d546029805462002d4d926001600160a01b031691634b3e0b8091600290811062002caf5762002caf620071a2565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002cfb57600080fd5b505afa15801562002d10573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d36919062006727565b602a60028154811062002ba05762002ba0620071a2565b601d546029805462002e1b926001600160a01b031691634b3e0b8091600390811062002d7d5762002d7d620071a2565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002dc957600080fd5b505afa15801562002dde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e04919062006727565b602a60038154811062002ba05762002ba0620071a2565b601d546029805462002ee9926001600160a01b031691634b3e0b8091600490811062002e4b5762002e4b620071a2565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002e9757600080fd5b505afa15801562002eac573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ed2919062006727565b602a60048154811062002ba05762002ba0620071a2565b601d546029805462002fb5926001600160a01b03169163d90bc2119160009062002f175762002f17620071a2565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002f6357600080fd5b505afa15801562002f78573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f9e919062006727565b602b60008154811062002ba05762002ba0620071a2565b601d546029805462003083926001600160a01b03169163d90bc21191600190811062002fe55762002fe5620071a2565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b1580156200303157600080fd5b505afa15801562003046573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200306c919062006727565b602b60018154811062002ba05762002ba0620071a2565b601d546029805462003151926001600160a01b03169163d90bc211916002908110620030b357620030b3620071a2565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b158015620030ff57600080fd5b505afa15801562003114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200313a919062006727565b602b60028154811062002ba05762002ba0620071a2565b601d54602980546200321f926001600160a01b03169163d90bc211916003908110620031815762003181620071a2565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b158015620031cd57600080fd5b505afa158015620031e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003208919062006727565b602b60038154811062002ba05762002ba0620071a2565b601d546029805462001e92926001600160a01b03169163d90bc2119160049081106200324f576200324f620071a2565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b1580156200329b57600080fd5b505afa158015620032b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620032d6919062006727565b602b60048154811062002ba05762002ba0620071a2565b602a8181548110620032fe57600080fd5b600091825260209091200154905081565b6060601680548060200260200160405190810160405280929190818152602001828054801562001eee576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001ecf575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562001eee576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001ecf575050505050905090565b602b8181548110620032fe57600080fd5b602d5460408051630d0e30db60e41b81529051655af3107a4000926001600160a01b03169163d0e30db091678ac7230489e800009160048082019260009290919082900301818588803b1580156200343b57600080fd5b505af115801562003450573d6000803e3d6000fd5b505060405163095ea7b360e01b815260008051602062012f8f833981519152935063095ea7b39250620034a7915073e592427a0aece92de3edee1f18e0157c0586156490678ac7230489e8000090600401620069f7565b602060405180830381600087803b158015620034c257600080fd5b505af1158015620034d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620034fd919062006709565b50604080516101008101825260008051602062012f8f833981519152815260008051602062012faf8339815191526020820152610bb881830152306060820152426080820152678ac7230489e8000060a0820152600060c0820181905260e08201819052915163414bf38960e01b815290919073e592427a0aece92de3edee1f18e0157c058615649063414bf389906200359c90859060040162007028565b602060405180830381600087803b158015620035b757600080fd5b505af1158015620035cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035f2919062006727565b604080518082018252600c81526b6461692062616c616c6e636560a01b602082015290516370a0823160e01b81523060048201529192506200364e9160008051602062012faf833981519152906370a082319060240162000ba2565b62003658620044d5565b601d54602654604051635af694c560e11b81526001600160a01b03918216600482015291169063b5ed298a90602401600060405180830381600087803b158015620036a257600080fd5b505af1158015620036b7573d6000803e3d6000fd5b50506026546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012f6f83398151915292506306447d569150602401600060405180830381600087803b1580156200371057600080fd5b505af115801562003725573d6000803e3d6000fd5b5050601d5460265460405163f2fde38b60e01b81526001600160a01b0391821660048201529116925063f2fde38b9150602401600060405180830381600087803b1580156200377357600080fd5b505af115801562003788573d6000803e3d6000fd5b5050505060008051602062012fcf83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620037da57600080fd5b505af1158015620037ef573d6000803e3d6000fd5b505060275460405163a9059cbb60e01b815260008051602062012faf833981519152935063a9059cbb92506200383d916001600160a01b031690683643aa64798604000090600401620069f7565b602060405180830381600087803b1580156200385857600080fd5b505af11580156200386d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003893919062006709565b506027546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012f6f833981519152906306447d5690602401600060405180830381600087803b158015620038e957600080fd5b505af1158015620038fe573d6000803e3d6000fd5b50506040805180820182526005815264464c4f4b4960d81b6020820152601d5491516370a0823160e01b81526001600160a01b039092166004830152620039679350915073cf0c122c6b73ff809c693db761e7baebe62b6a2e906370a082319060240162000ba2565b601d5460405163095ea7b360e01b815260008051602062012faf8339815191529163095ea7b391620039b1916001600160a01b031690683643aa64798604000090600401620069f7565b602060405180830381600087803b158015620039cc57600080fd5b505af1158015620039e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a07919062006709565b50601d5460405163abdd5f3f60e01b81526001600160a01b039091169063abdd5f3f9062003a579060008051602062012faf83398151915290683635c9adc5dea000009060039060040162006a10565b600060405180830381600087803b15801562003a7257600080fd5b505af115801562003a87573d6000803e3d6000fd5b50506040805180820182526013815272696e64657820746f6b656e2062616c616e636560681b6020820152601c5460275492516370a0823160e01b81526001600160a01b03938416600482015262003af1955091935091909116906370a082319060240162000ba2565b604080518082018252600f81526e706f7274666f6c696f2076616c756560881b602080830191909152601d54835163150a13fb60e31b8152935162003b5e946001600160a01b039092169263a8509fd89260048082019391829003018186803b15801562000bbb57600080fd5b601d54601c546027546040516370a0823160e01b81526001600160a01b03918216600482015292811692632b9522e09291909116906370a082319060240160206040518083038186803b15801562003bb557600080fd5b505afa15801562003bca573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003bf0919062006727565b602d546040516001600160e01b031960e085901b16815262003c2392916001600160a01b03169060039060040162006c87565b602060405180830381600087803b15801562003c3e57600080fd5b505af115801562003c53573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c79919062006727565b506040805180820190915260158152743bb2ba341030b33a32b9103932b232b6b83a34b7b760591b602082015260275462003cbf91906001600160a01b03163162004c80565b505050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620024635760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562003d9557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162003d565790505b5050505050815250508152602001906001019062003ce8565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200246357838290600052602060002001805462003df49062007131565b80601f016020809104026020016040519081016040528092919081815260200182805462003e229062007131565b801562003e735780601f1062003e475761010080835404028352916020019162003e73565b820191906000526020600020905b81548152906001019060200180831162003e5557829003601f168201915b50505050508152602001906001019062003dd2565b655af3107a400062003e99620044d5565b601d54602654604051635af694c560e11b81526001600160a01b03918216600482015291169063b5ed298a90602401600060405180830381600087803b15801562003ee357600080fd5b505af115801562003ef8573d6000803e3d6000fd5b50506026546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012f6f83398151915292506306447d569150602401600060405180830381600087803b15801562003f5157600080fd5b505af115801562003f66573d6000803e3d6000fd5b5050601d5460265460405163f2fde38b60e01b81526001600160a01b0391821660048201529116925063f2fde38b9150602401600060405180830381600087803b15801562003fb457600080fd5b505af115801562003fc9573d6000803e3d6000fd5b5050505060008051602062012fcf83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200401b57600080fd5b505af115801562004030573d6000803e3d6000fd5b50506027546040516001600160a01b039091169250600091506798a7d9b8314c00009082818181858883f1935050505015801562004072573d6000803e3d6000fd5b506027546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012f6f833981519152906306447d5690602401600060405180830381600087803b158015620040c857600080fd5b505af1158015620040dd573d6000803e3d6000fd5b50506040805180820182526005815264464c4f4b4960d81b6020820152601d5491516370a0823160e01b81526001600160a01b039092166004830152620041469350915073cf0c122c6b73ff809c693db761e7baebe62b6a2e906370a082319060240162000ba2565b601d5460405163372d4c5560e01b8152670de0b6b3a764000060048201526001600160a01b039091169063372d4c5590670de444324c2a8000906024016000604051808303818588803b1580156200419d57600080fd5b505af1158015620041b2573d6000803e3d6000fd5b50506040805180820182526013815272696e64657820746f6b656e2062616c616e636560681b6020820152601c5460275492516370a0823160e01b81526001600160a01b0393841660048201526200421d96509194509190911691506370a082319060240162000ba2565b604080518082018252600f81526e706f7274666f6c696f2076616c756560881b602080830191909152601d54835163150a13fb60e31b815293516200428a946001600160a01b039092169263a8509fd89260048082019391829003018186803b15801562000bbb57600080fd5b601d54601c546027546040516370a0823160e01b81526001600160a01b03918216600482015292811692632b9522e09291909116906370a082319060240160206040518083038186803b158015620042e157600080fd5b505afa158015620042f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200431c919062006727565b602d546040516001600160e01b031960e085901b1681526200434f92916001600160a01b03169060039060040162006c87565b602060405180830381600087803b1580156200436a57600080fd5b505af11580156200437f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620043a5919062006727565b506040805180820190915260158152743bb2ba341030b33a32b9103932b232b6b83a34b7b760591b6020820152602754620027ab91906001600160a01b03163162004c80565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620024635760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620044bc57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200447d5790505b505050505081525050815260200190600101906200440f565b603254601d5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620045159291169067016345785d8a000090600401620069f7565b602060405180830381600087803b1580156200453057600080fd5b505af115801562004545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200456b919062006709565b50601d5460408051637ca58c5560e01b815290516000926001600160a01b031691637ca58c5591600480830192602092919082900301818787803b158015620045b357600080fd5b505af1158015620045c8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620045ee919062006727565b603154604051630e15036760e21b81529192506001600160a01b0316906338540d9c906200462a908490602990602a90602b9060040162006bfd565b602060405180830381600087803b1580156200464557600080fd5b505af11580156200465a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004680919062006709565b5050565b602981815481106200469557600080fd5b6000918252602090912001546001600160a01b0316905081565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562002463578382906000526020600020018054620046f59062007131565b80601f0160208091040260200160405190810160405280929190818152602001828054620047239062007131565b8015620047745780601f10620047485761010080835404028352916020019162004774565b820191906000526020600020905b8154815290600101906020018083116200475657829003601f168201915b505050505081526020019060010190620046d3565b600754600090610100900460ff1615620047ac5750600754610100900460ff1690565b600060008051602062012f6f8339815191523b15620048b75760405160009060008051602062012f6f833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620048199083906519985a5b195960d21b90602001620069f7565b60408051601f1981840301815290829052620048399291602001620069a6565b60408051601f19818403018152908290526200485591620069d9565b6000604051808303816000865af19150503d806000811462004894576040519150601f19603f3d011682016040523d82523d6000602084013e62004899565b606091505b5091505080806020019051810190620048b3919062006709565b9150505b919050565b60005b60295481101562004b34576200495760298281548110620048e457620048e4620071a2565b60009182526020808320909101546040805180820190915260138152726f7261636c654c6973742875696e743235362960681b92810192909252601d546001600160a01b03918216936200495093879362004949939192620024d59290911662004ff1565b90620050be565b90620050de565b620049d760298281548110620049715762004971620071a2565b600091825260208083209091015460408051808201909152601481527363757272656e744c6973742875696e743235362960601b92810192909252601d546001600160a01b03918216936200495093879362004949939192620024d59290911662004ff1565b62004a7b602a8281548110620049f157620049f1620071a2565b9060005260206000200154620024e36029848154811062004a165762004a16620071a2565b600091825260208083209091015460408051808201909152601981527f746f6b656e4d61726b657453686172652861646472657373290000000000000092810192909252601d546001600160a01b0391821693620024dc9392620024d5921662004ff1565b62004b1f602b828154811062004a955762004a95620071a2565b9060005260206000200154620024e36029848154811062004aba5762004aba620071a2565b600091825260208083209091015460408051808201909152601981527f746f6b656e5377617056657273696f6e2861646472657373290000000000000092810192909252601d546001600160a01b0391821693620024dc9392620024d5921662004ff1565b8062004b2b816200716e565b915050620048bf565b50602954604080518082019091526011815270746f74616c4f7261636c654c697374282960781b6020820152601d5462004b859291620024e391620024d5906000906001600160a01b031662004ff1565b602954604080518082019091526012815271746f74616c43757272656e744c697374282960701b6020820152601d5462001e929291620024e391620024d5906000906001600160a01b031662004ff1565b6060601380548060200260200160405190810160405280929190818152602001828054801562001eee576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001ecf575050505050905090565b620027ab8160405160240162004c5091815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052620050f3565b62004680828260405160240162004c9992919062006cbb565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052620050f3565b806001600160a01b0316826001600160a01b03161462004680577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162004d519060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162004d8a919062006e2a565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162004dc3919062006fa7565b60405180910390a16200468062005114565b80821462004680577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162004e489060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162004e81919062006eb6565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162004dc3919062006ffd565b8060405160200162004ecd9190620069d9565b604051602081830303815290604052805190602001208260405160200162004ef69190620069d9565b604051602081830303815290604052805190602001201462004680577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162004f7f9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162004fb8919062006e6f565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162004dc3919062006fd2565b6005820180546001600160a01b0319166001600160a01b0383161790556000825b9392505050565b8051602082012060038301805463ffffffff191660e09290921c91909117905560008262005012565b6002820180546001810182556000918252602082206001600160a01b0384169101558262005012565b62004680828262005218565b620027ab816040516024016200508e919062006ca6565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052620050f3565b600282018054600181018255600091825260208220018290558262005012565b62004680826001600160a01b03831662005218565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008051602062012f6f8339815191523b15620052075760405160009060008051602062012f6f833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620051829083906519985a5b195960d21b9060019060200162006a10565b60408051601f1981840301815290829052620051a29291602001620069a6565b60408051601f1981840301815290829052620051be91620069d9565b6000604051808303816000865af19150503d8060008114620051fd576040519150601f19603f3d011682016040523d82523d6000602084013e62005202565b606091505b505050505b6007805461ff001916610100179055565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200528b57602002820191906000526020600020905b81548152602001906001019080831162005276575b50505050509050600083620052a08362005598565b604051602001620052b3929190620069a6565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620053079186918891016200696a565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620053425762005340876200564c565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620053839187918991016200696a565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620053ca9190620069d9565b600060405180830381855afa9150503d806000811462005407576040519150601f19603f3d011682016040523d82523d6000602084013e6200540c565b606091505b5091506200542990508162005423886020620070e0565b6200565f565b604051630667f9d760e41b81529092506000915060008051602062012f6f8339815191529063667f9d709062005466908b908790600401620069f7565b60206040518083038186803b1580156200547f57600080fd5b505afa15801562005494573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620054ba919062006727565b9050808214620054e75760405162461bcd60e51b8152600401620054de9062006d8f565b60405180910390fd5b6040516370ca10bb60e01b815260008051602062012f6f833981519152906370ca10bb906200551f908b9087908e9060040162006a10565b600060405180830381600087803b1580156200553a57600080fd5b505af11580156200554f573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200558460028b01600062006596565b896004016000905550505050505050505050565b6060600082516020620055ac9190620070e0565b67ffffffffffffffff811115620055c757620055c7620071b8565b6040519080825280601f01601f191660200182016040528015620055f2576020820181803683370190505b50905060005b835181101562005645576000848281518110620056195762005619620071a2565b6020026020010151905080826020026020018401525080806200563c906200716e565b915050620055f8565b5092915050565b60006200565982620056e9565b92915050565b600080600060208551116200567657845162005679565b60205b905060005b81811015620056df5762005694816008620070e0565b86620056a18388620070c5565b81518110620056b457620056b4620071a2565b01602001516001600160f81b031916901c929092179180620056d6816200716e565b9150506200567e565b5090949350505050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200575b57602002820191906000526020600020905b81548152602001906001019080831162005746575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620057a7925085918791016200696a565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562005846576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291620058169185918791016200696a565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620058548362006415565b60405160200162005867929190620069a6565b604051602081830303815290604052905060008051602062012fcf83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620058c657600080fd5b505af1158015620058db573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620058fc9190620069d9565b600060405180830381855afa9150503d806000811462005939576040519150601f19603f3d011682016040523d82523d6000602084013e6200593e565b606091505b5091506200595b90508162005955876020620070e0565b620064c2565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062012f6f833981519152906365bc948190602401600060405180830381600087803b158015620059b357600080fd5b505af1158015620059c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620059f291908101906200669e565b50905080516001141562005cca57600060008051602062012fcf83398151915260001c6001600160a01b031663667f9d70898460008151811062005a3a5762005a3a620071a2565b60200260200101516040518363ffffffff1660e01b815260040162005a61929190620069f7565b60206040518083038186803b15801562005a7a57600080fd5b505afa15801562005a8f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ab5919062006727565b90508062005b19577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062005af55762005af5620071a2565b602002602001015160001c60405162005b10929190620069f7565b60405180910390a15b80831462005b3b5760405162461bcd60e51b8152600401620054de9062006d8f565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162005b739291906200696a565b604051602081830303815290604052805190602001208560008151811062005b9f5762005b9f620071a2565b602002602001015160001c60405162005bbc949392919062006a31565b60405180910390a18160008151811062005bda5762005bda620071a2565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262005c25918a918c91016200696a565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162005c8f918a918c91016200696a565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062006298565b600181511115620062275760005b81518110156200622057600060008051602062012fcf83398151915260001c6001600160a01b031663667f9d708a85858151811062005d1b5762005d1b620071a2565b60200260200101516040518363ffffffff1660e01b815260040162005d42929190620069f7565b60206040518083038186803b15801562005d5b57600080fd5b505afa15801562005d70573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005d96919062006727565b90508062005df9577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062005dd55762005dd5620071a2565b602002602001015160001c60405162005df0929190620069f7565b60405180910390a15b83811462005e0857506200620b565b825181199060008051602062012f6f833981519152906370ca10bb908c9087908790811062005e3b5762005e3b620071a2565b6020026020010151846040518463ffffffff1660e01b815260040162005e649392919062006a10565b600060405180830381600087803b15801562005e7f57600080fd5b505af115801562005e94573d6000803e3d6000fd5b50505050600060608b6001600160a01b03168860405162005eb69190620069d9565b600060405180830381855afa9150503d806000811462005ef3576040519150601f19603f3d011682016040523d82523d6000602084013e62005ef8565b606091505b50909250905062005f1081620059558c6020620070e0565b96505080801562005f2057508186145b1562006173577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162005f5e9291906200696a565b6040516020818303038152906040528051906020012088888151811062005f895762005f89620071a2565b602002602001015160001c60405162005fa6949392919062006a31565b60405180910390a184848151811062005fc35762005fc3620071a2565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f16835284528082209051929390926200600e918d918f91016200696a565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200609b9291906200696a565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602062012fcf83398151915260001c6001600160a01b03166370ca10bb8c8787815181106200610d576200610d620071a2565b6020026020010151866040518463ffffffff1660e01b8152600401620061369392919062006a10565b600060405180830381600087803b1580156200615157600080fd5b505af115801562006166573d6000803e3d6000fd5b5050505050505062006220565b60008051602062012fcf83398151915260001c6001600160a01b03166370ca10bb8c878781518110620061aa57620061aa620071a2565b6020026020010151866040518463ffffffff1660e01b8152600401620061d39392919062006a10565b600060405180830381600087803b158015620061ee57600080fd5b505af115801562006203573d6000803e3d6000fd5b505050505050505b8062006217816200716e565b91505062005cd8565b5062006298565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401620054de565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620062dc9188918a91016200696a565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200636b5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401620054de565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200639c60028a01600062006596565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620063e29188918a91016200696a565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6060600082516020620064299190620070e0565b67ffffffffffffffff811115620064445762006444620071b8565b6040519080825280601f01601f1916602001820160405280156200646f576020820181803683370190505b50905060005b835181101562005645576000848281518110620064965762006496620071a2565b602002602001015190508082602002602001840152508080620064b9906200716e565b91505062006475565b60008060006020855111620064d9578451620064dc565b60205b905060005b81811015620056df57620064f7816008620070e0565b86620065048388620070c5565b81518110620065175762006517620071a2565b01602001516001600160f81b031916901c92909217918062006539816200716e565b915050620064e1565b610e4980620071e583390190565b611c52806200802e83390190565b6105538062009c8083390190565b612980806200a1d383390190565b615f23806200cb5383390190565b6104f98062012a7683390190565b5080546000825590600052602060002090810190620027ab91905b80821115620065c75760008155600101620065b1565b5090565b600082601f830112620065dd57600080fd5b8151602067ffffffffffffffff821115620065fc57620065fc620071b8565b8160051b6200660d82820162007091565b8381528281019086840183880185018910156200662957600080fd5b600093505b858410156200664e5780518352600193909301929184019184016200662e565b50979650505050505050565b80518015158114620048b757600080fd5b805161ffff81168114620048b757600080fd5b6000602082840312156200669157600080fd5b81516200501281620071ce565b60008060408385031215620066b257600080fd5b825167ffffffffffffffff80821115620066cb57600080fd5b620066d986838701620065cb565b93506020850151915080821115620066f057600080fd5b50620066ff85828601620065cb565b9150509250929050565b6000602082840312156200671c57600080fd5b62005012826200665a565b6000602082840312156200673a57600080fd5b5051919050565b6000602082840312156200675457600080fd5b815167ffffffffffffffff808211156200676d57600080fd5b818401915084601f8301126200678257600080fd5b815181811115620067975762006797620071b8565b620067ac601f8201601f191660200162007091565b9150808252856020828501011115620067c457600080fd5b620067d781602084016020860162007102565b50949350505050565b600080600080600080600060e0888a031215620067fc57600080fd5b87516200680981620071ce565b8097505060208801518060020b81146200682257600080fd5b955062006832604089016200666b565b945062006842606089016200666b565b935062006852608089016200666b565b925060a088015160ff811681146200686957600080fd5b91506200687960c089016200665a565b905092959891949750929550565b6000602082840312156200689a57600080fd5b5035919050565b600081518084526020808501808196508360051b8101915082860160005b85811015620068ed578284038952620068da8483516200693c565b98850198935090840190600101620068bf565b5091979650505050505050565b6000815480845260208085019450836000528060002060005b83811015620069315781548752958201956001918201910162006913565b509495945050505050565b600081518084526200695681602086016020860162007102565b601f01601f19169290920160200192915050565b825160009082906020808701845b83811015620069965781518552938201939082019060010162006978565b5050948252509092019392505050565b6001600160e01b0319831681528151600090620069cb81600485016020870162007102565b919091016004019392505050565b60008251620069ed81846020870162007102565b9190910192915050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039490941684526001600160e01b03199290921660208401526040830152606082015260800190565b6020808252825182820181905260009190848201906040850190845b8181101562006aa45783516001600160a01b03168352928401929184019160010162006a7d565b50909695505050505050565b602081526000620050126020830184620068a1565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562006b3857888303603f19018552815180516001600160a01b0316845287015187840187905262006b2487850182620068a1565b958801959350509086019060010162006aec565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562006bee57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562006bd85783516001600160e01b0319168252928b019260019290920191908b019062006bac565b50978a0197955050509187019160010162006b6e565b50919998505050505050505050565b600060808201868352602060808185015281875480845260a0860191508860005282600020935060005b8181101562006c4e5784546001600160a01b03168352600194850194928401920162006c27565b5050848103604086015262006c648188620068fa565b92505050828103606084015262006c7c8185620068fa565b979650505050505050565b9283526001600160a01b03919091166020830152604082015260600190565b6020815260006200501260208301846200693c565b60408152600062006cd060408301856200693c565b90508260208301529392505050565b600060208083526000845481600182811c91508083168062006d0257607f831692505b85831081141562006d2157634e487b7160e01b85526022600452602485fd5b87860183815260200181801562006d41576001811462006d535762006d80565b60ff1986168252878201965062006d80565b60008b81526020902060005b8681101562006d7a5781548482015290850190890162006d5f565b83019750505b50949998505050505050505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b60408152600062006e5560408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062006e9a60408301600a8152690808080808081319599d60b21b602082015260400190565b828103602084015262006eae81856200693c565b949350505050565b60408152600062006ee160408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b610160808252600e908201526d20b73a349024b7333630ba34b7b760911b6101808201526101a06020820181905260049082015263414e464960e01b6101c0820152604081018a90526001600160a01b03891660608201526101e0810188608083015262006f6860a08301896001600160a01b03169052565b6001600160a01b0396871660c083015294861660e082015292851661010084015290841661012083015290921661014090920191909152949350505050565b60408152600062006e5560408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600062006e9a60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600062006ee160408301600a8152690808080808149a59da1d60b21b602082015260400190565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b604051601f8201601f1916810167ffffffffffffffff81118282101715620070bd57620070bd620071b8565b604052919050565b60008219821115620070db57620070db6200718c565b500190565b6000816000190483118215151615620070fd57620070fd6200718c565b500290565b60005b838110156200711f57818101518382015260200162007105565b83811115620014d65750506000910152565b600181811c908216806200714657607f821691505b602082108114156200716857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156200718557620071856200718c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620027ab57600080fdfe60806040523480156200001157600080fd5b50604080518082018252600f81526e21b430b4b72634b735902a37b5b2b760891b6020808301918252835180850190945260048452634c494e4b60e01b90840152815191929162000065916003916200016f565b5080516200007b9060049060208401906200016f565b50620000899150506200008f565b62000279565b620000a7336b033b2e3c9fd0803ce8000000620000a9565b565b6001600160a01b038216620001045760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000118919062000215565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b8280546200017d906200023c565b90600052602060002090601f016020900481019282620001a15760008555620001ec565b82601f10620001bc57805160ff1916838001178555620001ec565b82800160010185558215620001ec579182015b82811115620001ec578251825591602001919060010190620001cf565b50620001fa929150620001fe565b5090565b5b80821115620001fa5760008155600101620001ff565b600082198211156200023757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200025157607f821691505b602082108114156200027357634e487b7160e01b600052602260045260246000fd5b50919050565b610bc080620002896000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063661884631161008c578063a457c2d711610066578063a457c2d7146101ce578063a9059cbb146101e1578063d73dd623146101f4578063dd62ed3e1461020757600080fd5b8063661884631461018a57806370a082311461019d57806395d89b41146101c657600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce5671461015557806339509351146101645780634000aea01461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761021a565b6040516101049190610a8b565b60405180910390f35b61012061011b366004610919565b6102ac565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046108dd565b6102c4565b60405160128152602001610104565b610120610172366004610919565b6102e8565b610120610185366004610943565b61030a565b610120610198366004610919565b610376565b6101346101ab36600461088f565b6001600160a01b031660009081526020819052604090205490565b6100f7610389565b6101206101dc366004610919565b610398565b6101206101ef366004610919565b610418565b610120610202366004610919565b610426565b6101346102153660046108aa565b610432565b60606003805461022990610b39565b80601f016020809104026020016040519081016040528092919081815260200182805461025590610b39565b80156102a25780601f10610277576101008083540402835291602001916102a2565b820191906000526020600020905b81548152906001019060200180831161028557829003601f168201915b5050505050905090565b6000336102ba81858561045d565b5060019392505050565b6000336102d2858285610498565b6102dd85858561050c565b506001949350505050565b6000336102ba8185856102fb8383610432565b6103059190610b13565b61045d565b60006103168484610418565b50836001600160a01b0316336001600160a01b03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405161035c929190610af2565b60405180910390a3833b156102ba576102ba848484610541565b60006103828383610398565b9392505050565b60606004805461022990610b39565b600033816103a68286610432565b90508381101561040b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102dd828686840361045d565b6000336102ba81858561050c565b600061038283836102e8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b816001600160a01b0381163014156104875760405162461bcd60e51b815260040161040290610a9e565b6104928484846105ab565b50505050565b60006104a48484610432565b9050600019811461049257818110156104ff5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610402565b610492848484840361045d565b816001600160a01b0381163014156105365760405162461bcd60e51b815260040161040290610a9e565b6104928484846106cf565b604051635260769b60e11b815283906001600160a01b0382169063a4c0ed369061057390339087908790600401610a5b565b600060405180830381600087803b15801561058d57600080fd5b505af11580156105a1573d6000803e3d6000fd5b5050505050505050565b6001600160a01b03831661060d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610402565b6001600160a01b03821661066e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610402565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107335760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610402565b6001600160a01b0382166107955760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610402565b6001600160a01b0383166000908152602081905260409020548181101561080d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610402565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610492565b80356001600160a01b038116811461088a57600080fd5b919050565b6000602082840312156108a157600080fd5b61038282610873565b600080604083850312156108bd57600080fd5b6108c683610873565b91506108d460208401610873565b90509250929050565b6000806000606084860312156108f257600080fd5b6108fb84610873565b925061090960208501610873565b9150604084013590509250925092565b6000806040838503121561092c57600080fd5b61093583610873565b946020939093013593505050565b60008060006060848603121561095857600080fd5b61096184610873565b925060208401359150604084013567ffffffffffffffff8082111561098557600080fd5b818601915086601f83011261099957600080fd5b8135818111156109ab576109ab610b74565b604051601f8201601f19908116603f011681019083821181831017156109d3576109d3610b74565b816040528281528960208487010111156109ec57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b81811015610a3457602081850181015186830182015201610a18565b81811115610a46576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000610a826060830184610a0e565b95945050505050565b6020815260006103826020830184610a0e565b60208082526034908201527f4c696e6b546f6b656e3a207472616e736665722f617070726f766520746f207460408201527368697320636f6e7472616374206164647265737360601b606082015260800190565b828152604060208201526000610b0b6040830184610a0e565b949350505050565b60008219821115610b3457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610b4d57607f821691505b60208210811415610b6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212203ab4465420698688c9522dc144ded06ba4f11b996b701553eddfd7ab2db9983364736f6c63430008070033608060405234801561001057600080fd5b50604051611c52380380611c5283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611bbf806100936000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635fdb23ca1161008c578063886d3db911610066578063886d3db9146101bc578063a4c0ed36146101cd578063c5e639ca146101e0578063e030ba66146101f357600080fd5b80635fdb23ca146101835780636ee4d55314610196578063715d342f146101a957600080fd5b8063165d35e1146100d457806338540d9c146100f45780633be2c1d8146101175780634042994614610137578063466703c51461014c5780634b6022821461016c575b600080fd5b6000546040516001600160a01b0390911681526020015b60405180910390f35b610107610102366004611585565b610206565b60405190151581526020016100eb565b61012a610125366004611527565b61045c565b6040516100eb919061185e565b61014a6101453660046112be565b61060d565b005b61015f61015a366004611725565b610850565b6040516100eb9190611944565b61017561012c81565b6040519081526020016100eb565b61012a61019136600461145d565b61087e565b61014a6101a43660046116e8565b61094c565b61012a6101b73660046113c6565b610ac9565b6101756101ca366004611725565b90565b61014a6101db36600461135c565b610beb565b6101076101ee36600461169d565b610dc3565b61010761020136600461167b565b610f29565b60008481526001602052604081205485906001600160a01b03166102455760405162461bcd60e51b815260040161023c90611977565b60405180910390fd5b6000868152600160208181526040808420815180830190925280546001600160a01b03811683526001600160e01b0319600160a01b820460e01b1683850152948b9052929091526001600160c01b0319909216905562061a805a10156102bd5760405162461bcd60e51b815260040161023c906119d6565b604080516001808252818301909252600091602080830190803683370190505090506000816000815181106102f4576102f4611b5d565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905068056bc75e2d631000008160008151811061034e5761034e611b5d565b602090810291909101015260408051600180825281830190925260009181602001602082028036833701905050905060038160008151811061039257610392611b5d565b602002602001018181525050600084600001516001600160a01b031685602001518c8c8c8c6040516024016103ca94939291906118a2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161040891906117d8565b6000604051808303816000865af19150503d8060008114610445576040519150601f19603f3d011682016040523d82523d6000602084013e61044a565b606091505b50909c9b505050505050505050505050565b80516060908061047e5760405162461bcd60e51b815260040161023c906119ae565b6000602061048d83601f611a5e565b6104979190611a76565b90506000816001600160401b038111156104b3576104b3611b73565b6040519080825280602002602001820160405280156104dc578160200160208202803683370190505b50905060005b828110156106045760006104f7826020611a8a565b90506000610506826020611a5e565b9050858111156105135750845b600061051f8383611aa9565b6001600160401b0381111561053657610536611b73565b60405190808252806020026020018201604052801561055f578160200160208202803683370190505b509050825b828110156105c05789818151811061057e5761057e611b5d565b60200260200101518285836105939190611aa9565b815181106105a3576105a3611b5d565b6020908102919091010152806105b881611aec565b915050610564565b5060006105cc8261108d565b9050808686815181106105e1576105e1611b5d565b6020026020010181815250505050505080806105fc90611aec565b9150506104e2565b50949350505050565b6000546001600160a01b0316331461065d5760405162461bcd60e51b815260206004820152601360248201527226bab9ba103ab9b2902624a725903a37b5b2b760691b604482015260640161023c565b60005486906001600160a01b03808316911614156106bd5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f742063616c6c6261636b20746f204c494e4b000000000000000000604482015260640161023c565b6040516bffffffffffffffffffffffff1960608c901b1660208201526034810186905260009060540160408051601f198184030181529181528151602092830120600081815260019093529120549091506001600160a01b03161561075b5760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081d5cd94818481d5b9a5c5d5948125160621b604482015260640161023c565b60006107694261012c611120565b905060405180604001604052808a6001600160a01b03168152602001896001600160e01b0319168152506001600084815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548163ffffffff021916908360e01c0217905550905050897fd8d7ecc4800d25fa53ce0372f13a416d98907a7ef3d8d3bdd79cf4fe75529c658d848e8d8d878d8d8d60405161083a999897969594939291906117f4565b60405180910390a2505050505050505050505050565b606060008260405160200161086791815260200190565b60408051601f198184030181529190529392505050565b8051606090806108a05760405162461bcd60e51b815260040161023c906119ae565b6000816001600160401b038111156108ba576108ba611b73565b6040519080825280602002602001820160405280156108e3578160200160208202803683370190505b50905060005b828110156109445761091585828151811061090657610906611b5d565b60200260200101516020015190565b82828151811061092757610927611b5d565b60209081029190910101528061093c81611aec565b9150506108e9565b509392505050565b6000848152600160205260409020546001600160a01b03166109a75760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081d5cd94818481d5b9a5c5d5948125160621b604482015260640161023c565b428111156109f05760405162461bcd60e51b815260206004820152601660248201527514995c5d595cdd081a5cc81b9bdd08195e1c1a5c995960521b604482015260640161023c565b60008481526001602052604080822080546001600160c01b03191690555185917fa7842b9ec549398102c0d91b1b9919b2f20558aefdadf57528a95c6cd3292e9391a260005460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610a7f57600080fd5b505af1158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab79190611563565b610ac357610ac3611b1b565b50505050565b6060600082604051602001610ade91906117a2565b60408051601f19818403018152919052835190915080610b105760405162461bcd60e51b815260040161023c906119ae565b60208251610b1e9190611b07565b15610b625760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840c2e4e4c2f240d8cadccee8d60631b604482015260640161023c565b6000816001600160401b03811115610b7c57610b7c611b73565b604051908082528060200260200182016040528015610ba5578160200160208202803683370190505b50905060005b8281101561060457602080820285010151828281518110610bce57610bce611b5d565b602090810291909101015280610be381611aec565b915050610bab565b6000546001600160a01b03163314610c3b5760405162461bcd60e51b815260206004820152601360248201527226bab9ba103ab9b2902624a725903a37b5b2b760691b604482015260640161023c565b80610c4860026020611a8a565b610c53906004611a5e565b81511015610c9c5760405162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840e4cae2eacae6e840d8cadccee8d60531b604482015260640161023c565b602082015182906001600160e01b031981166320214ca360e11b14610d035760405162461bcd60e51b815260206004820152601e60248201527f4d757374207573652077686974656c69737465642066756e6374696f6e730000604482015260640161023c565b8560248501528460448501526000306001600160a01b031685604051610d2991906117d8565b600060405180830381855af49150503d8060008114610d64576040519150601f19603f3d011682016040523d82523d6000602084013e610d69565b606091505b5050905080610dba5760405162461bcd60e51b815260206004820152601860248201527f556e61626c6520746f2063726561746520726571756573740000000000000000604482015260640161023c565b50505050505050565b60008381526001602052604081205484906001600160a01b0316610df95760405162461bcd60e51b815260040161023c90611977565b6000858152600160208181526040808420815180830190925280546001600160a01b03811683526001600160e01b0319600160a01b820460e01b1683850152948a9052929091526001600160c01b0319909216905562061a805a1015610e715760405162461bcd60e51b815260040161023c906119d6565b600081600001516001600160a01b03168260200151888888604051602401610e9b93929190611921565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610ed991906117d8565b6000604051808303816000865af19150503d8060008114610f16576040519150601f19603f3d011682016040523d82523d6000602084013e610f1b565b606091505b509098975050505050505050565b60008281526001602052604081205483906001600160a01b0316610f5f5760405162461bcd60e51b815260040161023c90611977565b6000848152600160208181526040808420815180830190925280546001600160a01b03811683526001600160e01b0319600160a01b820460e01b168385015294899052929091526001600160c01b0319909216905562061a805a1015610fd75760405162461bcd60e51b815260040161023c906119d6565b8051602082015160405160248101889052604481018790526000926001600160a01b0316919060640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161103e91906117d8565b6000604051808303816000865af19150503d806000811461107b576040519150601f19603f3d011682016040523d82523d6000602084013e611080565b606091505b5090979650505050505050565b6000808251602061109e9190611a8a565b6001600160401b038111156110b5576110b5611b73565b6040519080825280601f01601f1916602001820160405280156110df576020820181803683370190505b50905060005b8351811015611115576020810260200184015160208202602001830152808061110d90611aec565b9150506110e5565b506020015192915050565b60008061112d8385611a5e565b90508381101561117f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161023c565b9392505050565b60006001600160401b0383111561119f5761119f611b73565b6111b2601f8401601f1916602001611a0b565b90508281528383830111156111c657600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146111f457600080fd5b919050565b600082601f83011261120a57600080fd5b8135602061121f61121a83611a3b565b611a0b565b80838252828201915082860187848660051b890101111561123f57600080fd5b60005b8581101561108057813584529284019290840190600101611242565b80356001600160e01b0319811681146111f457600080fd5b60008083601f84011261128857600080fd5b5081356001600160401b0381111561129f57600080fd5b6020830191508360208285010111156112b757600080fd5b9250929050565b60008060008060008060008060006101008a8c0312156112dd57600080fd5b6112e68a6111dd565b985060208a0135975060408a0135965061130260608b016111dd565b955061131060808b0161125e565b945060a08a0135935060c08a0135925060e08a01356001600160401b0381111561133957600080fd5b6113458c828d01611276565b915080935050809150509295985092959850929598565b60008060006060848603121561137157600080fd5b61137a846111dd565b92506020840135915060408401356001600160401b0381111561139c57600080fd5b8401601f810186136113ad57600080fd5b6113bc86823560208401611186565b9150509250925092565b600060208083850312156113d957600080fd5b82356001600160401b038111156113ef57600080fd5b8301601f8101851361140057600080fd5b803561140e61121a82611a3b565b80828252848201915084840188868560051b870101111561142e57600080fd5b600094505b83851015611451578035835260019490940193918501918501611433565b50979650505050505050565b6000602080838503121561147057600080fd5b82356001600160401b038082111561148757600080fd5b818501915085601f83011261149b57600080fd5b81356114a961121a82611a3b565b80828252858201915085850189878560051b88010111156114c957600080fd5b60005b84811015611518578135868111156114e357600080fd5b8701603f81018c136114f457600080fd5b6115058c8a83013560408401611186565b85525092870192908701906001016114cc565b50909998505050505050505050565b60006020828403121561153957600080fd5b81356001600160401b0381111561154f57600080fd5b61155b848285016111f9565b949350505050565b60006020828403121561157557600080fd5b8151801515811461117f57600080fd5b6000806000806080858703121561159b57600080fd5b843593506020808601356001600160401b03808211156115ba57600080fd5b818801915088601f8301126115ce57600080fd5b81356115dc61121a82611a3b565b8082825285820191508585018c878560051b88010111156115fc57600080fd5b600095505b8386101561162657611612816111dd565b835260019590950194918601918601611601565b5097505050604088013592508083111561163f57600080fd5b61164b89848a016111f9565b9450606088013592508083111561166157600080fd5b505061166f878288016111f9565b91505092959194509250565b6000806040838503121561168e57600080fd5b50508035926020909101359150565b6000806000604084860312156116b257600080fd5b8335925060208401356001600160401b038111156116cf57600080fd5b6116db86828701611276565b9497909650939450505050565b600080600080608085870312156116fe57600080fd5b84359350602085013592506117156040860161125e565b9396929550929360600135925050565b60006020828403121561173757600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561176e57815187529582019590820190600101611752565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b815160009082906020808601845b838110156117cc578151855293820193908201906001016117b0565b50929695505050505050565b600082516117ea818460208701611ac0565b9190910192915050565b6001600160a01b038a81168252602082018a905260408201899052871660608201526001600160e01b03198616608082015260a0810185905260c0810184905261010060e0820181905260009061184e8382018587611779565b9c9b505050505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156118965783518352928401929184019160010161187a565b50909695505050505050565b600060808201868352602060808185015281875180845260a086019150828901935060005b818110156118ec5784516001600160a01b0316835293830193918301916001016118c7565b50508481036040860152611900818861173e565b925050508281036060840152611916818561173e565b979650505050505050565b83815260406020820152600061193b604083018486611779565b95945050505050565b6020815260008251806020840152611963816040850160208701611ac0565b601f01601f19169190910160400192915050565b6020808252601b908201527f4d757374206861766520612076616c6964207265717565737449640000000000604082015260600190565b6020808252600e908201526d417272617920697320656d70747960901b604082015260600190565b6020808252818101527f4d7573742070726f7669646520636f6e73756d657220656e6f75676820676173604082015260600190565b604051601f8201601f191681016001600160401b0381118282101715611a3357611a33611b73565b604052919050565b60006001600160401b03821115611a5457611a54611b73565b5060051b60200190565b60008219821115611a7157611a71611b31565b500190565b600082611a8557611a85611b47565b500490565b6000816000190483118215151615611aa457611aa4611b31565b500290565b600082821015611abb57611abb611b31565b500390565b60005b83811015611adb578181015183820152602001611ac3565b83811115610ac35750506000910152565b6000600019821415611b0057611b00611b31565b5060010190565b600082611b1657611b16611b47565b500690565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220449b15ee745fce7cc794825f9bf781cc002f7a6d13752dc1015351f7621507cc64736f6c63430008070033608060405234801561001057600080fd5b5060405161055338038061055383398101604081905261002f916100a4565b6000805460ff191660ff84161790556100478161004e565b5050610101565b60018190554260025560038054906000610067836100d8565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b600080604083850312156100b757600080fd5b825160ff811681146100c857600080fd5b6020939093015192949293505050565b60006000198214156100fa57634e487b7160e01b600052601160045260246000fd5b5060010190565b610443806101106000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638205bf6a116100715780638205bf6a146101a15780639a6fc8f5146101aa578063a87a20ce14610228578063b5ab58dc1461023b578063b633620c1461025b578063feaf968c1461027b57600080fd5b8063313ce567146100b95780634aa2011f146100dd57806350d25bcd1461013a57806354fd4d5014610151578063668a0f02146101595780637284e41614610162575b600080fd5b6000546100c69060ff1681565b60405160ff90911681526020015b60405180910390f35b6101386100eb366004610356565b69ffffffffffffffffffff90931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b005b61014360015481565b6040519081526020016100d4565b610143600081565b61014360035481565b604080518082018252601f81527f76302e382f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290516100d4919061038f565b61014360025481565b6101f16101b8366004610334565b69ffffffffffffffffffff8116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100d4565b61013861023636600461031b565b6102a6565b61014361024936600461031b565b60046020526000908152604090205481565b61014361026936600461031b565b60056020526000908152604090205481565b60035460008181526004602090815260408083205460068352818420546005909352922054836101f1565b600181905542600255600380549060006102bf836103e4565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b803569ffffffffffffffffffff8116811461031657600080fd5b919050565b60006020828403121561032d57600080fd5b5035919050565b60006020828403121561034657600080fd5b61034f826102fc565b9392505050565b6000806000806080858703121561036c57600080fd5b610375856102fc565b966020860135965060408601359560600135945092505050565b600060208083528351808285015260005b818110156103bc578581018301518582016040015282016103a0565b818111156103ce576000604083870101525b50601f01601f1916929092016040019392505050565b600060001982141561040657634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220e874894999ad0b5a637e99222919fcf57a8d2b567fcd5fa20f8190fa1c7eb07364736f6c63430008070033608060405234801561001057600080fd5b50612960806100206000396000f3fe6080604052600436106102b25760003560e01c80638456cb5911610175578063b631e80b116100dc578063ddca3f4311610095578063f2fde38b1161006f578063f2fde38b14610863578063f734e22a14610883578063fca3b5aa14610898578063fcaae87b146108b857600080fd5b8063ddca3f431461080d578063ed1c11cb14610823578063efdcd9741461084357600080fd5b8063b631e80b1461072c578063c01bc9821461074d578063c6bbd5a71461077e578063d153b60c1461079f578063d90bc211146107bf578063dd62ed3e146107ed57600080fd5b80639f8e67bf1161012e5780639f8e67bf1461066b578063a457c2d71461068c578063a9059cbb146106ac578063aaa4a184146106cc578063b3f00674146106ec578063b5ed298a1461070c57600080fd5b80638456cb59146105ce5780638da5cb5b146105e357806391fe1b921461060157806395d89b41146106215780639dc29fac146106365780639eeb1d501461065657600080fd5b80633fc8cef31161021957806368e0d4e1116101d257806368e0d4e1146105015780636e01a6861461052257806370a0823114610542578063715018a614610578578063744fbc7a1461058d57806379e34b4d146105ae57600080fd5b80633fc8cef31461044857806340c10f191461046957806345596e2e146104895780635c975abb146104a95780635f370ed0146104c1578063660db484146104e157600080fd5b806323b872dd1161026b57806323b872dd146103a85780632b52684d146103c85780632fecd589146103df578063313ce567146103f557806339509351146104115780633f4ba83a1461043157600080fd5b806306fdde03146102be57806307546172146102e9578063095ea7b31461032257806318160ddd14610352578063184a732f146103715780631d5f45f51461038757600080fd5b366102b957005b600080fd5b3480156102ca57600080fd5b506102d36108e6565b6040516102e09190612637565b60405180910390f35b3480156102f557600080fd5b506101015461030a906001600160a01b031681565b6040516001600160a01b0390911681526020016102e0565b34801561032e57600080fd5b5061034261033d36600461248d565b610978565b60405190151581526020016102e0565b34801561035e57600080fd5b506035545b6040519081526020016102e0565b34801561037d57600080fd5b5061036360fe5481565b34801561039357600080fd5b506101085461030a906001600160a01b031681565b3480156103b457600080fd5b506103426103c33660046123fc565b610990565b3480156103d457600080fd5b506103636101035481565b3480156103eb57600080fd5b5061036360fd5481565b34801561040157600080fd5b50604051601281526020016102e0565b34801561041d57600080fd5b5061034261042c36600461248d565b610a83565b34801561043d57600080fd5b50610446610aa5565b005b34801561045457600080fd5b5061010b5461030a906001600160a01b031681565b34801561047557600080fd5b5061044661048436600461248d565b610ab7565b34801561049557600080fd5b506104466104a4366004612605565b610bd1565b3480156104b557600080fd5b5060ca5460ff16610342565b3480156104cd57600080fd5b506103636104dc366004612438565b610c14565b3480156104ed57600080fd5b506104466104fc3660046123a7565b610f61565b34801561050d57600080fd5b5061010a5461030a906001600160a01b031681565b34801561052e57600080fd5b5061044661053d366004612605565b610fc7565b34801561054e57600080fd5b5061036361055d3660046123a7565b6001600160a01b031660009081526033602052604090205490565b34801561058457600080fd5b5061044661100c565b34801561059957600080fd5b506101095461030a906001600160a01b031681565b3480156105ba57600080fd5b506104466105c93660046123fc565b61101e565b3480156105da57600080fd5b506104466110d1565b3480156105ef57600080fd5b506065546001600160a01b031661030a565b34801561060d57600080fd5b5061044661061c3660046124d9565b6110e1565b34801561062d57600080fd5b506102d3611194565b34801561064257600080fd5b5061044661065136600461248d565b6111a3565b34801561066257600080fd5b506102d3611278565b34801561067757600080fd5b506101005461030a906001600160a01b031681565b34801561069857600080fd5b506103426106a736600461248d565b611307565b3480156106b857600080fd5b506103426106c736600461248d565b61138d565b3480156106d857600080fd5b506104466106e73660046123a7565b611416565b3480156106f857600080fd5b5060ff5461030a906001600160a01b031681565b34801561071857600080fd5b506104466107273660046123a7565b61148a565b34801561073857600080fd5b506101075461030a906001600160a01b031681565b34801561075957600080fd5b506103426107683660046123a7565b6101046020526000908152604090205460ff1681565b34801561078a57600080fd5b5061010c5461030a906001600160a01b031681565b3480156107ab57600080fd5b5060975461030a906001600160a01b031681565b3480156107cb57600080fd5b506103636107da3660046123a7565b6101066020526000908152604090205481565b3480156107f957600080fd5b506103636108083660046123c9565b6114da565b34801561081957600080fd5b5061036360fc5481565b34801561082f57600080fd5b5061044661083e366004612516565b611505565b34801561084f57600080fd5b5061044661085e3660046123a7565b6116d1565b34801561086f57600080fd5b5061044661087e3660046123a7565b611736565b34801561088f57600080fd5b5061044661185e565b3480156108a457600080fd5b506104466108b33660046123a7565b61186e565b3480156108c457600080fd5b506103636108d33660046123a7565b6101056020526000908152604090205481565b6060603680546108f5906128ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610921906128ad565b801561096e5780601f106109435761010080835404028352916020019161096e565b820191906000526020600020905b81548152906001019060200180831161095157829003601f168201915b5050505050905090565b6000336109868185856118d4565b5060019392505050565b600061099a6119f9565b336000908152610104602052604090205460ff16156109d45760405162461bcd60e51b81526004016109cb906126b6565b60405180910390fd5b6001600160a01b0383166000908152610104602052604090205460ff1615610a0e5760405162461bcd60e51b81526004016109cb9061268c565b6001600160a01b0384166000908152610104602052604090205460ff1615610a6d5760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016109cb565b610a78843384611a3f565b610986848484611ab3565b600033610986818585610a9683836114da565b610aa0919061283d565b6118d4565b610aad611c5e565b610ab5611cb8565b565b610abf6119f9565b610101546001600160a01b03163314610aea5760405162461bcd60e51b81526004016109cb906126ed565b6101035481610af860355490565b610b02919061283d565b1115610b505760405162461bcd60e51b815260206004820152601a60248201527f77696c6c2065786365656420737570706c79206365696c696e6700000000000060448201526064016109cb565b6001600160a01b0382166000908152610104602052604090205460ff1615610b8a5760405162461bcd60e51b81526004016109cb9061268c565b336000908152610104602052604090205460ff1615610bbb5760405162461bcd60e51b81526004016109cb906126b6565b610bc3611d0a565b610bcd8282611e38565b5050565b610bd9611c5e565b610be1611d0a565b60fd81905560405181907f45398c451b1a31b88dbaed4e7b89a632f43cc4b50149d437db03a5300afe40d190600090a250565b610101546000906001600160a01b03163314610c425760405162461bcd60e51b81526004016109cb906126ed565b8160031415610de7576101075460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529087169063095ea7b390604401602060405180830381600087803b158015610c9a57600080fd5b505af1158015610cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd291906124b7565b5060408051610100810182526001600160a01b03888116825287811660208301908152610bb883850190815287831660608501908152426080860190815260a086018b8152600060c0880181815260e08901828152610107549a5163414bf38960e01b81528a518a166004820152975189166024890152955162ffffff166044880152935187166064870152915160848601525160a4850152905160c48401529051831660e483015292939091169063414bf3899061010401602060405180830381600087803b158015610da557600080fd5b505af1158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddd919061261e565b9250610f58915050565b6040805160028082526060820183526000926020830190803683370190505090508681600081518110610e1c57610e1c6128fe565b60200260200101906001600160a01b031690816001600160a01b0316815250508581600181518110610e5057610e506128fe565b6001600160a01b0392831660209182029290920101526101095460405163095ea7b360e01b81529082166004820152602481018790529088169063095ea7b390604401602060405180830381600087803b158015610ead57600080fd5b505af1158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee591906124b7565b5061010954604051635c11d79560e01b81526001600160a01b0390911690635c11d79590610f2090889060009086908a9042906004016127cc565b600060405180830381600087803b158015610f3a57600080fd5b505af1158015610f4e573d6000803e3d6000fd5b5050505060009150505b95945050505050565b610f69611c5e565b6001600160a01b038116610f7c57600080fd5b61010080546001600160a01b0319166001600160a01b0383169081179091556040517f164d8ef0d742b45087644f55c61abeb84557df70d06730591e451f0981e278ca90600090a250565b610fcf611c5e565b6101038190556040518181527fe35be406f69e9d11d6ac8e5b54bbc8b6c4baf2fa2359f84a56baa5ea5d07dc8f906020015b60405180910390a150565b611014611c5e565b610ab56000611ef9565b610101546001600160a01b031633146110495760405162461bcd60e51b81526004016109cb906126ed565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401602060405180830381600087803b15801561109357600080fd5b505af11580156110a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cb91906124b7565b50505050565b6110d9611c5e565b610ab5611f4b565b610100546001600160a01b031633146111505760405162461bcd60e51b815260206004820152602b60248201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6560448201526a1d1a1bd91bdb1bd9da5cdd60aa1b60648201526084016109cb565b805161116490610102906020840190612265565b507fe6be68107100e39cb16d675c1086a4d5479fbd01108d721dabbccaa2249b995f816040516110019190612637565b6060603780546108f5906128ad565b6111ab6119f9565b610101546001600160a01b031633146111d65760405162461bcd60e51b81526004016109cb906126ed565b6001600160a01b0382166000908152610104602052604090205460ff16156112355760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016109cb565b336000908152610104602052604090205460ff16156112665760405162461bcd60e51b81526004016109cb906126b6565b61126e611d0a565b610bcd8282611f88565b6101028054611286906128ad565b80601f01602080910402602001604051908101604052809291908181526020018280546112b2906128ad565b80156112ff5780601f106112d4576101008083540402835291602001916112ff565b820191906000526020600020905b8154815290600101906020018083116112e257829003601f168201915b505050505081565b6000338161131582866114da565b9050838110156113755760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016109cb565b61138282868684036118d4565b506001949350505050565b60006113976119f9565b336000908152610104602052604090205460ff16156113c85760405162461bcd60e51b81526004016109cb906126b6565b6001600160a01b0383166000908152610104602052604090205460ff16156114025760405162461bcd60e51b81526004016109cb9061268c565b61140d338484611ab3565b50600192915050565b61141e611c5e565b6001600160a01b0381166000818152610104602052604090819020805460ff19811660ff9182161590811790925591517f14ddf324cc5d8b14a3c3b12c84b0a7d578d72c8d60655c06d6a457e71431d5ee9261147f92161515815260200190565b60405180910390a250565b611492611c5e565b6001600160a01b0381166114b85760405162461bcd60e51b81526004016109cb90612731565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b600054610100900460ff16158080156115255750600054600160ff909116105b8061153f5750303b15801561153f575060005460ff166001145b6115a25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109cb565b6000805460ff1916600117905580156115c5576000805461ff0019166101001790555b6001600160a01b0389166115d857600080fd5b6115e06120b9565b6115e86120e8565b6115f28c8c612117565b6115fa612148565b60fd8a905560ff80546001600160a01b03199081166001600160a01b038c8116919091179092556101038a90554260fe5561010b805482168a841617905561010c8054821689841617905561010780548216888416179055610108805482168784161790556101098054821686841617905561010a805490911691841691909117905580156116c3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050505050565b6116d9611c5e565b6001600160a01b0381166116ec57600080fd5b60ff80546001600160a01b0319166001600160a01b0383169081179091556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90600090a250565b6001600160a01b03811661175c5760405162461bcd60e51b81526004016109cb90612731565b6097546001600160a01b038281169116146117d45760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b60648201526084016109cb565b6001600160a01b03811633146118525760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e657200000000000060648201526084016109cb565b61185b81611ef9565b50565b611866611c5e565b610ab5611d0a565b611876611c5e565b6001600160a01b03811661188957600080fd5b61010180546001600160a01b0319166001600160a01b0383169081179091556040517f726b590ef91a8c76ad05bbe91a57ef84605276528f49cd47d787f558a4e755b690600090a250565b6001600160a01b0383166119365760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016109cb565b6001600160a01b0382166119975760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016109cb565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60ca5460ff1615610ab55760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109cb565b6000611a4b84846114da565b905060001981146110cb5781811015611aa65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016109cb565b6110cb84848484036118d4565b6001600160a01b038316611b175760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016109cb565b6001600160a01b038216611b795760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016109cb565b6001600160a01b03831660009081526033602052604090205481811015611bf15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016109cb565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c519086815260200190565b60405180910390a36110cb565b6065546001600160a01b03163314610ab55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109cb565b611cc061216f565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006201518060fe5442611d1e9190612896565b611d289190612855565b90506001811061185b576000611d3d60355490565b60fd54909150819060005b84811015611d825768056bc75e2d63100000611d648385612877565b611d6e9190612855565b611d78908461283d565b9250600101611d48565b506000611d8f8484612896565b9050611d9e8562015180612877565b60fe6000828254611daf919061283d565b909155505060ff54611dca906001600160a01b031682611e38565b60ff547f07982395c678b2ffc23fcf59aaec243ca79418c285af0d0e10b4e65bc4189f4c906001600160a01b031642611e0260355490565b604080516001600160a01b0390941684526020840192909252908201526060810183905260800160405180910390a15050505050565b6001600160a01b038216611e8e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016109cb565b8060356000828254611ea0919061283d565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611f536119f9565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611ced3390565b6001600160a01b038216611fe85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016109cb565b6001600160a01b0382166000908152603360205260409020548181101561205c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016109cb565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016119ec565b505050565b600054610100900460ff166120e05760405162461bcd60e51b81526004016109cb90612781565b610ab56121b8565b600054610100900460ff1661210f5760405162461bcd60e51b81526004016109cb90612781565b610ab56121e8565b600054610100900460ff1661213e5760405162461bcd60e51b81526004016109cb90612781565b610bcd828261221b565b600054610100900460ff16610ab55760405162461bcd60e51b81526004016109cb90612781565b60ca5460ff16610ab55760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109cb565b600054610100900460ff166121df5760405162461bcd60e51b81526004016109cb90612781565b610ab533611ef9565b600054610100900460ff1661220f5760405162461bcd60e51b81526004016109cb90612781565b60ca805460ff19169055565b600054610100900460ff166122425760405162461bcd60e51b81526004016109cb90612781565b8151612255906036906020850190612265565b5080516120b49060379060208401905b828054612271906128ad565b90600052602060002090601f01602090048101928261229357600085556122d9565b82601f106122ac57805160ff19168380011785556122d9565b828001600101855582156122d9579182015b828111156122d95782518255916020019190600101906122be565b506122e59291506122e9565b5090565b5b808211156122e557600081556001016122ea565b80356001600160a01b038116811461231557600080fd5b919050565b600082601f83011261232b57600080fd5b813567ffffffffffffffff8082111561234657612346612914565b604051601f8301601f19908116603f0116810190828211818310171561236e5761236e612914565b8160405283815286602085880101111561238757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156123b957600080fd5b6123c2826122fe565b9392505050565b600080604083850312156123dc57600080fd5b6123e5836122fe565b91506123f3602084016122fe565b90509250929050565b60008060006060848603121561241157600080fd5b61241a846122fe565b9250612428602085016122fe565b9150604084013590509250925092565b600080600080600060a0868803121561245057600080fd5b612459866122fe565b9450612467602087016122fe565b93506040860135925061247c606087016122fe565b949793965091946080013592915050565b600080604083850312156124a057600080fd5b6124a9836122fe565b946020939093013593505050565b6000602082840312156124c957600080fd5b815180151581146123c257600080fd5b6000602082840312156124eb57600080fd5b813567ffffffffffffffff81111561250257600080fd5b61250e8482850161231a565b949350505050565b60008060008060008060008060008060006101608c8e03121561253857600080fd5b67ffffffffffffffff808d35111561254f57600080fd5b61255c8e8e358f0161231a565b9b508060208e0135111561256f57600080fd5b506125808d60208e01358e0161231a565b995060408c0135985061259560608d016122fe565b975060808c013596506125aa60a08d016122fe565b95506125b860c08d016122fe565b94506125c660e08d016122fe565b93506125d56101008d016122fe565b92506125e46101208d016122fe565b91506125f36101408d016122fe565b90509295989b509295989b9093969950565b60006020828403121561261757600080fd5b5035919050565b60006020828403121561263057600080fd5b5051919050565b600060208083528351808285015260005b8181101561266457858101830151858201604001528201612648565b81811115612676576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526010908201526f1d1bc81a5cc81c995cdd1c9a58dd195960821b604082015260600190565b60208082526018908201527f6d73672e73656e64657220697320726573747269637465640000000000000000604082015260600190565b60208082526024908201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d69604082015263373a32b960e11b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561281c5784516001600160a01b0316835293830193918301916001016127f7565b50506001600160a01b03969096166060850152505050608001529392505050565b60008219821115612850576128506128e8565b500190565b60008261287257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612891576128916128e8565b500290565b6000828210156128a8576128a86128e8565b500390565b600181811c908216806128c157607f821691505b602082108114156128e257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212208aa0bc3776b69bd435cbd3dbe679497aaae4d95defe81ee64fdd12b80e82b75f64736f6c63430008070033608060405234801561001057600080fd5b50615f0280620000216000396000f3fe6080604052600436106103a65760003560e01c8063744fbc7a116101e7578063b3951b671161010d578063c8b76e70116100a0578063ddca3f431161006f578063ddca3f4314610ad8578063e267078a14610aee578063e7d015f214610b0e578063f2fde38b14610b2e57600080fd5b8063c8b76e7014610a55578063c8f33c9114610a75578063d153b60c14610a8b578063d90bc21114610aab57600080fd5b8063bf938db8116100dc578063bf938db8146109cf578063c01bc982146109ef578063c6bbd5a714610a1f578063c8599ded14610a3f57600080fd5b8063b3951b671461094f578063b3f006741461096f578063b5ed298a1461098f578063b631e80b146109af57600080fd5b80639932ba4c11610185578063a73e1cbf11610154578063a73e1cbf146108e4578063a8509fd814610904578063a8b54bd414610919578063abdd5f3f1461092f57600080fd5b80639932ba4c146108645780639eeb1d501461089a5780639f8e67bf146108af578063a2ab905d146108cf57600080fd5b80638c88c10c116101c15780638c88c10c146107c05780638da5cb5b146107ed578063914f0cc61461080b578063978bbdb91461083857600080fd5b8063744fbc7a146107765780637ca58c55146107965780638456cb59146107ab57600080fd5b806336aab86c116102cc5780635177942a1161026a578063686f917511610239578063686f91751461070157806368e0d4e114610721578063715018a614610741578063724e78da1461075657600080fd5b80635177942a1461068757806353fd4332146106a75780635c975abb146106bd57806363973fda146106e157600080fd5b80633f4ba83a116102a65780633f4ba83a146106055780633fc8cef31461061a578063465a4c941461063a5780634b3e0b801461065a57600080fd5b806336aab86c146105bb578063372d4c55146105dd5780633c8da588146105f057600080fd5b8063156a5da111610344578063239aad0d11610313578063239aad0d146105395780632b52684d1461056f5780632b9522e0146105855780632fecd589146105a557600080fd5b8063156a5da1146104c3578063184a732f146104e35780631d5f45f5146104f95780631ff015631461051957600080fd5b80630be52713116103805780630be52713146104335780630c02e130146104605780630e3293571461047657806313cb1f83146104a357600080fd5b8063011ced5f146103b257806302e04015146103db57806307546172146103fb57600080fd5b366103ad57005b600080fd5b3480156103be57600080fd5b506103c860d35481565b6040519081526020015b60405180910390f35b3480156103e757600080fd5b506103c86103f636600461565a565b610b4e565b34801561040757600080fd5b5060d85461041b906001600160a01b031681565b6040516001600160a01b0390911681526020016103d2565b34801561043f57600080fd5b506103c861044e3660046150ef565b60e86020526000908152604090205481565b34801561046c57600080fd5b506103c860df5481565b34801561048257600080fd5b506104966104913660046155cf565b610c71565b6040516103d29190615878565b3480156104af57600080fd5b506103c86104be3660046152b2565b610c9e565b3480156104cf57600080fd5b506103c86104de3660046152b2565b610df2565b3480156104ef57600080fd5b506103c860d55481565b34801561050557600080fd5b5060ec5461041b906001600160a01b031681565b34801561052557600080fd5b506103c861053436600461565a565b610fd7565b34801561054557600080fd5b5061041b610554366004615628565b60e4602052600090815260409020546001600160a01b031681565b34801561057b57600080fd5b506103c860da5481565b34801561059157600080fd5b506103c86105a036600461565a565b611205565b3480156105b157600080fd5b506103c860d45481565b3480156105c757600080fd5b506105db6105d636600461553e565b6117ce565b005b6105db6105eb366004615628565b611b14565b3480156105fc57600080fd5b506103c8611fde565b34801561061157600080fd5b506105db612103565b34801561062657600080fd5b5060ef5461041b906001600160a01b031681565b34801561064657600080fd5b506105db610655366004615129565b612115565b34801561066657600080fd5b506103c86106753660046150ef565b60e96020526000908152604090205481565b34801561069357600080fd5b506105db6106a2366004615681565b61239b565b3480156106b357600080fd5b506103c860e35481565b3480156106c957600080fd5b50609e5460ff165b60405190151581526020016103d2565b3480156106ed57600080fd5b5060e05461041b906001600160a01b031681565b34801561070d57600080fd5b506103c861071c366004615271565b6124db565b34801561072d57600080fd5b5060ee5461041b906001600160a01b031681565b34801561074d57600080fd5b506105db6126b3565b34801561076257600080fd5b506105db6107713660046150ef565b6126c5565b34801561078257600080fd5b5060ed5461041b906001600160a01b031681565b3480156107a257600080fd5b506103c861275c565b3480156107b757600080fd5b506105db6129f7565b3480156107cc57600080fd5b506103c86107db3660046150ef565b60e66020526000908152604090205481565b3480156107f957600080fd5b506039546001600160a01b031661041b565b34801561081757600080fd5b506103c86108263660046150ef565b60e76020526000908152604090205481565b34801561084457600080fd5b5060d2546108529060ff1681565b60405160ff90911681526020016103d2565b34801561087057600080fd5b5061041b61087f366004615628565b60e5602052600090815260409020546001600160a01b031681565b3480156108a657600080fd5b50610496612a07565b3480156108bb57600080fd5b5060d75461041b906001600160a01b031681565b3480156108db57600080fd5b506105db612a95565b3480156108f057600080fd5b506105db6108ff3660046155cf565b612cee565b34801561091057600080fd5b506103c8612d22565b34801561092557600080fd5b506103c860de5481565b34801561093b57600080fd5b506105db61094a3660046152f8565b612e1d565b34801561095b57600080fd5b506103c861096a36600461565a565b613239565b34801561097b57600080fd5b5060d65461041b906001600160a01b031681565b34801561099b57600080fd5b506105db6109aa3660046150ef565b613428565b3480156109bb57600080fd5b5060eb5461041b906001600160a01b031681565b3480156109db57600080fd5b506103c86109ea366004615200565b613478565b3480156109fb57600080fd5b506106d1610a0a3660046150ef565b60db6020526000908152604090205460ff1681565b348015610a2b57600080fd5b5060f05461041b906001600160a01b031681565b348015610a4b57600080fd5b506103c860e25481565b348015610a6157600080fd5b506103c8610a7036600461565a565b613531565b348015610a8157600080fd5b506103c860e15481565b348015610a9757600080fd5b50606b5461041b906001600160a01b031681565b348015610ab757600080fd5b506103c8610ac63660046150ef565b60ea6020526000908152604090205481565b348015610ae457600080fd5b506103c860d15481565b348015610afa57600080fd5b506105db610b0936600461532d565b613637565b348015610b1a57600080fd5b5060d05461041b906001600160a01b031681565b348015610b3a57600080fd5b506105db610b493660046150ef565b6138c7565b600080610b59612d22565b9050600060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bab57600080fd5b505afa158015610bbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be39190615641565b610bf587670de0b6b3a7640000615c51565b610bff9190615a8e565b90506000670de0b6b3a7640000610c168484615c51565b610c209190615a8e565b60ef549091506001600160a01b0387811691161415610c43579250610c6a915050565b60ef54600090610c5e906001600160a01b0316888489610c9e565b9450610c6a9350505050565b9392505050565b60608282604051602001610c86929190615770565b60405160208183030381529060405290505b92915050565b6000808315610de7578260031415610cc457610cbd8686866001613478565b9050610de7565b6040805160028082526060820183526000926020830190803683370190505090508681600081518110610cf957610cf9615e24565b60200260200101906001600160a01b031690816001600160a01b0316815250508581600181518110610d2d57610d2d615e24565b6001600160a01b03928316602091820292909201015260ed5460405163d06ca61f60e01b8152600092919091169063d06ca61f90610d71908990869060040161596a565b60006040518083038186803b158015610d8957600080fd5b505afa158015610d9d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dc59190810190615485565b905080600181518110610dda57610dda615e24565b6020026020010151925050505b90505b949350505050565b60008160031415610ea95760f05460405163f7729d4360e01b81526001600160a01b0387811660048301528681166024830152610bb860448301526064820186905260006084830181905292169063f7729d439060a401602060405180830381600087803b158015610e6357600080fd5b505af1925050508015610e93575060408051601f3d908101601f19168201909252610e9091810190615641565b60015b610e9f57506000610ea2565b90505b9050610dea565b6040805160028082526060820183526000926020830190803683370190505090508581600081518110610ede57610ede615e24565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110610f1257610f12615e24565b6001600160a01b03928316602091820292909201015260ed5460405163d06ca61f60e01b8152600092919091169063d06ca61f90610f56908890869060040161596a565b60006040518083038186803b158015610f6e57600080fd5b505afa925050508015610fa357506040513d6000823e601f3d908101601f19168201604052610fa09190810190615485565b60015b610faf57506000610fce565b80600181518110610fc257610fc2615e24565b60200260200101519150505b9150610dea9050565b60008060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561102857600080fd5b505afa15801561103c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110609190615641565b61107286670de0b6b3a7640000615c51565b61107c9190615a8e565b90506000805b60e35481101561119957600081815260e560205260408082205460d05491516370a0823160e01b81526001600160a01b039283166004820152670de0b6b3a764000092909116906370a082319060240160206040518083038186803b1580156110ea57600080fd5b505afa1580156110fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111229190615641565b61112c9086615c51565b6111369190615a8e565b600083815260e5602090815260408083205460ef546001600160a01b0391821680865260ea90945291842054949550929361117693909116908590610df2565b90506111828185615a12565b93505050808061119190615da7565b915050611082565b5060d254600090612710906111b19060ff1684615c51565b6111bb9190615a8e565b90506111c78183615ce8565b60ef549092506001600160a01b03878116911614156111ea57509150610c6a9050565b60ef54600090610c5e906001600160a01b0316888589610df2565b60008060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561125657600080fd5b505afa15801561126a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128e9190615641565b6112a086670de0b6b3a7640000615c51565b6112aa9190615a8e565b60d054604051632770a7eb60e21b8152336004820152602481018890529192506001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156112f757600080fd5b505af115801561130b573d6000803e3d6000fd5b5060009250829150505b60e35481101561142e57600081815260e560205260408082205460d05491516370a0823160e01b81526001600160a01b039283166004820152670de0b6b3a764000092909116906370a082319060240160206040518083038186803b15801561137d57600080fd5b505afa158015611391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b59190615641565b6113bf9086615c51565b6113c99190615a8e565b600083815260e5602090815260408083205460ef546001600160a01b0391821680865260ea90945291842054949550929361140b9390911690859030906139ef565b90506114178185615a12565b93505050808061142690615da7565b915050611315565b5060d254600090612710906114469060ff1684615c51565b6114509190615a8e565b60ef549091506001600160a01b038781169116141561166b5760ef54604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b1580156114af57600080fd5b505af11580156114c3573d6000803e3d6000fd5b5050505060006114db6039546001600160a01b031690565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114611525576040519150601f19603f3d011682016040523d82523d6000602084013e61152a565b606091505b50509050806115545760405162461bcd60e51b815260040161154b9061588b565b60405180910390fd5b6000336115618486615ce8565b604051600081818185875af1925050503d806000811461159d576040519150601f19603f3d011682016040523d82523d6000602084013e6115a2565b606091505b50509050806115ff5760405162461bcd60e51b815260206004820152602360248201527f7472616e73666572206574682066656520746f207468652075736572206661696044820152621b195960ea1b606482015260840161154b565b6001600160a01b038816337f4f808f68134f8b72b842a276c2b37b03415d4992c65a94fcee50d33201915b998b6116368789615ce8565b604080519283526020830191909152429082015260600160405180910390a361165f8385615ce8565b95505050505050610c6a565b60ef54604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b1580156116b157600080fd5b505af11580156116c5573d6000803e3d6000fd5b5050505060006116dd6039546001600160a01b031690565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114611727576040519150601f19603f3d011682016040523d82523d6000602084013e61172c565b606091505b505090508061174d5760405162461bcd60e51b815260040161154b9061588b565b60ef54600090611772906001600160a01b03168961176b8688615ce8565b338b613ac7565b604080518b815260208101839052428183015290519192506001600160a01b038a169133917f4f808f68134f8b72b842a276c2b37b03415d4992c65a94fcee50d33201915b99919081900360600190a39450610c6a9350505050565b60008481526005602052604090205484906001600160a01b031633146118475760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f6620746865604482015267081c995c5d595cdd60c21b606482015260840161154b565b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a283838360005b8351811015611af3578381815181106118ab576118ab615e24565b602002602001015160e4600083815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060e6600086848151811061190157611901615e24565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555082818151811061193f5761193f615e24565b602002602001015160e9600086848151811061195d5761195d615e24565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555081818151811061199b5761199b615e24565b602002602001015160ea60008684815181106119b9576119b9615e24565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555060e35460001415611ae157838181518110611a0257611a02615e24565b602002602001015160e5600083815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550828181518110611a5357611a53615e24565b602002602001015160e86000868481518110611a7157611a71615e24565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508060e76000868481518110611ab457611ab4615e24565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055505b80611aeb81615da7565b915050611890565b50825160e25560e354611b0657825160e3555b50504260e155505050505050565b60d25460009061271090611b2b9060ff1684615c51565b611b359190615a8e565b90506000611b438284615a12565b905080341015611b955760405162461bcd60e51b815260206004820152601a60248201527f6c6f776572207468616e20726571756972656420616d6f756e74000000000000604482015260640161154b565b6000611ba96039546001600160a01b031690565b6001600160a01b031660d15460405160006040518083038185875af1925050503d8060008114611bf5576040519150601f19603f3d011682016040523d82523d6000602084013e611bfa565b606091505b5050905080611c1b5760405162461bcd60e51b815260040161154b9061588b565b60ef60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c6b57600080fd5b505af1158015611c7f573d6000803e3d6000fd5b505060ef5460d05460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018a90529116935063a9059cbb92506044019050602060405180830381600087803b158015611cd557600080fd5b505af1158015611ce9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0d919061551c565b506000611d18612d22565b90508460005b60e354811015611dc15760ef54600082815260e560209081526040808320546001600160a01b0390811680855260e8909352922054611dae93929092169168056bc75e2d6310000090611d719087615c51565b611d7b9190615a8e565b60d054600086815260e560209081526040808320546001600160a01b03908116845260ea909252909120549116906139ef565b5080611db981615da7565b915050611d1e565b5060008060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e1357600080fd5b505afa158015611e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4b9190615641565b1115611ef457828260d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ea157600080fd5b505afa158015611eb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed99190615641565b611ee39190615c51565b611eed9190615a8e565b9050611f20565b6000611efe611fde565b9050662386f26fc10000611f128285615c51565b611f1c9190615a8e565b9150505b60d0546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015611f6c57600080fd5b505af1158015611f80573d6000803e3d6000fd5b505060ef54604080518b815260208101869052428183015290516001600160a01b0390921693503392507f4fee1c514ee0e252e3a0babfa8b5030fb89be7ea2b38df9a7fbbf788e54f3d91919081900360600190a350505050505050565b60008060e060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561202f57600080fd5b505afa158015612043573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612067919061569e565b505050915050600060e060009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156120bd57600080fd5b505afa1580156120d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f591906156ee565b9050610c6a82826012613ddf565b61210b613e1f565b612113613e79565b565b600654610100900460ff16158080156121355750600654600160ff909116105b8061214f5750303b15801561214f575060065460ff166001145b6121b25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161154b565b6006805460ff1916600117905580156121d5576006805461ff0019166101001790555b6121dd613ecb565b6121e5613efa565b60d080546001600160a01b038e166001600160a01b03199091161790556122298b600280546001600160a01b039092166001600160a01b0319909216919091179055565b600380546001600160a01b0319166001600160a01b038c1617905560de899055600a61225e670de0b6b3a76400006001615c51565b6122689190615a8e565b60df5560e080546001600160a01b03199081166001600160a01b038b81169190911790925560ef805482168a841617905560f08054821689841617905560eb8054821688841617905560ec8054821687841617905560ed8054821686841617905560ee805490911691841691909117905560d28054600a60ff199091161790554260d3556040805160608101909152602a808252615e75602083013980516123189160dc91602090910190614e3e565b506040518060600160405280602e8152602001615e9f602e913980516123469160dd91602090910190614e3e565b50801561238d576006805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050505050565b6123a3613e1f565b600060d354426123b39190615ce8565b9050600c603c6123c38184615a8e565b6123cd9190615a8e565b116124405760405162461bcd60e51b815260206004820152603960248201527f596f752073686f756c642077616974206174206c6561737420313220686f757260448201527f7320616674657220746865206c61746573742075706461746500000000000000606482015260840161154b565b60648260ff1611158015612458575060018260ff1610155b6124c05760405162461bcd60e51b815260206004820152603360248201527f546865206e65774665652073686f756c64206265206265747765656e203120616044820152726e64203130302028302e303125202d2031252960681b606482015260840161154b565b5060d2805460ff191660ff929092169190911790554260d355565b60f05460405163f7729d4360e01b81526001600160a01b0385811660048301528481166024830152610bb860448301526064820184905260006084830181905292839291169063f7729d439060a401602060405180830381600087803b15801561254457600080fd5b505af1925050508015612574575060408051601f3d908101601f1916820190925261257191810190615641565b60015b61258057506000612583565b90505b60408051600280825260608201835260009260208301908036833701905050905085816000815181106125b8576125b8615e24565b60200260200101906001600160a01b031690816001600160a01b03168152505084816001815181106125ec576125ec615e24565b6001600160a01b03928316602091820292909201015260ed5460405163d06ca61f60e01b8152600092919091169063d06ca61f90612630908890869060040161596a565b60006040518083038186803b15801561264857600080fd5b505afa92505050801561267d57506040513d6000823e601f3d908101601f1916820160405261267a9190810190615485565b60015b612689575060006126a8565b8060018151811061269c5761269c615e24565b60200260200101519150505b509095945050505050565b6126bb613e1f565b6121136000613f29565b6126cd613e1f565b6001600160a01b03811661273a5760405162461bcd60e51b815260206004820152602e60248201527f49434f3a205072696365206665656420616464726573732063616e6e6f74206260448201526d65207a65726f206164647265737360901b606482015260840161154b565b60e080546001600160a01b0319166001600160a01b0392909216919091179055565b60008061287d60dc805461276f90615d72565b80601f016020809104026020016040519081016040528092919081815260200182805461279b90615d72565b80156127e85780601f106127bd576101008083540402835291602001916127e8565b820191906000526020600020905b8154815290600101906020018083116127cb57829003601f168201915b505050505060dd80546127fa90615d72565b80601f016020809104026020016040519081016040528092919081815260200182805461282690615d72565b80156128735780601f1061284857610100808354040283529160200191612873565b820191906000526020600020905b81548152906001019060200180831161285657829003601f168201915b5050505050610c71565b9050600061289560de54306336aab86c60e01b613f7b565b60408051808201909152600381526219d95d60ea1b60208201529091506128be90829084613f97565b61291660405180604001604052806005815260200164706174683160d81b8152506040518060400160405280600e81526020016d726573756c74732c746f6b656e7360901b81525083613f979092919063ffffffff16565b612974604051806040016040528060058152602001643830ba341960d91b81525060405180604001604052806014815260200173726573756c74732c6d61726b657453686172657360601b81525083613f979092919063ffffffff16565b6129d260405180604001604052806005815260200164706174683360d81b81525060405180604001604052806014815260200173726573756c74732c7377617056657273696f6e7360601b81525083613f979092919063ffffffff16565b6129f06129e76003546001600160a01b031690565b8260df54613fb5565b9250505090565b6129ff613e1f565b612113614048565b60d98054612a1490615d72565b80601f0160208091040260200160405190810160405280929190818152602001828054612a4090615d72565b8015612a8d5780601f10612a6257610100808354040283529160200191612a8d565b820191906000526020600020905b815481529060010190602001808311612a7057829003601f168201915b505050505081565b612a9d613e1f565b60005b60e354811015612b5757600081815260e56020526040908190205460ef5460d05492516370a0823160e01b81526001600160a01b039384166004820152612b4493928316929091169082906370a082319060240160206040518083038186803b158015612b0c57600080fd5b505afa158015612b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7b9190615641565b5080612b4f81615da7565b915050612aa0565b5060ef5460d0546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a082319060240160206040518083038186803b158015612ba457600080fd5b505afa158015612bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bdc9190615641565b905060005b60e254811015612ce45760ef54600082815260e460209081526040808320546001600160a01b0390811680855260e9909352922054612c7193929092169168056bc75e2d6310000090612c349087615c51565b612c3e9190615a8e565b60d054600086815260e460209081526040808320546001600160a01b03908116845260ea909252909120549116906139ef565b50600081815260e460209081526040808320805460e5845282852080546001600160a01b0319166001600160a01b0392831617905581548116855260e984528285205460e8855283862055905416835260e682528083205460e79092529091205580612cdc81615da7565b915050612be1565b505060e25460e355565b612cf6613e1f565b8151612d099060dc906020850190614e3e565b508051612d1d9060dd906020840190614e3e565b505050565b60008060005b60e354811015612e1757600081815260e560205260408082205460ef5460d05492516370a0823160e01b81526001600160a01b039384166004820152612df593928316929091169082906370a082319060240160206040518083038186803b158015612d9357600080fd5b505afa158015612da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dcb9190615641565b600086815260e560209081526040808320546001600160a01b0316835260ea909152902054610c9e565b9050612e018184615a12565b9250508080612e0f90615da7565b915050612d28565b50919050565b60d25460009061271090612e349060ff1685615c51565b612e3e9190615a8e565b90506000612e4c8285615a12565b90506000612e58612d22565b60d0546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018890529192508716906323b872dd90606401602060405180830381600087803b158015612eae57600080fd5b505af1158015612ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ee6919061551c565b50856001600160a01b03166323b872dd33612f096039546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101869052606401602060405180830381600087803b158015612f5857600080fd5b505af1158015612f6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f90919061551c565b5060ef5460d054600091612fb59189916001600160a01b03908116918a9116896139ef565b905060005b60e3548110156130205760ef54600082815260e560209081526040808320546001600160a01b0390811680855260e890935292205461300d93929092169168056bc75e2d6310000090611d719087615c51565b508061301881615da7565b915050612fba565b5060008060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561307257600080fd5b505afa158015613086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130aa9190615641565b111561315357828260d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561310057600080fd5b505afa158015613114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131389190615641565b6131429190615c51565b61314c9190615a8e565b905061317f565b600061315d611fde565b9050662386f26fc100006131718285615c51565b61317b9190615a8e565b9150505b60d0546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156131cb57600080fd5b505af11580156131df573d6000803e3d6000fd5b5050604080518a815260208101859052428183015290516001600160a01b038c1693503392507f4fee1c514ee0e252e3a0babfa8b5030fb89be7ea2b38df9a7fbbf788e54f3d919181900360600190a35050505050505050565b60ef546000906001600160a01b038481169116141561331957600061325c612d22565b9050600060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156132ae57600080fd5b505afa1580156132c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132e69190615641565b90506000811561330c57826132fb8884615c51565b6133059190615a8e565b905061330f565b50855b9250610c6a915050565b60ef546000906133359085906001600160a01b03168786610c9e565b90506000613341612d22565b9050600060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561339357600080fd5b505afa1580156133a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133cb9190615641565b9050600081156133f157826133e08584615c51565b6133ea9190615a8e565b905061341d565b60006133fb611fde565b9050662386f26fc1000061340f8287615c51565b6134199190615a8e565b9150505b9350610c6a92505050565b613430613e1f565b6001600160a01b0381166134565760405162461bcd60e51b815260040161154b906158cf565b606b80546001600160a01b0319166001600160a01b0392909216919091179055565b60ec54604051630b4c774160e11b81526001600160a01b0386811660048301528581166024830152610bb860448301526000928392911690631698ee829060640160206040518083038186803b1580156134d157600080fd5b505afa1580156134e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613509919061510c565b905060006135178285614085565b509050613526818689896142db565b979650505050505050565b60ef546000906001600160a01b038481169116141561361b576000613554612d22565b9050600060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156135a657600080fd5b505afa1580156135ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135de9190615641565b9050600081156135f357826132fb8884615c51565b60006135fd611fde565b9050662386f26fc10000613611828a615c51565b610c5e9190615a8e565b60ef546000906133359085906001600160a01b03168786610df2565b61363f613e1f565b82828260005b83518110156138a85783818151811061366057613660615e24565b602002602001015160e4600083815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060e660008684815181106136b6576136b6615e24565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508281815181106136f4576136f4615e24565b602002602001015160e9600086848151811061371257613712615e24565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555081818151811061375057613750615e24565b602002602001015160ea600086848151811061376e5761376e615e24565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555060e35460001415613896578381815181106137b7576137b7615e24565b602002602001015160e5600083815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082818151811061380857613808615e24565b602002602001015160e8600086848151811061382657613826615e24565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508060e7600086848151811061386957613869615e24565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055505b806138a081615da7565b915050613645565b50825160e25560e3546138bb57825160e3555b50504260e15550505050565b6001600160a01b0381166138ed5760405162461bcd60e51b815260040161154b906158cf565b606b546001600160a01b038281169116146139655760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b606482015260840161154b565b6001600160a01b03811633146139e35760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e6572000000000000606482015260840161154b565b6139ec81613f29565b50565b6000806139fe87878786610c9e565b905060008115613aa85760d0546040516305f370ed60e41b81526001600160a01b038a8116600483015289811660248301526044820189905287811660648301526084820187905290911690635f370ed09060a401602060405180830381600087803b158015613a6d57600080fd5b505af1158015613a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aa59190615641565b90505b8360031415613aba579150613abe9050565b5090505b95945050505050565b60008160031415613c6c5760eb5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529087169063095ea7b390604401602060405180830381600087803b158015613b2057600080fd5b505af1158015613b34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b58919061551c565b5060408051610100810182526001600160a01b03888116825287811660208301908152610bb883850190815287831660608501908152426080860190815260a086018b8152600060c0880181815260e0890182815260eb549a5163414bf38960e01b81528a518a166004820152975189166024890152955162ffffff166044880152935187166064870152915160848601525160a4850152905160c48401529051831660e483015292939091169063414bf3899061010401602060405180830381600087803b158015613c2a57600080fd5b505af1158015613c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c629190615641565b9250613abe915050565b6040805160028082526060820183526000926020830190803683370190505090508681600081518110613ca157613ca1615e24565b60200260200101906001600160a01b031690816001600160a01b0316815250508581600181518110613cd557613cd5615e24565b6001600160a01b03928316602091820292909201015260ed5460405163095ea7b360e01b81529082166004820152602481018790529088169063095ea7b390604401602060405180830381600087803b158015613d3157600080fd5b505af1158015613d45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d69919061551c565b5060ed54604051635c11d79560e01b81526001600160a01b0390911690635c11d79590613da390889060009086908a904290600401615983565b600060405180830381600087803b158015613dbd57600080fd5b505af1158015613dd1573d6000803e3d6000fd5b505050506000915050613abe565b60008260ff168260ff161115613e1557613df98383615cff565b613e0490600a615af1565b613e0e9085615b9d565b9050610c6a565b613df98284615cff565b6039546001600160a01b031633146121135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161154b565b613e816143e5565b609e805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600654610100900460ff16613ef25760405162461bcd60e51b815260040161154b9061591f565b61211361442e565b600654610100900460ff16613f215760405162461bcd60e51b815260040161154b9061591f565b61211361445e565b603980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b613f83614ec2565b613f8b614ec2565b613abe81868686614491565b6080830151613fa690836144ce565b6080830151612d1d90826144ce565b600454600090613fc6816001615a12565b600455835160408086015160808701515191516000936320214ca360e11b93613ffe9386938493923092918a9160019160240161579f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905061403e868386846144e5565b9695505050505050565b614050614652565b609e805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613eae3390565b60008063ffffffff83166140c05760405162461bcd60e51b8152602060048201526002602482015261042560f41b604482015260640161154b565b60408051600280825260608201835260009260208301908036833701905050905083816000815181106140f5576140f5615e24565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061412457614124615e24565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd846040518263ffffffff1660e01b815260040161416d919061582e565b60006040518083038186803b15801561418557600080fd5b505afa158015614199573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526141c191908101906153b4565b915091506000826000815181106141da576141da615e24565b6020026020010151836001815181106141f5576141f5615e24565b60200260200101516142079190615c70565b905060008260008151811061421e5761421e615e24565b60200260200101518360018151811061423957614239615e24565b602002602001015161424b9190615cc0565b905061425d63ffffffff891683615a2a565b965060008260060b128015614283575061427d63ffffffff891683615dc2565b60060b15155b15614296578661429281615d4e565b9750505b60006142af6001600160a01b0363ffffffff8b16615c22565b90506142cc640100000000600160c01b03602084901b1682615a68565b96505050505050509250929050565b6000806142e786614698565b90506001600160801b036001600160a01b0382161161436d5760006143156001600160a01b03831680615c51565b9050836001600160a01b0316856001600160a01b03161061434d57614348600160c01b876001600160801b0316836149b8565b614365565b61436581876001600160801b0316600160c01b6149b8565b9250506143dc565b600061438c6001600160a01b03831680680100000000000000006149b8565b9050836001600160a01b0316856001600160a01b0316106143c4576143bf600160801b876001600160801b0316836149b8565b613526565b61352681876001600160801b0316600160801b6149b8565b50949350505050565b609e5460ff166121135760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161154b565b600654610100900460ff166144555760405162461bcd60e51b815260040161154b9061591f565b61211333613f29565b600654610100900460ff166144855760405162461bcd60e51b815260040161154b9061591f565b609e805460ff19169055565b614499614ec2565b6144a98560800151610100614a6b565b50509183526001600160a01b031660208301526001600160e01b031916604082015290565b6144db8260038351614ad0565b612d1d8282614bdd565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f1901815282825280516020918201206000818152600590925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a2600254604051630200057560e51b81526001600160a01b0390911690634000aea0906145a890889087908790600401615807565b602060405180830381600087803b1580156145c257600080fd5b505af11580156145d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145fa919061551c565b610dea5760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b606482015260840161154b565b609e5460ff16156121135760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161154b565b60008060008360020b126146af578260020b6146b7565b8260020b6000035b9050620d89e88111156146dd576040516315e4079d60e11b815260040160405180910390fd5b6000600182166146f157600160801b614703565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615614737576ffff97272373d413259a46990580e213a0260801c5b6004821615614756576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615614775576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615614794576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156147b3576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156147d2576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156147f1576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615614811576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615614831576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615614851576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615614871576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615614891576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156148b1576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156148d1576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156148f1576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615614912576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615614932576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615614951576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561496e576b048a170391f7dc42444e8fa20260801c5b60008460020b131561498f57806000198161498b5761498b615e0e565b0490505b6401000000008106156149a35760016149a6565b60005b60ff16602082901c0192505050919050565b6000808060001985870985870292508281108382030391505080600014156149f257600084116149e757600080fd5b508290049050610c6a565b8084116149fe57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b604080518082019091526060815260006020820152614a8b602083615de4565b15614ab357614a9b602083615de4565b614aa6906020615ce8565b614ab09083615a12565b91505b506020828101829052604080518085526000815290920101905290565b6017816001600160401b031611614afa57614af48360e0600585901b168317614c04565b50505050565b60ff816001600160401b031611614b3657614b20836018611fe0600586901b1617614c04565b50614af4836001600160401b0383166001614c29565b61ffff816001600160401b031611614b7357614b5d836019611fe0600586901b1617614c04565b50614af4836001600160401b0383166002614c29565b63ffffffff816001600160401b031611614bb257614b9c83601a611fe0600586901b1617614c04565b50614af4836001600160401b0383166004614c29565b614bc783601b611fe0600586901b1617614c04565b50614af4836001600160401b0383166008614c29565b604080518082019091526060815260006020820152610c6a83846000015151848551614c4f565b604080518082019091526060815260006020820152610c6a8384600001515184614d39565b604080518082019091526060815260006020820152610dea848560000151518585614d95565b6040805180820190915260608152600060208201528251821115614c7257600080fd5b6020850151614c818386615a12565b1115614cb457614cb485614ca487602001518786614c9f9190615a12565b614e16565b614caf906002615c51565b614e27565b600080865180518760208301019350808887011115614cd35787860182525b505050602084015b60208410614d135780518252614cf2602083615a12565b9150614cff602082615a12565b9050614d0c602085615ce8565b9350614cdb565b51815160001960208690036101000a019081169019919091161790525083949350505050565b60408051808201909152606081526000602082015283602001518310614d6e57614d6e8485602001516002614caf9190615c51565b835180516020858301018481535080851415614d8b576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151614db98584615a12565b1115614dcd57614dcd85614ca48685615a12565b60006001614ddd84610100615ae5565b614de79190615ce8565b9050855183868201018583198251161781525080518487011115614e0b5783860181525b509495945050505050565b600081831115612e17575081610c98565b8151614e338383614a6b565b50614af48382614bdd565b828054614e4a90615d72565b90600052602060002090601f016020900481019282614e6c5760008555614eb2565b82601f10614e8557805160ff1916838001178555614eb2565b82800160010185558215614eb2579182015b82811115614eb2578251825591602001919060010190614e97565b50614ebe929150614efd565b5090565b6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b5b80821115614ebe5760008155600101614efe565b8035614f1d81615e50565b919050565b600082601f830112614f3357600080fd5b81356020614f48614f43836159ef565b6159bf565b80838252828201915082860187848660051b8901011115614f6857600080fd5b60005b85811015614f90578135614f7e81615e50565b84529284019290840190600101614f6b565b5090979650505050505050565b600082601f830112614fae57600080fd5b81516020614fbe614f43836159ef565b80838252828201915082860187848660051b8901011115614fde57600080fd5b60005b85811015614f90578151614ff481615e50565b84529284019290840190600101614fe1565b600082601f83011261501757600080fd5b81356020615027614f43836159ef565b80838252828201915082860187848660051b890101111561504757600080fd5b60005b85811015614f905781358452928401929084019060010161504a565b600082601f83011261507757600080fd5b81356001600160401b0381111561509057615090615e3a565b6150a3601f8201601f19166020016159bf565b8181528460208386010111156150b857600080fd5b816020850160208301376000918101602001919091529392505050565b805169ffffffffffffffffffff81168114614f1d57600080fd5b60006020828403121561510157600080fd5b8135610c6a81615e50565b60006020828403121561511e57600080fd5b8151610c6a81615e50565b60008060008060008060008060008060006101608c8e03121561514b57600080fd5b8b3561515681615e50565b9a5060208c013561516681615e50565b995060408c013561517681615e50565b985060608c0135975060808c013561518d81615e50565b965060a08c013561519d81615e50565b955060c08c01356151ad81615e50565b945060e08c01356151bd81615e50565b93506101008c01356151ce81615e50565b92506101208c01356151df81615e50565b91506151ee6101408d01614f12565b90509295989b509295989b9093969950565b6000806000806080858703121561521657600080fd5b843561522181615e50565b9350602085013561523181615e50565b925060408501356001600160801b038116811461524d57600080fd5b9150606085013563ffffffff8116811461526657600080fd5b939692955090935050565b60008060006060848603121561528657600080fd5b833561529181615e50565b925060208401356152a181615e50565b929592945050506040919091013590565b600080600080608085870312156152c857600080fd5b84356152d381615e50565b935060208501356152e381615e50565b93969395505050506040820135916060013590565b60008060006060848603121561530d57600080fd5b833561531881615e50565b95602085013595506040909401359392505050565b60008060006060848603121561534257600080fd5b83356001600160401b038082111561535957600080fd5b61536587838801614f22565b9450602086013591508082111561537b57600080fd5b61538787838801615006565b9350604086013591508082111561539d57600080fd5b506153aa86828701615006565b9150509250925092565b600080604083850312156153c757600080fd5b82516001600160401b03808211156153de57600080fd5b818501915085601f8301126153f257600080fd5b81516020615402614f43836159ef565b8083825282820191508286018a848660051b890101111561542257600080fd5b600096505b848710156154545780518060060b811461544057600080fd5b835260019690960195918301918301615427565b509188015191965090935050508082111561546e57600080fd5b5061547b85828601614f9d565b9150509250929050565b6000602080838503121561549857600080fd5b82516001600160401b038111156154ae57600080fd5b8301601f810185136154bf57600080fd5b80516154cd614f43826159ef565b80828252848201915084840188868560051b87010111156154ed57600080fd5b600094505b838510156155105780518352600194909401939185019185016154f2565b50979650505050505050565b60006020828403121561552e57600080fd5b81518015158114610c6a57600080fd5b6000806000806080858703121561555457600080fd5b8435935060208501356001600160401b038082111561557257600080fd5b61557e88838901614f22565b9450604087013591508082111561559457600080fd5b6155a088838901615006565b935060608701359150808211156155b657600080fd5b506155c387828801615006565b91505092959194509250565b600080604083850312156155e257600080fd5b82356001600160401b03808211156155f957600080fd5b61560586838701615066565b9350602085013591508082111561561b57600080fd5b5061547b85828601615066565b60006020828403121561563a57600080fd5b5035919050565b60006020828403121561565357600080fd5b5051919050565b60008060006060848603121561566f57600080fd5b8335925060208401356152a181615e50565b60006020828403121561569357600080fd5b8135610c6a81615e65565b600080600080600060a086880312156156b657600080fd5b6156bf866150d5565b94506020860151935060408601519250606086015191506156e2608087016150d5565b90509295509295909350565b60006020828403121561570057600080fd5b8151610c6a81615e65565b600081518084526020808501945080840160005b83811015614e0b5781516001600160a01b03168752958201959082019060010161571f565b6000815180845261575c816020860160208601615d22565b601f01601f19169290920160200192915050565b60008351615782818460208801615d22565b835190830190615796818360208801615d22565b01949350505050565b6001600160a01b0389811682526020820189905260408201889052861660608201526001600160e01b03198516608082015260a0810184905260c0810183905261010060e082018190526000906157f883820185615744565b9b9a5050505050505050505050565b60018060a01b0384168152826020820152606060408201526000613abe6060830184615744565b6020808252825182820181905260009190848201906040850190845b8181101561586c57835163ffffffff168352928401929184019160010161584a565b50909695505050505050565b602081526000610c6a6020830184615744565b60208082526024908201527f7472616e73666572206574682066656520746f20746865206f776e65722066616040820152631a5b195960e21b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b828152604060208201526000610dea604083018461570b565b85815284602082015260a0604082015260006159a260a083018661570b565b6001600160a01b0394909416606083015250608001529392505050565b604051601f8201601f191681016001600160401b03811182821017156159e7576159e7615e3a565b604052919050565b60006001600160401b03821115615a0857615a08615e3a565b5060051b60200190565b60008219821115615a2557615a25615df8565b500190565b60008160060b8360060b80615a4157615a41615e0e565b667fffffffffffff19821460001982141615615a5f57615a5f615df8565b90059392505050565b60006001600160c01b0383811680615a8257615a82615e0e565b92169190910492915050565b600082615a9d57615a9d615e0e565b500490565b600181815b80851115615add578160001904821115615ac357615ac3615df8565b80851615615ad057918102915b93841c9390800290615aa7565b509250929050565b6000610c6a8383615afc565b6000610c6a60ff8416835b600082615b0b57506001610c98565b81615b1857506000610c98565b8160018114615b2e5760028114615b3857615b54565b6001915050610c98565b60ff841115615b4957615b49615df8565b50506001821b610c98565b5060208310610133831016604e8410600b8410161715615b77575081810a610c98565b615b818383615aa2565b8060001904821115615b9557615b95615df8565b029392505050565b60006001600160ff1b0381841382841380821686840486111615615bc357615bc3615df8565b600160ff1b6000871282811687830589121615615be257615be2615df8565b60008712925087820587128484161615615bfe57615bfe615df8565b87850587128184161615615c1457615c14615df8565b505050929093029392505050565b60006001600160c01b0382811684821681151582840482111615615c4857615c48615df8565b02949350505050565b6000816000190483118215151615615c6b57615c6b615df8565b500290565b60008160060b8360060b6000811281667fffffffffffff1901831281151615615c9b57615c9b615df8565b81667fffffffffffff018313811615615cb657615cb6615df8565b5090039392505050565b60006001600160a01b0383811690831681811015615ce057615ce0615df8565b039392505050565b600082821015615cfa57615cfa615df8565b500390565b600060ff821660ff841680821015615d1957615d19615df8565b90039392505050565b60005b83811015615d3d578181015183820152602001615d25565b83811115614af45750506000910152565b60008160020b627fffff19811415615d6857615d68615df8565b6000190192915050565b600181811c90821680615d8657607f821691505b60208210811415612e1757634e487b7160e01b600052602260045260246000fd5b6000600019821415615dbb57615dbb615df8565b5060010190565b60008260060b80615dd557615dd5615e0e565b808360060b0791505092915050565b600082615df357615df3615e0e565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146139ec57600080fd5b60ff811681146139ec57600080fdfe68747470733a2f2f6170702e6e65786c6162732e696f2f6170692f616c6c46756e64696e6752617465733f6d756c7469706c7946756e633d31382674696d65734e656746756e643d74727565266172726179733d74727565a264697066735822122060f22fb39184b6b253ea872452f7d5085a4c992f62247f1962fcaecb3d6f415a64736f6c634300080700336080604052600080546001600160a01b0319908116736b175474e89094c44da98b954eedeac495271d0f179091556001805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217905534801561005857600080fd5b50610491806100686000396000f3fe6080604052600436106100745760003560e01c8063b6b55f251161004e578063b6b55f251461010c578063c31c9c071461012e578063e0bab4c414610156578063f4b9fa751461017e57600080fd5b80633fc8cef3146100805780634aa4a4fc146100bc57806389a30271146100e457600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100a073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b3480156100f057600080fd5b506100a073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b34801561011857600080fd5b5061012c610127366004610429565b61019e565b005b34801561013a57600080fd5b506100a073e592427a0aece92de3edee1f18e0157c0586156481565b34801561016257600080fd5b506100a0736b175474e89094c44da98b954eedeac495271d0f81565b34801561018a57600080fd5b506000546100a0906001600160a01b031681565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156101f057600080fd5b505af1158015610204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102289190610400565b5060005460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018390526001600160a01b039091169063095ea7b390604401602060405180830381600087803b15801561028957600080fd5b505af115801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c19190610400565b506040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260208201908152610bb88284019081523060608401908152426080850190815260a08501878152600060c0870181815260e08801918252975163414bf38960e01b815287516001600160a01b039081166004830152965187166024820152945162ffffff166044860152925185166064850152905160848401525160a4830152935160c482015292511660e48301529073e592427a0aece92de3edee1f18e0157c058615649063414bf3899061010401602060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610442565b505050565b60006020828403121561041257600080fd5b8151801515811461042257600080fd5b9392505050565b60006020828403121561043b57600080fd5b5035919050565b60006020828403121561045457600080fd5b505191905056fea2646970667358221220cdfdbb85b0b5b2f99d71752f093bf76aa8fb6f8adfd64ed51dc864dcdd3e26a664736f6c634300080700330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000006b175474e89094c44da98b954eedeac495271d0f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220722af80af1c83c35f67f60c185a82ae4399fd8f50fc2525ed5796bec4f2fe21564736f6c63430008070033",
    "sourceMap": "825:17816:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12596:2192;;;:::i;:::-;;5288:1469;;;:::i;6765:475::-;;;:::i;2241:95::-;;2294:42;2241:95;;;;;-1:-1:-1;;;;;7858:32:80;;;7840:51;;7828:2;7813:18;2241:95:78;;;;;;;;2905:73;;2936:42;2905:73;;1636:116;;1709:42;1636:116;;2531:136:33;;;:::i;:::-;;;;;;;:::i;16044:1384:78:-;;;:::i;3463:153:33:-;;;:::i;:::-;;;;;;;:::i;1997:73:78:-;;2028:42;1997:73;;1916:74;;1948:42;1916:74;;2343:73;;2374:42;2343:73;;14802:1234;;;:::i;7736:2288::-;;;:::i;2824:74::-;;2856:42;2824:74;;3387:209;;;;;;:::i;:::-;;:::i;:::-;;;20693:25:80;;;20681:2;20666:18;3387:209:78;20539:185:80;3320:135:33;;;:::i;3013:143::-;;;:::i;4521:17:78:-;;;;;-1:-1:-1;;;;;4521:17:78;;;3975:74;;-1:-1:-1;;;;;;;;;;;3975:74:78;;2585:73;;2616:42;2585:73;;2985:72;;3015:42;2985:72;;2423;;2453:42;2423:72;;2665;;2695:42;2665:72;;3605:243;;;;;;:::i;:::-;;:::i;10845:1741::-;;;:::i;2825:180:33:-;;;:::i;:::-;;;;;;;:::i;1020:24:78:-;;;;;-1:-1:-1;;;;;1020:24:78;;;4725:27;;;;;-1:-1:-1;;;;;4725:27:78;;;2675:142:33;;;:::i;:::-;;;;;;;:::i;10038:797:78:-;;;:::i;4056:75::-;;4089:42;4056:75;;3164:148:33;;;:::i;7320:410:78:-;;;:::i;3066:312::-;;;;;;:::i;:::-;;:::i;1051:38::-;;;;;-1:-1:-1;;;;;1051:38:78;;;2502:74;;2534:42;2502:74;;2228:143:33;;;:::i;1865:600:27:-;;;:::i;:::-;;;17060:14:80;;17053:22;17035:41;;17023:2;17008:18;1865:600:27;16895:187:80;3857:105:78;;3919:42;3857:105;;2161:73;;2192:42;2161:73;;986:27;;;;;-1:-1:-1;;;;;986:27:78;;;4573:21;;;;;-1:-1:-1;;;;;4573:21:78;;;4311:81;;4350:42;4311:81;;2077:77;;2112:42;2077:77;;4399:78;;4435:42;4399:78;;2744:73;;2775:42;2744:73;;1386:72;;-1:-1:-1;;;;;;;;;;;1386:72:78;;17438:1184;;;:::i;2379:144:33:-;;;:::i;1765:64:78:-;;;;;-1:-1:-1;;;;;1765:64:78;;;1836:73;;1867:42;1836:73;;951:28;;;;;-1:-1:-1;;;;;951:28:78;;;4498:16;;;;;-1:-1:-1;;;;;4498:16:78;;;1609:26:27;;;;;;;;;12596:2192:78;12698:4;;:27;;;-1:-1:-1;;;12698:27:78;;;;12673:4;;-1:-1:-1;;;;;12698:4:78;;:12;;12717:5;;12698:27;;;;;12654:16;;12698:27;;;;;;;;12717:5;12698:4;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12736:49:78;;-1:-1:-1;;;12736:49:78;;-1:-1:-1;;;;;;;;;;;4007:42:78;-1:-1:-1;12736:21:78;;-1:-1:-1;12736:49:78;;-1:-1:-1;3919:42:78;;12779:5;;12736:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12808:7:78;;:47;;-1:-1:-1;;;12808:47:78;;-1:-1:-1;;;;;;;;;;;12808:47:78;;;9252:34:80;-1:-1:-1;;;;;;;;;;;9302:18:80;;;9295:43;12846:5:78;9354:18:80;;;9347:34;12853:1:78;9397:18:80;;;9390:34;12796:60:78;;-1:-1:-1;;;;;12808:7:78;;:25;;9186:19:80;;12808:47:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12796:11;:60::i;:::-;12918:545;;;;;;;;-1:-1:-1;;;;;;;;;;;12918:545:78;;-1:-1:-1;;;;;;;;;;;12918:545:78;;;;13070:4;12918:545;;;;13108:4;12918:545;;;;13138:15;12918:545;;;;13178:5;12918:545;;;;12867:48;12918:545;;;;;;;;;;;;13496:35;;-1:-1:-1;;;13496:35:78;;12918:545;;12867:48;3919:42;;13496:27;;:35;;12918:545;;13496:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13542:65;;;;;;;;;;;-1:-1:-1;;;13542:65:78;;;;13570:36;;-1:-1:-1;;;13570:36:78;;13600:4;13570:36;;;7840:51:80;13474:57:78;;-1:-1:-1;13542:65:78;;-1:-1:-1;;;;;;;;;;;1416:42:78;13570:21;;7813:18:80;;13570:36:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13542:11;:65::i;:::-;13618:18;:16;:18::i;:::-;13657:7;;13678:5;;13657:27;;-1:-1:-1;;;13657:27:78;;-1:-1:-1;;;;;13678:5:78;;;13657:27;;;7840:51:80;13657:7:78;;;:20;;7813:18:80;;13657:27:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13709:5:78;;13695:20;;-1:-1:-1;;;13695:20:78;;-1:-1:-1;;;;;13709:5:78;;;13695:20;;;7840:51:80;-1:-1:-1;;;;;;;;;;;13695:13:78;-1:-1:-1;13695:13:78;;-1:-1:-1;7813:18:80;;13695:20:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13726:7:78;;13752:5;;13726:32;;-1:-1:-1;;;13726:32:78;;-1:-1:-1;;;;;13752:5:78;;;13726:32;;;7840:51:80;13726:7:78;;;-1:-1:-1;13726:25:78;;-1:-1:-1;7813:18:80;;13726:32:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;317:37:28;;-1:-1:-1;;;;;13769:12:78;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13858:4:78;;13837:35;;-1:-1:-1;;;13837:35:78;;-1:-1:-1;;;;;;;;;;;1416:42:78;-1:-1:-1;13837:20:78;;-1:-1:-1;13837:35:78;;-1:-1:-1;;;;;13858:4:78;;13864:7;;13837:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13897:4:78;;13883:19;;-1:-1:-1;;;13883:19:78;;-1:-1:-1;;;;;13897:4:78;;;13883:19;;;7840:51:80;-1:-1:-1;;;;;;;;;;;13883:13:78;;;7813:18:80;;13883:19:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13913:63:78;;;;;;;;;;;-1:-1:-1;;;13913:63:78;;;;13966:7;;13934:41;;-1:-1:-1;;;13934:41:78;;-1:-1:-1;;;;;13966:7:78;;;13934:41;;;7840:51:80;13913:63:78;;-1:-1:-1;13913:63:78;-1:-1:-1;1948:42:78;;13934:23;;7813:18:80;;13934:41:78;7694:203:80;13913:63:78;14025:7;;13997:46;;-1:-1:-1;;;13997:46:78;;-1:-1:-1;;;;;;;;;;;1416:42:78;13997:19;;:46;;-1:-1:-1;;;;;14025:7:78;;14035;;13997:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14054:85:78;;;;;;;;;;;-1:-1:-1;;;14054:85:78;;;;14092:7;;:46;;-1:-1:-1;;;14092:46:78;;14054:85;;-1:-1:-1;;;;;14092:7:78;;:29;;:46;;14122:7;;-1:-1:-1;;;;;;;;;;;1416:42:78;14136:1;;14092:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14054:85;14150:7;;:53;;-1:-1:-1;;;14150:53:78;;-1:-1:-1;;;;;14150:7:78;;;;:27;;:53;;-1:-1:-1;;;;;;;;;;;1416:42:78;14192:7;;14201:1;;14150:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14214:71:78;;;;;;;;;;;-1:-1:-1;;;14214:71:78;;;;14249:10;;14278:4;;14249:35;;-1:-1:-1;;;14249:35:78;;-1:-1:-1;;;;;14278:4:78;;;14249:35;;;7840:51:80;14214:71:78;;-1:-1:-1;14214:71:78;;-1:-1:-1;14249:10:78;;;;;:20;;7813:18:80;;14249:35:78;7694:203:80;14214:71:78;14296:61;;;;;;;;;;;-1:-1:-1;;;14296:61:78;;;;;;;;14327:7;;:29;;-1:-1:-1;;;14327:29:78;;;;14296:61;;-1:-1:-1;;;;;14327:7:78;;;;:27;;:29;;;;;;;;;;;:7;:29;;;;;;;;;;14296:61;14368:117;;;;;;;;;;;;;;;;14408:7;;14440:10;;14469:4;;14440:35;;-1:-1:-1;;;14440:35:78;;-1:-1:-1;;;;;14469:4:78;;;14440:35;;;7840:51:80;14368:117:78;;14408:7;;;;:31;;14440:10;;:20;;7813:18:80;;14440:35:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;14482:1:78;14408:76;;;;;;;;;;;;;;;;;:::i;14368:117::-;14496:65;;;;;;;;;;;-1:-1:-1;;;14496:65:78;;;;14555:4;;14533:27;;-1:-1:-1;;;14533:27:78;;-1:-1:-1;;;;;14555:4:78;;;14533:27;;;7840:51:80;14496:65:78;;-1:-1:-1;;;;;;;;;;;1416:42:78;14533:21;;7813:18:80;;14533:27:78;7694:203:80;14496:65:78;14588:7;;14607:10;;14636:4;;14607:35;;-1:-1:-1;;;14607:35:78;;-1:-1:-1;;;;;14636:4:78;;;14607:35;;;7840:51:80;14572:13:78;;14588:7;;;:18;;14607:10;;:20;;7813:18:80;;14607:35:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;14658:1:78;14588:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14572:88;;14671:33;;;;;;;;;;;;;;-1:-1:-1;;;14671:33:78;;;14695:8;14671:11;:33::i;:::-;14715:65;;;;;;;;;;;-1:-1:-1;;;14715:65:78;;;;14774:4;;14752:27;;-1:-1:-1;;;14752:27:78;;-1:-1:-1;;;;;14774:4:78;;;14752:27;;;7840:51:80;14715:65:78;;-1:-1:-1;;;;;;;;;;;1416:42:78;14752:21;;7813:18:80;;14752:27:78;7694:203:80;14715:65:78;12643:2145;;;;12596:2192::o;5288:1469::-;5337:30;;-1:-1:-1;;;5337:30:78;;-1:-1:-1;;;;;;;;;;;5337:13:78;;;:30;;5351:15;;5337:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5323:11;:44;;;5380:26;;-1:-1:-1;;;5380:26:78;;;;;20693:25:80;;;;-1:-1:-1;;;;;;;;;;;5380:13:78;;;20666:18:80;;5380:26:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5505:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5498:4:78;:22;;-1:-1:-1;;;;;;5498:22:78;-1:-1:-1;;;;;5498:22:78;;;;;;;;;5540:32;;;;;:::i;:::-;-1:-1:-1;;;;;7858:32:80;;;7840:51;;7828:2;7813:18;5540:32:78;;;;;;;;;;;;;;;;;;;;;;;5531:6;;:41;;;;;-1:-1:-1;;;;;5531:41:78;;;;;-1:-1:-1;;;;;5531:41:78;;;;;;5637:2;5665:7;5602:98;;;;;:::i;:::-;21563:4:80;21551:17;;;21533:36;;21600:2;21585:18;;21578:34;21521:2;21506:18;5602:98:78;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5585:14:78;:115;;-1:-1:-1;;;;;;5585:115:78;-1:-1:-1;;;;;5585:115:78;;;;;;;;;;5728:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5715:10:78;:29;;-1:-1:-1;;;;;;5715:29:78;-1:-1:-1;;;;;5715:29:78;;;;;;;;;5862:11;;5755:327;;-1:-1:-1;;;5755:327:78;;5715:29;;5755:21;;:327;;5843:4;;5862:11;;5888:10;;-1:-1:-1;;;;;;;;;;;4007:42:78;4089;;4177;;4262;;4350;;4435;;5755:327;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6105:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6095:7:78;:28;;-1:-1:-1;;;;;;6095:28:78;-1:-1:-1;;;;;6095:28:78;;;;;;;;;6183:10;;6246:4;;6274:6;;6296:5;;6324:14;;6134:389;;-1:-1:-1;;;6134:389:78;;6183:10;;;6134:389;;;8384:34:80;6246:4:78;;;8434:18:80;;;8427:43;6274:6:78;;;8486:18:80;;;8479:43;8538:18;;;8531:34;6324:14:78;;;8581:19:80;;;8574:44;-1:-1:-1;;;;;;;;;;;8634:19:80;;;8627:44;4089:42:78;8687:19:80;;;8680:44;4177:42:78;8740:19:80;;;8733:44;4262:42:78;8793:19:80;;;8786:44;4350:42:78;8846:19:80;;;8839:44;4435:42:78;8899:19:80;;;8892:45;6095:28:78;6134:18;;8318:19:80;;6134:389:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6536:10:78;;6565:7;;6536:38;;-1:-1:-1;;;6536:38:78;;-1:-1:-1;;;;;6565:7:78;;;6536:38;;;7840:51:80;6536:10:78;;;-1:-1:-1;6536:20:78;;-1:-1:-1;7813:18:80;;6536:38:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6618:3:78;:16;;-1:-1:-1;;;;;;6618:16:78;;;-1:-1:-1;;;;;;;;;;;6618:16:78;;;;6645:4;:19;;;;-1:-1:-1;;;;;;;;;;;6645:19:78;;;6675:6;:24;;;;;4089:42;6675:24;;;-1:-1:-1;;6723:14:78;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6712:8:78;:25;;-1:-1:-1;;;;;;6712:25:78;-1:-1:-1;;;;;6712:25:78;;;;;;;;;;5288:1469::o;6765:475::-;6852:10;;:18;;;-1:-1:-1;;;6852:18:78;;;;6843:43;;-1:-1:-1;;;;;6852:10:78;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6880:4;6843:8;:43::i;:::-;6906:10;;:32;;;-1:-1:-1;;;6906:32:78;;;;6897:48;;-1:-1:-1;;;;;6906:10:78;;:30;;:32;;;;;;;;;;;;;;:10;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6940:4;6897:8;:48::i;:::-;6965:10;;:25;;;-1:-1:-1;;;6965:25:78;;;;6956:52;;-1:-1:-1;;;;;6965:10:78;;:23;;:25;;;;;;;;;;;;;;:10;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6992:15;6956:8;:52::i;:::-;7028:10;;:24;;;-1:-1:-1;;;7028:24:78;;;;7019:47;;-1:-1:-1;;;;;7028:10:78;;:22;;:24;;;;;;;;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7054:11;;-1:-1:-1;;;;;7054:11:78;7019:8;:47::i;:::-;7086:10;;:24;;;-1:-1:-1;;;7086:24:78;;;;7077:38;;-1:-1:-1;;;;;7086:10:78;;:22;;:24;;;;;:10;;:24;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7086:24:78;;;;;;;;;;;;:::i;:::-;7077:38;;;;;;;;;;;;:8;:38::i;:::-;7135:10;;:26;;;-1:-1:-1;;;7135:26:78;;;;7126:48;;-1:-1:-1;;;;;7135:10:78;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7163:10;7126:8;:48::i;:::-;7194:10;;:19;;;-1:-1:-1;;;7194:19:78;;;;7185:47;;-1:-1:-1;;;;;7194:10:78;;:17;;:19;;;;;;;;;;;;;;:10;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7223:7;;-1:-1:-1;;;;;7223:7:78;7185:8;:47::i;:::-;6765:475::o;2531:136:33:-;2578:33;2643:16;2624:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2624:35:33;;;;;;;;;;;;;;;;;;;;;;;2531:136;:::o;16044:1384:78:-;16101:86;;-1:-1:-1;;;16101:86:78;;-1:-1:-1;;;;;;;;;;;16101:86:78;;;10171:34:80;2616:42:78;10221:18:80;;;10214:43;16172:4:78;10273:18:80;;;10266:49;16086:12:78;;1709:42;;16101:17;;10106:18:80;;16101:86:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16086:101;;16212:20;16247:10;16272:23;16310:29;16354:33;16402:17;16434:13;16476:4;-1:-1:-1;;;;;16461:26:78;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16197:292;;;;;;;;;;;;;;16500:25;16512:12;-1:-1:-1;;;;;16500:25:78;:11;:25::i;:::-;16548:7;;:42;;-1:-1:-1;;;16548:42:78;;-1:-1:-1;;;;;;;;;;;16548:42:78;;;9252:34:80;2616:42:78;9302:18:80;;;9295:43;16582:4:78;9354:18:80;;;9347:34;16588:1:78;9397:18:80;;;9390:34;16536:55:78;;-1:-1:-1;;;;;16548:7:78;;:20;;9186:19:80;;16548:42:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16536:55;16620:4;;;;;;;;;-1:-1:-1;;;;;16620:4:78;-1:-1:-1;;;;;16620:12:78;;16639:4;16620:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16657:48:78;;-1:-1:-1;;;16657:48:78;;-1:-1:-1;;;;;;;;;;;4007:42:78;-1:-1:-1;16657:21:78;;-1:-1:-1;16657:48:78;;-1:-1:-1;3919:42:78;;16700:4;;16657:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16767:545:78;;;;;;;;-1:-1:-1;;;;;;;;;;;16767:545:78;;2616:42;16767:545;;;;16920:4;16767:545;;;;16958:4;16767:545;;;;16988:15;16767:545;;;;17028:4;16767:545;;;;16716:48;16767:545;;;;;;;;;;;;17345:35;;-1:-1:-1;;;17345:35:78;;16767:545;;16716:48;3919:42;;17345:27;;:35;;16767:545;;17345:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17323:57;;17391:27;17403:14;17391:11;:27::i;:::-;16075:1353;;;;;;;;;;16044:1384::o;3463:153:33:-;3512:42;3589:19;3567:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3567:41:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3463:153;:::o;14802:1234:78:-;14873:21;:19;:21::i;:::-;14941:90;;;;;;;;;;;;-1:-1:-1;;;14941:90:78;;;;14979:10;;14941:163;;15098:5;;14941:128;;15063:4;;14941:90;;;:50;;-1:-1:-1;;;;;;;14979:10:78;14941:29;:50::i;:::-;:68;;:90::i;:::-;:113;;:128::i;:::-;:156;;:163::i;:::-;15115:85;;;;;;;;;;;;-1:-1:-1;;;15115:85:78;;;;15153:10;;15115:161;;15270:5;;15115:85;;;:50;;-1:-1:-1;;;;;;;15153:10:78;15115:29;:50::i;:161::-;15482:6;15478:230;15494:9;:16;15490:20;;15478:230;;;15527:169;15689:6;15527:133;15651:7;;;;;;;;;-1:-1:-1;;;;;15651:7:78;15527:92;;;;;;;;;;;;;;-1:-1:-1;;;15527:92:78;;;:52;15565:9;15575:1;15565:12;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;15565:12:78;15527:29;:52::i;:169::-;15512:3;;;;:::i;:::-;;;;15478:230;;;;15722:6;15718:125;15734:9;:16;15730:20;;15718:125;;;15752:3;;;;:::i;:::-;;;;15718:125;;;-1:-1:-1;15865:7:78;;:29;;;-1:-1:-1;;;15865:29:78;;;;15853:42;;-1:-1:-1;;;;;15865:7:78;;:27;;:29;;;;;;;;;;;;;;:7;:29;;;;;;;;;;15853:42;15906:38;;;;;;;;;;;;;;;;;;:11;:38::i;:::-;15955:7;;15974:10;;:35;;-1:-1:-1;;;15974:35:78;;16003:4;15974:35;;;7840:51:80;-1:-1:-1;;;;;15955:7:78;;;;:18;;15974:10;;:20;;7813:18:80;;15974:35:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16019:4;;15955:73;;-1:-1:-1;;;;;;15955:73:78;;;;;;;;;;-1:-1:-1;;;;;16019:4:78;;16026:1;;15955:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14802:1234::o;7736:2288::-;7780:18;:16;:18::i;:::-;7841:7;;:21;;-1:-1:-1;;;7841:21:78;;:7;:21;;;20693:25:80;7832:45:78;;-1:-1:-1;;;;;7841:7:78;;:18;;20666::80;;7841:21:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7864:9;7874:1;7864:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7864:12:78;7832:8;:45::i;:::-;7897:7;;:21;;-1:-1:-1;;;7897:21:78;;:7;:21;;;20693:25:80;7888:45:78;;-1:-1:-1;;;;;7897:7:78;;:18;;20666::80;;7897:21:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7920:9;7930:1;7920:12;;;;;;;;:::i;7888:45::-;7953:7;;:21;;-1:-1:-1;;;7953:21:78;;7972:1;7953:21;;;20693:25:80;7944:45:78;;-1:-1:-1;;;;;7953:7:78;;:18;;20666::80;;7953:21:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7976:9;7986:1;7976:12;;;;;;;;:::i;7944:45::-;8009:7;;:21;;-1:-1:-1;;;8009:21:78;;8028:1;8009:21;;;20693:25:80;8000:45:78;;-1:-1:-1;;;;;8009:7:78;;:18;;20666::80;;8009:21:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8032:9;8042:1;8032:12;;;;;;;;:::i;8000:45::-;8065:7;;:21;;-1:-1:-1;;;8065:21:78;;8084:1;8065:21;;;20693:25:80;8056:45:78;;-1:-1:-1;;;;;8065:7:78;;:18;;20666::80;;8065:21:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8088:9;8098:1;8088:12;;;;;;;;:::i;8056:45::-;8441:7;;8472:9;:12;;8432:70;;-1:-1:-1;;;;;8441:7:78;;:30;;:7;;8472:12;;;;:::i;:::-;;;;;;;;;;;8441:44;;;;;;-1:-1:-1;;;;;;8441:44:78;;;-1:-1:-1;;;;;8472:12:78;;;8441:44;;;7840:51:80;7813:18;;8441:44:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8487:11;8499:1;8487:14;;;;;;;;:::i;:::-;;;;;;;;;8432:8;:70::i;:::-;8522:7;;8553:9;:12;;8513:70;;-1:-1:-1;;;;;8522:7:78;;:30;;:7;;8553:12;;;;;;:::i;:::-;;;;;;;;;;;8522:44;;;;;;-1:-1:-1;;;;;;8522:44:78;;;-1:-1:-1;;;;;8553:12:78;;;8522:44;;;7840:51:80;7813:18;;8522:44:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8568:11;8580:1;8568:14;;;;;;;;:::i;8513:70::-;8603:7;;8634:9;:12;;8594:70;;-1:-1:-1;;;;;8603:7:78;;:30;;8644:1;;8634:12;;;;;;:::i;:::-;;;;;;;;;;;8603:44;;;;;;-1:-1:-1;;;;;;8603:44:78;;;-1:-1:-1;;;;;8634:12:78;;;8603:44;;;7840:51:80;7813:18;;8603:44:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8649:11;8661:1;8649:14;;;;;;;;:::i;8594:70::-;8684:7;;8715:9;:12;;8675:70;;-1:-1:-1;;;;;8684:7:78;;:30;;8725:1;;8715:12;;;;;;:::i;:::-;;;;;;;;;;;8684:44;;;;;;-1:-1:-1;;;;;;8684:44:78;;;-1:-1:-1;;;;;8715:12:78;;;8684:44;;;7840:51:80;7813:18;;8684:44:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8730:11;8742:1;8730:14;;;;;;;;:::i;8675:70::-;8765:7;;8796:9;:12;;8756:70;;-1:-1:-1;;;;;8765:7:78;;:30;;8806:1;;8796:12;;;;;;:::i;:::-;;;;;;;;;;;8765:44;;;;;;-1:-1:-1;;;;;;8765:44:78;;;-1:-1:-1;;;;;8796:12:78;;;8765:44;;;7840:51:80;7813:18;;8765:44:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8811:11;8823:1;8811:14;;;;;;;;:::i;8756:70::-;9261:7;;9286:9;:12;;9252:65;;-1:-1:-1;;;;;9261:7:78;;:24;;:7;;9286:12;;;;:::i;:::-;;;;;;;;;;;9261:38;;;;;;-1:-1:-1;;;;;;9261:38:78;;;-1:-1:-1;;;;;9286:12:78;;;9261:38;;;7840:51:80;7813:18;;9261:38:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9301:12;9314:1;9301:15;;;;;;;;:::i;9252:65::-;9337:7;;9362:9;:12;;9328:65;;-1:-1:-1;;;;;9337:7:78;;:24;;:7;;9362:12;;;;;;:::i;:::-;;;;;;;;;;;9337:38;;;;;;-1:-1:-1;;;;;;9337:38:78;;;-1:-1:-1;;;;;9362:12:78;;;9337:38;;;7840:51:80;7813:18;;9337:38:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9377:12;9390:1;9377:15;;;;;;;;:::i;9328:65::-;9413:7;;9438:9;:12;;9404:65;;-1:-1:-1;;;;;9413:7:78;;:24;;9448:1;;9438:12;;;;;;:::i;:::-;;;;;;;;;;;9413:38;;;;;;-1:-1:-1;;;;;;9413:38:78;;;-1:-1:-1;;;;;9438:12:78;;;9413:38;;;7840:51:80;7813:18;;9413:38:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9453:12;9466:1;9453:15;;;;;;;;:::i;9404:65::-;9489:7;;9514:9;:12;;9480:65;;-1:-1:-1;;;;;9489:7:78;;:24;;9524:1;;9514:12;;;;;;:::i;:::-;;;;;;;;;;;9489:38;;;;;;-1:-1:-1;;;;;;9489:38:78;;;-1:-1:-1;;;;;9514:12:78;;;9489:38;;;7840:51:80;7813:18;;9489:38:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9529:12;9542:1;9529:15;;;;;;;;:::i;9480:65::-;9565:7;;9590:9;:12;;9556:65;;-1:-1:-1;;;;;9565:7:78;;:24;;9600:1;;9590:12;;;;;;:::i;:::-;;;;;;;;;;;9565:38;;;;;;-1:-1:-1;;;;;;9565:38:78;;;-1:-1:-1;;;;;9590:12:78;;;9565:38;;;7840:51:80;7813:18;;9565:38:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9605:12;9618:1;9605:15;;;;;;;;:::i;3387:209::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3387:209:78;:::o;3320:135:33:-;3366:33;3431:16;3412:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3412:35:33;;;;;;;;;;;;;;;;;;;;;;3320:135;:::o;3013:143::-;3061:35;3130:18;3109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3109:39:33;;;;;;;;;;;;;;;;;;;;;;3013:143;:::o;3605:243:78:-;;;;;;;;;;;;10845:1741;10941:4;;:27;;;-1:-1:-1;;;10941:27:78;;;;10916:4;;-1:-1:-1;;;;;10941:4:78;;:12;;10960:5;;10941:27;;;;;10897:16;;10941:27;;;;;;;;10960:5;10941:4;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10979:49:78;;-1:-1:-1;;;10979:49:78;;-1:-1:-1;;;;;;;;;;;4007:42:78;-1:-1:-1;10979:21:78;;-1:-1:-1;10979:49:78;;-1:-1:-1;3919:42:78;;11022:5;;10979:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11090:545:78;;;;;;;;-1:-1:-1;;;;;;;;;;;11090:545:78;;-1:-1:-1;;;;;;;;;;;11090:545:78;;;;11242:4;11090:545;;;;11280:4;11090:545;;;;11310:15;11090:545;;;;11350:5;11090:545;;;;11039:48;11090:545;;;;;;;;;;;;11668:35;;-1:-1:-1;;;11668:35:78;;11090:545;;11039:48;3919:42;;11668:27;;:35;;11090:545;;11668:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11714:65;;;;;;;;;;;-1:-1:-1;;;11714:65:78;;;;11742:36;;-1:-1:-1;;;11742:36:78;;11772:4;11742:36;;;7840:51:80;11646:57:78;;-1:-1:-1;11714:65:78;;-1:-1:-1;;;;;;;;;;;1416:42:78;11742:21;;7813:18:80;;11742:36:78;7694:203:80;11714:65:78;11790:18;:16;:18::i;:::-;11829:7;;11850:5;;11829:27;;-1:-1:-1;;;11829:27:78;;-1:-1:-1;;;;;11850:5:78;;;11829:27;;;7840:51:80;11829:7:78;;;:20;;7813:18:80;;11829:27:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11881:5:78;;11867:20;;-1:-1:-1;;;11867:20:78;;-1:-1:-1;;;;;11881:5:78;;;11867:20;;;7840:51:80;-1:-1:-1;;;;;;;;;;;11867:13:78;-1:-1:-1;11867:13:78;;-1:-1:-1;7813:18:80;;11867:20:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11898:7:78;;11924:5;;11898:32;;-1:-1:-1;;;11898:32:78;;-1:-1:-1;;;;;11924:5:78;;;11898:32;;;7840:51:80;11898:7:78;;;-1:-1:-1;11898:25:78;;-1:-1:-1;7813:18:80;;11898:32:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;317:37:28;;-1:-1:-1;;;;;11941:12:78;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12030:4:78;;12009:35;;-1:-1:-1;;;12009:35:78;;-1:-1:-1;;;;;;;;;;;1416:42:78;-1:-1:-1;12009:20:78;;-1:-1:-1;12009:35:78;;-1:-1:-1;;;;;12030:4:78;;12036:7;;12009:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12069:4:78;;12055:19;;-1:-1:-1;;;12055:19:78;;-1:-1:-1;;;;;12069:4:78;;;12055:19;;;7840:51:80;-1:-1:-1;;;;;;;;;;;12055:13:78;;;7813:18:80;;12055:19:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12085:63:78;;;;;;;;;;;-1:-1:-1;;;12085:63:78;;;;12138:7;;12106:41;;-1:-1:-1;;;12106:41:78;;-1:-1:-1;;;;;12138:7:78;;;12106:41;;;7840:51:80;12085:63:78;;-1:-1:-1;12085:63:78;-1:-1:-1;1948:42:78;;12106:23;;7813:18:80;;12106:41:78;7694:203:80;12085:63:78;12197:7;;12169:46;;-1:-1:-1;;;12169:46:78;;-1:-1:-1;;;;;;;;;;;1416:42:78;12169:19;;:46;;-1:-1:-1;;;;;12197:7:78;;12207;;12169:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12226:7:78;;:53;;-1:-1:-1;;;12226:53:78;;-1:-1:-1;;;;;12226:7:78;;;;:27;;:53;;-1:-1:-1;;;;;;;;;;;1416:42:78;12268:7;;12277:1;;12226:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12290:71:78;;;;;;;;;;;-1:-1:-1;;;12290:71:78;;;;12325:10;;12354:4;;12325:35;;-1:-1:-1;;;12325:35:78;;-1:-1:-1;;;;;12354:4:78;;;12325:35;;;7840:51:80;12290:71:78;;-1:-1:-1;12290:71:78;;-1:-1:-1;12325:10:78;;;;;:20;;7813:18:80;;12325:35:78;7694:203:80;12290:71:78;12372:61;;;;;;;;;;;-1:-1:-1;;;12372:61:78;;;;;;;;12403:7;;:29;;-1:-1:-1;;;12403:29:78;;;;12372:61;;-1:-1:-1;;;;;12403:7:78;;;;:27;;:29;;;;;;;;;;;:7;:29;;;;;;;;;;12372:61;12444:7;;12463:10;;12492:4;;12463:35;;-1:-1:-1;;;12463:35:78;;-1:-1:-1;;;;;12492:4:78;;;12463:35;;;7840:51:80;12444:7:78;;;;:18;;12463:10;;;;;:20;;7813:18:80;;12463:35:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12508:4;;12444:73;;-1:-1:-1;;;;;;12444:73:78;;;;;;;;;;-1:-1:-1;;;;;12508:4:78;;12515:1;;12444:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12528:50:78;;;;;;;;;;;;-1:-1:-1;;;12528:50:78;;;;12565:4;;12528:50;;;-1:-1:-1;;;;;12565:4:78;:12;12528:11;:50::i;:::-;10886:1700;;;10845:1741::o;2825:180:33:-;2881:48;2971:26;2942:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2675:142;2723:34;2791:18;2770:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10038:797:78;10106:4;10133:18;:16;:18::i;:::-;10172:7;;10193:5;;10172:27;;-1:-1:-1;;;10172:27:78;;-1:-1:-1;;;;;10193:5:78;;;10172:27;;;7840:51:80;10172:7:78;;;:20;;7813:18:80;;10172:27:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10224:5:78;;10210:20;;-1:-1:-1;;;10210:20:78;;-1:-1:-1;;;;;10224:5:78;;;10210:20;;;7840:51:80;-1:-1:-1;;;;;;;;;;;10210:13:78;-1:-1:-1;10210:13:78;;-1:-1:-1;7813:18:80;;10210:20:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10241:7:78;;10267:5;;10241:32;;-1:-1:-1;;;10241:32:78;;-1:-1:-1;;;;;10267:5:78;;;10241:32;;;7840:51:80;10241:7:78;;;-1:-1:-1;10241:25:78;;-1:-1:-1;7813:18:80;;10241:32:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;317:37:28;;-1:-1:-1;;;;;10284:12:78;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10317:4:78;;10309:29;;-1:-1:-1;;;;;10317:4:78;;;;-1:-1:-1;10317:4:78;;-1:-1:-1;10332:5:78;;10317:4;10309:29;10317:4;10309:29;10332:5;10317:4;;10309:29;;;;;;;;;;;;;;;;;;;-1:-1:-1;10363:4:78;;10349:19;;-1:-1:-1;;;10349:19:78;;-1:-1:-1;;;;;10363:4:78;;;10349:19;;;7840:51:80;-1:-1:-1;;;;;;;;;;;10349:13:78;;;7813:18:80;;10349:19:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10379:63:78;;;;;;;;;;;-1:-1:-1;;;10379:63:78;;;;10432:7;;10400:41;;-1:-1:-1;;;10400:41:78;;-1:-1:-1;;;;;10432:7:78;;;10400:41;;;7840:51:80;10379:63:78;;-1:-1:-1;10379:63:78;-1:-1:-1;1948:42:78;;10400:23;;7813:18:80;;10400:41:78;7694:203:80;10379:63:78;10463:7;;:65;;-1:-1:-1;;;10463:65:78;;10523:4;10463:65;;;20693:25:80;-1:-1:-1;;;;;10463:7:78;;;;:34;;10505:16;;20666:18:80;;10463:65:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10539:71:78;;;;;;;;;;;-1:-1:-1;;;10539:71:78;;;;10574:10;;10603:4;;10574:35;;-1:-1:-1;;;10574:35:78;;-1:-1:-1;;;;;10603:4:78;;;10574:35;;;7840:51:80;10539:71:78;;-1:-1:-1;10539:71:78;;-1:-1:-1;10574:10:78;;;;;-1:-1:-1;10574:20:78;;7813:18:80;;10574:35:78;7694:203:80;10539:71:78;10621:61;;;;;;;;;;;-1:-1:-1;;;10621:61:78;;;;;;;;10652:7;;:29;;-1:-1:-1;;;10652:29:78;;;;10621:61;;-1:-1:-1;;;;;10652:7:78;;;;:27;;:29;;;;;;;;;;;:7;:29;;;;;;;;;;10621:61;10693:7;;10712:10;;10741:4;;10712:35;;-1:-1:-1;;;10712:35:78;;-1:-1:-1;;;;;10741:4:78;;;10712:35;;;7840:51:80;10693:7:78;;;;:18;;10712:10;;;;;:20;;7813:18:80;;10712:35:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10757:4;;10693:73;;-1:-1:-1;;;;;;10693:73:78;;;;;;;;;;-1:-1:-1;;;;;10757:4:78;;10764:1;;10693:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10777:50:78;;;;;;;;;;;;-1:-1:-1;;;10777:50:78;;;;10814:4;;10777:50;;;-1:-1:-1;;;;;10814:4:78;:12;10777:11;:50::i;3164:148:33:-;3212:40;3286:18;3265:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7320:410:78;7529:4;;7551:7;;7529:37;;-1:-1:-1;;;7529:37:78;;-1:-1:-1;;;;;7529:4:78;;;;:13;;:37;;7551:7;;;7561:4;;7529:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7597:7:78;;:27;;;-1:-1:-1;;;7597:27:78;;;;7577:17;;-1:-1:-1;;;;;7597:7:78;;:25;;:27;;;;;;;;;;;;;;7577:17;7597:7;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7635:6;;:87;;-1:-1:-1;;;7635:87:78;;7577:47;;-1:-1:-1;;;;;;7635:6:78;;:38;;:87;;7577:47;;7685:9;;7696:11;;7709:12;;7635:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7355:375;7320:410::o;3066:312::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3066:312:78;;-1:-1:-1;3066:312:78;:::o;2228:143:33:-;2277:34;2345:18;2324:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:600:27;1920:7;;1899:4;;1920:7;;;;;1916:542;;;-1:-1:-1;1951:7:27;;;;;;;;1865:600::o;1916:542::-;1991:17;-1:-1:-1;;;;;;;;;;;3065:55:27;3148:16;2031:382;;2251:43;;2075:20;;-1:-1:-1;;;;;;;;;;;1712:64:27;2189:34;;2251:43;;1712:64;;-1:-1:-1;;;2276:17:27;2251:43;;;:::i;:::-;;;;-1:-1:-1;;2251:43:27;;;;;;;;;;2139:178;;;2251:43;2139:178;;:::i;:::-;;;;-1:-1:-1;;2139:178:27;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:27:o;17438:1184:78:-;17491:6;17487:773;17507:9;:16;17503:20;;17487:773;;;17541:156;17684:9;17694:1;17684:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;17541:88;;;;;;;;;;;;-1:-1:-1;;;17541:88:78;;;;;;;17579:7;;-1:-1:-1;;;;;17684:12:78;;;;17541:114;;17653:1;;17541:88;;;;:47;;17684:12;;17579:7;17541:29;:47::i;:88::-;:111;;:114::i;:::-;:142;;:156::i;:::-;17708:157;17852:9;17862:1;17852:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;17708:89;;;;;;;;;;;;-1:-1:-1;;;17708:89:78;;;;;;;17746:7;;-1:-1:-1;;;;;17852:12:78;;;;17708:115;;17821:1;;17708:89;;;;:47;;17852:12;;17746:7;17708:29;:47::i;:157::-;17876:175;18036:11;18048:1;18036:14;;;;;;;;:::i;:::-;;;;;;;;;17876:131;17994:9;18004:1;17994:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;17876:94;;;;;;;;;;;;;;;;;;;;17914:7;;-1:-1:-1;;;;;17994:12:78;;;;17876:94;;;:47;;17914:7;17876:29;:47::i;:175::-;18062:176;18222:12;18235:1;18222:15;;;;;;;;:::i;:::-;;;;;;;;;18062:131;18180:9;18190:1;18180:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;18062:94;;;;;;;;;;;;;;;;;;;;18100:7;;-1:-1:-1;;;;;18180:12:78;;;;18062:94;;;:47;;18100:7;18062:29;:47::i;:176::-;17525:3;;;;:::i;:::-;;;;17487:773;;;-1:-1:-1;18414:9:78;:16;18270:86;;;;;;;;;;;;-1:-1:-1;;;18270:86:78;;;;18308:7;;18270:161;;18414:16;18270:86;;:47;;-1:-1:-1;;;;;;;18308:7:78;18270:29;:47::i;:161::-;18587:9;:16;18442:87;;;;;;;;;;;;-1:-1:-1;;;18442:87:78;;;;18480:7;;18442:162;;18587:16;18442:87;;:47;;-1:-1:-1;;;;;;;18480:7:78;18442:29;:47::i;2379:144:33:-;2428:35;2497:18;2476:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2476:39:33;;;;;;;;;;;;;;;;;;;;;;2379:144;:::o;5686:112:41:-;5733:57;5786:2;5749:40;;;;;;20693:25:80;;20681:2;20666:18;;20539:185;5749:40:41;;;;-1:-1:-1;;5749:40:41;;;;;;;;;;;;;;-1:-1:-1;;;;;5749:40:41;-1:-1:-1;;;5749:40:41;;;5733:15;:57::i;6752:141::-;6817:68;6877:2;6881;6833:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6833:51:41;;;;;;;;;;;;;;-1:-1:-1;;;;;6833:51:41;-1:-1:-1;;;6833:51:41;;;6817:15;:68::i;3728:284:27:-;3797:1;-1:-1:-1;;;;;3792:6:27;:1;-1:-1:-1;;;;;3792:6:27;;3788:217;;3820:44;;;;;26537:2:80;26519:21;;;26576:2;26556:18;;;26549:30;26615:34;26610:2;26595:18;;26588:62;-1:-1:-1;;;26681:2:80;26666:18;;26659:35;26726:3;26711:19;;26335:401;3820:44:27;;;;;;;;3884:34;3916:1;3884:34;;;;;;:::i;:::-;;;;;;;;3938;3970:1;3938:34;;;;;;:::i;:::-;;;;;;;;3987:6;:4;:6::i;5365:269::-;5428:1;5423;:6;5419:208;;5451:41;;;;;24752:2:80;24734:21;;;24791:2;24771:18;;;24764:30;24830:34;24825:2;24810:18;;24803:62;-1:-1:-1;;;24896:2:80;24881:18;;24874:32;24938:3;24923:19;;24550:398;5451:41:27;;;;;;;;5512:31;5541:1;5512:31;;;;;;:::i;:::-;;;;;;;;5563;5592:1;5563:31;;;;;;:::i;18422:351::-;18559:1;18542:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18532:30;;;;;;18525:1;18508:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18498:30;;;;;;:64;18494:272;;18584:43;;;;;26132:2:80;26114:21;;;26171:2;26151:18;;;26144:30;26210:34;26205:2;26190:18;;26183:62;-1:-1:-1;;;26276:2:80;26261:18;;26254:34;26320:3;26305:19;;25930:400;18584:43:27;;;;;;;;18647:33;18678:1;18647:33;;;;;;:::i;:::-;;;;;;;;18700;18731:1;18700:33;;;;;;:::i;9475:158:36:-;4791:12;;;:22;;-1:-1:-1;;;;;;4791:22:36;-1:-1:-1;;;;;4791:22:36;;;;;-1:-1:-1;4791:12:36;9589:36;9582:43;9475:158;-1:-1:-1;;;9475:158:36:o;9794:152::-;740:24;;;;;;5112:9;;;:22;;-1:-1:-1;;5112:22:36;;;;;;;;;;;;9870:18;9927:4;9908:30;5005:159;9954:154;5277:10;;;:47;;;;;;;10028:18;5277:47;;;;;;-1:-1:-1;;;;;5301:21:36;;5277:47;;;10090:4;10066:34;5172:182;10750:122;10831:33;10845:4;10859:3;10831:13;:33::i;5806:123:41:-;5862:59;5917:2;5878:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5878:42:41;;;;;;;;;;;;;;-1:-1:-1;;;;;5878:42:41;-1:-1:-1;;;5878:42:41;;;5862:15;:59::i;10116:154:36:-;5467:10;;;:29;;;;;;;10190:18;5467:29;;;;;;;;;;10252:4;10228:34;5362:164;10602:140;10683:51;10697:4;-1:-1:-1;;;;;10711:21:36;;10683:13;:51::i;187:384:41:-;282:14;;135:42;459:2;446:16;;258:21;;282:14;446:16;135:42;496:5;485:68;476:77;;411:153;;187:384;:::o;2473:443:27:-;-1:-1:-1;;;;;;;;;;;3065:55:27;3148:16;2517:367;;2721:67;;2555:11;;-1:-1:-1;;;;;;;;;;;1712:64:27;2654:43;;2721:67;;1712:64;;-1:-1:-1;;;2746:17:27;2781:4;;2721:67;;;:::i;:::-;;;;-1:-1:-1;;2721:67:27;;;;;;;;;;2608:199;;;2721:67;2608:199;;:::i;:::-;;;;-1:-1:-1;;2608:199:27;;;;;;;;;;2572:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2517:367:27;2894:7;:14;;-1:-1:-1;;2894:14:27;;;;;2473:443::o;11259:1125:36:-;11354:12;;;;11391:9;;;;11433:11;;;;11478:10;;;11455:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11354:12:36;;;;11391:9;;;;;;11340:11;;11455:33;;11478:10;;11455:33;;11478:10;11455:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11501:17;11538:4;11544:12;11552:3;11544:7;:12::i;:::-;11521:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11521:36:36;;;;;;;;;-1:-1:-1;;;;;11573:15:36;;;;;;:10;;;11521:36;11573:15;;;;;;-1:-1:-1;;;;;;11573:21:36;;;;;;;;;11521:36;;-1:-1:-1;11573:21:36;;:15;;11605:34;;11622:3;;11627:11;;11605:34;;:::i;:::-;;;;-1:-1:-1;;11605:34:36;;;;;;;;;11595:45;;11605:34;11595:45;;;;11573:68;;;;;;;;;;-1:-1:-1;11573:68:36;;;;11568:112;;11658:10;11663:4;11658;:10::i;:::-;;11568:112;-1:-1:-1;;;;;11713:15:36;;11690:12;11713:15;;;;;;;;;;;-1:-1:-1;;;;;;11713:21:36;;;;;;;;;11745:34;;11713:21;;11690:12;;11745:34;;11762:3;;11767:11;;11745:34;;:::i;:::-;;;;;;;;;;;;;11735:45;;;;;;11713:68;;;;;;;;;;;;11705:77;;11690:92;;11795:12;11836:17;11857:3;-1:-1:-1;;;;;11857:14:36;11872:4;11857:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11833:44:36;-1:-1:-1;11899:38:36;;-1:-1:-1;11833:44:36;11920:16;11925:11;11920:2;:16;:::i;:::-;11899:14;:38::i;:::-;11974:18;;-1:-1:-1;;;11974:18:36;;11892:45;;-1:-1:-1;11959:12:36;;-1:-1:-1;;;;;;;;;;;;11974:7:36;;;:18;;11982:3;;11987:4;;11974:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11959:33;;12017:4;12009;:12;12005:223;;12038:178;;-1:-1:-1;;;12038:178:36;;;;;;;:::i;:::-;;;;;;;;;12238:24;;-1:-1:-1;;;12238:24:36;;-1:-1:-1;;;;;;;;;;;12238:8:36;;;:24;;12247:3;;12252:4;;12258:3;;12238:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12280:12:36;;;12273:19;;-1:-1:-1;;;;;;12273:19:36;;;-1:-1:-1;12310:9:36;;;12303:16;;-1:-1:-1;;12303:16:36;;;12330:17;-1:-1:-1;12337:10:36;;12280:12;12330:17;:::i;:::-;12365:4;:11;;12358:18;;;11329:1055;;;;;;;;11259:1125;;:::o;13760:404::-;13819:12;13844:19;13876:1;:8;13887:2;13876:13;;;;:::i;:::-;13866:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13866:24:36;;13844:46;;13906:9;13901:230;13925:1;:8;13921:1;:12;13901:230;;;13955:9;13967:1;13969;13967:4;;;;;;;;:::i;:::-;;;;;;;13955:16;;14103:1;14097;14093:2;14089:10;14085:2;14081:19;14073:6;14069:32;14062:43;14043:77;13935:3;;;;;:::i;:::-;;;;13901:230;;;-1:-1:-1;14150:6:36;13760:404;-1:-1:-1;;13760:404:36:o;9350:117::-;9407:7;9434:25;9454:4;9434:19;:25::i;:::-;9427:32;9350:117;-1:-1:-1;;9350:117:36:o;13388:312::-;13466:7;13486:11;13510;13535:2;13524:1;:8;:13;:29;;13545:1;:8;13524:29;;;13540:2;13524:29;13510:43;;13569:9;13564:108;13588:3;13584:1;:7;13564:108;;;13654:5;:1;13658;13654:5;:::i;:::-;13628:1;13630:10;13639:1;13630:6;:10;:::i;:::-;13628:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;13628:13:36;13620:40;;13613:47;;;;;13593:3;;;;:::i;:::-;;;;13564:108;;;-1:-1:-1;13689:3:36;;13388:312;-1:-1:-1;;;;13388:312:36:o;1295:3381::-;1386:12;;;;1423:9;;;;1465:11;;;;1510:10;;;1487:33;;;;;;;;;;;;;;;;;;;1352:7;;-1:-1:-1;;;;;1386:12:36;;1423:9;;;1465:11;1352:7;;1487:33;;1510:10;;1487:33;;;1510:10;1487:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1574:15:36;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1574:21:36;;;;;;;;;1606:34;;1487:33;;-1:-1:-1;1574:21:36;:15;;-1:-1:-1;1606:34:36;;-1:-1:-1;1487:33:36;;1628:11;;1606:34;;:::i;:::-;;;;-1:-1:-1;;1606:34:36;;;;;;;;;1596:45;;1606:34;1596:45;;;;1574:68;;;;;;;;;;-1:-1:-1;1574:68:36;;;;1570:176;;;-1:-1:-1;;;;;1666:15:36;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1666:21:36;;;;;;;;;1698:34;;1666:21;;:10;1698:34;;1715:3;;1720:11;;1698:34;;:::i;:::-;;;;;;;;;;;;;1688:45;;;;;;1666:68;;;;;;;;;;;;1659:75;;;;;;1295:3381;;;:::o;1570:176::-;1756:17;1793:4;1799:12;1807:3;1799:7;:12::i;:::-;1776:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1756:56;;-1:-1:-1;;;;;;;;;;;599:37:36;;-1:-1:-1;;;;;1823:9:36;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1845:12;1886:17;1907:3;-1:-1:-1;;;;;1907:14:36;1922:4;1907:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1883:44:36;-1:-1:-1;1949:38:36;;-1:-1:-1;1883:44:36;1970:16;1975:11;1970:2;:16;:::i;:::-;1949:14;:38::i;:::-;2039:25;;-1:-1:-1;;;2039:25:36;;-1:-1:-1;;;;;7858:32:80;;2039:25:36;;;7840:51:80;1942:45:36;;-1:-1:-1;2012:22:36;;-1:-1:-1;;;;;;;;;;;;2039:11:36;;;7813:18:80;;2039:25:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2039:25:36;;;;;;;;;;;;:::i;:::-;2011:53;;;2079:5;:12;2095:1;2079:17;2075:2212;;;2113:12;-1:-1:-1;;;;;;;;;;;599:37:36;;-1:-1:-1;;;;;2128:7:36;;2136:3;2141:5;2147:1;2141:8;;;;;;;;:::i;:::-;;;;;;;2128:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2113:37;-1:-1:-1;2169:18:36;2165:108;;2213:44;2234:3;2247:5;2253:1;2247:8;;;;;;;;:::i;:::-;;;;;;;2239:17;;2213:44;;;;;;;:::i;:::-;;;;;;;;2165:108;2299:4;2291;:12;2287:243;;2324:190;;-1:-1:-1;;;2324:190:36;;;;;;;:::i;:::-;2549:86;2559:3;2564:4;2597:3;2602:11;2580:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2570:45;;;;;;2625:5;2631:1;2625:8;;;;;;;;:::i;:::-;;;;;;;2617:17;;2549:86;;;;;;;;;:::i;:::-;;;;;;;;2729:5;2735:1;2729:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2650:15:36;;2721:17;2650:15;;;;;;;;;;-1:-1:-1;;;;;;2650:21:36;;;;;;;;;2682:34;;2729:8;;2650:21;;2682:34;;2699:3;;2704:11;;2682:34;;:::i;:::-;;;;-1:-1:-1;;2682:34:36;;;;;;;;;2672:45;;2682:34;2672:45;;;;2650:68;;;;;;;;;;;;-1:-1:-1;2650:68:36;;;:88;;;;-1:-1:-1;;;;;2753:15:36;;;;2824:4;2753:10;;;:15;;;;;-1:-1:-1;;;;;;2753:21:36;;;;;;;;;2785:34;;2824:4;;-1:-1:-1;2785:34:36;;2802:3;;2807:11;;2785:34;;:::i;:::-;;;;;;;-1:-1:-1;;2785:34:36;;;;;;2775:45;;2785:34;2775:45;;;;2753:68;;;;;;;;;;-1:-1:-1;2753:68:36;:75;;-1:-1:-1;;2753:75:36;;;;;;;;;;-1:-1:-1;2075:2212:36;;;2865:1;2850:5;:12;:16;2846:1441;;;2888:9;2883:1286;2907:5;:12;2903:1;:16;2883:1286;;;2945:12;-1:-1:-1;;;;;;;;;;;599:37:36;;-1:-1:-1;;;;;2960:7:36;;2968:3;2973:5;2979:1;2973:8;;;;;;;;:::i;:::-;;;;;;;2960:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2945:37;-1:-1:-1;3005:18:36;3001:116;;3053:44;3074:3;3087:5;3093:1;3087:8;;;;;;;;:::i;:::-;;;;;;;3079:17;;3053:44;;;;;;;:::i;:::-;;;;;;;;3001:116;3147:4;3139;:12;3135:69;;3176:8;;;3135:69;3304:8;;3240:5;;;-1:-1:-1;;;;;;;;;;;3290:8:36;;;3299:3;;3304:5;;3310:1;;3304:8;;;;;;:::i;:::-;;;;;;;3314:7;3290:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:12;3395:17;3453:3;-1:-1:-1;;;;;3453:14:36;3468:4;3453:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3435:38:36;;-1:-1:-1;3435:38:36;-1:-1:-1;3503:38:36;3435;3524:16;3529:11;3524:2;:16;:::i;3503:38::-;3496:45;;3372:189;3585:7;:26;;;;;3604:7;3596:4;:15;3585:26;3581:525;;;3711:86;3721:3;3726:4;3759:3;3764:11;3742:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3732:45;;;;;;3787:5;3793:1;3787:8;;;;;;;;:::i;:::-;;;;;;;3779:17;;3711:86;;;;;;;;;:::i;:::-;;;;;;;;3899:5;3905:1;3899:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3820:15:36;;3891:17;3820:15;;;;;;;;;;-1:-1:-1;;;;;;3820:21:36;;;;;;;;;3852:34;;3899:8;;3820:21;;3852:34;;3869:3;;3874:11;;3852:34;;:::i;:::-;;;;;;;;;;;;;3842:45;;;;;;3820:68;;;;;;;;;;;:88;;;;4002:4;3931;:10;;:15;3942:3;-1:-1:-1;;;;;3931:15:36;-1:-1:-1;;;;;3931:15:36;;;;;;;;;;;;:21;3947:4;-1:-1:-1;;;;;3931:21:36;;-1:-1:-1;;;;;3931:21:36;;;;;;;;;;;;;:68;3980:3;3985:11;3963:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3953:45;;;;;;3931:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;599:37:36;;-1:-1:-1;;;;;4029:8:36;;4038:3;4043:5;4049:1;4043:8;;;;;;;;:::i;:::-;;;;;;;4053:4;4029:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4081:5;;;;;3581:525;-1:-1:-1;;;;;;;;;;;599:37:36;;-1:-1:-1;;;;;4124:8:36;;4133:3;4138:5;4144:1;4138:8;;;;;;;;:::i;:::-;;;;;;;4148:4;4124:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:1243;;;2883:1286;2921:3;;;;:::i;:::-;;;;2883:1286;;;;2846:1441;;;4201:74;;;-1:-1:-1;;;4201:74:36;;24319:2:80;4201:74:36;;;24301:21:80;24338:18;;;24331:30;;;;24397:34;24377:18;;;24370:62;24468:34;24448:18;;;24441:62;24520:19;;4201:74:36;24117:428:80;2846:1441:36;-1:-1:-1;;;;;4321:15:36;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4321:21:36;;;;;;;;;4353:34;;4321:21;;:15;4353:34;;4370:3;;4375:11;;4353:34;;:::i;:::-;;;;-1:-1:-1;;4353:34:36;;;;;;;;;4343:45;;4353:34;4343:45;;;;4321:68;;;;;;;;;;-1:-1:-1;4321:68:36;;;;4299:165;;;;-1:-1:-1;;;4299:165:36;;25155:2:80;4299:165:36;;;25137:21:80;25194:2;25174:18;;;25167:30;25233:34;25213:18;;;25206:62;-1:-1:-1;;;25284:18:80;;;25277:45;25339:19;;4299:165:36;24953:411:80;4299:165:36;4484:12;;;4477:19;;-1:-1:-1;;;;;;4477:19:36;;;4514:9;;;4507:16;;-1:-1:-1;;4507:16:36;;;4534:17;-1:-1:-1;4541:10:36;;4484:12;4534:17;:::i;:::-;4562:18;4569:11;;;4562:18;;;-1:-1:-1;;;;;4600:15:36;;;;;;;;;;;;-1:-1:-1;;;;;;4600:21:36;;;;;;;;;4632:34;;4600:21;;4562:18;4632:34;;4649:3;;4654:11;;4632:34;;:::i;:::-;;;;;;;;;;;;;4622:45;;;;;;4600:68;;;;;;;;;;;;4593:75;;;;;;;;;1295:3381;;;:::o;8692:404::-;8751:12;8776:19;8808:1;:8;8819:2;8808:13;;;;:::i;:::-;8798:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8798:24:36;;8776:46;;8838:9;8833:230;8857:1;:8;8853:1;:12;8833:230;;;8887:9;8899:1;8901;8899:4;;;;;;;;:::i;:::-;;;;;;;8887:16;;9035:1;9029;9025:2;9021:10;9017:2;9013:19;9005:6;9001:32;8994:43;8975:77;8867:3;;;;;:::i;:::-;;;;8833:230;;8372:312;8450:7;8470:11;8494;8519:2;8508:1;:8;:13;:29;;8529:1;:8;8508:29;;;8524:2;8508:29;8494:43;;8553:9;8548:108;8572:3;8568:1;:7;8548:108;;;8638:5;:1;8642;8638:5;:::i;:::-;8612:1;8614:10;8623:1;8614:6;:10;:::i;:::-;8612:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;8612:13:36;8604:40;;8597:47;;;;;8577:3;;;;:::i;:::-;;;;8548:108;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:720:80:-;79:5;132:3;125:4;117:6;113:17;109:27;99:55;;150:1;147;140:12;99:55;179:6;173:13;205:4;228:18;224:2;221:26;218:52;;;250:18;;:::i;:::-;296:2;293:1;289:10;319:28;343:2;339;335:11;319:28;:::i;:::-;381:15;;;412:12;;;;444:15;;;478;;;474:24;;471:33;-1:-1:-1;468:53:80;;;517:1;514;507:12;468:53;539:1;530:10;;549:156;563:2;560:1;557:9;549:156;;;620:10;;608:23;;581:1;574:9;;;;;651:12;;;;683;;549:156;;;-1:-1:-1;723:5:80;14:720;-1:-1:-1;;;;;;;14:720:80:o;739:164::-;815:13;;864;;857:21;847:32;;837:60;;893:1;890;883:12;908:163;986:13;;1039:6;1028:18;;1018:29;;1008:57;;1061:1;1058;1051:12;1076:251;1146:6;1199:2;1187:9;1178:7;1174:23;1170:32;1167:52;;;1215:1;1212;1205:12;1167:52;1247:9;1241:16;1266:31;1291:5;1266:31;:::i;1332:614::-;1461:6;1469;1522:2;1510:9;1501:7;1497:23;1493:32;1490:52;;;1538:1;1535;1528:12;1490:52;1571:9;1565:16;1600:18;1641:2;1633:6;1630:14;1627:34;;;1657:1;1654;1647:12;1627:34;1680:72;1744:7;1735:6;1724:9;1720:22;1680:72;:::i;:::-;1670:82;;1798:2;1787:9;1783:18;1777:25;1761:41;;1827:2;1817:8;1814:16;1811:36;;;1843:1;1840;1833:12;1811:36;;1866:74;1932:7;1921:8;1910:9;1906:24;1866:74;:::i;:::-;1856:84;;;1332:614;;;;;:::o;1951:202::-;2018:6;2071:2;2059:9;2050:7;2046:23;2042:32;2039:52;;;2087:1;2084;2077:12;2039:52;2110:37;2137:9;2110:37;:::i;2158:184::-;2228:6;2281:2;2269:9;2260:7;2256:23;2252:32;2249:52;;;2297:1;2294;2287:12;2249:52;-1:-1:-1;2320:16:80;;2158:184;-1:-1:-1;2158:184:80:o;2347:706::-;2427:6;2480:2;2468:9;2459:7;2455:23;2451:32;2448:52;;;2496:1;2493;2486:12;2448:52;2529:9;2523:16;2558:18;2599:2;2591:6;2588:14;2585:34;;;2615:1;2612;2605:12;2585:34;2653:6;2642:9;2638:22;2628:32;;2698:7;2691:4;2687:2;2683:13;2679:27;2669:55;;2720:1;2717;2710:12;2669:55;2749:2;2743:9;2771:2;2767;2764:10;2761:36;;;2777:18;;:::i;:::-;2819:53;2862:2;2843:13;;-1:-1:-1;;2839:27:80;2868:2;2835:36;2819:53;:::i;:::-;2806:66;;2895:2;2888:5;2881:17;2935:7;2930:2;2925;2921;2917:11;2913:20;2910:33;2907:53;;;2956:1;2953;2946:12;2907:53;2969:54;3020:2;3015;3008:5;3004:14;2999:2;2995;2991:11;2969:54;:::i;:::-;-1:-1:-1;3042:5:80;2347:706;-1:-1:-1;;;;2347:706:80:o;3058:903::-;3172:6;3180;3188;3196;3204;3212;3220;3273:3;3261:9;3252:7;3248:23;3244:33;3241:53;;;3290:1;3287;3280:12;3241:53;3322:9;3316:16;3341:31;3366:5;3341:31;:::i;:::-;3391:5;3381:15;;;3441:2;3430:9;3426:18;3420:25;3490:7;3487:1;3476:22;3467:7;3464:35;3454:63;;3513:1;3510;3503:12;3454:63;3536:7;-1:-1:-1;3562:48:80;3606:2;3591:18;;3562:48;:::i;:::-;3552:58;;3629:48;3673:2;3662:9;3658:18;3629:48;:::i;:::-;3619:58;;3696:49;3740:3;3729:9;3725:19;3696:49;:::i;:::-;3686:59;;3790:3;3779:9;3775:19;3769:26;3839:4;3830:7;3826:18;3817:7;3814:31;3804:59;;3859:1;3856;3849:12;3804:59;3882:7;-1:-1:-1;3908:47:80;3950:3;3935:19;;3908:47;:::i;:::-;3898:57;;3058:903;;;;;;;;;;:::o;3966:180::-;4025:6;4078:2;4066:9;4057:7;4053:23;4049:32;4046:52;;;4094:1;4091;4084:12;4046:52;-1:-1:-1;4117:23:80;;3966:180;-1:-1:-1;3966:180:80:o;4457:616::-;4509:3;4547:5;4541:12;4574:6;4569:3;4562:19;4600:4;4641:2;4636:3;4632:12;4666:11;4693;4686:18;;4743:6;4740:1;4736:14;4729:5;4725:26;4713:38;;4785:2;4778:5;4774:14;4806:1;4816:231;4830:6;4827:1;4824:13;4816:231;;;4901:5;4895:4;4891:16;4886:3;4879:29;4929:38;4962:4;4953:6;4947:13;4929:38;:::i;:::-;5025:12;;;;4921:46;-1:-1:-1;4990:15:80;;;;4852:1;4845:9;4816:231;;;-1:-1:-1;5063:4:80;;4457:616;-1:-1:-1;;;;;;;4457:616:80:o;5078:469::-;5139:3;5177:5;5171:12;5204:6;5199:3;5192:19;5230:4;5259:2;5254:3;5250:12;5243:19;;5281:5;5278:1;5271:16;5323:2;5320:1;5310:16;5344:1;5354:168;5368:6;5365:1;5362:13;5354:168;;;5429:13;;5417:26;;5463:12;;;;5510:1;5498:14;;;;5383:9;5354:168;;;-1:-1:-1;5538:3:80;;5078:469;-1:-1:-1;;;;;5078:469:80:o;5552:258::-;5594:3;5632:5;5626:12;5659:6;5654:3;5647:19;5675:63;5731:6;5724:4;5719:3;5715:14;5708:4;5701:5;5697:16;5675:63;:::i;:::-;5792:2;5771:15;-1:-1:-1;;5767:29:80;5758:39;;;;5799:4;5754:50;;5552:258;-1:-1:-1;;5552:258:80:o;6143:610::-;6389:13;;6332:3;;6363;;6442:4;6469:15;;;6332:3;6512:175;6526:6;6523:1;6520:13;6512:175;;;6589:13;;6575:28;;6625:14;;;;6662:15;;;;6548:1;6541:9;6512:175;;;-1:-1:-1;;6696:21:80;;;-1:-1:-1;6733:14:80;;;;;-1:-1:-1;;;6143:610:80:o;6758:371::-;-1:-1:-1;;;;;;6943:33:80;;6931:46;;7000:13;;6913:3;;7022:61;7000:13;7072:1;7063:11;;7056:4;7044:17;;7022:61;:::i;:::-;7103:16;;;;7121:1;7099:24;;6758:371;-1:-1:-1;;;6758:371:80:o;7134:274::-;7263:3;7301:6;7295:13;7317:53;7363:6;7358:3;7351:4;7343:6;7339:17;7317:53;:::i;:::-;7386:16;;;;;7134:274;-1:-1:-1;;7134:274:80:o;10326:::-;-1:-1:-1;;;;;10518:32:80;;;;10500:51;;10582:2;10567:18;;10560:34;10488:2;10473:18;;10326:274::o;10605:345::-;-1:-1:-1;;;;;10825:32:80;;;;10807:51;;10889:2;10874:18;;10867:34;;;;10932:2;10917:18;;10910:34;10795:2;10780:18;;10605:345::o;10955:442::-;-1:-1:-1;;;;;11202:32:80;;;;11184:51;;-1:-1:-1;;;;;;11271:33:80;;;;11266:2;11251:18;;11244:61;11336:2;11321:18;;11314:34;11379:2;11364:18;;11357:34;11171:3;11156:19;;10955:442::o;13291:658::-;13462:2;13514:21;;;13584:13;;13487:18;;;13606:22;;;13433:4;;13462:2;13685:15;;;;13659:2;13644:18;;;13433:4;13728:195;13742:6;13739:1;13736:13;13728:195;;;13807:13;;-1:-1:-1;;;;;13803:39:80;13791:52;;13898:15;;;;13863:12;;;;13839:1;13757:9;13728:195;;;-1:-1:-1;13940:3:80;;13291:658;-1:-1:-1;;;;;;13291:658:80:o;13954:280::-;14153:2;14142:9;14135:21;14116:4;14173:55;14224:2;14213:9;14209:18;14201:6;14173:55;:::i;14239:1077::-;14445:4;14474:2;14514;14503:9;14499:18;14544:2;14533:9;14526:21;14567:6;14602;14596:13;14633:6;14625;14618:22;14659:2;14649:12;;14692:2;14681:9;14677:18;14670:25;;14754:2;14744:6;14741:1;14737:14;14726:9;14722:30;14718:39;14792:2;14784:6;14780:15;14813:1;14823:464;14837:6;14834:1;14831:13;14823:464;;;14902:22;;;-1:-1:-1;;14898:36:80;14886:49;;14958:13;;15003:9;;-1:-1:-1;;;;;14999:35:80;14984:51;;15074:11;;15068:18;15106:15;;;15099:27;;;15149:58;15191:15;;;15068:18;15149:58;:::i;:::-;15265:12;;;;15139:68;-1:-1:-1;;15230:15:80;;;;14859:1;14852:9;14823:464;;;-1:-1:-1;15304:6:80;;14239:1077;-1:-1:-1;;;;;;;;14239:1077:80:o;15321:1569::-;15525:4;15554:2;15594;15583:9;15579:18;15624:2;15613:9;15606:21;15647:6;15682;15676:13;15713:6;15705;15698:22;15739:2;15729:12;;15772:2;15761:9;15757:18;15750:25;;15834:2;15824:6;15821:1;15817:14;15806:9;15802:30;15798:39;15872:2;15864:6;15860:15;15893:1;15914;15924:937;15940:6;15935:3;15932:15;15924:937;;;16009:22;;;-1:-1:-1;;16005:36:80;15993:49;;16065:13;;16152:9;;-1:-1:-1;;;;;16148:35:80;16133:51;;16223:11;;16217:18;16255:15;;;16248:27;;;16336:19;;16105:15;;;16368:24;;;16458:21;;;;16503:1;;16426:2;16414:15;;;16517:236;16533:8;16528:3;16525:17;16517:236;;;16614:15;;-1:-1:-1;;;;;;16610:42:80;16596:57;;16722:17;;;;16561:1;16552:11;;;;;16679:14;;;;16517:236;;;-1:-1:-1;16839:12:80;;;;16776:5;-1:-1:-1;;;16804:15:80;;;;15966:1;15957:11;15924:937;;;-1:-1:-1;16878:6:80;;15321:1569;-1:-1:-1;;;;;;;;;15321:1569:80:o;17087:1141::-;17404:4;17452:3;17441:9;17437:19;17483:6;17472:9;17465:25;17509:2;17547:3;17542:2;17531:9;17527:18;17520:31;17571:6;17606;17600:13;17637:6;17629;17622:22;17675:3;17664:9;17660:19;17653:26;;17698:6;17695:1;17688:17;17741:2;17738:1;17728:16;17714:30;;17762:1;17772:194;17786:6;17783:1;17780:13;17772:194;;;17851:13;;-1:-1:-1;;;;;17847:39:80;17835:52;;17883:1;17942:14;;;;17907:12;;;;17801:9;17772:194;;;17776:3;;18011:9;18006:3;18002:19;17997:2;17986:9;17982:18;17975:47;18045:49;18090:3;18082:6;18045:49;:::i;:::-;18031:63;;;;18142:9;18134:6;18130:22;18125:2;18114:9;18110:18;18103:50;18170:52;18215:6;18207;18170:52;:::i;:::-;18162:60;17087:1141;-1:-1:-1;;;;;;;17087:1141:80:o;20729:382::-;20968:25;;;-1:-1:-1;;;;;21029:32:80;;;;21024:2;21009:18;;21002:60;21093:2;21078:18;;21071:34;20956:2;20941:18;;20729:382::o;22383:220::-;22532:2;22521:9;22514:21;22495:4;22552:45;22593:2;22582:9;22578:18;22570:6;22552:45;:::i;22608:291::-;22785:2;22774:9;22767:21;22748:4;22805:45;22846:2;22835:9;22831:18;22823:6;22805:45;:::i;:::-;22797:53;;22886:6;22881:2;22870:9;22866:18;22859:34;22608:291;;;;;:::o;22904:1208::-;23013:4;23042:2;23071;23060:9;23053:21;23094:1;23127:6;23121:13;23157:3;23179:1;23207:9;23203:2;23199:18;23189:28;;23267:2;23256:9;23252:18;23289;23279:61;;23333:4;23325:6;23321:17;23311:27;;23279:61;23386:2;23378:6;23375:14;23355:18;23352:38;23349:165;;;-1:-1:-1;;;23413:33:80;;23469:4;23466:1;23459:15;23499:4;23420:3;23487:17;23349:165;23581:18;;;32409:19;;;32461:4;32452:14;23624:18;23651:100;;;;23765:1;23760:326;;;;23617:469;;23651:100;-1:-1:-1;;23684:24:80;;23672:37;;23729:12;;;;-1:-1:-1;23651:100:80;;23760:326;32258:1;32251:14;;;32295:4;32282:18;;23866:1;23880:165;23894:6;23891:1;23888:13;23880:165;;;23972:14;;23959:11;;;23952:35;24015:16;;;;23909:10;;23880:165;;;24065:11;;;-1:-1:-1;;23617:469:80;-1:-1:-1;24103:3:80;;22904:1208;-1:-1:-1;;;;;;;;;22904:1208:80:o;25369:556::-;25571:2;25553:21;;;25610:3;25590:18;;;25583:31;25650:34;25645:2;25630:18;;25623:62;25721:34;25716:2;25701:18;;25694:62;25793:34;25787:3;25772:19;;25765:63;-1:-1:-1;;;25859:3:80;25844:19;;25837:46;25915:3;25900:19;;25369:556::o;26741:374::-;26971:2;26960:9;26953:21;26934:4;26991:49;27036:2;27025:9;27021:18;5892:2;5880:15;;-1:-1:-1;;;5920:4:80;5911:14;;5904:36;5965:2;5956:12;;5815:159;26991:49;-1:-1:-1;;;;;27076:32:80;;;;27071:2;27056:18;;;;27049:60;;;;-1:-1:-1;26983:57:80;26741:374::o;27120:440::-;27370:2;27359:9;27352:21;27333:4;27396:49;27441:2;27430:9;27426:18;5892:2;5880:15;;-1:-1:-1;;;5920:4:80;5911:14;;5904:36;5965:2;5956:12;;5815:159;27396:49;27493:9;27485:6;27481:22;27476:2;27465:9;27461:18;27454:50;27521:33;27547:6;27539;27521:33;:::i;:::-;27513:41;27120:440;-1:-1:-1;;;;27120:440:80:o;27565:348::-;27795:2;27784:9;27777:21;27758:4;27815:49;27860:2;27849:9;27845:18;5892:2;5880:15;;-1:-1:-1;;;5920:4:80;5911:14;;5904:36;5965:2;5956:12;;5815:159;27815:49;27807:57;;27900:6;27895:2;27884:9;27880:18;27873:34;27565:348;;;;:::o;27918:1452::-;28523:3;28535:21;;;28592:2;28572:18;;;28565:30;-1:-1:-1;;;28626:3:80;28611:19;;28604:45;28668:3;28702:4;28687:20;;28680:32;;;28748:1;28728:18;;;28721:29;-1:-1:-1;;;28781:3:80;28766:19;;28759:35;28861:2;28846:18;;28839:34;;;-1:-1:-1;;;;;4414:31:80;;28932:2;28917:18;;4402:44;28826:3;28811:19;;28973:6;28967:3;28956:9;28952:19;28945:35;28989:55;29039:3;29028:9;29024:19;29016:6;-1:-1:-1;;;;;4414:31:80;4402:44;;4340:112;28989:55;-1:-1:-1;;;;;4414:31:80;;;29103:3;29088:19;;4402:44;4414:31;;;29167:3;29152:19;;4402:44;4414:31;;;29231:3;29216:19;;4402:44;4414:31;;;29295:3;29280:19;;4402:44;4414:31;;;29359:3;29344:19;;;4402:44;;;;27918:1452;;-1:-1:-1;;;;27918:1452:80:o;29375:374::-;29605:2;29594:9;29587:21;29568:4;29625:49;29670:2;29659:9;29655:18;6056:2;6044:15;;-1:-1:-1;;;6084:4:80;6075:14;;6068:36;6129:2;6120:12;;5979:159;29754:440;30004:2;29993:9;29986:21;29967:4;30030:49;30075:2;30064:9;30060:18;6056:2;6044:15;;-1:-1:-1;;;6084:4:80;6075:14;;6068:36;6129:2;6120:12;;5979:159;30199:348;30429:2;30418:9;30411:21;30392:4;30449:49;30494:2;30483:9;30479:18;6056:2;6044:15;;-1:-1:-1;;;6084:4:80;6075:14;;6068:36;6129:2;6120:12;;5979:159;30552:797;30841:13;;-1:-1:-1;;;;;30837:22:80;;;30819:41;;30920:4;30908:17;;;30902:24;30898:33;;30876:20;;;30869:63;30992:4;30980:17;;;30974:24;31000:8;30970:39;30948:20;;;30941:69;31070:4;31058:17;;;31052:24;31048:33;;31026:20;;;31019:63;31138:4;31126:17;;;31120:24;31098:20;;;31091:54;30799:3;31189:17;;;31183:24;31161:20;;;31154:54;31264:4;31252:17;;;31246:24;31224:20;;;31217:54;31331:4;31319:17;;;31313:24;31309:33;31287:20;;;31280:63;;;;30768:3;30753:19;;30552:797::o;31894:275::-;31965:2;31959:9;32030:2;32011:13;;-1:-1:-1;;32007:27:80;31995:40;;32065:18;32050:34;;32086:22;;;32047:62;32044:88;;;32112:18;;:::i;:::-;32148:2;32141:22;31894:275;;-1:-1:-1;31894:275:80:o;32477:128::-;32517:3;32548:1;32544:6;32541:1;32538:13;32535:39;;;32554:18;;:::i;:::-;-1:-1:-1;32590:9:80;;32477:128::o;32610:168::-;32650:7;32716:1;32712;32708:6;32704:14;32701:1;32698:21;32693:1;32686:9;32679:17;32675:45;32672:71;;;32723:18;;:::i;:::-;-1:-1:-1;32763:9:80;;32610:168::o;32783:258::-;32855:1;32865:113;32879:6;32876:1;32873:13;32865:113;;;32955:11;;;32949:18;32936:11;;;32929:39;32901:2;32894:10;32865:113;;;32996:6;32993:1;32990:13;32987:48;;;-1:-1:-1;;33031:1:80;33013:16;;33006:27;32783:258::o;33046:380::-;33125:1;33121:12;;;;33168;;;33189:61;;33243:4;33235:6;33231:17;33221:27;;33189:61;33296:2;33288:6;33285:14;33265:18;33262:38;33259:161;;;33342:10;33337:3;33333:20;33330:1;33323:31;33377:4;33374:1;33367:15;33405:4;33402:1;33395:15;33259:161;;33046:380;;;:::o;33431:135::-;33470:3;-1:-1:-1;;33491:17:80;;33488:43;;;33511:18;;:::i;:::-;-1:-1:-1;33558:1:80;33547:13;;33431:135::o;33571:127::-;33632:10;33627:3;33623:20;33620:1;33613:31;33663:4;33660:1;33653:15;33687:4;33684:1;33677:15;33703:127;33764:10;33759:3;33755:20;33752:1;33745:31;33795:4;33792:1;33785:15;33819:4;33816:1;33809:15;33835:127;33896:10;33891:3;33887:20;33884:1;33877:31;33927:4;33924:1;33917:15;33951:4;33948:1;33941:15;33967:131;-1:-1:-1;;;;;34042:31:80;;34032:42;;34022:70;;34088:1;34085;34078:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BNB()": "58f7f6d2",
    "BONE()": "c36596a6",
    "BabyDoge()": "d1a72ed6",
    "CURVE()": "3a3c3b87",
    "DAI()": "e0bab4c4",
    "ELON()": "2fab7aea",
    "FLOKI()": "2f9f8c13",
    "FactoryV2()": "d5bfbe4c",
    "FactoryV3()": "c2867f20",
    "HarryPotterObamaSonic10Inu()": "0fb405b7",
    "IS_TEST()": "fa7626d4",
    "LEASH()": "ad39e5fd",
    "LINK()": "1b6b6d23",
    "MEME()": "2e7b0948",
    "PEPE()": "e4fbaecb",
    "QUOTER()": "8dae88c2",
    "SHIB()": "e24b85e7",
    "SwapRouterV2()": "ce2da055",
    "SwapRouterV3()": "d1a3925a",
    "UNI()": "541bcb76",
    "WBTC()": "4dede3de",
    "WETH9()": "4aa4a4fc",
    "WSM()": "5725a977",
    "WXRP()": "d8280a7e",
    "assetList(uint256)": "a0b4b301",
    "dai()": "f4b9fa75",
    "ethPriceOracle()": "ac0e47f5",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "factory()": "c45a0155",
    "factoryV3()": "1d5f45f5",
    "failed()": "ba414fa6",
    "indexToken()": "e7d015f2",
    "initializeAssetList()": "e1497cff",
    "oracle()": "7dc0d1d0",
    "quoter()": "c6bbd5a7",
    "setUp()": "0a9254e4",
    "swapRouter()": "c31c9c07",
    "swapVersions(uint256)": "5b718560",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testBlock()": "38d6c81c",
    "testGetPrice()": "2a888735",
    "testInitialized()": "0e7628c6",
    "testIssuanceWithEth()": "85f65a27",
    "testIssuanceWithTokens()": "5cc6f954",
    "testIssuanceWithTokensOutput()": "037e5f68",
    "testOracleList()": "39c66af1",
    "testSwap()": "6e008a03",
    "tokenShares(uint256)": "3ae64e0c",
    "updateOracleList()": "95d5772d",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeRatePerDayScaled\",\"type\":\"uint256\"}],\"name\":\"FeeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"methodologist\",\"type\":\"address\"}],\"name\":\"MethodologistSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"methodology\",\"type\":\"string\"}],\"name\":\"MethodologySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintFeeToReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"SupplyCeilingSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRestricted\",\"type\":\"bool\"}],\"name\":\"ToggledRestricted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BabyDoge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CURVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ELON\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLOKI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FactoryV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FactoryV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HarryPotterObamaSonic10Inu\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEASH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MEME\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PEPE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHIB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SwapRouterV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SwapRouterV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WSM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WXRP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPriceOracle\",\"outputs\":[{\"internalType\":\"contract MockV3Aggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IndexFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryV3\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexToken\",\"outputs\":[{\"internalType\":\"contract IndexToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeAssetList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract MockApiOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"contract IQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"swapVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIssuanceWithEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIssuanceWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIssuanceWithTokensOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOracleList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwap\",\"outputs\":[{\"internalType\":\"contract TestSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateOracleList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/IndexTokenFactory.t.sol\":\"CounterTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/chainlink/ChainlinkClient.sol\":{\"keccak256\":\"0x459b2ff354049bb0d7c0b5c76441a150f528904c598d9787ef97229fc18f5caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://195b51d95794bb7a129c8ae3d98e6825d9c68043125cf2a364aa49eae3345599\",\"dweb:/ipfs/QmQGw4VDEbx8ZK6vCosRoVFxPrDHsrbAjkZFqMYQeDgUeh\"]},\"contracts/factory/IndexFactory.sol\":{\"keccak256\":\"0x4f13286ecc889854856a743ccc2fd697030540ed985e6f0a99e63749995fbcfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9bd9a94891dd86607e3cce43e08a8c5b6cd500fff21e6d777559b5d79deedc0\",\"dweb:/ipfs/QmUBrSZzHp1PG7T5omDMx6qr55RguDbsg8RMqZA31qfRgC\"]},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xb039ad91b6085aa9b1339072f5aab0d4c5b66c7cca2b80053f21307feab7e498\",\"urls\":[\"bzz-raw://06e4d0d4f480a233ad0362458c845afc3b3e8e153b6f58161caaa5fc13324e7c\",\"dweb:/ipfs/QmXvm8goJsdoLjWCDNgcFPieSoJm4hvTKmoKtTcbQYHbex\"]},\"contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x90b99057688a80fe2344dc12047db39490b0d3672f32512f308d75e5539e9b22\",\"urls\":[\"bzz-raw://98345e471311762dcd4c8ce954ca448ce798815ad3492746726650acf64eba25\",\"dweb:/ipfs/QmUGPBBvhSgbZCq5Cawt7P5AX38WoYX7f3jKw1SSdsuMhV\"]},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0xf0cf73251d12bc74c7fa4a92fec66bd6e77a0f9c5c76e7dabf4f7145bc9d9ec4\",\"urls\":[\"bzz-raw://71f01e841269fae77e51e1cd725c3a8b514cf0ab8ab77624c48d299db8609ccc\",\"dweb:/ipfs/QmTrabnQ7HpuiBEYxAJZWQE6iHoSf89Ad545SPcHb2CA2W\"]},\"contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x849b51880895815bcfc84b4b660fedae95612f814084860c855d905b3a78830b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://196befeddd2f3fbba1a2f9c84fbb7387180f61ba5c3640d465abfa90be64515e\",\"dweb:/ipfs/QmZkSW6eNZeD9NVTTKeCiPpxY3C4Mf1HHH5BrypaR2Tsif\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2\",\"dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro\"]},\"contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x2a1203a982f477fc8c9e6bf3b9189cd9fcbf75a86a0ceb133b5ade3ff6d464db\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3a45ba66a916cce5f2c897829201cec76cd4670c17d11388d6e7457d641e5981\",\"dweb:/ipfs/QmYJgYx2y98A9TTtkUJ8A66Hu7tcXbRDk7Ng25TWSBW7Yy\"]},\"contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0x77b10716cd03e543440af3d92a68fd0316dc857b232b2fb34f8fea378e6e1f96\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a3663072ea331f7c375c08895045afcd9a847e6e69ee8b5a06c1eed64111baee\",\"dweb:/ipfs/QmQHaLiJSLUqr4ikQUZ9edmbXsLCRo6X881RFxzkpJXMkD\"]},\"contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0x4f65f1f9e253311980d031d85338742939beaeea20d10834b58d397483b6bf01\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4c704da7cec1464a94afd20426bbfcd028f98b49d6337e412db9a29e04159e8\",\"dweb:/ipfs/QmdYWeGzeLuab75RaHLLxy9Lwwy5RjTX76zcEXgCBgsgMr\"]},\"contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x35ad671af6dc4e1826e4cfc95eeee7d05b41222c91ff0f930f14f90d6b67bad3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9437fe522a4c239b74577e7c1c124d1dda2fc5876c9ff2d3447d38de7aec00ce\",\"dweb:/ipfs/QmaDhDyuo1uANPDwUDsfQtW2pFqeFic7ujaSStbG1fMJPc\"]},\"contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x3987c968f344c38ffe2c6722a96fa813829850b75dee91ac3ca840d19778f08b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d46c695389a8354d6ae853575d111b146e2ad4462dd9547b51951dfdb926fe37\",\"dweb:/ipfs/QmVLPideqDGYxf8jTEhSMGg5R6HZW3pApE5t9wQHJwADw8\"]},\"contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x6cbc7997317eeeb1556f3eb2dfc3687c6e59a8b50a9603d755501fd9eccdada4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e52777a66fedc4c3448cbabe8885ae8daeeac42ce4705cdec9bd667f7804306\",\"dweb:/ipfs/QmVZ9dRCj56rK9ZgesKAQap6bDRKdEsVeRv64Si42LV5Pk\"]},\"contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x9e87b8eb3ac1e7ab4eca0054217e265cc67d13d583e2645d4dfcd35b91889c79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea51e01a588bfb14c1377e430382ceca2926961e4e9d20f8d0eb8f4c423bb20c\",\"dweb:/ipfs/QmcvQ4bt7xuMFoKXKLs5jQPt6Z1nru4k1sBX5eA4A1G67T\"]},\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x98f8df4eeddbeffac13b91aee976d9bccb7a866be8073f55b13f95b214ba5afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1987e919bd75258c05cbaa691545a7555f09c664d1f657749ce19309ec2ab4d4\",\"dweb:/ipfs/Qmdx9e4wVAR94Ej9qM1FRHDZ6WBgXHRpJBwozwZAuVpnUF\"]},\"contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0x7efc566f04b02c84ddcafc4a8ec134f099a255b5d3f54afc7b49fe16a7818252\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9871cbac1a4a3159c75a7279134dc15b01b63b5975f40df5e151cbd72187b944\",\"dweb:/ipfs/QmZaDg41mATrwyevdFCpvASkn36xi5vmCJ14L6L8h3Wxjo\"]},\"contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x37d79844cca46b38abf4c0969567c731c2c6ac2d98f65ea44bfcd6e32f3a7f0f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c76e3fdae638dc2b08fc53eddf614a679660f16d5b544c9c2f31420741c773c3\",\"dweb:/ipfs/Qmcwd8jd2yhEjr6tDPAcWdZcUKSKx4BXnksGgcNc2xLjkm\"]},\"contracts/proposable/ProposableOwnableUpgradeable.sol\":{\"keccak256\":\"0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65\",\"dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72\"]},\"contracts/test/LinkToken.sol\":{\"keccak256\":\"0xac1b483b01db9f5f20d76d1deb5a75e1f454ef9048d04817576236468b0e3884\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9417c186bfb06c004f421ae5efec185063076c0bb729a7e00a9fab9839d33010\",\"dweb:/ipfs/QmRw6aekTLJjscgM79JcyY5hjv4LH8o2Ng8cErMAdeDbMV\"]},\"contracts/test/MockApiOracle.sol\":{\"keccak256\":\"0x41773ec7b1ff0a7e132034d1eb1eacd8c9494e9e90ddeb2cc8d6ea0174e1c278\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38e65e87565ed9aa3cad5a66981993fc1c2671a89a7c9f39dd113b6c715849a2\",\"dweb:/ipfs/Qmbq7oc6awYvrFJxGx754xe1ttAeoVp2yntQ8SKaLhAN3G\"]},\"contracts/test/MockV3Aggregator.sol\":{\"keccak256\":\"0x7fc96b521298f9ad72fec0208a98435da1f02d821626f54313ca50fd544a55db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07a0f2e7c5c51605c298bfdf9487740566a9686b304362d6c73c6dd5396d67fc\",\"dweb:/ipfs/QmPg2GY3xjCZtZHqGWsdTEpHTB9o73CLRhz8XM48Pjqfj9\"]},\"contracts/test/TestSwap.sol\":{\"keccak256\":\"0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b\",\"dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW\"]},\"contracts/test/libs/LinkTokenReceiver.sol\":{\"keccak256\":\"0x221baf5efeb32e9f0eceebb7556d1e94f0677e0432da0beac17c1bdec6aa04c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb5d72ba9a4472100ef3755a64e7516726344f1b499b934994c96df0d3d0001\",\"dweb:/ipfs/QmVGYdMSyi3oKx5QkU8q9ELUyv9Y7QE8erandAVSf9PG6L\"]},\"contracts/test/libs/SafeMathChainlink.sol\":{\"keccak256\":\"0x60cb79389647fba9e6aac2be7a4995c78839546e5dd9b73b5c4c9b0beb30f882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c83d59e05254c95818f00663ae174fd084697613477a83925f750165d8983d3a\",\"dweb:/ipfs/QmetcPnpPG4WUT397ggx6fXJLMNp8pKb24jagPXKUDvUhW\"]},\"contracts/token/IndexToken.sol\":{\"keccak256\":\"0xa4a770d03c8d38588b118f33f4a9e4bd145c97362a0e54c3c5e2756ccf0dbc50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21aa9ce1ff3c34f4ee4af1c5282fca9669569b5255ed023287579794032738cd\",\"dweb:/ipfs/QmfJ9W5jUx3CKEiNy7aRL4Wa56dBHSzS2KZPW6KKN5U1mT\"]},\"contracts/token/TokenInterface.sol\":{\"keccak256\":\"0xf928abf1e7c62da780bd92fcfe85320afa6be336e3cd9c83a5da901dc2ecd710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://512f00a70ce82640a62c6a7684e21cc43f09f2d6b7ca0251225fc54128e7d41c\",\"dweb:/ipfs/QmQGr9drQxgSb1LXyB6LGJGB3HagthFoUZzXP5y2DruX71\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3\",\"dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731\",\"dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a\",\"dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f\",\"dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c\",\"dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a\",\"dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254\",\"dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f\",\"dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc\",\"dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1\",\"dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh\"]},\"node_modules/@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fbfa4cee3ce9fe3f5be6eda7e3304263d77b514be0bf5fadffa24d3f654ad2d\",\"dweb:/ipfs/QmTQmA4AJ9NookAyTg9DP6Mem6X8WSHJ5WjQJvqhE8K9qV\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a\",\"dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40958fa820d41025822fe423111c74d5b8d0dfe1a30ae4fba4f6896a55fc2868\",\"dweb:/ipfs/QmbwYCM5k6h43T6qQV8DEpUxv5uErVSTCD6Fqm5DMLDgNi\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ed9275abc614a37a13f86c148f3a4341d955a6b52a1a655357505e0926caab\",\"dweb:/ipfs/Qmaqgq3HiakdSBAe9NtGXYMxVFBjTkLbzyiiyjJUJ1g1M3\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8fbc2ccf2b3dfc8249306b7dc63624a4ec6f6ee43649d631f7363710c763b6\",\"dweb:/ipfs/QmePqh8R8EZMygYkawshsWArTrVA8VCdamLGV6ZZsVJgTz\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ec80973bbc95f59ce3a46aadd7761df6e4131bda14a01a265d76a8e007dd5d\",\"dweb:/ipfs/QmXwhsxjbkuXSHu6SX6tZxrQCXrdnJ4o2M7b3yFSgcWR1f\"]},\"node_modules/@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol\":{\"keccak256\":\"0x7a5ac06d48ad507a441c8de5f813765f3beed7fb47aa88b26ad34c020ea0c644\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecae51d09e8cb28f7d12203a3fdf44254a73ad9e95074d763a4803bd7a1c3f43\",\"dweb:/ipfs/QmayV4kJPUg5eVUw9N3HyJCzuS2SR5N6299j8Krc2RJH38\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88cb96caa94128821daec5478c0f3646902007b81a0604b2e3ab79ea2f40b056\",\"dweb:/ipfs/Qmd1nu9CpgouPmukNQpZThxKgPZAayXxqBfwbDVHfMrCrF\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d47a793b314afe9cd82fcf05ffe4ebbfa5504c2decc83004edbb3b2069d4f0c3\",\"dweb:/ipfs/Qmd2YLSiS8xeeXqireh6qJgTTwVY2VscZpv2cQBU8gkEJT\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63b50d13ca97c4dd62738398bb2e423a36563b827b0af94c0e7a47cf0d4a2e6b\",\"dweb:/ipfs/QmXjy7BmtnPeCLMaMnGGnsxDPGxohfDpYzP8PnUoh6gBGa\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"test/foundry/IndexTokenFactory.t.sol\":{\"keccak256\":\"0x70c45d521351cc96424f12bd36230e76c023046fb3594ee2578291def592c383\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c2e86edeed34a4d8746b3e19d110bd80df89b25a3633cbec835cecb1d9463316\",\"dweb:/ipfs/QmduTmEwbwusVEyei3CujA3egoF24EFgK7N6ZWW67rtPJn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "feeRatePerDayScaled",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeRateSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeReceiverSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "methodologist",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MethodologistSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "methodology",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MethodologySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintFeeToReceiver",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MinterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supplyCeiling",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupplyCeilingSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isRestricted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ToggledRestricted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BNB",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BONE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BabyDoge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CURVE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ELON",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FLOKI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FactoryV2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FactoryV3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HarryPotterObamaSonic10Inu",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LEASH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LINK",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MEME",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PEPE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SHIB",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SwapRouterV2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SwapRouterV3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UNI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WBTC",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WSM",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WXRP",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetList",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dai",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ethPriceOracle",
          "outputs": [
            {
              "internalType": "contract MockV3Aggregator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "contract IndexFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryV3",
          "outputs": [
            {
              "internalType": "contract IUniswapV3Factory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "indexToken",
          "outputs": [
            {
              "internalType": "contract IndexToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeAssetList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "contract MockApiOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quoter",
          "outputs": [
            {
              "internalType": "contract IQuoter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "swapVersions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBlock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetPrice"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIssuanceWithEth"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIssuanceWithTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIssuanceWithTokensOutput"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOracleList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testSwap",
          "outputs": [
            {
              "internalType": "contract TestSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOracleList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/IndexTokenFactory.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/chainlink/ChainlinkClient.sol": {
        "keccak256": "0x459b2ff354049bb0d7c0b5c76441a150f528904c598d9787ef97229fc18f5caf",
        "urls": [
          "bzz-raw://195b51d95794bb7a129c8ae3d98e6825d9c68043125cf2a364aa49eae3345599",
          "dweb:/ipfs/QmQGw4VDEbx8ZK6vCosRoVFxPrDHsrbAjkZFqMYQeDgUeh"
        ],
        "license": "MIT"
      },
      "contracts/factory/IndexFactory.sol": {
        "keccak256": "0x4f13286ecc889854856a743ccc2fd697030540ed985e6f0a99e63749995fbcfd",
        "urls": [
          "bzz-raw://e9bd9a94891dd86607e3cce43e08a8c5b6cd500fff21e6d777559b5d79deedc0",
          "dweb:/ipfs/QmUBrSZzHp1PG7T5omDMx6qr55RguDbsg8RMqZA31qfRgC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IUniswapV2Factory.sol": {
        "keccak256": "0xb039ad91b6085aa9b1339072f5aab0d4c5b66c7cca2b80053f21307feab7e498",
        "urls": [
          "bzz-raw://06e4d0d4f480a233ad0362458c845afc3b3e8e153b6f58161caaa5fc13324e7c",
          "dweb:/ipfs/QmXvm8goJsdoLjWCDNgcFPieSoJm4hvTKmoKtTcbQYHbex"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV2Router01.sol": {
        "keccak256": "0x90b99057688a80fe2344dc12047db39490b0d3672f32512f308d75e5539e9b22",
        "urls": [
          "bzz-raw://98345e471311762dcd4c8ce954ca448ce798815ad3492746726650acf64eba25",
          "dweb:/ipfs/QmUGPBBvhSgbZCq5Cawt7P5AX38WoYX7f3jKw1SSdsuMhV"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV2Router02.sol": {
        "keccak256": "0xf0cf73251d12bc74c7fa4a92fec66bd6e77a0f9c5c76e7dabf4f7145bc9d9ec4",
        "urls": [
          "bzz-raw://71f01e841269fae77e51e1cd725c3a8b514cf0ab8ab77624c48d299db8609ccc",
          "dweb:/ipfs/QmTrabnQ7HpuiBEYxAJZWQE6iHoSf89Ad545SPcHb2CA2W"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x849b51880895815bcfc84b4b660fedae95612f814084860c855d905b3a78830b",
        "urls": [
          "bzz-raw://196befeddd2f3fbba1a2f9c84fbb7387180f61ba5c3640d465abfa90be64515e",
          "dweb:/ipfs/QmZkSW6eNZeD9NVTTKeCiPpxY3C4Mf1HHH5BrypaR2Tsif"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9",
        "urls": [
          "bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2",
          "dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x2a1203a982f477fc8c9e6bf3b9189cd9fcbf75a86a0ceb133b5ade3ff6d464db",
        "urls": [
          "bzz-raw://3a45ba66a916cce5f2c897829201cec76cd4670c17d11388d6e7457d641e5981",
          "dweb:/ipfs/QmYJgYx2y98A9TTtkUJ8A66Hu7tcXbRDk7Ng25TWSBW7Yy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0x77b10716cd03e543440af3d92a68fd0316dc857b232b2fb34f8fea378e6e1f96",
        "urls": [
          "bzz-raw://a3663072ea331f7c375c08895045afcd9a847e6e69ee8b5a06c1eed64111baee",
          "dweb:/ipfs/QmQHaLiJSLUqr4ikQUZ9edmbXsLCRo6X881RFxzkpJXMkD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0x4f65f1f9e253311980d031d85338742939beaeea20d10834b58d397483b6bf01",
        "urls": [
          "bzz-raw://c4c704da7cec1464a94afd20426bbfcd028f98b49d6337e412db9a29e04159e8",
          "dweb:/ipfs/QmdYWeGzeLuab75RaHLLxy9Lwwy5RjTX76zcEXgCBgsgMr"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x35ad671af6dc4e1826e4cfc95eeee7d05b41222c91ff0f930f14f90d6b67bad3",
        "urls": [
          "bzz-raw://9437fe522a4c239b74577e7c1c124d1dda2fc5876c9ff2d3447d38de7aec00ce",
          "dweb:/ipfs/QmaDhDyuo1uANPDwUDsfQtW2pFqeFic7ujaSStbG1fMJPc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0x3987c968f344c38ffe2c6722a96fa813829850b75dee91ac3ca840d19778f08b",
        "urls": [
          "bzz-raw://d46c695389a8354d6ae853575d111b146e2ad4462dd9547b51951dfdb926fe37",
          "dweb:/ipfs/QmVLPideqDGYxf8jTEhSMGg5R6HZW3pApE5t9wQHJwADw8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x6cbc7997317eeeb1556f3eb2dfc3687c6e59a8b50a9603d755501fd9eccdada4",
        "urls": [
          "bzz-raw://6e52777a66fedc4c3448cbabe8885ae8daeeac42ce4705cdec9bd667f7804306",
          "dweb:/ipfs/QmVZ9dRCj56rK9ZgesKAQap6bDRKdEsVeRv64Si42LV5Pk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x9e87b8eb3ac1e7ab4eca0054217e265cc67d13d583e2645d4dfcd35b91889c79",
        "urls": [
          "bzz-raw://ea51e01a588bfb14c1377e430382ceca2926961e4e9d20f8d0eb8f4c423bb20c",
          "dweb:/ipfs/QmcvQ4bt7xuMFoKXKLs5jQPt6Z1nru4k1sBX5eA4A1G67T"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FullMath.sol": {
        "keccak256": "0x98f8df4eeddbeffac13b91aee976d9bccb7a866be8073f55b13f95b214ba5afb",
        "urls": [
          "bzz-raw://1987e919bd75258c05cbaa691545a7555f09c664d1f657749ce19309ec2ab4d4",
          "dweb:/ipfs/Qmdx9e4wVAR94Ej9qM1FRHDZ6WBgXHRpJBwozwZAuVpnUF"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0x7efc566f04b02c84ddcafc4a8ec134f099a255b5d3f54afc7b49fe16a7818252",
        "urls": [
          "bzz-raw://9871cbac1a4a3159c75a7279134dc15b01b63b5975f40df5e151cbd72187b944",
          "dweb:/ipfs/QmZaDg41mATrwyevdFCpvASkn36xi5vmCJ14L6L8h3Wxjo"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/TickMath.sol": {
        "keccak256": "0x37d79844cca46b38abf4c0969567c731c2c6ac2d98f65ea44bfcd6e32f3a7f0f",
        "urls": [
          "bzz-raw://c76e3fdae638dc2b08fc53eddf614a679660f16d5b544c9c2f31420741c773c3",
          "dweb:/ipfs/Qmcwd8jd2yhEjr6tDPAcWdZcUKSKx4BXnksGgcNc2xLjkm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/proposable/ProposableOwnableUpgradeable.sol": {
        "keccak256": "0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70",
        "urls": [
          "bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65",
          "dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72"
        ],
        "license": "MIT"
      },
      "contracts/test/LinkToken.sol": {
        "keccak256": "0xac1b483b01db9f5f20d76d1deb5a75e1f454ef9048d04817576236468b0e3884",
        "urls": [
          "bzz-raw://9417c186bfb06c004f421ae5efec185063076c0bb729a7e00a9fab9839d33010",
          "dweb:/ipfs/QmRw6aekTLJjscgM79JcyY5hjv4LH8o2Ng8cErMAdeDbMV"
        ],
        "license": "MIT"
      },
      "contracts/test/MockApiOracle.sol": {
        "keccak256": "0x41773ec7b1ff0a7e132034d1eb1eacd8c9494e9e90ddeb2cc8d6ea0174e1c278",
        "urls": [
          "bzz-raw://38e65e87565ed9aa3cad5a66981993fc1c2671a89a7c9f39dd113b6c715849a2",
          "dweb:/ipfs/Qmbq7oc6awYvrFJxGx754xe1ttAeoVp2yntQ8SKaLhAN3G"
        ],
        "license": "MIT"
      },
      "contracts/test/MockV3Aggregator.sol": {
        "keccak256": "0x7fc96b521298f9ad72fec0208a98435da1f02d821626f54313ca50fd544a55db",
        "urls": [
          "bzz-raw://07a0f2e7c5c51605c298bfdf9487740566a9686b304362d6c73c6dd5396d67fc",
          "dweb:/ipfs/QmPg2GY3xjCZtZHqGWsdTEpHTB9o73CLRhz8XM48Pjqfj9"
        ],
        "license": "MIT"
      },
      "contracts/test/TestSwap.sol": {
        "keccak256": "0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3",
        "urls": [
          "bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b",
          "dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/libs/LinkTokenReceiver.sol": {
        "keccak256": "0x221baf5efeb32e9f0eceebb7556d1e94f0677e0432da0beac17c1bdec6aa04c0",
        "urls": [
          "bzz-raw://dfb5d72ba9a4472100ef3755a64e7516726344f1b499b934994c96df0d3d0001",
          "dweb:/ipfs/QmVGYdMSyi3oKx5QkU8q9ELUyv9Y7QE8erandAVSf9PG6L"
        ],
        "license": "MIT"
      },
      "contracts/test/libs/SafeMathChainlink.sol": {
        "keccak256": "0x60cb79389647fba9e6aac2be7a4995c78839546e5dd9b73b5c4c9b0beb30f882",
        "urls": [
          "bzz-raw://c83d59e05254c95818f00663ae174fd084697613477a83925f750165d8983d3a",
          "dweb:/ipfs/QmetcPnpPG4WUT397ggx6fXJLMNp8pKb24jagPXKUDvUhW"
        ],
        "license": "MIT"
      },
      "contracts/token/IndexToken.sol": {
        "keccak256": "0xa4a770d03c8d38588b118f33f4a9e4bd145c97362a0e54c3c5e2756ccf0dbc50",
        "urls": [
          "bzz-raw://21aa9ce1ff3c34f4ee4af1c5282fca9669569b5255ed023287579794032738cd",
          "dweb:/ipfs/QmfJ9W5jUx3CKEiNy7aRL4Wa56dBHSzS2KZPW6KKN5U1mT"
        ],
        "license": "MIT"
      },
      "contracts/token/TokenInterface.sol": {
        "keccak256": "0xf928abf1e7c62da780bd92fcfe85320afa6be336e3cd9c83a5da901dc2ecd710",
        "urls": [
          "bzz-raw://512f00a70ce82640a62c6a7684e21cc43f09f2d6b7ca0251225fc54128e7d41c",
          "dweb:/ipfs/QmQGr9drQxgSb1LXyB6LGJGB3HagthFoUZzXP5y2DruX71"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261",
        "urls": [
          "bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379",
          "dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e",
        "urls": [
          "bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3",
          "dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc",
        "urls": [
          "bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731",
          "dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52",
        "urls": [
          "bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a",
          "dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb",
        "urls": [
          "bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f",
          "dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04",
        "urls": [
          "bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c",
          "dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417",
        "urls": [
          "bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a",
          "dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357",
        "urls": [
          "bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254",
          "dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a",
        "urls": [
          "bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f",
          "dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a",
        "urls": [
          "bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc",
          "dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb",
        "urls": [
          "bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4",
          "dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb",
        "urls": [
          "bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1",
          "dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/Chainlink.sol": {
        "keccak256": "0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105",
        "urls": [
          "bzz-raw://6fbfa4cee3ce9fe3f5be6eda7e3304263d77b514be0bf5fadffa24d3f654ad2d",
          "dweb:/ipfs/QmTQmA4AJ9NookAyTg9DP6Mem6X8WSHJ5WjQJvqhE8K9qV"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol": {
        "keccak256": "0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04",
        "urls": [
          "bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a",
          "dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol": {
        "keccak256": "0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0",
        "urls": [
          "bzz-raw://40958fa820d41025822fe423111c74d5b8d0dfe1a30ae4fba4f6896a55fc2868",
          "dweb:/ipfs/QmbwYCM5k6h43T6qQV8DEpUxv5uErVSTCD6Fqm5DMLDgNi"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
        "keccak256": "0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5",
        "urls": [
          "bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd",
          "dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol": {
        "keccak256": "0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68",
        "urls": [
          "bzz-raw://b6ed9275abc614a37a13f86c148f3a4341d955a6b52a1a655357505e0926caab",
          "dweb:/ipfs/Qmaqgq3HiakdSBAe9NtGXYMxVFBjTkLbzyiiyjJUJ1g1M3"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol": {
        "keccak256": "0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a",
        "urls": [
          "bzz-raw://ba8fbc2ccf2b3dfc8249306b7dc63624a4ec6f6ee43649d631f7363710c763b6",
          "dweb:/ipfs/QmePqh8R8EZMygYkawshsWArTrVA8VCdamLGV6ZZsVJgTz"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol": {
        "keccak256": "0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7",
        "urls": [
          "bzz-raw://12ec80973bbc95f59ce3a46aadd7761df6e4131bda14a01a265d76a8e007dd5d",
          "dweb:/ipfs/QmXwhsxjbkuXSHu6SX6tZxrQCXrdnJ4o2M7b3yFSgcWR1f"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol": {
        "keccak256": "0x7a5ac06d48ad507a441c8de5f813765f3beed7fb47aa88b26ad34c020ea0c644",
        "urls": [
          "bzz-raw://ecae51d09e8cb28f7d12203a3fdf44254a73ad9e95074d763a4803bd7a1c3f43",
          "dweb:/ipfs/QmayV4kJPUg5eVUw9N3HyJCzuS2SR5N6299j8Krc2RJH38"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol": {
        "keccak256": "0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d",
        "urls": [
          "bzz-raw://88cb96caa94128821daec5478c0f3646902007b81a0604b2e3ab79ea2f40b056",
          "dweb:/ipfs/Qmd1nu9CpgouPmukNQpZThxKgPZAayXxqBfwbDVHfMrCrF"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol": {
        "keccak256": "0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48",
        "urls": [
          "bzz-raw://d47a793b314afe9cd82fcf05ffe4ebbfa5504c2decc83004edbb3b2069d4f0c3",
          "dweb:/ipfs/Qmd2YLSiS8xeeXqireh6qJgTTwVY2VscZpv2cQBU8gkEJT"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol": {
        "keccak256": "0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d",
        "urls": [
          "bzz-raw://63b50d13ca97c4dd62738398bb2e423a36563b827b0af94c0e7a47cf0d4a2e6b",
          "dweb:/ipfs/QmXjy7BmtnPeCLMaMnGGnsxDPGxohfDpYzP8PnUoh6gBGa"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": {
        "keccak256": "0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff",
        "urls": [
          "bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417",
          "dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/IndexTokenFactory.t.sol": {
        "keccak256": "0x70c45d521351cc96424f12bd36230e76c023046fb3594ee2578291def592c383",
        "urls": [
          "bzz-raw://c2e86edeed34a4d8746b3e19d110bd80df89b25a3633cbec835cecb1d9463316",
          "dweb:/ipfs/QmduTmEwbwusVEyei3CujA3egoF24EFgK7N6ZWW67rtPJn"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/IndexTokenFactory.t.sol",
    "id": 10757,
    "exportedSymbols": {
      "AddressUpgradeable": [
        5102
      ],
      "AggregatorInterface": [
        61987
      ],
      "AggregatorV2V3Interface": [
        61776
      ],
      "AggregatorV3Interface": [
        12374
      ],
      "BufferChainlink": [
        61281
      ],
      "CBORChainlink": [
        61728
      ],
      "Chainlink": [
        15295
      ],
      "ChainlinkClient": [
        11593
      ],
      "ChainlinkRequestInterface": [
        15328
      ],
      "Context": [
        60759
      ],
      "ContextUpgradeable": [
        5144
      ],
      "CounterTest": [
        10756
      ],
      "DSTest": [
        19390
      ],
      "ENSInterface": [
        15408
      ],
      "ENSResolver_Chainlink": [
        15601
      ],
      "ERC20": [
        14728
      ],
      "ERC20Upgradeable": [
        4669
      ],
      "ERC677": [
        12892
      ],
      "ERC677Receiver": [
        12903
      ],
      "ERC677Token": [
        12996
      ],
      "FullMath": [
        16086
      ],
      "IERC20": [
        12452
      ],
      "IERC20Metadata": [
        60737
      ],
      "IERC20MetadataUpgradeable": [
        4772
      ],
      "IERC20Upgradeable": [
        4747
      ],
      "IQuoter": [
        12592
      ],
      "ISwapRouter": [
        12692
      ],
      "IUniswapV2Factory": [
        11605
      ],
      "IUniswapV2Router01": [
        15909
      ],
      "IUniswapV2Router02": [
        11693
      ],
      "IUniswapV3Factory": [
        12535
      ],
      "IUniswapV3Pool": [
        14047
      ],
      "IUniswapV3PoolActions": [
        60360
      ],
      "IUniswapV3PoolDerivedState": [
        60391
      ],
      "IUniswapV3PoolErrors": [
        60419
      ],
      "IUniswapV3PoolEvents": [
        60538
      ],
      "IUniswapV3PoolImmutables": [
        60578
      ],
      "IUniswapV3PoolOwnerActions": [
        60604
      ],
      "IUniswapV3PoolState": [
        60712
      ],
      "IUniswapV3SwapCallback": [
        16646
      ],
      "IWETH": [
        11710
      ],
      "IndexFactory": [
        2503
      ],
      "IndexToken": [
        3480
      ],
      "Initializable": [
        3930
      ],
      "LinkERC20": [
        13036
      ],
      "LinkToken": [
        13137
      ],
      "LinkTokenInterface": [
        15503
      ],
      "LinkTokenReceiver": [
        16753
      ],
      "MockApiOracle": [
        13961
      ],
      "MockV3Aggregator": [
        17098
      ],
      "OperatorInterface": [
        15583
      ],
      "OracleInterface": [
        61767
      ],
      "OracleLibrary": [
        12328
      ],
      "OwnableUpgradeable": [
        3761
      ],
      "PausableUpgradeable": [
        4057
      ],
      "PointerInterface": [
        15591
      ],
      "ProposableOwnableUpgradeable": [
        2575
      ],
      "SafeMathChainlink": [
        16892
      ],
      "StdAssertions": [
        20883
      ],
      "StdChains": [
        21647
      ],
      "StdCheats": [
        24500
      ],
      "StdInvariant": [
        24825
      ],
      "StdStorage": [
        25591
      ],
      "StdStyle": [
        28441
      ],
      "StdUtils": [
        29289
      ],
      "Test": [
        14015
      ],
      "TestBase": [
        19456
      ],
      "TestSwap": [
        14141
      ],
      "TickMath": [
        16632
      ],
      "TokenInterface": [
        3629
      ],
      "TransferHelper": [
        12863
      ],
      "Vm": [
        31000
      ],
      "console": [
        39064
      ],
      "console2": [
        47189
      ],
      "safeconsole": [
        60264
      ],
      "stdError": [
        24566
      ],
      "stdJson": [
        25417
      ],
      "stdMath": [
        25559
      ],
      "stdStorage": [
        27230
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:18601:78",
    "nodes": [
      {
        "id": 9164,
        "nodeType": "PragmaDirective",
        "src": "40:23:78",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 9165,
        "nodeType": "ImportDirective",
        "src": "67:28:78",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 14016,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9166,
        "nodeType": "ImportDirective",
        "src": "97:46:78",
        "nodes": [],
        "absolutePath": "contracts/token/IndexToken.sol",
        "file": "../../contracts/token/IndexToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 3481,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9167,
        "nodeType": "ImportDirective",
        "src": "145:50:78",
        "nodes": [],
        "absolutePath": "contracts/factory/IndexFactory.sol",
        "file": "../../contracts/factory/IndexFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 2504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9168,
        "nodeType": "ImportDirective",
        "src": "197:43:78",
        "nodes": [],
        "absolutePath": "contracts/test/TestSwap.sol",
        "file": "../../contracts/test/TestSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 14142,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9169,
        "nodeType": "ImportDirective",
        "src": "242:55:78",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 14729,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9170,
        "nodeType": "ImportDirective",
        "src": "299:55:78",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 14729,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9171,
        "nodeType": "ImportDirective",
        "src": "356:68:78",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 12693,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9172,
        "nodeType": "ImportDirective",
        "src": "426:70:78",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 12864,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9173,
        "nodeType": "ImportDirective",
        "src": "498:64:78",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 12593,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9174,
        "nodeType": "ImportDirective",
        "src": "564:51:78",
        "nodes": [],
        "absolutePath": "contracts/test/MockV3Aggregator.sol",
        "file": "../../contracts/test/MockV3Aggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 13965,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9175,
        "nodeType": "ImportDirective",
        "src": "617:48:78",
        "nodes": [],
        "absolutePath": "contracts/test/MockApiOracle.sol",
        "file": "../../contracts/test/MockApiOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 13962,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9176,
        "nodeType": "ImportDirective",
        "src": "667:44:78",
        "nodes": [],
        "absolutePath": "contracts/test/LinkToken.sol",
        "file": "../../contracts/test/LinkToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 13139,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9177,
        "nodeType": "ImportDirective",
        "src": "713:55:78",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IUniswapV3Pool.sol",
        "file": "../../contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 14048,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9178,
        "nodeType": "ImportDirective",
        "src": "770:51:78",
        "nodes": [],
        "absolutePath": "contracts/test/MockV3Aggregator.sol",
        "file": "../../contracts/test/MockV3Aggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10757,
        "sourceUnit": 13965,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10756,
        "nodeType": "ContractDefinition",
        "src": "825:17816:78",
        "nodes": [
          {
            "id": 9184,
            "nodeType": "UsingForDirective",
            "src": "863:32:78",
            "nodes": [],
            "libraryName": {
              "id": 9181,
              "name": "stdStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27230,
              "src": "869:10:78"
            },
            "typeName": {
              "id": 9183,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9182,
                "name": "StdStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25591,
                "src": "884:10:78"
              },
              "referencedDeclaration": 25591,
              "src": "884:10:78",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 9187,
            "nodeType": "VariableDeclaration",
            "src": "903:39:78",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SCALAR",
            "nameLocation": "929:6:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9185,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "903:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653230",
              "id": 9186,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "938:4:78",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "1e20"
            },
            "visibility": "internal"
          },
          {
            "id": 9190,
            "nodeType": "VariableDeclaration",
            "src": "951:28:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "e7d015f2",
            "mutability": "mutable",
            "name": "indexToken",
            "nameLocation": "969:10:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexToken_$3480",
              "typeString": "contract IndexToken"
            },
            "typeName": {
              "id": 9189,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9188,
                "name": "IndexToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3480,
                "src": "951:10:78"
              },
              "referencedDeclaration": 3480,
              "src": "951:10:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexToken_$3480",
                "typeString": "contract IndexToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9193,
            "nodeType": "VariableDeclaration",
            "src": "986:27:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "c45a0155",
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "1006:7:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexFactory_$2503",
              "typeString": "contract IndexFactory"
            },
            "typeName": {
              "id": 9192,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9191,
                "name": "IndexFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2503,
                "src": "986:12:78"
              },
              "referencedDeclaration": 2503,
              "src": "986:12:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexFactory_$2503",
                "typeString": "contract IndexFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9196,
            "nodeType": "VariableDeclaration",
            "src": "1020:24:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "6e008a03",
            "mutability": "mutable",
            "name": "testSwap",
            "nameLocation": "1036:8:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestSwap_$14141",
              "typeString": "contract TestSwap"
            },
            "typeName": {
              "id": 9195,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9194,
                "name": "TestSwap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14141,
                "src": "1020:8:78"
              },
              "referencedDeclaration": 14141,
              "src": "1020:8:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestSwap_$14141",
                "typeString": "contract TestSwap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9199,
            "nodeType": "VariableDeclaration",
            "src": "1051:38:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "ac0e47f5",
            "mutability": "mutable",
            "name": "ethPriceOracle",
            "nameLocation": "1075:14:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockV3Aggregator_$17098",
              "typeString": "contract MockV3Aggregator"
            },
            "typeName": {
              "id": 9198,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9197,
                "name": "MockV3Aggregator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17098,
                "src": "1051:16:78"
              },
              "referencedDeclaration": 17098,
              "src": "1051:16:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockV3Aggregator_$17098",
                "typeString": "contract MockV3Aggregator"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9201,
            "nodeType": "VariableDeclaration",
            "src": "1098:19:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mainnetFork",
            "nameLocation": "1106:11:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1098:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9207,
            "nodeType": "VariableDeclaration",
            "src": "1126:32:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "feeReceiver",
            "nameLocation": "1134:11:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9202,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1126:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 9205,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1156:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "expression": {
                  "id": 9203,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19449,
                  "src": "1148:2:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$31000",
                    "typeString": "contract Vm"
                  }
                },
                "id": 9204,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 29360,
                "src": "1148:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 9206,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1148:10:78",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9213,
            "nodeType": "VariableDeclaration",
            "src": "1165:35:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newFeeReceiver",
            "nameLocation": "1173:14:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9208,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1165:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "32",
                  "id": 9211,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1198:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  }
                ],
                "expression": {
                  "id": 9209,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19449,
                  "src": "1190:2:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$31000",
                    "typeString": "contract Vm"
                  }
                },
                "id": 9210,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 29360,
                "src": "1190:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 9212,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1190:10:78",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9219,
            "nodeType": "VariableDeclaration",
            "src": "1207:27:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "1215:6:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9214,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1207:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "33",
                  "id": 9217,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1232:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  }
                ],
                "expression": {
                  "id": 9215,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19449,
                  "src": "1224:2:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$31000",
                    "typeString": "contract Vm"
                  }
                },
                "id": 9216,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 29360,
                "src": "1224:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 9218,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1224:10:78",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9225,
            "nodeType": "VariableDeclaration",
            "src": "1241:30:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newMinter",
            "nameLocation": "1249:9:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9220,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1241:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "34",
                  "id": 9223,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1269:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  },
                  "value": "4"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  }
                ],
                "expression": {
                  "id": 9221,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19449,
                  "src": "1261:2:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$31000",
                    "typeString": "contract Vm"
                  }
                },
                "id": 9222,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 29360,
                "src": "1261:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 9224,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1261:10:78",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9231,
            "nodeType": "VariableDeclaration",
            "src": "1278:34:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "methodologist",
            "nameLocation": "1286:13:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9226,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1278:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "35",
                  "id": 9229,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1310:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  },
                  "value": "5"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  }
                ],
                "expression": {
                  "id": 9227,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19449,
                  "src": "1302:2:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$31000",
                    "typeString": "contract Vm"
                  }
                },
                "id": 9228,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 29360,
                "src": "1302:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 9230,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1302:10:78",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9237,
            "nodeType": "VariableDeclaration",
            "src": "1319:26:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1327:5:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9232,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1319:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "36",
                  "id": 9235,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1343:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  }
                ],
                "expression": {
                  "id": 9233,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19449,
                  "src": "1335:2:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$31000",
                    "typeString": "contract Vm"
                  }
                },
                "id": 9234,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 29360,
                "src": "1335:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 9236,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1335:10:78",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9243,
            "nodeType": "VariableDeclaration",
            "src": "1352:25:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "add1",
            "nameLocation": "1360:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9238,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1352:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "37",
                  "id": 9241,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1375:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_7_by_1",
                    "typeString": "int_const 7"
                  },
                  "value": "7"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_7_by_1",
                    "typeString": "int_const 7"
                  }
                ],
                "expression": {
                  "id": 9239,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19449,
                  "src": "1367:2:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$31000",
                    "typeString": "contract Vm"
                  }
                },
                "id": 9240,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 29360,
                "src": "1367:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 9242,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1367:10:78",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9246,
            "nodeType": "VariableDeclaration",
            "src": "1386:72:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "e0bab4c4",
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "1410:3:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9244,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1386:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 9245,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1416:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "id": 9252,
            "nodeType": "VariableDeclaration",
            "src": "1636:116:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "1d5f45f5",
            "mutability": "constant",
            "name": "factoryV3",
            "nameLocation": "1670:9:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Factory_$12535",
              "typeString": "contract IUniswapV3Factory"
            },
            "typeName": {
              "id": 9248,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9247,
                "name": "IUniswapV3Factory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12535,
                "src": "1636:17:78"
              },
              "referencedDeclaration": 12535,
              "src": "1636:17:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Factory_$12535",
                "typeString": "contract IUniswapV3Factory"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
                  "id": 9250,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1709:42:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 9249,
                "name": "IUniswapV3Factory",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 12535,
                "src": "1691:17:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$12535_$",
                  "typeString": "type(contract IUniswapV3Factory)"
                }
              },
              "id": 9251,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1691:61:78",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Factory_$12535",
                "typeString": "contract IUniswapV3Factory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9255,
            "nodeType": "VariableDeclaration",
            "src": "1765:64:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "e24b85e7",
            "mutability": "mutable",
            "name": "SHIB",
            "nameLocation": "1780:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9253,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1765:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839356144363162306131353064373932313964434636344531453643633031663042363443346345",
              "id": 9254,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1787:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE"
            },
            "visibility": "public"
          },
          {
            "id": 9258,
            "nodeType": "VariableDeclaration",
            "src": "1836:73:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "e4fbaecb",
            "mutability": "constant",
            "name": "PEPE",
            "nameLocation": "1860:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9256,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1836:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836393832353038313435343534436533323564446245343761323564346563336432333131393333",
              "id": 9257,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1867:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6982508145454Ce325dDbE47a25d4ec3d2311933"
            },
            "visibility": "public"
          },
          {
            "id": 9261,
            "nodeType": "VariableDeclaration",
            "src": "1916:74:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "2f9f8c13",
            "mutability": "constant",
            "name": "FLOKI",
            "nameLocation": "1940:5:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9259,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1916:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863663043313232633662373366663830394336393344423736316537426165426536326236613245",
              "id": 9260,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1948:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xcf0C122c6b73ff809C693DB761e7BaeBe62b6a2E"
            },
            "visibility": "public"
          },
          {
            "id": 9264,
            "nodeType": "VariableDeclaration",
            "src": "1997:73:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "2e7b0948",
            "mutability": "constant",
            "name": "MEME",
            "nameLocation": "2021:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9262,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1997:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862313331663441353539303742313064314630413530643861623846413039454333343263643734",
              "id": 9263,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2028:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb131f4A55907B10d1F0A50d8ab8FA09EC342cd74"
            },
            "visibility": "public"
          },
          {
            "id": 9267,
            "nodeType": "VariableDeclaration",
            "src": "2077:77:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "d1a72ed6",
            "mutability": "constant",
            "name": "BabyDoge",
            "nameLocation": "2101:8:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9265,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2077:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841433537446539433141303946654336343845393345423938383735423231324442306434363042",
              "id": 9266,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2112:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xAC57De9C1A09FeC648E93EB98875B212DB0d460B"
            },
            "visibility": "public"
          },
          {
            "id": 9270,
            "nodeType": "VariableDeclaration",
            "src": "2161:73:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "c36596a6",
            "mutability": "constant",
            "name": "BONE",
            "nameLocation": "2185:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9268,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2161:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839383133303337656532323138373939353937643833443461354236463362363737383231386439",
              "id": 9269,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2192:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x9813037ee2218799597d83D4a5B6F3b6778218d9"
            },
            "visibility": "public"
          },
          {
            "id": 9273,
            "nodeType": "VariableDeclaration",
            "src": "2241:95:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "0fb405b7",
            "mutability": "constant",
            "name": "HarryPotterObamaSonic10Inu",
            "nameLocation": "2265:26:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9271,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2241:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837326534663946383038433439413261363164453943353839363239383932304463344545456139",
              "id": 9272,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2294:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x72e4f9F808C49A2a61dE9C5896298920Dc4EEEa9"
            },
            "visibility": "public"
          },
          {
            "id": 9276,
            "nodeType": "VariableDeclaration",
            "src": "2343:73:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "2fab7aea",
            "mutability": "constant",
            "name": "ELON",
            "nameLocation": "2367:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9274,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2343:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837363144333865356464663663636636436637633535373539643532313037353042354436304633",
              "id": 9275,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2374:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x761D38e5ddf6ccf6Cf7c55759d5210750B5D60F3"
            },
            "visibility": "public"
          },
          {
            "id": 9279,
            "nodeType": "VariableDeclaration",
            "src": "2423:72:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "5725a977",
            "mutability": "constant",
            "name": "WSM",
            "nameLocation": "2447:3:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9277,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2423:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307842363245343563334466363131646345323336413644646337413439336437394639444661644566",
              "id": 9278,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2453:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xB62E45c3Df611dcE236A6Ddc7A493d79F9DFadEf"
            },
            "visibility": "public"
          },
          {
            "id": 9282,
            "nodeType": "VariableDeclaration",
            "src": "2502:74:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "ad39e5fd",
            "mutability": "constant",
            "name": "LEASH",
            "nameLocation": "2526:5:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9280,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2502:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832374337304364313934363739354236366265396439353434313835343639393862353436363334",
              "id": 9281,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2534:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x27C70Cd1946795B66be9d954418546998b546634"
            },
            "visibility": "public"
          },
          {
            "id": 9285,
            "nodeType": "VariableDeclaration",
            "src": "2585:73:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "4dede3de",
            "mutability": "constant",
            "name": "WBTC",
            "nameLocation": "2609:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9283,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2585:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832323630464143354535353432613737334161343466424366654466374331393362633243353939",
              "id": 9284,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2616:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"
            },
            "visibility": "public"
          },
          {
            "id": 9288,
            "nodeType": "VariableDeclaration",
            "src": "2665:72:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "58f7f6d2",
            "mutability": "constant",
            "name": "BNB",
            "nameLocation": "2689:3:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9286,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2665:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834313844373566363561303262334435334232343138464238453166653439333735396337363035",
              "id": 9287,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2695:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x418D75f65a02b3D53B2418FB8E1fe493759c7605"
            },
            "visibility": "public"
          },
          {
            "id": 9291,
            "nodeType": "VariableDeclaration",
            "src": "2744:73:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "d8280a7e",
            "mutability": "constant",
            "name": "WXRP",
            "nameLocation": "2768:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9289,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2744:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831453032453265443133394635426166366266614430346330453631454262303131306441363533",
              "id": 9290,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2775:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1E02E2eD139F5Baf6bfaD04c0E61EBb0110dA653"
            },
            "visibility": "public"
          },
          {
            "id": 9294,
            "nodeType": "VariableDeclaration",
            "src": "2824:74:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "3a3c3b87",
            "mutability": "constant",
            "name": "CURVE",
            "nameLocation": "2848:5:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9292,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2824:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
              "id": 9293,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2856:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
            },
            "visibility": "public"
          },
          {
            "id": 9297,
            "nodeType": "VariableDeclaration",
            "src": "2905:73:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "1b6b6d23",
            "mutability": "constant",
            "name": "LINK",
            "nameLocation": "2929:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9295,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2905:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835313439313037373141463943613635366166383430646666383345383236344563463938364341",
              "id": 9296,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2936:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x514910771AF9Ca656af840dff83E8264EcF986CA"
            },
            "visibility": "public"
          },
          {
            "id": 9300,
            "nodeType": "VariableDeclaration",
            "src": "2985:72:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "541bcb76",
            "mutability": "constant",
            "name": "UNI",
            "nameLocation": "3009:3:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9298,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2985:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831663938343061383564356146356266314431373632463932354244414464433432303146393834",
              "id": 9299,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3015:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984"
            },
            "visibility": "public"
          },
          {
            "id": 9309,
            "nodeType": "VariableDeclaration",
            "src": "3066:312:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0b4b301",
            "mutability": "mutable",
            "name": "assetList",
            "nameLocation": "3083:9:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 9301,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3066:7:78",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 9302,
              "nodeType": "ArrayTypeName",
              "src": "3066:9:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": {
              "components": [
                {
                  "id": 9303,
                  "name": "WBTC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9285,
                  "src": "3106:4:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 9304,
                  "name": "BNB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9288,
                  "src": "3121:3:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 9305,
                  "name": "CURVE",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9294,
                  "src": "3135:5:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 9306,
                  "name": "LINK",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9297,
                  "src": "3151:4:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 9307,
                  "name": "UNI",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9300,
                  "src": "3166:3:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "id": 9308,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "3095:283:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                "typeString": "address[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9318,
            "nodeType": "VariableDeclaration",
            "src": "3387:209:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "3ae64e0c",
            "mutability": "mutable",
            "name": "tokenShares",
            "nameLocation": "3401:11:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 9310,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3387:4:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 9311,
              "nodeType": "ArrayTypeName",
              "src": "3387:6:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "3230653138",
                  "id": 9312,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3426:5:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 9313,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3442:5:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 9314,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3458:5:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 9315,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3474:5:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 9316,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3490:5:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                }
              ],
              "id": 9317,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "3415:181:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint72_$5_memory_ptr",
                "typeString": "uint72[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9327,
            "nodeType": "VariableDeclaration",
            "src": "3605:243:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "5b718560",
            "mutability": "mutable",
            "name": "swapVersions",
            "nameLocation": "3619:12:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 9319,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3605:4:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 9320,
              "nodeType": "ArrayTypeName",
              "src": "3605:6:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "33",
                  "id": 9321,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3645:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 9322,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3657:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 9323,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3669:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 9324,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3681:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 9325,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3693:1:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "id": 9326,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "3634:214:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
                "typeString": "uint8[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9333,
            "nodeType": "VariableDeclaration",
            "src": "3857:105:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "c31c9c07",
            "mutability": "constant",
            "name": "swapRouter",
            "nameLocation": "3885:10:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$12692",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 9329,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9328,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12692,
                "src": "3857:11:78"
              },
              "referencedDeclaration": 12692,
              "src": "3857:11:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                "typeString": "contract ISwapRouter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                  "id": 9331,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3919:42:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 9330,
                "name": "ISwapRouter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 12692,
                "src": "3907:11:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$12692_$",
                  "typeString": "type(contract ISwapRouter)"
                }
              },
              "id": 9332,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3907:55:78",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9336,
            "nodeType": "VariableDeclaration",
            "src": "3975:74:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "mutability": "constant",
            "name": "WETH9",
            "nameLocation": "3999:5:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9334,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3975:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 9335,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4007:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "id": 9339,
            "nodeType": "VariableDeclaration",
            "src": "4056:75:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "8dae88c2",
            "mutability": "constant",
            "name": "QUOTER",
            "nameLocation": "4080:6:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9337,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4056:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862323733303866394639304436303734363362623333654131426542623431433237434535414236",
              "id": 9338,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4089:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6"
            },
            "visibility": "public"
          },
          {
            "id": 9342,
            "nodeType": "VariableDeclaration",
            "src": "4138:81:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "d1a3925a",
            "mutability": "constant",
            "name": "SwapRouterV3",
            "nameLocation": "4162:12:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9340,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4138:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
              "id": 9341,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4177:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
            },
            "visibility": "public"
          },
          {
            "id": 9345,
            "nodeType": "VariableDeclaration",
            "src": "4226:78:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "c2867f20",
            "mutability": "constant",
            "name": "FactoryV3",
            "nameLocation": "4250:9:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9343,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4226:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
              "id": 9344,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4262:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
            },
            "visibility": "public"
          },
          {
            "id": 9348,
            "nodeType": "VariableDeclaration",
            "src": "4311:81:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "ce2da055",
            "mutability": "constant",
            "name": "SwapRouterV2",
            "nameLocation": "4335:12:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9346,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4311:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
              "id": 9347,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4350:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
            },
            "visibility": "public"
          },
          {
            "id": 9351,
            "nodeType": "VariableDeclaration",
            "src": "4399:78:78",
            "nodes": [],
            "constant": true,
            "functionSelector": "d5bfbe4c",
            "mutability": "constant",
            "name": "FactoryV2",
            "nameLocation": "4423:9:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9349,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4399:7:78",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835433639624565373031656638313461324236613345444434423136353243423963633561413666",
              "id": 9350,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4435:42:78",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
            },
            "visibility": "public"
          },
          {
            "id": 9354,
            "nodeType": "VariableDeclaration",
            "src": "4498:16:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "f4b9fa75",
            "mutability": "mutable",
            "name": "dai",
            "nameLocation": "4511:3:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$14728",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 9353,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9352,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14728,
                "src": "4498:5:78"
              },
              "referencedDeclaration": 14728,
              "src": "4498:5:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$14728",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9357,
            "nodeType": "VariableDeclaration",
            "src": "4521:17:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "4534:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$11710",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 9356,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9355,
                "name": "IWETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11710,
                "src": "4521:5:78"
              },
              "referencedDeclaration": 11710,
              "src": "4521:5:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$11710",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9360,
            "nodeType": "VariableDeclaration",
            "src": "4573:21:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "c6bbd5a7",
            "mutability": "mutable",
            "name": "quoter",
            "nameLocation": "4588:6:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IQuoter_$12592",
              "typeString": "contract IQuoter"
            },
            "typeName": {
              "id": 9359,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9358,
                "name": "IQuoter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12592,
                "src": "4573:7:78"
              },
              "referencedDeclaration": 12592,
              "src": "4573:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IQuoter_$12592",
                "typeString": "contract IQuoter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9366,
            "nodeType": "VariableDeclaration",
            "src": "4603:56:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "MAINNET_RPC_URL",
            "nameLocation": "4610:15:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9361,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "4603:6:78",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d41494e4e45545f5250435f55524c",
                  "id": 9364,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4641:17:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  },
                  "value": "MAINNET_RPC_URL"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  }
                ],
                "expression": {
                  "id": 9362,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19449,
                  "src": "4628:2:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$31000",
                    "typeString": "contract Vm"
                  }
                },
                "id": 9363,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 29722,
                "src": "4628:12:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 9365,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4628:31:78",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9369,
            "nodeType": "VariableDeclaration",
            "src": "4666:50:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "jobId",
            "nameLocation": "4674:5:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9367,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4666:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "3662383865303430326535643431356562393436653532386238653063376261",
              "id": 9368,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4682:34:78",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_794b9054b63e56ef5e69b4c8fd259b3f748cccf060a2b76f00f589df40bd78fb",
                "typeString": "literal_string \"6b88e0402e5d415eb946e528b8e0c7ba\""
              },
              "value": "6b88e0402e5d415eb946e528b8e0c7ba"
            },
            "visibility": "internal"
          },
          {
            "id": 9372,
            "nodeType": "VariableDeclaration",
            "src": "4725:27:78",
            "nodes": [],
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "4746:6:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockApiOracle_$13961",
              "typeString": "contract MockApiOracle"
            },
            "typeName": {
              "id": 9371,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9370,
                "name": "MockApiOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13961,
                "src": "4725:13:78"
              },
              "referencedDeclaration": 13961,
              "src": "4725:13:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockApiOracle_$13961",
                "typeString": "contract MockApiOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 9375,
            "nodeType": "VariableDeclaration",
            "src": "4759:14:78",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "link",
            "nameLocation": "4769:4:78",
            "scope": 10756,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkToken_$13137",
              "typeString": "contract LinkToken"
            },
            "typeName": {
              "id": 9374,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9373,
                "name": "LinkToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13137,
                "src": "4759:9:78"
              },
              "referencedDeclaration": 13137,
              "src": "4759:9:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkToken_$13137",
                "typeString": "contract LinkToken"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 9379,
            "nodeType": "EventDefinition",
            "src": "4782:50:78",
            "nodes": [],
            "anonymous": false,
            "name": "FeeReceiverSet",
            "nameLocation": "4788:14:78",
            "parameters": {
              "id": 9378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9377,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "4819:11:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9379,
                  "src": "4803:27:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4803:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4802:29:78"
            }
          },
          {
            "id": 9383,
            "nodeType": "EventDefinition",
            "src": "4838:54:78",
            "nodes": [],
            "anonymous": false,
            "name": "FeeRateSet",
            "nameLocation": "4844:10:78",
            "parameters": {
              "id": 9382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9381,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeRatePerDayScaled",
                  "nameLocation": "4871:19:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9383,
                  "src": "4855:35:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4855:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4854:37:78"
            }
          },
          {
            "id": 9387,
            "nodeType": "EventDefinition",
            "src": "4898:54:78",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologistSet",
            "nameLocation": "4904:16:78",
            "parameters": {
              "id": 9386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9385,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "methodologist",
                  "nameLocation": "4937:13:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9387,
                  "src": "4921:29:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4921:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4920:31:78"
            }
          },
          {
            "id": 9391,
            "nodeType": "EventDefinition",
            "src": "4958:41:78",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologySet",
            "nameLocation": "4964:14:78",
            "parameters": {
              "id": 9390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9389,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "methodology",
                  "nameLocation": "4986:11:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9391,
                  "src": "4979:18:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9388,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4979:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4978:20:78"
            }
          },
          {
            "id": 9395,
            "nodeType": "EventDefinition",
            "src": "5005:40:78",
            "nodes": [],
            "anonymous": false,
            "name": "MinterSet",
            "nameLocation": "5011:9:78",
            "parameters": {
              "id": 9394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9393,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "5037:6:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9395,
                  "src": "5021:22:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5021:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5020:24:78"
            }
          },
          {
            "id": 9399,
            "nodeType": "EventDefinition",
            "src": "5051:46:78",
            "nodes": [],
            "anonymous": false,
            "name": "SupplyCeilingSet",
            "nameLocation": "5057:16:78",
            "parameters": {
              "id": 9398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9397,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supplyCeiling",
                  "nameLocation": "5082:13:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9399,
                  "src": "5074:21:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5074:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5073:23:78"
            }
          },
          {
            "id": 9409,
            "nodeType": "EventDefinition",
            "src": "5103:101:78",
            "nodes": [],
            "anonymous": false,
            "name": "MintFeeToReceiver",
            "nameLocation": "5109:17:78",
            "parameters": {
              "id": 9408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9401,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "5135:11:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9409,
                  "src": "5127:19:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5127:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9403,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "5156:9:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9409,
                  "src": "5148:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5148:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9405,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "5175:11:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9409,
                  "src": "5167:19:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5167:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9407,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5196:6:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9409,
                  "src": "5188:14:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5188:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5126:77:78"
            }
          },
          {
            "id": 9415,
            "nodeType": "EventDefinition",
            "src": "5210:68:78",
            "nodes": [],
            "anonymous": false,
            "name": "ToggledRestricted",
            "nameLocation": "5216:17:78",
            "parameters": {
              "id": 9414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9411,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5250:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9415,
                  "src": "5234:23:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9413,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isRestricted",
                  "nameLocation": "5264:12:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 9415,
                  "src": "5259:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9412,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5259:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5233:44:78"
            }
          },
          {
            "id": 9554,
            "nodeType": "FunctionDefinition",
            "src": "5288:1469:78",
            "nodes": [],
            "body": {
              "id": 9553,
              "nodeType": "Block",
              "src": "5312:1445:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 9423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9418,
                      "name": "mainnetFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9201,
                      "src": "5323:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9421,
                          "name": "MAINNET_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9366,
                          "src": "5351:15:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 9419,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19449,
                          "src": "5337:2:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$31000",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 9420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30726,
                        "src": "5337:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 9422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5337:30:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5323:44:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9424,
                  "nodeType": "ExpressionStatement",
                  "src": "5323:44:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9428,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9201,
                        "src": "5394:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9425,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19449,
                        "src": "5380:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30789,
                      "src": "5380:13:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 9429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5380:26:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9430,
                  "nodeType": "ExpressionStatement",
                  "src": "5380:26:78"
                },
                {
                  "expression": {
                    "id": 9436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9431,
                      "name": "link",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9375,
                      "src": "5498:4:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkToken_$13137",
                        "typeString": "contract LinkToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5505:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LinkToken_$13137_$",
                          "typeString": "function () returns (contract LinkToken)"
                        },
                        "typeName": {
                          "id": 9433,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9432,
                            "name": "LinkToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 13137,
                            "src": "5509:9:78"
                          },
                          "referencedDeclaration": 13137,
                          "src": "5509:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkToken_$13137",
                            "typeString": "contract LinkToken"
                          }
                        }
                      },
                      "id": 9435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5505:15:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkToken_$13137",
                        "typeString": "contract LinkToken"
                      }
                    },
                    "src": "5498:22:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkToken_$13137",
                      "typeString": "contract LinkToken"
                    }
                  },
                  "id": 9437,
                  "nodeType": "ExpressionStatement",
                  "src": "5498:22:78"
                },
                {
                  "expression": {
                    "id": 9447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9438,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9372,
                      "src": "5531:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockApiOracle_$13961",
                        "typeString": "contract MockApiOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 9444,
                              "name": "link",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9375,
                              "src": "5566:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkToken_$13137",
                                "typeString": "contract LinkToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LinkToken_$13137",
                                "typeString": "contract LinkToken"
                              }
                            ],
                            "id": 9443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5558:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9442,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5558:7:78",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5558:13:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5540:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MockApiOracle_$13961_$",
                          "typeString": "function (address) returns (contract MockApiOracle)"
                        },
                        "typeName": {
                          "id": 9440,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9439,
                            "name": "MockApiOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 13961,
                            "src": "5544:13:78"
                          },
                          "referencedDeclaration": 13961,
                          "src": "5544:13:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockApiOracle_$13961",
                            "typeString": "contract MockApiOracle"
                          }
                        }
                      },
                      "id": 9446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5540:32:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockApiOracle_$13961",
                        "typeString": "contract MockApiOracle"
                      }
                    },
                    "src": "5531:41:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockApiOracle_$13961",
                      "typeString": "contract MockApiOracle"
                    }
                  },
                  "id": 9448,
                  "nodeType": "ExpressionStatement",
                  "src": "5531:41:78"
                },
                {
                  "expression": {
                    "id": 9456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9449,
                      "name": "ethPriceOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9199,
                      "src": "5585:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$17098",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3138",
                          "id": 9453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5637:2:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        {
                          "hexValue": "32303030653138",
                          "id": 9454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5665:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000000"
                          },
                          "value": "2000e18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          {
                            "typeIdentifier": "t_rational_2000000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000000"
                          }
                        ],
                        "id": 9452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5602:20:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint8_$_t_int256_$returns$_t_contract$_MockV3Aggregator_$17098_$",
                          "typeString": "function (uint8,int256) returns (contract MockV3Aggregator)"
                        },
                        "typeName": {
                          "id": 9451,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9450,
                            "name": "MockV3Aggregator",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 17098,
                            "src": "5606:16:78"
                          },
                          "referencedDeclaration": 17098,
                          "src": "5606:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockV3Aggregator_$17098",
                            "typeString": "contract MockV3Aggregator"
                          }
                        }
                      },
                      "id": 9455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5602:98:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$17098",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "src": "5585:115:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockV3Aggregator_$17098",
                      "typeString": "contract MockV3Aggregator"
                    }
                  },
                  "id": 9457,
                  "nodeType": "ExpressionStatement",
                  "src": "5585:115:78"
                },
                {
                  "expression": {
                    "id": 9463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9458,
                      "name": "indexToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9190,
                      "src": "5715:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$3480",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5728:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_IndexToken_$3480_$",
                          "typeString": "function () returns (contract IndexToken)"
                        },
                        "typeName": {
                          "id": 9460,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9459,
                            "name": "IndexToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3480,
                            "src": "5732:10:78"
                          },
                          "referencedDeclaration": 3480,
                          "src": "5732:10:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexToken_$3480",
                            "typeString": "contract IndexToken"
                          }
                        }
                      },
                      "id": 9462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5728:16:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$3480",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "src": "5715:29:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IndexToken_$3480",
                      "typeString": "contract IndexToken"
                    }
                  },
                  "id": 9464,
                  "nodeType": "ExpressionStatement",
                  "src": "5715:29:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416e746920496e666c6174696f6e",
                        "id": 9468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5791:16:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc91b5e2c1c095e17fa21cce3bb4bf4e3f12c19c51ecd9f6cf3cf89a49c428f2",
                          "typeString": "literal_string \"Anti Inflation\""
                        },
                        "value": "Anti Inflation"
                      },
                      {
                        "hexValue": "414e4649",
                        "id": 9469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5822:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_784ef5cf3b103bdcbbdc385d5d143611309cf4293b5afd2549dfc4901f697bcc",
                          "typeString": "literal_string \"ANFI\""
                        },
                        "value": "ANFI"
                      },
                      {
                        "hexValue": "31653138",
                        "id": 9470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5843:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "id": 9471,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9207,
                        "src": "5862:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 9472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5888:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      },
                      {
                        "id": 9473,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9336,
                        "src": "5943:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9474,
                        "name": "QUOTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9339,
                        "src": "5963:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9475,
                        "name": "SwapRouterV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9342,
                        "src": "5984:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9476,
                        "name": "FactoryV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9345,
                        "src": "6011:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9477,
                        "name": "SwapRouterV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9348,
                        "src": "6035:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9478,
                        "name": "FactoryV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9351,
                        "src": "6062:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bc91b5e2c1c095e17fa21cce3bb4bf4e3f12c19c51ecd9f6cf3cf89a49c428f2",
                          "typeString": "literal_string \"Anti Inflation\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_784ef5cf3b103bdcbbdc385d5d143611309cf4293b5afd2549dfc4901f697bcc",
                          "typeString": "literal_string \"ANFI\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9465,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9190,
                        "src": "5755:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$3480",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 9467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2816,
                      "src": "5755:21:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256,address,uint256,address,address,address,address,address,address) external"
                      }
                    },
                    "id": 9479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5755:327:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9480,
                  "nodeType": "ExpressionStatement",
                  "src": "5755:327:78"
                },
                {
                  "expression": {
                    "id": 9486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9481,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9193,
                      "src": "6095:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexFactory_$2503",
                        "typeString": "contract IndexFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6105:16:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_IndexFactory_$2503_$",
                          "typeString": "function () returns (contract IndexFactory)"
                        },
                        "typeName": {
                          "id": 9483,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9482,
                            "name": "IndexFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2503,
                            "src": "6109:12:78"
                          },
                          "referencedDeclaration": 2503,
                          "src": "6109:12:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexFactory_$2503",
                            "typeString": "contract IndexFactory"
                          }
                        }
                      },
                      "id": 9485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6105:18:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexFactory_$2503",
                        "typeString": "contract IndexFactory"
                      }
                    },
                    "src": "6095:28:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IndexFactory_$2503",
                      "typeString": "contract IndexFactory"
                    }
                  },
                  "id": 9487,
                  "nodeType": "ExpressionStatement",
                  "src": "6095:28:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9495,
                                "name": "indexToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9190,
                                "src": "6183:10:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexToken_$3480",
                                  "typeString": "contract IndexToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexToken_$3480",
                                  "typeString": "contract IndexToken"
                                }
                              ],
                              "id": 9494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6175:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9493,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6175:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6175:19:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6167:8:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 9491,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6167:8:78",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6167:28:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9500,
                            "name": "link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9375,
                            "src": "6246:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkToken_$13137",
                              "typeString": "contract LinkToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkToken_$13137",
                              "typeString": "contract LinkToken"
                            }
                          ],
                          "id": 9499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6238:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9498,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6238:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6238:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9504,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9372,
                            "src": "6274:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockApiOracle_$13961",
                              "typeString": "contract MockApiOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockApiOracle_$13961",
                              "typeString": "contract MockApiOracle"
                            }
                          ],
                          "id": 9503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6266:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9502,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6266:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6266:15:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9506,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9369,
                        "src": "6296:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9509,
                            "name": "ethPriceOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9199,
                            "src": "6324:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockV3Aggregator_$17098",
                              "typeString": "contract MockV3Aggregator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockV3Aggregator_$17098",
                              "typeString": "contract MockV3Aggregator"
                            }
                          ],
                          "id": 9508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6316:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9507,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6316:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6316:23:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9511,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9336,
                        "src": "6384:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9512,
                        "name": "QUOTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9339,
                        "src": "6404:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9513,
                        "name": "SwapRouterV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9342,
                        "src": "6425:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9514,
                        "name": "FactoryV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9345,
                        "src": "6452:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9515,
                        "name": "SwapRouterV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9348,
                        "src": "6476:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9516,
                        "name": "FactoryV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9351,
                        "src": "6503:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9488,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "6134:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 333,
                      "src": "6134:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address payable,address,address,bytes32,address,address,address,address,address,address,address) external"
                      }
                    },
                    "id": 9517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6134:389:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9518,
                  "nodeType": "ExpressionStatement",
                  "src": "6134:389:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9524,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "6565:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 9523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6557:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9522,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6557:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6557:16:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9519,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9190,
                        "src": "6536:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$3480",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 9521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3194,
                      "src": "6536:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6536:38:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9527,
                  "nodeType": "ExpressionStatement",
                  "src": "6536:38:78"
                },
                {
                  "expression": {
                    "id": 9532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9528,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9354,
                      "src": "6618:3:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$14728",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9530,
                          "name": "DAI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9246,
                          "src": "6630:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9529,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14728,
                        "src": "6624:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$14728_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 9531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6624:10:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$14728",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "6618:16:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$14728",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 9533,
                  "nodeType": "ExpressionStatement",
                  "src": "6618:16:78"
                },
                {
                  "expression": {
                    "id": 9538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9534,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9357,
                      "src": "6645:4:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$11710",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9536,
                          "name": "WETH9",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9336,
                          "src": "6658:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9535,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11710,
                        "src": "6652:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$11710_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 9537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6652:12:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$11710",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "6645:19:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$11710",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 9539,
                  "nodeType": "ExpressionStatement",
                  "src": "6645:19:78"
                },
                {
                  "expression": {
                    "id": 9544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9540,
                      "name": "quoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9360,
                      "src": "6675:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$12592",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9542,
                          "name": "QUOTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9339,
                          "src": "6692:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9541,
                        "name": "IQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12592,
                        "src": "6684:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IQuoter_$12592_$",
                          "typeString": "type(contract IQuoter)"
                        }
                      },
                      "id": 9543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6684:15:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$12592",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "src": "6675:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IQuoter_$12592",
                      "typeString": "contract IQuoter"
                    }
                  },
                  "id": 9545,
                  "nodeType": "ExpressionStatement",
                  "src": "6675:24:78"
                },
                {
                  "expression": {
                    "id": 9551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9546,
                      "name": "testSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9196,
                      "src": "6712:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestSwap_$14141",
                        "typeString": "contract TestSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6723:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestSwap_$14141_$",
                          "typeString": "function () returns (contract TestSwap)"
                        },
                        "typeName": {
                          "id": 9548,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9547,
                            "name": "TestSwap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 14141,
                            "src": "6727:8:78"
                          },
                          "referencedDeclaration": 14141,
                          "src": "6727:8:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestSwap_$14141",
                            "typeString": "contract TestSwap"
                          }
                        }
                      },
                      "id": 9550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6723:14:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestSwap_$14141",
                        "typeString": "contract TestSwap"
                      }
                    },
                    "src": "6712:25:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestSwap_$14141",
                      "typeString": "contract TestSwap"
                    }
                  },
                  "id": 9552,
                  "nodeType": "ExpressionStatement",
                  "src": "6712:25:78"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "5297:5:78",
            "parameters": {
              "id": 9416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5302:2:78"
            },
            "returnParameters": {
              "id": 9417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5312:0:78"
            },
            "scope": 10756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9614,
            "nodeType": "FunctionDefinition",
            "src": "6765:475:78",
            "nodes": [],
            "body": {
              "id": 9613,
              "nodeType": "Block",
              "src": "6799:441:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9558,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "6852:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3684,
                          "src": "6852:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 9560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6852:18:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9563,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6880:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$10756",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$10756",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 9562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6872:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9561,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6872:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6872:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9557,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17419,
                      "src": "6843:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6843:43:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9566,
                  "nodeType": "ExpressionStatement",
                  "src": "6843:43:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9568,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "6906:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRatePerDayScaled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2606,
                          "src": "6906:30:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 9570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6906:32:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 9571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6940:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 9567,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "6897:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6897:48:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9573,
                  "nodeType": "ExpressionStatement",
                  "src": "6897:48:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9575,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "6965:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2608,
                          "src": "6965:23:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 9577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6965:25:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9578,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6992:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 9579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6992:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9574,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "6956:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6956:52:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9581,
                  "nodeType": "ExpressionStatement",
                  "src": "6956:52:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9583,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "7028:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeReceiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2610,
                          "src": "7028:22:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 9585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7028:24:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9586,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9207,
                        "src": "7054:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9582,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17419,
                      "src": "7019:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7019:47:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9588,
                  "nodeType": "ExpressionStatement",
                  "src": "7019:47:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9590,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "7086:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "methodology",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2616,
                          "src": "7086:22:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 9592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7086:24:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 9593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7112:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 9589,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 19111,
                      "src": "7077:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 9594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7077:38:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9595,
                  "nodeType": "ExpressionStatement",
                  "src": "7077:38:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9597,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "7135:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supplyCeiling",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2618,
                          "src": "7135:24:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 9599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7135:26:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 9600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7163:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "id": 9596,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "7126:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7126:48:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9602,
                  "nodeType": "ExpressionStatement",
                  "src": "7126:48:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9604,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "7194:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2614,
                          "src": "7194:17:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 9606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7194:19:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9609,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "7223:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 9608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7215:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9607,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7215:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7215:16:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9603,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17419,
                      "src": "7185:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7185:47:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9612,
                  "nodeType": "ExpressionStatement",
                  "src": "7185:47:78"
                }
              ]
            },
            "functionSelector": "0e7628c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialized",
            "nameLocation": "6774:15:78",
            "parameters": {
              "id": 9555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6789:2:78"
            },
            "returnParameters": {
              "id": 9556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6799:0:78"
            },
            "scope": 10756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9617,
            "nodeType": "EnumDefinition",
            "src": "7248:64:78",
            "nodes": [],
            "canonicalName": "CounterTest.DexStatus",
            "members": [
              {
                "id": 9615,
                "name": "UNISWAP_V2",
                "nameLocation": "7274:10:78",
                "nodeType": "EnumValue",
                "src": "7274:10:78"
              },
              {
                "id": 9616,
                "name": "UNISWAP_V3",
                "nameLocation": "7295:10:78",
                "nodeType": "EnumValue",
                "src": "7295:10:78"
              }
            ],
            "name": "DexStatus",
            "nameLocation": "7253:9:78"
          },
          {
            "id": 9646,
            "nodeType": "FunctionDefinition",
            "src": "7320:410:78",
            "nodes": [],
            "body": {
              "id": 9645,
              "nodeType": "Block",
              "src": "7355:375:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9625,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "7551:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 9624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7543:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9623,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7543:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7543:16:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 9627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7561:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 9620,
                        "name": "link",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9375,
                        "src": "7529:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkToken_$13137",
                          "typeString": "contract LinkToken"
                        }
                      },
                      "id": 9622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14265,
                      "src": "7529:13:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7529:37:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9629,
                  "nodeType": "ExpressionStatement",
                  "src": "7529:37:78"
                },
                {
                  "assignments": [
                    9631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9631,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "7585:9:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 9645,
                      "src": "7577:17:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 9630,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7577:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9635,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9632,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "7597:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestAssetsData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 588,
                      "src": "7597:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () external returns (bytes32)"
                      }
                    },
                    "id": 9634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7597:27:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7577:47:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9639,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9631,
                        "src": "7674:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9640,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9309,
                        "src": "7685:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "id": 9641,
                        "name": "tokenShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9318,
                        "src": "7696:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "id": 9642,
                        "name": "swapVersions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9327,
                        "src": "7709:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 9636,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9372,
                        "src": "7635:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockApiOracle_$13961",
                          "typeString": "contract MockApiOracle"
                        }
                      },
                      "id": 9638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fulfillOracleFundingRateRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13402,
                      "src": "7635:38:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address[] memory,uint256[] memory,uint256[] memory) external returns (bool)"
                      }
                    },
                    "id": 9643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7635:87:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9644,
                  "nodeType": "ExpressionStatement",
                  "src": "7635:87:78"
                }
              ]
            },
            "functionSelector": "95d5772d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOracleList",
            "nameLocation": "7329:16:78",
            "parameters": {
              "id": 9618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7345:2:78"
            },
            "returnParameters": {
              "id": 9619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7355:0:78"
            },
            "scope": 10756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9823,
            "nodeType": "FunctionDefinition",
            "src": "7736:2288:78",
            "nodes": [],
            "body": {
              "id": 9822,
              "nodeType": "Block",
              "src": "7769:2255:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9649,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9646,
                      "src": "7780:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7780:18:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9651,
                  "nodeType": "ExpressionStatement",
                  "src": "7780:18:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 9655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7860:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 9653,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "7841:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "7841:18:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 9656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7841:21:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9657,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9309,
                          "src": "7864:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9659,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7874:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7864:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9652,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17419,
                      "src": "7832:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7832:45:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9661,
                  "nodeType": "ExpressionStatement",
                  "src": "7832:45:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 9665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7916:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 9663,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "7897:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "7897:18:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 9666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7897:21:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9667,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9309,
                          "src": "7920:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9669,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 9668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7930:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7920:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9662,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17419,
                      "src": "7888:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7888:45:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9671,
                  "nodeType": "ExpressionStatement",
                  "src": "7888:45:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 9675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7972:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 9673,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "7953:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "7953:18:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 9676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7953:21:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9677,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9309,
                          "src": "7976:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9679,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 9678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7986:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7976:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9672,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17419,
                      "src": "7944:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7944:45:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9681,
                  "nodeType": "ExpressionStatement",
                  "src": "7944:45:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 9685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8028:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 9683,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "8009:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "8009:18:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 9686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8009:21:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9687,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9309,
                          "src": "8032:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9689,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 9688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8042:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8032:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9682,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17419,
                      "src": "8000:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8000:45:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9691,
                  "nodeType": "ExpressionStatement",
                  "src": "8000:45:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 9695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8084:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 9693,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "8065:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "8065:18:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 9696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8065:21:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9697,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9309,
                          "src": "8088:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9699,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 9698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8098:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8088:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9692,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17419,
                      "src": "8056:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8056:45:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9701,
                  "nodeType": "ExpressionStatement",
                  "src": "8056:45:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9705,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9309,
                              "src": "8472:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9707,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 9706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8482:1:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8472:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9703,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "8441:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenOracleMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 102,
                          "src": "8441:30:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8441:44:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9709,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9318,
                          "src": "8487:11:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9711,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8499:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8487:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9702,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "8432:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8432:70:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9713,
                  "nodeType": "ExpressionStatement",
                  "src": "8432:70:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9717,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9309,
                              "src": "8553:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9719,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 9718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8563:1:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8553:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9715,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "8522:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenOracleMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 102,
                          "src": "8522:30:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8522:44:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9721,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9318,
                          "src": "8568:11:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9723,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 9722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8580:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8568:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9714,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "8513:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8513:70:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9725,
                  "nodeType": "ExpressionStatement",
                  "src": "8513:70:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9729,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9309,
                              "src": "8634:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9731,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 9730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8644:1:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8634:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9727,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "8603:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenOracleMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 102,
                          "src": "8603:30:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8603:44:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9733,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9318,
                          "src": "8649:11:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9735,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 9734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8661:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8649:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9726,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "8594:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8594:70:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9737,
                  "nodeType": "ExpressionStatement",
                  "src": "8594:70:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9741,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9309,
                              "src": "8715:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9743,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 9742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8725:1:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8715:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9739,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "8684:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenOracleMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 102,
                          "src": "8684:30:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8684:44:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9745,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9318,
                          "src": "8730:11:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9747,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 9746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8742:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8730:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9738,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "8675:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8675:70:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9749,
                  "nodeType": "ExpressionStatement",
                  "src": "8675:70:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9753,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9309,
                              "src": "8796:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9755,
                            "indexExpression": {
                              "hexValue": "34",
                              "id": 9754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8806:1:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8796:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9751,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "8765:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenOracleMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 102,
                          "src": "8765:30:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8765:44:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9757,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9318,
                          "src": "8811:11:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9759,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 9758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8823:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8811:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9750,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "8756:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8756:70:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9761,
                  "nodeType": "ExpressionStatement",
                  "src": "8756:70:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9765,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9309,
                              "src": "9286:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9767,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 9766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9296:1:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9286:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9763,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "9261:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106,
                          "src": "9261:24:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9261:38:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9769,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9327,
                          "src": "9301:12:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9771,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9314:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9301:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9762,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "9252:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9252:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9773,
                  "nodeType": "ExpressionStatement",
                  "src": "9252:65:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9777,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9309,
                              "src": "9362:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9779,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 9778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9372:1:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9362:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9775,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "9337:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106,
                          "src": "9337:24:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9337:38:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9781,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9327,
                          "src": "9377:12:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9783,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 9782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9390:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9377:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9774,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "9328:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9328:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9785,
                  "nodeType": "ExpressionStatement",
                  "src": "9328:65:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9789,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9309,
                              "src": "9438:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9791,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 9790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9448:1:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9438:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9787,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "9413:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106,
                          "src": "9413:24:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9413:38:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9793,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9327,
                          "src": "9453:12:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9795,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 9794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9466:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9453:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9786,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "9404:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9404:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9797,
                  "nodeType": "ExpressionStatement",
                  "src": "9404:65:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9801,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9309,
                              "src": "9514:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9803,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 9802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9524:1:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9514:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9799,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "9489:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106,
                          "src": "9489:24:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9489:38:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9805,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9327,
                          "src": "9529:12:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9807,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 9806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9542:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9529:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9798,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "9480:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9480:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9809,
                  "nodeType": "ExpressionStatement",
                  "src": "9480:65:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9813,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9309,
                              "src": "9590:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9815,
                            "indexExpression": {
                              "hexValue": "34",
                              "id": 9814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9600:1:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9590:12:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9811,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "9565:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106,
                          "src": "9565:24:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9565:38:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9817,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9327,
                          "src": "9605:12:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9819,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 9818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9618:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9605:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9810,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19584,
                        19609,
                        19622,
                        19638,
                        19680,
                        19722,
                        19764,
                        19801,
                        19838,
                        19875,
                        17419,
                        17444,
                        17474,
                        17499,
                        17558,
                        17583,
                        17613,
                        17638,
                        19111,
                        19146
                      ],
                      "referencedDeclaration": 17613,
                      "src": "9556:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9556:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9821,
                  "nodeType": "ExpressionStatement",
                  "src": "9556:65:78"
                }
              ]
            },
            "functionSelector": "39c66af1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOracleList",
            "nameLocation": "7745:14:78",
            "parameters": {
              "id": 9647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7759:2:78"
            },
            "returnParameters": {
              "id": 9648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7769:0:78"
            },
            "scope": 10756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9946,
            "nodeType": "FunctionDefinition",
            "src": "10038:797:78",
            "nodes": [],
            "body": {
              "id": 9945,
              "nodeType": "Block",
              "src": "10076:759:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    9827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9827,
                      "mutability": "mutable",
                      "name": "startAmount",
                      "nameLocation": "10092:11:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 9945,
                      "src": "10087:16:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9826,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10087:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9829,
                  "initialValue": {
                    "hexValue": "31653134",
                    "id": 9828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10106:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000_by_1",
                      "typeString": "int_const 100000000000000"
                    },
                    "value": "1e14"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10087:23:78"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9830,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9646,
                      "src": "10133:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10133:18:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9832,
                  "nodeType": "ExpressionStatement",
                  "src": "10133:18:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9836,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "10193:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9833,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "10172:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2569,
                      "src": "10172:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10172:27:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9838,
                  "nodeType": "ExpressionStatement",
                  "src": "10172:27:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9842,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "10224:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9839,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19449,
                        "src": "10210:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30666,
                      "src": "10210:13:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10210:20:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9844,
                  "nodeType": "ExpressionStatement",
                  "src": "10210:20:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9848,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "10267:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9845,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "10241:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2547,
                      "src": "10241:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10241:32:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9850,
                  "nodeType": "ExpressionStatement",
                  "src": "10241:32:78"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9851,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19449,
                        "src": "10284:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30683,
                      "src": "10284:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 9854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10284:14:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9855,
                  "nodeType": "ExpressionStatement",
                  "src": "10284:14:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3131653138",
                        "id": 9861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10332:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11000000000000000000_by_1",
                          "typeString": "int_const 11000000000000000000"
                        },
                        "value": "11e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_11000000000000000000_by_1",
                          "typeString": "int_const 11000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9858,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9243,
                            "src": "10317:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10309:8:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 9856,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10309:8:78",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10309:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 9860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "10309:22:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 9862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10309:29:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9863,
                  "nodeType": "ExpressionStatement",
                  "src": "10309:29:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9867,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9243,
                        "src": "10363:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9864,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19449,
                        "src": "10349:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30666,
                      "src": "10349:13:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10349:19:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9869,
                  "nodeType": "ExpressionStatement",
                  "src": "10349:19:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "464c4f4b49",
                        "id": 9873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10391:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        "value": "FLOKI"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9880,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9193,
                                "src": "10432:7:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                  "typeString": "contract IndexFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                  "typeString": "contract IndexFactory"
                                }
                              ],
                              "id": 9879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10424:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9878,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10424:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10424:16:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9875,
                                "name": "FLOKI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9261,
                                "src": "10407:5:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9874,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12452,
                              "src": "10400:6:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 9876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10400:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$12452",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 9877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12409,
                          "src": "10400:23:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10400:41:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9870,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "10379:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "10379:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10379:63:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9884,
                  "nodeType": "ExpressionStatement",
                  "src": "10379:63:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 9895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10523:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 9885,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9193,
                          "src": "10463:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexFactory_$2503",
                            "typeString": "contract IndexFactory"
                          }
                        },
                        "id": 9887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issuanceIndexTokensWithEth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1373,
                        "src": "10463:34:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 9894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1001000000000000000_by_1",
                            "typeString": "int_const 1001000000000000000"
                          },
                          "id": 9893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                                  "typeString": "int_const 1001000000000000000000"
                                },
                                "id": 9890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31653138",
                                  "id": 9888,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10506:4:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31303031",
                                  "id": 9889,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10511:4:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1001_by_1",
                                    "typeString": "int_const 1001"
                                  },
                                  "value": "1001"
                                },
                                "src": "10506:9:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                                  "typeString": "int_const 1001000000000000000000"
                                }
                              }
                            ],
                            "id": 9891,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10505:11:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                              "typeString": "int_const 1001000000000000000000"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 9892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10517:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "10505:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001000000000000000_by_1",
                            "typeString": "int_const 1001000000000000000"
                          }
                        }
                      ],
                      "src": "10463:59:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 9896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10463:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9897,
                  "nodeType": "ExpressionStatement",
                  "src": "10463:65:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "696e64657820746f6b656e2062616c616e6365",
                        "id": 9901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10551:21:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        "value": "index token balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9906,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9243,
                                "src": "10603:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10595:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9904,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10595:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10595:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9902,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "10574:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4176,
                          "src": "10574:20:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10574:35:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9898,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "10539:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "10539:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10539:71:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9910,
                  "nodeType": "ExpressionStatement",
                  "src": "10539:71:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f7274666f6c696f2076616c7565",
                        "id": 9914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10633:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        "value": "portfolio value"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9915,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "10652:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1917,
                          "src": "10652:27:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 9917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10652:29:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9911,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "10621:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "10621:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10621:61:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9919,
                  "nodeType": "ExpressionStatement",
                  "src": "10621:61:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9927,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9243,
                                "src": "10741:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10733:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9925,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10733:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10733:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9923,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "10712:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4176,
                          "src": "10712:20:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10712:35:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9932,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9357,
                            "src": "10757:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$11710",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$11710",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 9931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10749:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9930,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10749:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10749:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 9934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10764:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 9920,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "10693:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1586,
                      "src": "10693:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 9935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10693:73:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9936,
                  "nodeType": "ExpressionStatement",
                  "src": "10693:73:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 9940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10789:23:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "expression": {
                          "id": 9941,
                          "name": "add1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9243,
                          "src": "10814:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 9942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10814:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9937,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "10777:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "10777:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10777:50:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9944,
                  "nodeType": "ExpressionStatement",
                  "src": "10777:50:78"
                }
              ]
            },
            "functionSelector": "85f65a27",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIssuanceWithEth",
            "nameLocation": "10047:19:78",
            "parameters": {
              "id": 9824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10066:2:78"
            },
            "returnParameters": {
              "id": 9825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10076:0:78"
            },
            "scope": 10756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10139,
            "nodeType": "FunctionDefinition",
            "src": "10845:1741:78",
            "nodes": [],
            "body": {
              "id": 10138,
              "nodeType": "Block",
              "src": "10886:1700:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    9950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9950,
                      "mutability": "mutable",
                      "name": "startAmount",
                      "nameLocation": "10902:11:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10138,
                      "src": "10897:16:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9949,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10897:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9952,
                  "initialValue": {
                    "hexValue": "31653134",
                    "id": 9951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10916:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000_by_1",
                      "typeString": "int_const 100000000000000"
                    },
                    "value": "1e14"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10897:23:78"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 9953,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9357,
                          "src": "10941:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$11710",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 9955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11703,
                        "src": "10941:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 9957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130653138",
                          "id": 9956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10960:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10e18"
                        }
                      ],
                      "src": "10941:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 9958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10941:27:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9959,
                  "nodeType": "ExpressionStatement",
                  "src": "10941:27:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9966,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9333,
                            "src": "11009:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 9965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11001:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9964,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11001:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11001:19:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 9968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11022:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9961,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9336,
                            "src": "10986:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9960,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12452,
                          "src": "10979:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 9962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10979:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12452",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 9963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12439,
                      "src": "10979:21:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10979:49:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9970,
                  "nodeType": "ExpressionStatement",
                  "src": "10979:49:78"
                },
                {
                  "assignments": [
                    9975
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9975,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "11081:6:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10138,
                      "src": "11039:48:78",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 9974,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9973,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12616,
                          "src": "11039:34:78"
                        },
                        "referencedDeclaration": 12616,
                        "src": "11039:34:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9991,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9978,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9336,
                        "src": "11159:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9979,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9246,
                        "src": "11189:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 9980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11242:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 9983,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11280:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$10756",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$10756",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 9982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11272:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9981,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11272:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11272:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9985,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "11310:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 9986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "11310:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 9987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11350:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      },
                      {
                        "hexValue": "30",
                        "id": 9988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11388:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 9989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11622:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 9976,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12692,
                        "src": "11090:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$12692_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 9977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12616,
                      "src": "11090:44:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$12616_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 9990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "11090:545:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11039:596:78"
                },
                {
                  "assignments": [
                    9993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9993,
                      "mutability": "mutable",
                      "name": "finalAmountOut",
                      "nameLocation": "11651:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10138,
                      "src": "11646:19:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9992,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11646:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9998,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9996,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9975,
                        "src": "11696:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 9994,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9333,
                        "src": "11668:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 9995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12625,
                      "src": "11668:27:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$12616_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 9997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11668:35:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11646:57:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6461692062616c616c6e6365",
                        "id": 10002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11726:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        "value": "dai balalnce"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10009,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11772:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$10756",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$10756",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 10008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11764:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10007,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11764:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11764:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 10004,
                                "name": "DAI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9246,
                                "src": "11749:3:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10003,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12452,
                              "src": "11742:6:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 10005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11742:11:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$12452",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 10006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12409,
                          "src": "11742:21:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11742:36:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9999,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "11714:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "11714:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11714:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10013,
                  "nodeType": "ExpressionStatement",
                  "src": "11714:65:78"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10014,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9646,
                      "src": "11790:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11790:18:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10016,
                  "nodeType": "ExpressionStatement",
                  "src": "11790:18:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10020,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "11850:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10017,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "11829:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 10019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2569,
                      "src": "11829:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11829:27:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10022,
                  "nodeType": "ExpressionStatement",
                  "src": "11829:27:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10026,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "11881:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10023,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19449,
                        "src": "11867:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30666,
                      "src": "11867:13:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11867:20:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10028,
                  "nodeType": "ExpressionStatement",
                  "src": "11867:20:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10032,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "11924:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10029,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "11898:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 10031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2547,
                      "src": "11898:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11898:32:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10034,
                  "nodeType": "ExpressionStatement",
                  "src": "11898:32:78"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10035,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19449,
                        "src": "11941:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30683,
                      "src": "11941:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11941:14:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10039,
                  "nodeType": "ExpressionStatement",
                  "src": "11941:14:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10044,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9243,
                        "src": "12030:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 10045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12036:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10041,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9246,
                            "src": "12016:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10040,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12452,
                          "src": "12009:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12009:11:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12452",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12419,
                      "src": "12009:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12009:35:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10047,
                  "nodeType": "ExpressionStatement",
                  "src": "12009:35:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10051,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9243,
                        "src": "12069:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10048,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19449,
                        "src": "12055:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30666,
                      "src": "12055:13:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12055:19:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10053,
                  "nodeType": "ExpressionStatement",
                  "src": "12055:19:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "464c4f4b49",
                        "id": 10057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12097:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        "value": "FLOKI"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10064,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9193,
                                "src": "12138:7:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                  "typeString": "contract IndexFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                  "typeString": "contract IndexFactory"
                                }
                              ],
                              "id": 10063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12130:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10062,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12130:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12130:16:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 10059,
                                "name": "FLOKI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9261,
                                "src": "12113:5:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10058,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12452,
                              "src": "12106:6:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 10060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12106:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$12452",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 10061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12409,
                          "src": "12106:23:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12106:41:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10054,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "12085:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "12085:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12085:63:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10068,
                  "nodeType": "ExpressionStatement",
                  "src": "12085:63:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10075,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "12197:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 10074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12189:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10073,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12189:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12189:16:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 10077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12207:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10070,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9246,
                            "src": "12176:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10069,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12452,
                          "src": "12169:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12169:11:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12452",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12439,
                      "src": "12169:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12169:46:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10079,
                  "nodeType": "ExpressionStatement",
                  "src": "12169:46:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10085,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9246,
                            "src": "12262:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12254:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10083,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12254:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12254:12:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030653138",
                        "id": 10087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12268:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      },
                      {
                        "hexValue": "33",
                        "id": 10088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12277:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 10080,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "12226:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 10082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuanceIndexTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1206,
                      "src": "12226:27:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 10089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12226:53:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10090,
                  "nodeType": "ExpressionStatement",
                  "src": "12226:53:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "696e64657820746f6b656e2062616c616e6365",
                        "id": 10094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12302:21:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        "value": "index token balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10099,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9243,
                                "src": "12354:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12346:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10097,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12346:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12346:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 10095,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "12325:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 10096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4176,
                          "src": "12325:20:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12325:35:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10091,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "12290:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "12290:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12290:71:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10103,
                  "nodeType": "ExpressionStatement",
                  "src": "12290:71:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f7274666f6c696f2076616c7565",
                        "id": 10107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12384:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        "value": "portfolio value"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10108,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "12403:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 10109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1917,
                          "src": "12403:27:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 10110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12403:29:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10104,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "12372:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "12372:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12372:61:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10112,
                  "nodeType": "ExpressionStatement",
                  "src": "12372:61:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10120,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9243,
                                "src": "12492:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12484:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10118,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12484:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12484:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 10116,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "12463:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 10117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4176,
                          "src": "12463:20:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12463:35:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10125,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9357,
                            "src": "12508:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$11710",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$11710",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 10124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12500:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10123,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12500:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12500:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 10127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12515:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 10113,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "12444:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 10115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1586,
                      "src": "12444:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 10128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12444:73:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10129,
                  "nodeType": "ExpressionStatement",
                  "src": "12444:73:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 10133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12540:23:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "expression": {
                          "id": 10134,
                          "name": "add1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9243,
                          "src": "12565:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "12565:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10130,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "12528:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "12528:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12528:50:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10137,
                  "nodeType": "ExpressionStatement",
                  "src": "12528:50:78"
                }
              ]
            },
            "functionSelector": "5cc6f954",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIssuanceWithTokens",
            "nameLocation": "10854:22:78",
            "parameters": {
              "id": 9947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10876:2:78"
            },
            "returnParameters": {
              "id": 9948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10886:0:78"
            },
            "scope": 10756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10398,
            "nodeType": "FunctionDefinition",
            "src": "12596:2192:78",
            "nodes": [],
            "body": {
              "id": 10397,
              "nodeType": "Block",
              "src": "12643:2145:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10143,
                      "mutability": "mutable",
                      "name": "startAmount",
                      "nameLocation": "12659:11:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10397,
                      "src": "12654:16:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10142,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12654:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10145,
                  "initialValue": {
                    "hexValue": "31653134",
                    "id": 10144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12673:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000_by_1",
                      "typeString": "int_const 100000000000000"
                    },
                    "value": "1e14"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12654:23:78"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10146,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9357,
                          "src": "12698:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$11710",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 10148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11703,
                        "src": "12698:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 10150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130653138",
                          "id": 10149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12717:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10e18"
                        }
                      ],
                      "src": "12698:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 10151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12698:27:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10152,
                  "nodeType": "ExpressionStatement",
                  "src": "12698:27:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10159,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9333,
                            "src": "12766:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 10158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12758:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12758:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12758:19:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 10161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12779:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10154,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9336,
                            "src": "12743:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10153,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12452,
                          "src": "12736:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12736:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12452",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12439,
                      "src": "12736:21:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12736:49:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10163,
                  "nodeType": "ExpressionStatement",
                  "src": "12736:49:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10169,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9336,
                            "src": "12834:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10170,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9246,
                            "src": "12841:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "3130653138",
                            "id": 10171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12846:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "value": "10e18"
                          },
                          {
                            "hexValue": "33",
                            "id": 10172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12853:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 10167,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "12808:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 10168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExactAmountOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1687,
                          "src": "12808:25:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256,uint256) external returns (uint256)"
                          }
                        },
                        "id": 10173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12808:47:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10164,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "12796:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31581,
                      "src": "12796:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 10174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12796:60:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10175,
                  "nodeType": "ExpressionStatement",
                  "src": "12796:60:78"
                },
                {
                  "assignments": [
                    10180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10180,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "12909:6:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10397,
                      "src": "12867:48:78",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 10179,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10178,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12616,
                          "src": "12867:34:78"
                        },
                        "referencedDeclaration": 12616,
                        "src": "12867:34:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10196,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10183,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9336,
                        "src": "12987:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10184,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9246,
                        "src": "13017:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 10185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13070:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 10188,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13108:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$10756",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$10756",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 10187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13100:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13100:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13100:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10190,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "13138:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 10191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "13138:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 10192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13178:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      },
                      {
                        "hexValue": "30",
                        "id": 10193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13216:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 10194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13450:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 10181,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12692,
                        "src": "12918:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$12692_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 10182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12616,
                      "src": "12918:44:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$12616_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 10195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "12918:545:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12867:596:78"
                },
                {
                  "assignments": [
                    10198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10198,
                      "mutability": "mutable",
                      "name": "finalAmountOut",
                      "nameLocation": "13479:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10397,
                      "src": "13474:19:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10197,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13474:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10203,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10201,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10180,
                        "src": "13524:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 10199,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9333,
                        "src": "13496:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 10200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12625,
                      "src": "13496:27:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$12616_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 10202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13496:35:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13474:57:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6461692062616c616c6e6365",
                        "id": 10207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13554:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        "value": "dai balalnce"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10214,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "13600:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$10756",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$10756",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 10213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13592:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10212,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13592:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13592:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 10209,
                                "name": "DAI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9246,
                                "src": "13577:3:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10208,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12452,
                              "src": "13570:6:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 10210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13570:11:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$12452",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 10211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12409,
                          "src": "13570:21:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13570:36:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10204,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "13542:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "13542:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13542:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10218,
                  "nodeType": "ExpressionStatement",
                  "src": "13542:65:78"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10219,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9646,
                      "src": "13618:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13618:18:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10221,
                  "nodeType": "ExpressionStatement",
                  "src": "13618:18:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10225,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "13678:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10222,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "13657:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 10224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2569,
                      "src": "13657:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13657:27:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10227,
                  "nodeType": "ExpressionStatement",
                  "src": "13657:27:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10231,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "13709:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10228,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19449,
                        "src": "13695:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30666,
                      "src": "13695:13:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13695:20:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10233,
                  "nodeType": "ExpressionStatement",
                  "src": "13695:20:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10237,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9237,
                        "src": "13752:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10234,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "13726:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 10236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2547,
                      "src": "13726:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13726:32:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10239,
                  "nodeType": "ExpressionStatement",
                  "src": "13726:32:78"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10240,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19449,
                        "src": "13769:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30683,
                      "src": "13769:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 10243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13769:14:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10244,
                  "nodeType": "ExpressionStatement",
                  "src": "13769:14:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10249,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9243,
                        "src": "13858:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 10250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13864:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10246,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9246,
                            "src": "13844:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10245,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12452,
                          "src": "13837:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13837:11:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12452",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12419,
                      "src": "13837:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13837:35:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10252,
                  "nodeType": "ExpressionStatement",
                  "src": "13837:35:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10256,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9243,
                        "src": "13897:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10253,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19449,
                        "src": "13883:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$31000",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 10255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30666,
                      "src": "13883:13:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13883:19:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10258,
                  "nodeType": "ExpressionStatement",
                  "src": "13883:19:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "464c4f4b49",
                        "id": 10262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13925:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        "value": "FLOKI"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10269,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9193,
                                "src": "13966:7:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                  "typeString": "contract IndexFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                  "typeString": "contract IndexFactory"
                                }
                              ],
                              "id": 10268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13958:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10267,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13958:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13958:16:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 10264,
                                "name": "FLOKI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9261,
                                "src": "13941:5:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10263,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12452,
                              "src": "13934:6:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 10265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13934:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$12452",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 10266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12409,
                          "src": "13934:23:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13934:41:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10259,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "13913:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "13913:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13913:63:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10273,
                  "nodeType": "ExpressionStatement",
                  "src": "13913:63:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10280,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "14025:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 10279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14017:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10278,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14017:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14017:16:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 10282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14035:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10275,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9246,
                            "src": "14004:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10274,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12452,
                          "src": "13997:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13997:11:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12452",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12439,
                      "src": "13997:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13997:46:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10284,
                  "nodeType": "ExpressionStatement",
                  "src": "13997:46:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "69737375616e6365206f757470757420616d6f756e74",
                        "id": 10288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14066:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_359a13672e0efc8e775acc0b85a7529dfd2fae10cbe91c83cc87c206f4e0b150",
                          "typeString": "literal_string \"issuance output amount\""
                        },
                        "value": "issuance output amount"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31303030653138",
                            "id": 10291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14122:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            "value": "1000e18"
                          },
                          {
                            "id": 10292,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9246,
                            "src": "14131:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "33",
                            "id": 10293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14136:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 10289,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "14092:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 10290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getIssuanceAmountOut2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2194,
                          "src": "14092:29:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,address,uint256) external returns (uint256)"
                          }
                        },
                        "id": 10294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14092:46:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_359a13672e0efc8e775acc0b85a7529dfd2fae10cbe91c83cc87c206f4e0b150",
                          "typeString": "literal_string \"issuance output amount\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10285,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "14054:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "14054:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14054:85:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10296,
                  "nodeType": "ExpressionStatement",
                  "src": "14054:85:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10302,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9246,
                            "src": "14186:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14178:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10300,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14178:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14178:12:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030653138",
                        "id": 10304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14192:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      },
                      {
                        "hexValue": "33",
                        "id": 10305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14201:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 10297,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "14150:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 10299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuanceIndexTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1206,
                      "src": "14150:27:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 10306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14150:53:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10307,
                  "nodeType": "ExpressionStatement",
                  "src": "14150:53:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "696e64657820746f6b656e2062616c616e6365",
                        "id": 10311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14226:21:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        "value": "index token balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10316,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9243,
                                "src": "14278:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14270:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10314,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14270:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14270:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 10312,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "14249:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 10313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4176,
                          "src": "14249:20:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14249:35:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10308,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "14214:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "14214:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14214:71:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10320,
                  "nodeType": "ExpressionStatement",
                  "src": "14214:71:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f7274666f6c696f2076616c7565",
                        "id": 10324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14308:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        "value": "portfolio value"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10325,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "14327:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 10326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1917,
                          "src": "14327:27:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 10327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14327:29:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10321,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "14296:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "14296:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14296:61:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10329,
                  "nodeType": "ExpressionStatement",
                  "src": "14296:61:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726564656d7074696f6e206f757470757420616d6f756e74",
                        "id": 10333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14380:26:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97081509a625ccb6248d1b2cd9d29ab9adec84d876c5b6fde56ec070d427bd4b",
                          "typeString": "literal_string \"redemption output amount\""
                        },
                        "value": "redemption output amount"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10340,
                                    "name": "add1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9243,
                                    "src": "14469:4:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14461:7:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10338,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14461:7:78",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14461:13:78",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10336,
                                "name": "indexToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9190,
                                "src": "14440:10:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexToken_$3480",
                                  "typeString": "contract IndexToken"
                                }
                              },
                              "id": 10337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4176,
                              "src": "14440:20:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 10342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14440:35:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10343,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9246,
                            "src": "14477:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "33",
                            "id": 10344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14482:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 10334,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "14408:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 10335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getRedemptionAmountOut2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2370,
                          "src": "14408:31:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,address,uint256) external returns (uint256)"
                          }
                        },
                        "id": 10345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14408:76:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_97081509a625ccb6248d1b2cd9d29ab9adec84d876c5b6fde56ec070d427bd4b",
                          "typeString": "literal_string \"redemption output amount\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10330,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "14368:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "14368:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14368:117:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10347,
                  "nodeType": "ExpressionStatement",
                  "src": "14368:117:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 10351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14508:23:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "arguments": [
                          {
                            "id": 10356,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9243,
                            "src": "14555:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 10353,
                                "name": "DAI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9246,
                                "src": "14540:3:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10352,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12452,
                              "src": "14533:6:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 10354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14533:11:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$12452",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 10355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12409,
                          "src": "14533:21:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14533:27:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10348,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "14496:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "14496:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14496:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10359,
                  "nodeType": "ExpressionStatement",
                  "src": "14496:65:78"
                },
                {
                  "assignments": [
                    10361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10361,
                      "mutability": "mutable",
                      "name": "reallOut",
                      "nameLocation": "14577:8:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10397,
                      "src": "14572:13:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10360,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14572:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10377,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10368,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9243,
                                "src": "14636:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14628:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10366,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14628:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14628:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 10364,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "14607:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 10365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4176,
                          "src": "14607:20:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14607:35:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10373,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9246,
                            "src": "14652:3:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14644:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10371,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14644:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14644:12:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 10375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14658:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 10362,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "14588:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 10363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1586,
                      "src": "14588:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 10376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14588:72:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14572:88:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7265616c206f7574",
                        "id": 10381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14683:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a49a1fe9cb4f3ae4c0d88351fabd7783fcae2b6187f1831ec0415e94522bb731",
                          "typeString": "literal_string \"real out\""
                        },
                        "value": "real out"
                      },
                      {
                        "id": 10382,
                        "name": "reallOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10361,
                        "src": "14695:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a49a1fe9cb4f3ae4c0d88351fabd7783fcae2b6187f1831ec0415e94522bb731",
                          "typeString": "literal_string \"real out\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10378,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "14671:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "14671:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14671:33:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10384,
                  "nodeType": "ExpressionStatement",
                  "src": "14671:33:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 10388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14727:23:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "arguments": [
                          {
                            "id": 10393,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9243,
                            "src": "14774:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 10390,
                                "name": "DAI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9246,
                                "src": "14759:3:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 10389,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12452,
                              "src": "14752:6:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 10391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14752:11:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$12452",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 10392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12409,
                          "src": "14752:21:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14752:27:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10385,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "14715:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31708,
                      "src": "14715:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 10395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14715:65:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10396,
                  "nodeType": "ExpressionStatement",
                  "src": "14715:65:78"
                }
              ]
            },
            "functionSelector": "037e5f68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIssuanceWithTokensOutput",
            "nameLocation": "12605:28:78",
            "parameters": {
              "id": 10140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12633:2:78"
            },
            "returnParameters": {
              "id": 10141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12643:0:78"
            },
            "scope": 10756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10519,
            "nodeType": "FunctionDefinition",
            "src": "14802:1234:78",
            "nodes": [],
            "body": {
              "id": 10518,
              "nodeType": "Block",
              "src": "14830:1206:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10401,
                      "name": "initializeAssetList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10755,
                      "src": "14873:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14873:21:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10403,
                  "nodeType": "ExpressionStatement",
                  "src": "14873:21:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 10422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15098:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10418,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15063:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$10756",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$10756",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 10417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15055:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10416,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15055:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15055:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "62616c616e63654f66286164647265737329",
                                "id": 10413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15010:20:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                  "typeString": "literal_string \"balanceOf(address)\""
                                },
                                "value": "balanceOf(address)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                  "typeString": "literal_string \"balanceOf(address)\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 10409,
                                        "name": "indexToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9190,
                                        "src": "14979:10:78",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IndexToken_$3480",
                                          "typeString": "contract IndexToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IndexToken_$3480",
                                          "typeString": "contract IndexToken"
                                        }
                                      ],
                                      "id": 10408,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14971:7:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 10407,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14971:7:78",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10410,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14971:19:78",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 10404,
                                    "name": "stdstore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19452,
                                    "src": "14941:8:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StdStorage_$25591_storage",
                                      "typeString": "struct StdStorage storage ref"
                                    }
                                  },
                                  "id": 10406,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "target",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 26701,
                                  "src": "14941:29:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                    "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                  }
                                },
                                "id": 10411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14941:50:78",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                  "typeString": "struct StdStorage storage pointer"
                                }
                              },
                              "id": 10412,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26737,
                              "src": "14941:68:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 10414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14941:90:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 10415,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "with_key",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26755,
                          "src": "14941:113:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 10420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14941:128:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 10421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26849,
                      "src": "14941:156:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 10423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14941:163:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10424,
                  "nodeType": "ExpressionStatement",
                  "src": "14941:163:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 10437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15270:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c537570706c792829",
                            "id": 10434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15184:15:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_18160ddd7f15c72528c2f94fd8dfe3c8d5aa26e2c50c7d81f4bc7bee8d4b7932",
                              "typeString": "literal_string \"totalSupply()\""
                            },
                            "value": "totalSupply()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_18160ddd7f15c72528c2f94fd8dfe3c8d5aa26e2c50c7d81f4bc7bee8d4b7932",
                              "typeString": "literal_string \"totalSupply()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10430,
                                    "name": "indexToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9190,
                                    "src": "15153:10:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexToken_$3480",
                                      "typeString": "contract IndexToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexToken_$3480",
                                      "typeString": "contract IndexToken"
                                    }
                                  ],
                                  "id": 10429,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15145:7:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10428,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15145:7:78",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15145:19:78",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10425,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19452,
                                "src": "15115:8:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$25591_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 10427,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26701,
                              "src": "15115:29:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 10432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15115:50:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 10433,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26737,
                          "src": "15115:68:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 10435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15115:85:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 10436,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26849,
                      "src": "15115:154:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 10438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15115:161:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10439,
                  "nodeType": "ExpressionStatement",
                  "src": "15115:161:78"
                },
                {
                  "body": {
                    "id": 10473,
                    "nodeType": "Block",
                    "src": "15516:192:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "323030653138",
                              "id": 10470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15689:6:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000000000000000_by_1",
                                "typeString": "int_const 200000000000000000000"
                              },
                              "value": "200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_200000000000000000000_by_1",
                                "typeString": "int_const 200000000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 10466,
                                      "name": "factory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9193,
                                      "src": "15651:7:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                        "typeString": "contract IndexFactory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                        "typeString": "contract IndexFactory"
                                      }
                                    ],
                                    "id": 10465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15643:7:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 10464,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15643:7:78",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 10467,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15643:16:78",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "62616c616e63654f66286164647265737329",
                                      "id": 10461,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15598:20:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                        "typeString": "literal_string \"balanceOf(address)\""
                                      },
                                      "value": "balanceOf(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                        "typeString": "literal_string \"balanceOf(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 10455,
                                                "name": "assetList",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9309,
                                                "src": "15565:9:78",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 10457,
                                              "indexExpression": {
                                                "id": 10456,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10441,
                                                "src": "15575:1:78",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "15565:12:78",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 10454,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "15557:7:78",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 10453,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "15557:7:78",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 10458,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15557:21:78",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 10450,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 19452,
                                          "src": "15527:8:78",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$25591_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 10452,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 26701,
                                        "src": "15527:29:78",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 10459,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15527:52:78",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 10460,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26737,
                                    "src": "15527:70:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 10462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15527:92:78",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 10463,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 26755,
                                "src": "15527:115:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 10468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15527:133:78",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 10469,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26849,
                            "src": "15527:161:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 10471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15527:169:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10472,
                        "nodeType": "ExpressionStatement",
                        "src": "15527:169:78"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10443,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10441,
                      "src": "15490:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10444,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9309,
                        "src": "15494:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 10445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15494:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15490:20:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10474,
                  "initializationExpression": {
                    "assignments": [
                      10441
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10441,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15487:1:78",
                        "nodeType": "VariableDeclaration",
                        "scope": 10474,
                        "src": "15482:6:78",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10440,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15482:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10442,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15482:6:78"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15512:3:78",
                      "subExpression": {
                        "id": 10447,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10441,
                        "src": "15512:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10449,
                    "nodeType": "ExpressionStatement",
                    "src": "15512:3:78"
                  },
                  "nodeType": "ForStatement",
                  "src": "15478:230:78"
                },
                {
                  "body": {
                    "id": 10485,
                    "nodeType": "Block",
                    "src": "15756:87:78",
                    "statements": []
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10478,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10476,
                      "src": "15730:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10479,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9309,
                        "src": "15734:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 10480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15734:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15730:20:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10486,
                  "initializationExpression": {
                    "assignments": [
                      10476
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10476,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15727:1:78",
                        "nodeType": "VariableDeclaration",
                        "scope": 10486,
                        "src": "15722:6:78",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10475,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15722:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10477,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15722:6:78"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15752:3:78",
                      "subExpression": {
                        "id": 10482,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10476,
                        "src": "15752:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10484,
                    "nodeType": "ExpressionStatement",
                    "src": "15752:3:78"
                  },
                  "nodeType": "ForStatement",
                  "src": "15718:125:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10490,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "15865:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 10491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1917,
                          "src": "15865:27:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 10492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15865:29:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10487,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "15853:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31581,
                      "src": "15853:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 10493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15853:42:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10494,
                  "nodeType": "ExpressionStatement",
                  "src": "15853:42:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726564656d7074696f6e2068617070656e696e672e2e2e",
                        "id": 10498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15918:25:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea7960792d59f7a66f9f9ef77bf35564014a5245f985c11384dc22c8b22dfdf7",
                          "typeString": "literal_string \"redemption happening...\""
                        },
                        "value": "redemption happening..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea7960792d59f7a66f9f9ef77bf35564014a5245f985c11384dc22c8b22dfdf7",
                          "typeString": "literal_string \"redemption happening...\""
                        }
                      ],
                      "expression": {
                        "id": 10495,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "15906:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31595,
                      "src": "15906:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 10499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15906:38:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10500,
                  "nodeType": "ExpressionStatement",
                  "src": "15906:38:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10508,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16003:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$10756",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$10756",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 10507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15995:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10506,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15995:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15995:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 10504,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "15974:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$3480",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 10505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4176,
                          "src": "15974:20:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 10510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15974:35:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10513,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9357,
                            "src": "16019:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$11710",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$11710",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 10512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16011:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10511,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16011:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16011:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 10515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16026:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 10501,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "15955:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2503",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 10503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1586,
                      "src": "15955:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 10516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15955:73:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10517,
                  "nodeType": "ExpressionStatement",
                  "src": "15955:73:78"
                }
              ]
            },
            "functionSelector": "38d6c81c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBlock",
            "nameLocation": "14811:9:78",
            "parameters": {
              "id": 10399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14820:2:78"
            },
            "returnParameters": {
              "id": 10400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14830:0:78"
            },
            "scope": 10756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10622,
            "nodeType": "FunctionDefinition",
            "src": "16044:1384:78",
            "nodes": [],
            "body": {
              "id": 10621,
              "nodeType": "Block",
              "src": "16075:1353:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10523,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "16094:4:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10621,
                      "src": "16086:12:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10522,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16086:7:78",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10530,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10526,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9336,
                        "src": "16133:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10527,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9285,
                        "src": "16153:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 10528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16172:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        }
                      ],
                      "expression": {
                        "id": 10524,
                        "name": "factoryV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9252,
                        "src": "16101:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$12535",
                          "typeString": "contract IUniswapV3Factory"
                        }
                      },
                      "id": 10525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12508,
                      "src": "16101:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                        "typeString": "function (address,address,uint24) view external returns (address)"
                      }
                    },
                    "id": 10529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16101:86:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16086:101:78"
                },
                {
                  "assignments": [
                    10532,
                    10534,
                    10536,
                    10538,
                    10540,
                    10542,
                    10544
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10532,
                      "mutability": "mutable",
                      "name": "sqrtPriceX96",
                      "nameLocation": "16220:12:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10621,
                      "src": "16212:20:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 10531,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "16212:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10534,
                      "mutability": "mutable",
                      "name": "tick",
                      "nameLocation": "16253:4:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10621,
                      "src": "16247:10:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 10533,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "16247:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10536,
                      "mutability": "mutable",
                      "name": "observationIndex",
                      "nameLocation": "16279:16:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10621,
                      "src": "16272:23:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 10535,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "16272:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10538,
                      "mutability": "mutable",
                      "name": "observationCardinality",
                      "nameLocation": "16317:22:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10621,
                      "src": "16310:29:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 10537,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "16310:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10540,
                      "mutability": "mutable",
                      "name": "observationCardinalityNext",
                      "nameLocation": "16361:26:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10621,
                      "src": "16354:33:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 10539,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "16354:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10542,
                      "mutability": "mutable",
                      "name": "feeProtocol",
                      "nameLocation": "16408:11:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10621,
                      "src": "16402:17:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 10541,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16402:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10544,
                      "mutability": "mutable",
                      "name": "unlocked",
                      "nameLocation": "16439:8:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10621,
                      "src": "16434:13:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10543,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16434:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10550,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10546,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10523,
                            "src": "16476:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10545,
                          "name": "IUniswapV3Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14047,
                          "src": "16461:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$14047_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        },
                        "id": 10547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16461:20:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$14047",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 10548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "16461:26:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 10549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16461:28:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16197:292:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10554,
                        "name": "sqrtPriceX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10532,
                        "src": "16512:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "expression": {
                        "id": 10551,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "16500:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31581,
                      "src": "16500:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 10555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16500:25:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10556,
                  "nodeType": "ExpressionStatement",
                  "src": "16500:25:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10562,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9336,
                            "src": "16569:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10563,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9285,
                            "src": "16576:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31653138",
                            "id": 10564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16582:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          {
                            "hexValue": "33",
                            "id": 10565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16588:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 10560,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9193,
                            "src": "16548:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2503",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 10561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAmountOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1862,
                          "src": "16548:20:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 10566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16548:42:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10557,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "16536:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31581,
                      "src": "16536:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 10567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16536:55:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10568,
                  "nodeType": "ExpressionStatement",
                  "src": "16536:55:78"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10569,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9357,
                          "src": "16620:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$11710",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 10571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11703,
                        "src": "16620:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 10573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31653138",
                          "id": 10572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16639:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        }
                      ],
                      "src": "16620:24:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 10574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16620:26:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10575,
                  "nodeType": "ExpressionStatement",
                  "src": "16620:26:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10582,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9333,
                            "src": "16687:10:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 10581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16679:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10580,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16679:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16679:19:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 10584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16700:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10577,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9336,
                            "src": "16664:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10576,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12452,
                          "src": "16657:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12452_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16657:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12452",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 10579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12439,
                      "src": "16657:21:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16657:48:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10586,
                  "nodeType": "ExpressionStatement",
                  "src": "16657:48:78"
                },
                {
                  "assignments": [
                    10591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10591,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "16758:6:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10621,
                      "src": "16716:48:78",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 10590,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10589,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12616,
                          "src": "16716:34:78"
                        },
                        "referencedDeclaration": 12616,
                        "src": "16716:34:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10607,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10594,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9336,
                        "src": "16836:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10595,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9285,
                        "src": "16866:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 10596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16920:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 10599,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16958:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$10756",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$10756",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 10598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16950:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10597,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16950:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16950:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10601,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "16988:5:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 10602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "16988:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 10603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17028:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "30",
                        "id": 10604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17065:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 10605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17299:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 10592,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12692,
                        "src": "16767:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$12692_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 10593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12616,
                      "src": "16767:44:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$12616_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 10606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16767:545:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16716:596:78"
                },
                {
                  "assignments": [
                    10609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10609,
                      "mutability": "mutable",
                      "name": "finalAmountOut",
                      "nameLocation": "17328:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 10621,
                      "src": "17323:19:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10608,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17323:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10614,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10612,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10591,
                        "src": "17373:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$12616_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 10610,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9333,
                        "src": "17345:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$12692",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 10611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12625,
                      "src": "17345:27:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$12616_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 10613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17345:35:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17323:57:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10618,
                        "name": "finalAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10609,
                        "src": "17403:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10615,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39064,
                        "src": "17391:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$39064_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 10617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31581,
                      "src": "17391:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 10619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17391:27:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10620,
                  "nodeType": "ExpressionStatement",
                  "src": "17391:27:78"
                }
              ]
            },
            "functionSelector": "2a888735",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetPrice",
            "nameLocation": "16053:12:78",
            "parameters": {
              "id": 10520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16065:2:78"
            },
            "returnParameters": {
              "id": 10521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16075:0:78"
            },
            "scope": 10756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10755,
            "nodeType": "FunctionDefinition",
            "src": "17438:1184:78",
            "nodes": [],
            "body": {
              "id": 10754,
              "nodeType": "Block",
              "src": "17476:1146:78",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 10720,
                    "nodeType": "Block",
                    "src": "17530:730:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10651,
                                "name": "assetList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9309,
                                "src": "17684:9:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 10653,
                              "indexExpression": {
                                "id": 10652,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10626,
                                "src": "17694:1:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17684:12:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10648,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10626,
                                  "src": "17653:1:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "6f7261636c654c6973742875696e7432353629",
                                      "id": 10645,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17607:21:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_239aad0df7726bcd645ee02195770ea74ffd42d5dc84b1eb9279ea9cf39a39a1",
                                        "typeString": "literal_string \"oracleList(uint256)\""
                                      },
                                      "value": "oracleList(uint256)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_239aad0df7726bcd645ee02195770ea74ffd42d5dc84b1eb9279ea9cf39a39a1",
                                        "typeString": "literal_string \"oracleList(uint256)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 10641,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9193,
                                              "src": "17579:7:78",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 10640,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "17571:7:78",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 10639,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "17571:7:78",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 10642,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17571:16:78",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 10636,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 19452,
                                          "src": "17541:8:78",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$25591_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 10638,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 26701,
                                        "src": "17541:29:78",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 10643,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17541:47:78",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 10644,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26737,
                                    "src": "17541:65:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 10646,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17541:88:78",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 10647,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 26773,
                                "src": "17541:111:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_uint256_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,uint256) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 10649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17541:114:78",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 10650,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26832,
                            "src": "17541:142:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,address)"
                            }
                          },
                          "id": 10654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17541:156:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10655,
                        "nodeType": "ExpressionStatement",
                        "src": "17541:156:78"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10671,
                                "name": "assetList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9309,
                                "src": "17852:9:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 10673,
                              "indexExpression": {
                                "id": 10672,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10626,
                                "src": "17862:1:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17852:12:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10668,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10626,
                                  "src": "17821:1:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "63757272656e744c6973742875696e7432353629",
                                      "id": 10665,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17774:22:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_9932ba4c600b0d32a7f3471f2819be02d7a06b8a7a4a3c683d5e79d6635739d4",
                                        "typeString": "literal_string \"currentList(uint256)\""
                                      },
                                      "value": "currentList(uint256)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_9932ba4c600b0d32a7f3471f2819be02d7a06b8a7a4a3c683d5e79d6635739d4",
                                        "typeString": "literal_string \"currentList(uint256)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 10661,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9193,
                                              "src": "17746:7:78",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 10660,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "17738:7:78",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 10659,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "17738:7:78",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 10662,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17738:16:78",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 10656,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 19452,
                                          "src": "17708:8:78",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$25591_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 10658,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 26701,
                                        "src": "17708:29:78",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 10663,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17708:47:78",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 10664,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26737,
                                    "src": "17708:65:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 10666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17708:89:78",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 10667,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 26773,
                                "src": "17708:112:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_uint256_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,uint256) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 10669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17708:115:78",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 10670,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26832,
                            "src": "17708:143:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,address)"
                            }
                          },
                          "id": 10674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17708:157:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10675,
                        "nodeType": "ExpressionStatement",
                        "src": "17708:157:78"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10693,
                                "name": "tokenShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9318,
                                "src": "18036:11:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 10695,
                              "indexExpression": {
                                "id": 10694,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10626,
                                "src": "18048:1:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18036:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 10688,
                                    "name": "assetList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9309,
                                    "src": "17994:9:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 10690,
                                  "indexExpression": {
                                    "id": 10689,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10626,
                                    "src": "18004:1:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17994:12:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "746f6b656e4d61726b65745368617265286164647265737329",
                                      "id": 10685,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17942:27:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_fcaae87b56804c66b17f138a81029c896b0ec3952302a16dfb275660ea7f1540",
                                        "typeString": "literal_string \"tokenMarketShare(address)\""
                                      },
                                      "value": "tokenMarketShare(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_fcaae87b56804c66b17f138a81029c896b0ec3952302a16dfb275660ea7f1540",
                                        "typeString": "literal_string \"tokenMarketShare(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 10681,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9193,
                                              "src": "17914:7:78",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 10680,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "17906:7:78",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 10679,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "17906:7:78",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 10682,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17906:16:78",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 10676,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 19452,
                                          "src": "17876:8:78",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$25591_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 10678,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 26701,
                                        "src": "17876:29:78",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 10683,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17876:47:78",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 10684,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26737,
                                    "src": "17876:65:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 10686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17876:94:78",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 10687,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 26755,
                                "src": "17876:117:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 10691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17876:131:78",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 10692,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26849,
                            "src": "17876:159:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 10696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17876:175:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10697,
                        "nodeType": "ExpressionStatement",
                        "src": "17876:175:78"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10715,
                                "name": "swapVersions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9327,
                                "src": "18222:12:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 10717,
                              "indexExpression": {
                                "id": 10716,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10626,
                                "src": "18235:1:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18222:15:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 10710,
                                    "name": "assetList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9309,
                                    "src": "18180:9:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 10712,
                                  "indexExpression": {
                                    "id": 10711,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10626,
                                    "src": "18190:1:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18180:12:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "746f6b656e5377617056657273696f6e286164647265737329",
                                      "id": 10707,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18128:27:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_d90bc211448c02154e13cc66867cb2fa9b509ab0ca2b6f62443e8f6dc26d7274",
                                        "typeString": "literal_string \"tokenSwapVersion(address)\""
                                      },
                                      "value": "tokenSwapVersion(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_d90bc211448c02154e13cc66867cb2fa9b509ab0ca2b6f62443e8f6dc26d7274",
                                        "typeString": "literal_string \"tokenSwapVersion(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 10703,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9193,
                                              "src": "18100:7:78",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 10702,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "18092:7:78",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 10701,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "18092:7:78",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 10704,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18092:16:78",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 10698,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 19452,
                                          "src": "18062:8:78",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$25591_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 10700,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 26701,
                                        "src": "18062:29:78",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 10705,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18062:47:78",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 10706,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26737,
                                    "src": "18062:65:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 10708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18062:94:78",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 10709,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 26755,
                                "src": "18062:117:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 10713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18062:131:78",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 10714,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26849,
                            "src": "18062:159:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 10718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18062:176:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10719,
                        "nodeType": "ExpressionStatement",
                        "src": "18062:176:78"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10629,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10626,
                      "src": "17503:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 10630,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9309,
                        "src": "17507:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 10631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "17507:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17503:20:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10721,
                  "initializationExpression": {
                    "assignments": [
                      10626
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10626,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "17496:1:78",
                        "nodeType": "VariableDeclaration",
                        "scope": 10721,
                        "src": "17491:6:78",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10625,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17491:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 10628,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 10627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17500:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17491:10:78"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 10634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "17525:3:78",
                      "subExpression": {
                        "id": 10633,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10626,
                        "src": "17525:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10635,
                    "nodeType": "ExpressionStatement",
                    "src": "17525:3:78"
                  },
                  "nodeType": "ForStatement",
                  "src": "17487:773:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10734,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9309,
                          "src": "18414:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 10735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "18414:16:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c4f7261636c654c6973742829",
                            "id": 10731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18336:19:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c8599dedd2267d7ace54d927af92d01c1f424c72735cd282fed113a258ea6c35",
                              "typeString": "literal_string \"totalOracleList()\""
                            },
                            "value": "totalOracleList()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c8599dedd2267d7ace54d927af92d01c1f424c72735cd282fed113a258ea6c35",
                              "typeString": "literal_string \"totalOracleList()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10727,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9193,
                                    "src": "18308:7:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                      "typeString": "contract IndexFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                      "typeString": "contract IndexFactory"
                                    }
                                  ],
                                  "id": 10726,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18300:7:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10725,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18300:7:78",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18300:16:78",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10722,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19452,
                                "src": "18270:8:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$25591_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 10724,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26701,
                              "src": "18270:29:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 10729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18270:47:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 10730,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26737,
                          "src": "18270:65:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 10732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18270:86:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 10733,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26849,
                      "src": "18270:143:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 10736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18270:161:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10737,
                  "nodeType": "ExpressionStatement",
                  "src": "18270:161:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10750,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9309,
                          "src": "18587:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 10751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "18587:16:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c43757272656e744c6973742829",
                            "id": 10747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18508:20:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_53fd4332f2a0b7090fb49c3aa55b2f1e0988040a339bc2dee556b3d3a622838d",
                              "typeString": "literal_string \"totalCurrentList()\""
                            },
                            "value": "totalCurrentList()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_53fd4332f2a0b7090fb49c3aa55b2f1e0988040a339bc2dee556b3d3a622838d",
                              "typeString": "literal_string \"totalCurrentList()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10743,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9193,
                                    "src": "18480:7:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                      "typeString": "contract IndexFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexFactory_$2503",
                                      "typeString": "contract IndexFactory"
                                    }
                                  ],
                                  "id": 10742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18472:7:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10741,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18472:7:78",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18472:16:78",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10738,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19452,
                                "src": "18442:8:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$25591_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 10740,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26701,
                              "src": "18442:29:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 10745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18442:47:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 10746,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26737,
                          "src": "18442:65:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$25591_storage_ptr_$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 10748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18442:87:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$25591_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 10749,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26849,
                      "src": "18442:144:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$25591_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$25591_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 10752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18442:162:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10753,
                  "nodeType": "ExpressionStatement",
                  "src": "18442:162:78"
                }
              ]
            },
            "functionSelector": "e1497cff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeAssetList",
            "nameLocation": "17447:19:78",
            "parameters": {
              "id": 10623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17466:2:78"
            },
            "returnParameters": {
              "id": 10624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17476:0:78"
            },
            "scope": 10756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9179,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14015,
              "src": "849:4:78"
            },
            "id": 9180,
            "nodeType": "InheritanceSpecifier",
            "src": "849:4:78"
          }
        ],
        "contractDependencies": [
          2503,
          3480,
          13137,
          13961,
          14141,
          17098
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10756,
          14015,
          29289,
          24825,
          24500,
          23707,
          21647,
          20883,
          19390,
          19456,
          19453
        ],
        "name": "CounterTest",
        "nameLocation": "834:11:78",
        "scope": 10757,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 78
}