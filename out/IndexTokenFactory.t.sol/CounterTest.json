{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "feeRatePerDayScaled",
          "type": "uint256"
        }
      ],
      "name": "FeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "FeeReceiverSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "methodologist",
          "type": "address"
        }
      ],
      "name": "MethodologistSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "methodology",
          "type": "string"
        }
      ],
      "name": "MethodologySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintFeeToReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "SupplyCeilingSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRestricted",
          "type": "bool"
        }
      ],
      "name": "ToggledRestricted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexToken",
      "outputs": [
        {
          "internalType": "contract IndexToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoter",
      "outputs": [
        {
          "internalType": "contract IQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintWithSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604081905260078054600160ff199182168117909255600b8054909116821790556001625e79b760e01b031990915260845260008051602062004bc283398151915263ffa1864960a460206040518083038186803b1580156200006357600080fd5b505afa15801562000078573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009e91906200056c565b601e80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b031981526002600482015260008051602062004bc28339815191529063ffa186499060240160206040518083038186803b1580156200010857600080fd5b505afa1580156200011d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014391906200056c565b601f80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b031981526003600482015260008051602062004bc28339815191529063ffa186499060240160206040518083038186803b158015620001ad57600080fd5b505afa158015620001c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e891906200056c565b602080546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260048082015260008051602062004bc28339815191529063ffa186499060240160206040518083038186803b1580156200025157600080fd5b505afa15801562000266573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028c91906200056c565b602180546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b031981526005600482015260008051602062004bc28339815191529063ffa186499060240160206040518083038186803b158015620002f657600080fd5b505afa1580156200030b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200033191906200056c565b602280546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b031981526006600482015260008051602062004bc28339815191529063ffa186499060240160206040518083038186803b1580156200039b57600080fd5b505afa158015620003b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003d691906200056c565b602380546001600160a01b0319166001600160a01b039290921691909117905560405163f877cb1960e01b815260206004820152600f60248201526e1350525393915517d49410d7d55493608a1b604482015260008051602062004bc28339815191529063f877cb199060640160006040518083038186803b1580156200045c57600080fd5b505afa15801562000471573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200049b91908101906200059e565b8051620004b191602791602090910190620004c6565b50348015620004bf57600080fd5b50620006cd565b828054620004d4906200067a565b90600052602060002090601f016020900481019282620004f8576000855562000543565b82601f106200051357805160ff191683800117855562000543565b8280016001018555821562000543579182015b828111156200054357825182559160200191906001019062000526565b506200055192915062000555565b5090565b5b8082111562000551576000815560010162000556565b6000602082840312156200057f57600080fd5b81516001600160a01b03811681146200059757600080fd5b9392505050565b60006020808385031215620005b257600080fd5b82516001600160401b0380821115620005ca57600080fd5b818501915085601f830112620005df57600080fd5b815181811115620005f457620005f4620006b7565b604051601f8201601f19908116603f011681019083821181831017156200061f576200061f620006b7565b8160405282815288868487010111156200063857600080fd5b600093505b828410156200065c57848401860151818501870152928501926200063d565b828411156200066e5760008684830101525b98975050505050505050565b600181811c908216806200068f57607f821691505b60208210811415620006b157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6144e580620006dd6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063916a17c6116100b8578063c6bbd5a71161007c578063c6bbd5a714610272578063e0bab4c414610285578063e20c9f71146102a0578063e7d015f2146102a8578063f4b9fa75146102bb578063fa7626d4146102ce57600080fd5b8063916a17c61461022757806396c023e71461022f578063b5508aa914610237578063ba414fa61461023f578063c31c9c071461025757600080fd5b80633f7286f41161010a5780633f7286f4146101945780633fc8cef31461019c5780634aa4a4fc146101c757806366d9a9a0146101e257806385226c81146101f75780638dae88c21461020c57600080fd5b80630a9254e4146101475780630e7628c6146101515780631ed7831c146101595780632ade3880146101775780633e5e3c231461018c575b600080fd5b61014f6102db565b005b61014f61052e565b610161610907565b60405161016e9190611c6e565b60405180910390f35b61017f610969565b60405161016e9190611d1d565b610161610aab565b610161610b0b565b6025546101af906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b6101af73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6101ea610b6b565b60405161016e9190611ddd565b6101ff610c51565b60405161016e9190611cbb565b6101af73b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b6101ea610d21565b61014f610e07565b6101ff6113ea565b6102476114ba565b604051901515815260200161016e565b6101af73e592427a0aece92de3edee1f18e0157c0586156481565b6026546101af906001600160a01b031681565b6101af736b175474e89094c44da98b954eedeac495271d0f81565b6101616115e7565b601c546101af906001600160a01b031681565b6024546101af906001600160a01b031681565b6007546102479060ff1681565b604051630637469360e31b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba34989061031390602790600401611e90565b602060405180830381600087803b15801561032d57600080fd5b505af1158015610341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103659190611bdc565b601d5560405161037490611ad0565b604051809103906000f080158015610390573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316908117909155601e54604051637f6f013b60e11b815260a0600480830191909152600e60a48301526d20b73a349024b7333630ba34b7b760911b60c483015260e0602483015260e482015263414e464960e01b610104820152670de0b6b3a764000060448201529216606483015269d3c21bcecceda100000060848301529063fede02769061012401600060405180830381600087803b15801561044d57600080fd5b505af1158015610461573d6000803e3d6000fd5b5050601c54602054604051637e51dad560e11b81526001600160a01b0391821660048201529116925063fca3b5aa9150602401600060405180830381600087803b1580156104ae57600080fd5b505af11580156104c2573d6000803e3d6000fd5b5050602480546001600160a01b0319908116736b175474e89094c44da98b954eedeac495271d0f1790915560258054821673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21790556026805490911673b27308f9f90d607463bb33ea1bebb41c27ce5ab61790555050565b601c5460408051638da5cb5b60e01b815290516105b2926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561057457600080fd5b505afa158015610588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac9190611add565b30611647565b601c5460408051632fecd58960e01b8152905161063e926001600160a01b031691632fecd589916004808301926020929190829003018186803b1580156105f857600080fd5b505afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106309190611bdc565b670de0b6b3a764000061174f565b601c546040805163184a732f60e01b815290516106c2926001600160a01b03169163184a732f916004808301926020929190829003018186803b15801561068457600080fd5b505afa158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190611bdc565b4261174f565b601c5460408051632cfc019d60e21b81529051610751926001600160a01b03169163b3f00674916004808301926020929190829003018186803b15801561070857600080fd5b505afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190611add565b601e546001600160a01b0316611647565b601c54604080516309eeb1d560e41b815290516107e8926001600160a01b031691639eeb1d50916004808301926000929190829003018186803b15801561079757600080fd5b505afa1580156107ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d39190810190611b2f565b6040518060200160405280600081525061182e565b601c5460408051632b52684d60e01b81529051610876926001600160a01b031691632b52684d916004808301926020929190829003018186803b15801561082e57600080fd5b505afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190611bdc565b69d3c21bcecceda100000061174f565b601c54604080516303aa30b960e11b81529051610905926001600160a01b0316916307546172916004808301926020929190829003018186803b1580156108bc57600080fd5b505afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f49190611add565b6020546001600160a01b0316611647565b565b6060601480548060200260200160405190810160405280929190818152602001828054801561095f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610941575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015610aa257600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015610a8b5783829060005260206000200180546109fe906120a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2a906120a6565b8015610a775780601f10610a4c57610100808354040283529160200191610a77565b820191906000526020600020905b815481529060010190602001808311610a5a57829003601f168201915b5050505050815260200190600101906109df565b50505050815250508152602001906001019061098d565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801561095f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610941575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801561095f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610941575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015610aa25760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610c3957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610bfb5790505b50505050508152505081526020019060010190610b8f565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015610aa2578382906000526020600020018054610c94906120a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc0906120a6565b8015610d0d5780601f10610ce257610100808354040283529160200191610d0d565b820191906000526020600020905b815481529060010190602001808311610cf057829003601f168201915b505050505081526020019060010190610c75565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015610aa25760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610def57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610db15790505b50505050508152505081526020019060010190610d45565b601d54604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b158015610e5857600080fd5b505af1158015610e6c573d6000803e3d6000fd5b50505050602560009054906101000a90046001600160a01b03166001600160a01b031663d0e30db067016345785d8a00006040518263ffffffff1660e01b81526004016000604051808303818588803b158015610ec857600080fd5b505af1158015610edc573d6000803e3d6000fd5b50506025546040516370a0823160e01b8152306004820152610f6e94506001600160a01b0390911692506370a08231915060240160206040518083038186803b158015610f2857600080fd5b505afa158015610f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f609190611bdc565b67016345785d8a000061174f565b60255460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c05861564600482015267016345785d8a000060248201526001600160a01b039091169063095ea7b390604401602060405180830381600087803b158015610fd557600080fd5b505af1158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d9190611b0d565b50604080516101008101825273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28152736b175474e89094c44da98b954eedeac495271d0f60208201908152610bb88284019081523060608401908152426080850190815267016345785d8a000060a08601908152600060c0870181815260e08801828152985163414bf38960e01b815288516001600160a01b039081166004830152975188166024820152955162ffffff166044870152935186166064860152915160848501525160a4840152905160c4830152935190911660e482015290919073e592427a0aece92de3edee1f18e0157c058615649063414bf3899061010401602060405180830381600087803b15801561111c57600080fd5b505af1158015611130573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111549190611bdc565b905061115f8161195b565b602480546040516370a0823160e01b81523060048201526111e2926001600160a01b03909216916370a08231910160206040518083038186803b1580156111a557600080fd5b505afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd9190611bdc565b61195b565b60248054601c546040516370a0823160e01b81523060048201526001600160a01b039283169363095ea7b3939092169184916370a08231910160206040518083038186803b15801561123357600080fd5b505afa158015611247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126b9190611bdc565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156112b157600080fd5b505af11580156112c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e99190611b0d565b50601c54602480546040516370a0823160e01b81523060048201526001600160a01b03938416936379c6506893736b175474e89094c44da98b954eedeac495271d0f9391909116916370a08231910160206040518083038186803b15801561135057600080fd5b505afa158015611364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113889190611bdc565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156113ce57600080fd5b505af11580156113e2573d6000803e3d6000fd5b505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015610aa257838290600052602060002001805461142d906120a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611459906120a6565b80156114a65780601f1061147b576101008083540402835291602001916114a6565b820191906000526020600020905b81548152906001019060200180831161148957829003601f168201915b50505050508152602001906001019061140e565b600754600090610100900460ff16156114dc5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156115e25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161156a917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611c21565b60408051601f198184030181529082905261158491611c52565b6000604051808303816000865af19150503d80600081146115c1576040519150601f19603f3d011682016040523d82523d6000602084013e6115c6565b606091505b50915050808060200190518101906115de9190611b0d565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801561095f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610941575050505050905090565b806001600160a01b0316826001600160a01b03161461174b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516116cd9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516117049190611f38565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405161173b9190611ff8565b60405180910390a161174b6119a3565b5050565b80821461174b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516117c09060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516117f79190611fc0565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405161173b919061204c565b8060405160200161183f9190611c52565b60405160208183030381529060405280519060200120826040516020016118669190611c52565b604051602081830303815290604052805190602001201461174b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516118ed9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826040516119249190611f7c565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405161173b9190612022565b6119a08160405160240161197191815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611aaf565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611a9e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611a3d9291602001611c21565b60408051601f1981840301815290829052611a5791611c52565b6000604051808303816000865af19150503d8060008114611a94576040519150601f19603f3d011682016040523d82523d6000602084013e611a99565b606091505b505050505b6007805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6123b8806120f883390190565b600060208284031215611aef57600080fd5b81516001600160a01b0381168114611b0657600080fd5b9392505050565b600060208284031215611b1f57600080fd5b81518015158114611b0657600080fd5b600060208284031215611b4157600080fd5b815167ffffffffffffffff80821115611b5957600080fd5b818401915084601f830112611b6d57600080fd5b815181811115611b7f57611b7f6120e1565b604051601f8201601f19908116603f01168101908382118183101715611ba757611ba76120e1565b81604052828152876020848701011115611bc057600080fd5b611bd1836020830160208801612076565b979650505050505050565b600060208284031215611bee57600080fd5b5051919050565b60008151808452611c0d816020860160208601612076565b601f01601f19169290920160200192915050565b6001600160e01b0319831681528151600090611c44816004850160208701612076565b919091016004019392505050565b60008251611c64818460208701612076565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611caf5783516001600160a01b031683529284019291840191600101611c8a565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d1057603f19888603018452611cfe858351611bf5565b94509285019290850190600101611ce2565b5092979650505050505050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015611dcd57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015611db757605f19898503018352611da5848651611bf5565b948e01949350918d0191600101611d89565b505050978a019794505091880191600101611d44565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611e8157898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611e6c5783516001600160e01b0319168252928b019260019290920191908b0190611e42565b50978a01979550505091870191600101611e05565b50919998505050505050505050565b600060208083526000845481600182811c915080831680611eb257607f831692505b858310811415611ed057634e487b7160e01b85526022600452602485fd5b878601838152602001818015611eed5760018114611efe57611f29565b60ff19861682528782019650611f29565b60008b81526020902060005b86811015611f2357815484820152908501908901611f0a565b83019750505b50949998505050505050505050565b604081526000611f6260408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000611fa660408301600a8152690808080808081319599d60b21b602082015260400190565b8281036020840152611fb88185611bf5565b949350505050565b604081526000611fea60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b604081526000611f6260408301600a8152690808080808149a59da1d60b21b602082015260400190565b604081526000611fa660408301600a8152690808080808149a59da1d60b21b602082015260400190565b604081526000611fea60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60005b83811015612091578181015183820152602001612079565b838111156120a0576000848401525b50505050565b600181811c908216806120ba57607f821691505b602082108114156120db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfe608060405261010480546001600160a01b031990811673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217909155610105805490911673b27308f9f90d607463bb33ea1bebb41c27ce5ab617905534801561005a57600080fd5b5061234e8061006a6000396000f3fe60806040526004361061026b5760003560e01c80638da5cb5b11610144578063b5ed298a116100b6578063dd62ed3e1161007a578063dd62ed3e1461074b578063efdcd9741461076b578063f2fde38b1461078b578063f734e22a146107ab578063fca3b5aa146107c0578063fede0276146107e057600080fd5b8063b5ed298a14610691578063c01bc982146106b1578063c31c9c07146106e2578063c6bbd5a71461070a578063d153b60c1461072b57600080fd5b80639eeb1d50116101085780639eeb1d50146105dc5780639f8e67bf146105f1578063a457c2d714610611578063a9059cbb14610631578063aaa4a18414610651578063b3f006741461067157600080fd5b80638da5cb5b146105415780638dae88c21461055f57806391fe1b921461058757806395d89b41146105a75780639dc29fac146105bc57600080fd5b80633fc8cef3116101dd578063660db484116101a1578063660db484146104815780636e01a686146104a157806370a08231146104c1578063715018a6146104f757806379c650681461050c5780638456cb591461052c57600080fd5b80633fc8cef3146103e057806340c10f191461040157806345596e2e146104215780634aa4a4fc146104415780635c975abb1461046957600080fd5b806323b872dd1161022f57806323b872dd146103405780632b52684d146103605780632fecd58914610377578063313ce5671461038d57806339509351146103a95780633f4ba83a146103c957600080fd5b806306fdde031461027757806307546172146102a2578063095ea7b3146102db57806318160ddd1461030b578063184a732f1461032a57600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061028c610800565b60405161029991906120ac565b60405180910390f35b3480156102ae57600080fd5b50610100546102c3906001600160a01b031681565b6040516001600160a01b039091168152602001610299565b3480156102e757600080fd5b506102fb6102f6366004611f84565b610892565b6040519015158152602001610299565b34801561031757600080fd5b506035545b604051908152602001610299565b34801561033657600080fd5b5061031c60fd5481565b34801561034c57600080fd5b506102fb61035b366004611f48565b6108aa565b34801561036c57600080fd5b5061031c6101025481565b34801561038357600080fd5b5061031c60fc5481565b34801561039957600080fd5b5060405160128152602001610299565b3480156103b557600080fd5b506102fb6103c4366004611f84565b61099d565b3480156103d557600080fd5b506103de6109bf565b005b3480156103ec57600080fd5b50610104546102c3906001600160a01b031681565b34801561040d57600080fd5b506103de61041c366004611f84565b6109d1565b34801561042d57600080fd5b506103de61043c366004612093565b610aeb565b34801561044d57600080fd5b506102c373c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b34801561047557600080fd5b5060ca5460ff166102fb565b34801561048d57600080fd5b506103de61049c366004611ef3565b610b2e565b3480156104ad57600080fd5b506103de6104bc366004612093565b610b93565b3480156104cd57600080fd5b5061031c6104dc366004611ef3565b6001600160a01b031660009081526033602052604090205490565b34801561050357600080fd5b506103de610bd8565b34801561051857600080fd5b506103de610527366004611f84565b610bea565b34801561053857600080fd5b506103de610c75565b34801561054d57600080fd5b506065546001600160a01b03166102c3565b34801561056b57600080fd5b506102c373b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b34801561059357600080fd5b506103de6105a2366004611fd0565b610c85565b3480156105b357600080fd5b5061028c610d37565b3480156105c857600080fd5b506103de6105d7366004611f84565b610d46565b3480156105e857600080fd5b5061028c610e1b565b3480156105fd57600080fd5b5060ff546102c3906001600160a01b031681565b34801561061d57600080fd5b506102fb61062c366004611f84565b610eaa565b34801561063d57600080fd5b506102fb61064c366004611f84565b610f30565b34801561065d57600080fd5b506103de61066c366004611ef3565b610fb9565b34801561067d57600080fd5b5060fe546102c3906001600160a01b031681565b34801561069d57600080fd5b506103de6106ac366004611ef3565b61102d565b3480156106bd57600080fd5b506102fb6106cc366004611ef3565b6101036020526000908152604090205460ff1681565b3480156106ee57600080fd5b506102c373e592427a0aece92de3edee1f18e0157c0586156481565b34801561071657600080fd5b50610105546102c3906001600160a01b031681565b34801561073757600080fd5b506097546102c3906001600160a01b031681565b34801561075757600080fd5b5061031c610766366004611f15565b61107d565b34801561077757600080fd5b506103de610786366004611ef3565b6110a8565b34801561079757600080fd5b506103de6107a6366004611ef3565b61110d565b3480156107b757600080fd5b506103de611235565b3480156107cc57600080fd5b506103de6107db366004611ef3565b611245565b3480156107ec57600080fd5b506103de6107fb36600461200d565b6112ab565b60606036805461080f906122b1565b80601f016020809104026020016040519081016040528092919081815260200182805461083b906122b1565b80156108885780601f1061085d57610100808354040283529160200191610888565b820191906000526020600020905b81548152906001019060200180831161086b57829003601f168201915b5050505050905090565b6000336108a0818585611418565b5060019392505050565b60006108b461153c565b336000908152610103602052604090205460ff16156108ee5760405162461bcd60e51b81526004016108e59061212b565b60405180910390fd5b6001600160a01b0383166000908152610103602052604090205460ff16156109285760405162461bcd60e51b81526004016108e590612101565b6001600160a01b0384166000908152610103602052604090205460ff16156109875760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016108e5565b610992843384611582565b6108a08484846115fc565b6000336108a08185856109b0838361107d565b6109ba9190612241565b611418565b6109c76117a7565b6109cf611801565b565b6109d961153c565b610100546001600160a01b03163314610a045760405162461bcd60e51b81526004016108e590612162565b6101025481610a1260355490565b610a1c9190612241565b1115610a6a5760405162461bcd60e51b815260206004820152601a60248201527f77696c6c2065786365656420737570706c79206365696c696e6700000000000060448201526064016108e5565b6001600160a01b0382166000908152610103602052604090205460ff1615610aa45760405162461bcd60e51b81526004016108e590612101565b336000908152610103602052604090205460ff1615610ad55760405162461bcd60e51b81526004016108e59061212b565b610add611853565b610ae78282611981565b5050565b610af36117a7565b610afb611853565b60fc81905560405181907f45398c451b1a31b88dbaed4e7b89a632f43cc4b50149d437db03a5300afe40d190600090a250565b610b366117a7565b6001600160a01b038116610b4957600080fd5b60ff80546001600160a01b0319166001600160a01b0383169081179091556040517f164d8ef0d742b45087644f55c61abeb84557df70d06730591e451f0981e278ca90600090a250565b610b9b6117a7565b6101028190556040518181527fe35be406f69e9d11d6ac8e5b54bbc8b6c4baf2fa2359f84a56baa5ea5d07dc8f906020015b60405180910390a150565b610be06117a7565b6109cf6000611a42565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401602060405180830381600087803b158015610c3857600080fd5b505af1158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611fae565b505050565b610c7d6117a7565b6109cf611a94565b60ff546001600160a01b03163314610cf35760405162461bcd60e51b815260206004820152602b60248201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6560448201526a1d1a1bd91bdb1bd9da5cdd60aa1b60648201526084016108e5565b8051610d0790610101906020840190611db1565b507fe6be68107100e39cb16d675c1086a4d5479fbd01108d721dabbccaa2249b995f81604051610bcd91906120ac565b60606037805461080f906122b1565b610d4e61153c565b610100546001600160a01b03163314610d795760405162461bcd60e51b81526004016108e590612162565b6001600160a01b0382166000908152610103602052604090205460ff1615610dd85760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016108e5565b336000908152610103602052604090205460ff1615610e095760405162461bcd60e51b81526004016108e59061212b565b610e11611853565b610ae78282611ad1565b6101018054610e29906122b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610e55906122b1565b8015610ea25780601f10610e7757610100808354040283529160200191610ea2565b820191906000526020600020905b815481529060010190602001808311610e8557829003601f168201915b505050505081565b60003381610eb8828661107d565b905083811015610f185760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108e5565b610f258286868403611418565b506001949350505050565b6000610f3a61153c565b336000908152610103602052604090205460ff1615610f6b5760405162461bcd60e51b81526004016108e59061212b565b6001600160a01b0383166000908152610103602052604090205460ff1615610fa55760405162461bcd60e51b81526004016108e590612101565b610fb03384846115fc565b50600192915050565b610fc16117a7565b6001600160a01b0381166000818152610103602052604090819020805460ff19811660ff9182161590811790925591517f14ddf324cc5d8b14a3c3b12c84b0a7d578d72c8d60655c06d6a457e71431d5ee9261102292161515815260200190565b60405180910390a250565b6110356117a7565b6001600160a01b03811661105b5760405162461bcd60e51b81526004016108e5906121a6565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6110b06117a7565b6001600160a01b0381166110c357600080fd5b60fe80546001600160a01b0319166001600160a01b0383169081179091556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90600090a250565b6001600160a01b0381166111335760405162461bcd60e51b81526004016108e5906121a6565b6097546001600160a01b038281169116146111ab5760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b60648201526084016108e5565b6001600160a01b03811633146112295760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e657200000000000060648201526084016108e5565b61123281611a42565b50565b61123d6117a7565b6109cf611853565b61124d6117a7565b6001600160a01b03811661126057600080fd5b61010080546001600160a01b0319166001600160a01b0383169081179091556040517f726b590ef91a8c76ad05bbe91a57ef84605276528f49cd47d787f558a4e755b690600090a250565b600054610100900460ff16158080156112cb5750600054600160ff909116105b806112e55750303b1580156112e5575060005460ff166001145b6113485760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108e5565b6000805460ff19166001179055801561136b576000805461ff0019166101001790555b6001600160a01b03831661137e57600080fd5b611386611c05565b61138e611c34565b6113988686611c63565b6113a0611c94565b60fc84905560fe80546001600160a01b0319166001600160a01b0385161790556101028290554260fd558015611410576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b03831661147a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108e5565b6001600160a01b0382166114db5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108e5565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60ca5460ff16156109cf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016108e5565b600061158e848461107d565b905060001981146115f657818110156115e95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108e5565b6115f68484848403611418565b50505050565b6001600160a01b0383166116605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108e5565b6001600160a01b0382166116c25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108e5565b6001600160a01b0383166000908152603360205260409020548181101561173a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108e5565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061179a9086815260200190565b60405180910390a36115f6565b6065546001600160a01b031633146109cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108e5565b611809611cbb565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006201518060fd5442611867919061229a565b6118719190612259565b90506001811061123257600061188660355490565b60fc54909150819060005b848110156118cb5768056bc75e2d631000006118ad838561227b565b6118b79190612259565b6118c19084612241565b9250600101611891565b5060006118d8848461229a565b90506118e7856201518061227b565b60fd60008282546118f89190612241565b909155505060fe54611913906001600160a01b031682611981565b60fe547f07982395c678b2ffc23fcf59aaec243ca79418c285af0d0e10b4e65bc4189f4c906001600160a01b03164261194b60355490565b604080516001600160a01b0390941684526020840192909252908201526060810183905260800160405180910390a15050505050565b6001600160a01b0382166119d75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108e5565b80603560008282546119e99190612241565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611a9c61153c565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118363390565b6001600160a01b038216611b315760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108e5565b6001600160a01b03821660009081526033602052604090205481811015611ba55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108e5565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff16611c2c5760405162461bcd60e51b81526004016108e5906121f6565b6109cf611d04565b600054610100900460ff16611c5b5760405162461bcd60e51b81526004016108e5906121f6565b6109cf611d34565b600054610100900460ff16611c8a5760405162461bcd60e51b81526004016108e5906121f6565b610ae78282611d67565b600054610100900460ff166109cf5760405162461bcd60e51b81526004016108e5906121f6565b60ca5460ff166109cf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016108e5565b600054610100900460ff16611d2b5760405162461bcd60e51b81526004016108e5906121f6565b6109cf33611a42565b600054610100900460ff16611d5b5760405162461bcd60e51b81526004016108e5906121f6565b60ca805460ff19169055565b600054610100900460ff16611d8e5760405162461bcd60e51b81526004016108e5906121f6565b8151611da1906036906020850190611db1565b508051610c709060379060208401905b828054611dbd906122b1565b90600052602060002090601f016020900481019282611ddf5760008555611e25565b82601f10611df857805160ff1916838001178555611e25565b82800160010185558215611e25579182015b82811115611e25578251825591602001919060010190611e0a565b50611e31929150611e35565b5090565b5b80821115611e315760008155600101611e36565b80356001600160a01b0381168114611e6157600080fd5b919050565b600082601f830112611e7757600080fd5b813567ffffffffffffffff80821115611e9257611e92612302565b604051601f8301601f19908116603f01168101908282118183101715611eba57611eba612302565b81604052838152866020858801011115611ed357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611f0557600080fd5b611f0e82611e4a565b9392505050565b60008060408385031215611f2857600080fd5b611f3183611e4a565b9150611f3f60208401611e4a565b90509250929050565b600080600060608486031215611f5d57600080fd5b611f6684611e4a565b9250611f7460208501611e4a565b9150604084013590509250925092565b60008060408385031215611f9757600080fd5b611fa083611e4a565b946020939093013593505050565b600060208284031215611fc057600080fd5b81518015158114611f0e57600080fd5b600060208284031215611fe257600080fd5b813567ffffffffffffffff811115611ff957600080fd5b61200584828501611e66565b949350505050565b600080600080600060a0868803121561202557600080fd5b853567ffffffffffffffff8082111561203d57600080fd5b61204989838a01611e66565b9650602088013591508082111561205f57600080fd5b5061206c88828901611e66565b9450506040860135925061208260608701611e4a565b949793965091946080013592915050565b6000602082840312156120a557600080fd5b5035919050565b600060208083528351808285015260005b818110156120d9578581018301518582016040015282016120bd565b818111156120eb576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526010908201526f1d1bc81a5cc81c995cdd1c9a58dd195960821b604082015260600190565b60208082526018908201527f6d73672e73656e64657220697320726573747269637465640000000000000000604082015260600190565b60208082526024908201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d69604082015263373a32b960e11b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115612254576122546122ec565b500190565b60008261227657634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612295576122956122ec565b500290565b6000828210156122ac576122ac6122ec565b500390565b600181811c908216806122c557607f821691505b602082108114156122e657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220df0d1fa2196dc51128dbe939df7e06d58b2b24e4a943ea1a2a36cf5c4cdadd2364736f6c63430008070033a2646970667358221220e704581688e374a77a0232e2799089f460af461eebb90d59b75a74b243e4fc1064736f6c634300080700330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d",
    "sourceMap": "467:3505:40:-:0;;;;;1609:26:5;;;1631:4;-1:-1:-1;;1609:26:5;;;;;;;;3191:44:8;;;;;;;;;;-1:-1:-1;;;;;;640:10:40;;;;1555:25:42;-1:-1:-1;;;;;;;;;;;640:7:40;1528:18:42;640:10:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;618:32;;;-1:-1:-1;;;;;;618:32:40;-1:-1:-1;;;;;618:32:40;;;;;;;;;;682:10;;-1:-1:-1;;;;;;682:10:40;;690:1;682:10;;;1555:25:42;-1:-1:-1;;;;;;;;;;;682:7:40;;;1528:18:42;;682:10:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;657:35;;;-1:-1:-1;;;;;;657:35:40;-1:-1:-1;;;;;657:35:40;;;;;;;;;;716:10;;-1:-1:-1;;;;;;716:10:40;;724:1;716:10;;;1555:25:42;-1:-1:-1;;;;;;;;;;;716:7:40;;;1528:18:42;;716:10:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;699:27;;;-1:-1:-1;;;;;;699:27:40;-1:-1:-1;;;;;699:27:40;;;;;;;;;;753:10;;-1:-1:-1;;;;;;753:10:40;;761:1;753:10;;;1555:25:42;-1:-1:-1;;;;;;;;;;;753:7:40;;;1528:18:42;;753:10:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;733:30;;;-1:-1:-1;;;;;;733:30:40;-1:-1:-1;;;;;733:30:40;;;;;;;;;;794:10;;-1:-1:-1;;;;;;794:10:40;;802:1;794:10;;;1555:25:42;-1:-1:-1;;;;;;;;;;;794:7:40;;;1528:18:42;;794:10:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;770:34;;;-1:-1:-1;;;;;;770:34:40;-1:-1:-1;;;;;770:34:40;;;;;;;;;;826:10;;-1:-1:-1;;;;;;826:10:40;;834:1;826:10;;;1555:25:42;-1:-1:-1;;;;;;;;;;;826:7:40;;;1528:18:42;;826:10:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;811:25;;;-1:-1:-1;;;;;;811:25:40;-1:-1:-1;;;;;811:25:40;;;;;;;;;;1333:31;;-1:-1:-1;;;1333:31:40;;2743:2:42;1333:31:40;;;2725:21:42;2782:2;2762:18;;;2755:30;-1:-1:-1;;;2801:18:42;;;2794:45;-1:-1:-1;;;;;;;;;;;1333:12:40;;;2856:18:42;;1333:31:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1333:31:40;;;;;;;;;;;;:::i;:::-;1308:56;;;;;;;;;;;;:::i;:::-;;467:3505;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;467:3505:40;;;-1:-1:-1;467:3505:40;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:42;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:42;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:42:o;309:1087::-;389:6;420:2;463;451:9;442:7;438:23;434:32;431:52;;;479:1;476;469:12;431:52;506:16;;-1:-1:-1;;;;;571:14:42;;;568:34;;;598:1;595;588:12;568:34;636:6;625:9;621:22;611:32;;681:7;674:4;670:2;666:13;662:27;652:55;;703:1;700;693:12;652:55;732:2;726:9;754:2;750;747:10;744:36;;;760:18;;:::i;:::-;835:2;829:9;803:2;889:13;;-1:-1:-1;;885:22:42;;;909:2;881:31;877:40;865:53;;;933:18;;;953:22;;;930:46;927:72;;;979:18;;:::i;:::-;1019:10;1015:2;1008:22;1054:2;1046:6;1039:18;1094:7;1089:2;1084;1080;1076:11;1072:20;1069:33;1066:53;;;1115:1;1112;1105:12;1066:53;1137:1;1128:10;;1147:129;1161:2;1158:1;1155:9;1147:129;;;1249:10;;;1245:19;;1239:26;1218:14;;;1214:23;;1207:59;1172:10;;;;1147:129;;;1294:2;1291:1;1288:9;1285:80;;;1353:1;1348:2;1343;1335:6;1331:15;1327:24;1320:35;1285:80;1384:6;309:1087;-1:-1:-1;;;;;;;;309:1087:42:o;2885:380::-;2964:1;2960:12;;;;3007;;;3028:61;;3082:4;3074:6;3070:17;3060:27;;3028:61;3135:2;3127:6;3124:14;3104:18;3101:38;3098:161;;;3181:10;3176:3;3172:20;3169:1;3162:31;3216:4;3213:1;3206:15;3244:4;3241:1;3234:15;3098:161;;2885:380;;;:::o;3270:127::-;3331:10;3326:3;3322:20;3319:1;3312:31;3362:4;3359:1;3352:15;3386:4;3383:1;3376:15;3270:127;467:3505:40;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c8063916a17c6116100b8578063c6bbd5a71161007c578063c6bbd5a714610272578063e0bab4c414610285578063e20c9f71146102a0578063e7d015f2146102a8578063f4b9fa75146102bb578063fa7626d4146102ce57600080fd5b8063916a17c61461022757806396c023e71461022f578063b5508aa914610237578063ba414fa61461023f578063c31c9c071461025757600080fd5b80633f7286f41161010a5780633f7286f4146101945780633fc8cef31461019c5780634aa4a4fc146101c757806366d9a9a0146101e257806385226c81146101f75780638dae88c21461020c57600080fd5b80630a9254e4146101475780630e7628c6146101515780631ed7831c146101595780632ade3880146101775780633e5e3c231461018c575b600080fd5b61014f6102db565b005b61014f61052e565b610161610907565b60405161016e9190611c6e565b60405180910390f35b61017f610969565b60405161016e9190611d1d565b610161610aab565b610161610b0b565b6025546101af906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b6101af73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6101ea610b6b565b60405161016e9190611ddd565b6101ff610c51565b60405161016e9190611cbb565b6101af73b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b6101ea610d21565b61014f610e07565b6101ff6113ea565b6102476114ba565b604051901515815260200161016e565b6101af73e592427a0aece92de3edee1f18e0157c0586156481565b6026546101af906001600160a01b031681565b6101af736b175474e89094c44da98b954eedeac495271d0f81565b6101616115e7565b601c546101af906001600160a01b031681565b6024546101af906001600160a01b031681565b6007546102479060ff1681565b604051630637469360e31b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba34989061031390602790600401611e90565b602060405180830381600087803b15801561032d57600080fd5b505af1158015610341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103659190611bdc565b601d5560405161037490611ad0565b604051809103906000f080158015610390573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316908117909155601e54604051637f6f013b60e11b815260a0600480830191909152600e60a48301526d20b73a349024b7333630ba34b7b760911b60c483015260e0602483015260e482015263414e464960e01b610104820152670de0b6b3a764000060448201529216606483015269d3c21bcecceda100000060848301529063fede02769061012401600060405180830381600087803b15801561044d57600080fd5b505af1158015610461573d6000803e3d6000fd5b5050601c54602054604051637e51dad560e11b81526001600160a01b0391821660048201529116925063fca3b5aa9150602401600060405180830381600087803b1580156104ae57600080fd5b505af11580156104c2573d6000803e3d6000fd5b5050602480546001600160a01b0319908116736b175474e89094c44da98b954eedeac495271d0f1790915560258054821673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21790556026805490911673b27308f9f90d607463bb33ea1bebb41c27ce5ab61790555050565b601c5460408051638da5cb5b60e01b815290516105b2926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561057457600080fd5b505afa158015610588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac9190611add565b30611647565b601c5460408051632fecd58960e01b8152905161063e926001600160a01b031691632fecd589916004808301926020929190829003018186803b1580156105f857600080fd5b505afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106309190611bdc565b670de0b6b3a764000061174f565b601c546040805163184a732f60e01b815290516106c2926001600160a01b03169163184a732f916004808301926020929190829003018186803b15801561068457600080fd5b505afa158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190611bdc565b4261174f565b601c5460408051632cfc019d60e21b81529051610751926001600160a01b03169163b3f00674916004808301926020929190829003018186803b15801561070857600080fd5b505afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190611add565b601e546001600160a01b0316611647565b601c54604080516309eeb1d560e41b815290516107e8926001600160a01b031691639eeb1d50916004808301926000929190829003018186803b15801561079757600080fd5b505afa1580156107ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d39190810190611b2f565b6040518060200160405280600081525061182e565b601c5460408051632b52684d60e01b81529051610876926001600160a01b031691632b52684d916004808301926020929190829003018186803b15801561082e57600080fd5b505afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190611bdc565b69d3c21bcecceda100000061174f565b601c54604080516303aa30b960e11b81529051610905926001600160a01b0316916307546172916004808301926020929190829003018186803b1580156108bc57600080fd5b505afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f49190611add565b6020546001600160a01b0316611647565b565b6060601480548060200260200160405190810160405280929190818152602001828054801561095f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610941575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015610aa257600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015610a8b5783829060005260206000200180546109fe906120a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2a906120a6565b8015610a775780601f10610a4c57610100808354040283529160200191610a77565b820191906000526020600020905b815481529060010190602001808311610a5a57829003601f168201915b5050505050815260200190600101906109df565b50505050815250508152602001906001019061098d565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801561095f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610941575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801561095f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610941575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015610aa25760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610c3957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610bfb5790505b50505050508152505081526020019060010190610b8f565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015610aa2578382906000526020600020018054610c94906120a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc0906120a6565b8015610d0d5780601f10610ce257610100808354040283529160200191610d0d565b820191906000526020600020905b815481529060010190602001808311610cf057829003601f168201915b505050505081526020019060010190610c75565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015610aa25760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610def57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610db15790505b50505050508152505081526020019060010190610d45565b601d54604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b158015610e5857600080fd5b505af1158015610e6c573d6000803e3d6000fd5b50505050602560009054906101000a90046001600160a01b03166001600160a01b031663d0e30db067016345785d8a00006040518263ffffffff1660e01b81526004016000604051808303818588803b158015610ec857600080fd5b505af1158015610edc573d6000803e3d6000fd5b50506025546040516370a0823160e01b8152306004820152610f6e94506001600160a01b0390911692506370a08231915060240160206040518083038186803b158015610f2857600080fd5b505afa158015610f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f609190611bdc565b67016345785d8a000061174f565b60255460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c05861564600482015267016345785d8a000060248201526001600160a01b039091169063095ea7b390604401602060405180830381600087803b158015610fd557600080fd5b505af1158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d9190611b0d565b50604080516101008101825273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28152736b175474e89094c44da98b954eedeac495271d0f60208201908152610bb88284019081523060608401908152426080850190815267016345785d8a000060a08601908152600060c0870181815260e08801828152985163414bf38960e01b815288516001600160a01b039081166004830152975188166024820152955162ffffff166044870152935186166064860152915160848501525160a4840152905160c4830152935190911660e482015290919073e592427a0aece92de3edee1f18e0157c058615649063414bf3899061010401602060405180830381600087803b15801561111c57600080fd5b505af1158015611130573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111549190611bdc565b905061115f8161195b565b602480546040516370a0823160e01b81523060048201526111e2926001600160a01b03909216916370a08231910160206040518083038186803b1580156111a557600080fd5b505afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd9190611bdc565b61195b565b60248054601c546040516370a0823160e01b81523060048201526001600160a01b039283169363095ea7b3939092169184916370a08231910160206040518083038186803b15801561123357600080fd5b505afa158015611247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126b9190611bdc565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156112b157600080fd5b505af11580156112c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e99190611b0d565b50601c54602480546040516370a0823160e01b81523060048201526001600160a01b03938416936379c6506893736b175474e89094c44da98b954eedeac495271d0f9391909116916370a08231910160206040518083038186803b15801561135057600080fd5b505afa158015611364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113889190611bdc565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156113ce57600080fd5b505af11580156113e2573d6000803e3d6000fd5b505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015610aa257838290600052602060002001805461142d906120a6565b80601f0160208091040260200160405190810160405280929190818152602001828054611459906120a6565b80156114a65780601f1061147b576101008083540402835291602001916114a6565b820191906000526020600020905b81548152906001019060200180831161148957829003601f168201915b50505050508152602001906001019061140e565b600754600090610100900460ff16156114dc5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156115e25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161156a917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611c21565b60408051601f198184030181529082905261158491611c52565b6000604051808303816000865af19150503d80600081146115c1576040519150601f19603f3d011682016040523d82523d6000602084013e6115c6565b606091505b50915050808060200190518101906115de9190611b0d565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801561095f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610941575050505050905090565b806001600160a01b0316826001600160a01b03161461174b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516116cd9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516117049190611f38565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405161173b9190611ff8565b60405180910390a161174b6119a3565b5050565b80821461174b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516117c09060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516117f79190611fc0565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405161173b919061204c565b8060405160200161183f9190611c52565b60405160208183030381529060405280519060200120826040516020016118669190611c52565b604051602081830303815290604052805190602001201461174b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516118ed9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826040516119249190611f7c565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405161173b9190612022565b6119a08160405160240161197191815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611aaf565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611a9e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611a3d9291602001611c21565b60408051601f1981840301815290829052611a5791611c52565b6000604051808303816000865af19150503d8060008114611a94576040519150601f19603f3d011682016040523d82523d6000602084013e611a99565b606091505b505050505b6007805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6123b8806120f883390190565b600060208284031215611aef57600080fd5b81516001600160a01b0381168114611b0657600080fd5b9392505050565b600060208284031215611b1f57600080fd5b81518015158114611b0657600080fd5b600060208284031215611b4157600080fd5b815167ffffffffffffffff80821115611b5957600080fd5b818401915084601f830112611b6d57600080fd5b815181811115611b7f57611b7f6120e1565b604051601f8201601f19908116603f01168101908382118183101715611ba757611ba76120e1565b81604052828152876020848701011115611bc057600080fd5b611bd1836020830160208801612076565b979650505050505050565b600060208284031215611bee57600080fd5b5051919050565b60008151808452611c0d816020860160208601612076565b601f01601f19169290920160200192915050565b6001600160e01b0319831681528151600090611c44816004850160208701612076565b919091016004019392505050565b60008251611c64818460208701612076565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611caf5783516001600160a01b031683529284019291840191600101611c8a565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d1057603f19888603018452611cfe858351611bf5565b94509285019290850190600101611ce2565b5092979650505050505050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015611dcd57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015611db757605f19898503018352611da5848651611bf5565b948e01949350918d0191600101611d89565b505050978a019794505091880191600101611d44565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611e8157898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611e6c5783516001600160e01b0319168252928b019260019290920191908b0190611e42565b50978a01979550505091870191600101611e05565b50919998505050505050505050565b600060208083526000845481600182811c915080831680611eb257607f831692505b858310811415611ed057634e487b7160e01b85526022600452602485fd5b878601838152602001818015611eed5760018114611efe57611f29565b60ff19861682528782019650611f29565b60008b81526020902060005b86811015611f2357815484820152908501908901611f0a565b83019750505b50949998505050505050505050565b604081526000611f6260408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000611fa660408301600a8152690808080808081319599d60b21b602082015260400190565b8281036020840152611fb88185611bf5565b949350505050565b604081526000611fea60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b604081526000611f6260408301600a8152690808080808149a59da1d60b21b602082015260400190565b604081526000611fa660408301600a8152690808080808149a59da1d60b21b602082015260400190565b604081526000611fea60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60005b83811015612091578181015183820152602001612079565b838111156120a0576000848401525b50505050565b600181811c908216806120ba57607f821691505b602082108114156120db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfe608060405261010480546001600160a01b031990811673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217909155610105805490911673b27308f9f90d607463bb33ea1bebb41c27ce5ab617905534801561005a57600080fd5b5061234e8061006a6000396000f3fe60806040526004361061026b5760003560e01c80638da5cb5b11610144578063b5ed298a116100b6578063dd62ed3e1161007a578063dd62ed3e1461074b578063efdcd9741461076b578063f2fde38b1461078b578063f734e22a146107ab578063fca3b5aa146107c0578063fede0276146107e057600080fd5b8063b5ed298a14610691578063c01bc982146106b1578063c31c9c07146106e2578063c6bbd5a71461070a578063d153b60c1461072b57600080fd5b80639eeb1d50116101085780639eeb1d50146105dc5780639f8e67bf146105f1578063a457c2d714610611578063a9059cbb14610631578063aaa4a18414610651578063b3f006741461067157600080fd5b80638da5cb5b146105415780638dae88c21461055f57806391fe1b921461058757806395d89b41146105a75780639dc29fac146105bc57600080fd5b80633fc8cef3116101dd578063660db484116101a1578063660db484146104815780636e01a686146104a157806370a08231146104c1578063715018a6146104f757806379c650681461050c5780638456cb591461052c57600080fd5b80633fc8cef3146103e057806340c10f191461040157806345596e2e146104215780634aa4a4fc146104415780635c975abb1461046957600080fd5b806323b872dd1161022f57806323b872dd146103405780632b52684d146103605780632fecd58914610377578063313ce5671461038d57806339509351146103a95780633f4ba83a146103c957600080fd5b806306fdde031461027757806307546172146102a2578063095ea7b3146102db57806318160ddd1461030b578063184a732f1461032a57600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061028c610800565b60405161029991906120ac565b60405180910390f35b3480156102ae57600080fd5b50610100546102c3906001600160a01b031681565b6040516001600160a01b039091168152602001610299565b3480156102e757600080fd5b506102fb6102f6366004611f84565b610892565b6040519015158152602001610299565b34801561031757600080fd5b506035545b604051908152602001610299565b34801561033657600080fd5b5061031c60fd5481565b34801561034c57600080fd5b506102fb61035b366004611f48565b6108aa565b34801561036c57600080fd5b5061031c6101025481565b34801561038357600080fd5b5061031c60fc5481565b34801561039957600080fd5b5060405160128152602001610299565b3480156103b557600080fd5b506102fb6103c4366004611f84565b61099d565b3480156103d557600080fd5b506103de6109bf565b005b3480156103ec57600080fd5b50610104546102c3906001600160a01b031681565b34801561040d57600080fd5b506103de61041c366004611f84565b6109d1565b34801561042d57600080fd5b506103de61043c366004612093565b610aeb565b34801561044d57600080fd5b506102c373c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b34801561047557600080fd5b5060ca5460ff166102fb565b34801561048d57600080fd5b506103de61049c366004611ef3565b610b2e565b3480156104ad57600080fd5b506103de6104bc366004612093565b610b93565b3480156104cd57600080fd5b5061031c6104dc366004611ef3565b6001600160a01b031660009081526033602052604090205490565b34801561050357600080fd5b506103de610bd8565b34801561051857600080fd5b506103de610527366004611f84565b610bea565b34801561053857600080fd5b506103de610c75565b34801561054d57600080fd5b506065546001600160a01b03166102c3565b34801561056b57600080fd5b506102c373b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b34801561059357600080fd5b506103de6105a2366004611fd0565b610c85565b3480156105b357600080fd5b5061028c610d37565b3480156105c857600080fd5b506103de6105d7366004611f84565b610d46565b3480156105e857600080fd5b5061028c610e1b565b3480156105fd57600080fd5b5060ff546102c3906001600160a01b031681565b34801561061d57600080fd5b506102fb61062c366004611f84565b610eaa565b34801561063d57600080fd5b506102fb61064c366004611f84565b610f30565b34801561065d57600080fd5b506103de61066c366004611ef3565b610fb9565b34801561067d57600080fd5b5060fe546102c3906001600160a01b031681565b34801561069d57600080fd5b506103de6106ac366004611ef3565b61102d565b3480156106bd57600080fd5b506102fb6106cc366004611ef3565b6101036020526000908152604090205460ff1681565b3480156106ee57600080fd5b506102c373e592427a0aece92de3edee1f18e0157c0586156481565b34801561071657600080fd5b50610105546102c3906001600160a01b031681565b34801561073757600080fd5b506097546102c3906001600160a01b031681565b34801561075757600080fd5b5061031c610766366004611f15565b61107d565b34801561077757600080fd5b506103de610786366004611ef3565b6110a8565b34801561079757600080fd5b506103de6107a6366004611ef3565b61110d565b3480156107b757600080fd5b506103de611235565b3480156107cc57600080fd5b506103de6107db366004611ef3565b611245565b3480156107ec57600080fd5b506103de6107fb36600461200d565b6112ab565b60606036805461080f906122b1565b80601f016020809104026020016040519081016040528092919081815260200182805461083b906122b1565b80156108885780601f1061085d57610100808354040283529160200191610888565b820191906000526020600020905b81548152906001019060200180831161086b57829003601f168201915b5050505050905090565b6000336108a0818585611418565b5060019392505050565b60006108b461153c565b336000908152610103602052604090205460ff16156108ee5760405162461bcd60e51b81526004016108e59061212b565b60405180910390fd5b6001600160a01b0383166000908152610103602052604090205460ff16156109285760405162461bcd60e51b81526004016108e590612101565b6001600160a01b0384166000908152610103602052604090205460ff16156109875760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016108e5565b610992843384611582565b6108a08484846115fc565b6000336108a08185856109b0838361107d565b6109ba9190612241565b611418565b6109c76117a7565b6109cf611801565b565b6109d961153c565b610100546001600160a01b03163314610a045760405162461bcd60e51b81526004016108e590612162565b6101025481610a1260355490565b610a1c9190612241565b1115610a6a5760405162461bcd60e51b815260206004820152601a60248201527f77696c6c2065786365656420737570706c79206365696c696e6700000000000060448201526064016108e5565b6001600160a01b0382166000908152610103602052604090205460ff1615610aa45760405162461bcd60e51b81526004016108e590612101565b336000908152610103602052604090205460ff1615610ad55760405162461bcd60e51b81526004016108e59061212b565b610add611853565b610ae78282611981565b5050565b610af36117a7565b610afb611853565b60fc81905560405181907f45398c451b1a31b88dbaed4e7b89a632f43cc4b50149d437db03a5300afe40d190600090a250565b610b366117a7565b6001600160a01b038116610b4957600080fd5b60ff80546001600160a01b0319166001600160a01b0383169081179091556040517f164d8ef0d742b45087644f55c61abeb84557df70d06730591e451f0981e278ca90600090a250565b610b9b6117a7565b6101028190556040518181527fe35be406f69e9d11d6ac8e5b54bbc8b6c4baf2fa2359f84a56baa5ea5d07dc8f906020015b60405180910390a150565b610be06117a7565b6109cf6000611a42565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401602060405180830381600087803b158015610c3857600080fd5b505af1158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611fae565b505050565b610c7d6117a7565b6109cf611a94565b60ff546001600160a01b03163314610cf35760405162461bcd60e51b815260206004820152602b60248201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6560448201526a1d1a1bd91bdb1bd9da5cdd60aa1b60648201526084016108e5565b8051610d0790610101906020840190611db1565b507fe6be68107100e39cb16d675c1086a4d5479fbd01108d721dabbccaa2249b995f81604051610bcd91906120ac565b60606037805461080f906122b1565b610d4e61153c565b610100546001600160a01b03163314610d795760405162461bcd60e51b81526004016108e590612162565b6001600160a01b0382166000908152610103602052604090205460ff1615610dd85760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016108e5565b336000908152610103602052604090205460ff1615610e095760405162461bcd60e51b81526004016108e59061212b565b610e11611853565b610ae78282611ad1565b6101018054610e29906122b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610e55906122b1565b8015610ea25780601f10610e7757610100808354040283529160200191610ea2565b820191906000526020600020905b815481529060010190602001808311610e8557829003601f168201915b505050505081565b60003381610eb8828661107d565b905083811015610f185760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108e5565b610f258286868403611418565b506001949350505050565b6000610f3a61153c565b336000908152610103602052604090205460ff1615610f6b5760405162461bcd60e51b81526004016108e59061212b565b6001600160a01b0383166000908152610103602052604090205460ff1615610fa55760405162461bcd60e51b81526004016108e590612101565b610fb03384846115fc565b50600192915050565b610fc16117a7565b6001600160a01b0381166000818152610103602052604090819020805460ff19811660ff9182161590811790925591517f14ddf324cc5d8b14a3c3b12c84b0a7d578d72c8d60655c06d6a457e71431d5ee9261102292161515815260200190565b60405180910390a250565b6110356117a7565b6001600160a01b03811661105b5760405162461bcd60e51b81526004016108e5906121a6565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6110b06117a7565b6001600160a01b0381166110c357600080fd5b60fe80546001600160a01b0319166001600160a01b0383169081179091556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90600090a250565b6001600160a01b0381166111335760405162461bcd60e51b81526004016108e5906121a6565b6097546001600160a01b038281169116146111ab5760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b60648201526084016108e5565b6001600160a01b03811633146112295760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e657200000000000060648201526084016108e5565b61123281611a42565b50565b61123d6117a7565b6109cf611853565b61124d6117a7565b6001600160a01b03811661126057600080fd5b61010080546001600160a01b0319166001600160a01b0383169081179091556040517f726b590ef91a8c76ad05bbe91a57ef84605276528f49cd47d787f558a4e755b690600090a250565b600054610100900460ff16158080156112cb5750600054600160ff909116105b806112e55750303b1580156112e5575060005460ff166001145b6113485760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108e5565b6000805460ff19166001179055801561136b576000805461ff0019166101001790555b6001600160a01b03831661137e57600080fd5b611386611c05565b61138e611c34565b6113988686611c63565b6113a0611c94565b60fc84905560fe80546001600160a01b0319166001600160a01b0385161790556101028290554260fd558015611410576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b03831661147a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108e5565b6001600160a01b0382166114db5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108e5565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60ca5460ff16156109cf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016108e5565b600061158e848461107d565b905060001981146115f657818110156115e95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108e5565b6115f68484848403611418565b50505050565b6001600160a01b0383166116605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108e5565b6001600160a01b0382166116c25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108e5565b6001600160a01b0383166000908152603360205260409020548181101561173a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108e5565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061179a9086815260200190565b60405180910390a36115f6565b6065546001600160a01b031633146109cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108e5565b611809611cbb565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006201518060fd5442611867919061229a565b6118719190612259565b90506001811061123257600061188660355490565b60fc54909150819060005b848110156118cb5768056bc75e2d631000006118ad838561227b565b6118b79190612259565b6118c19084612241565b9250600101611891565b5060006118d8848461229a565b90506118e7856201518061227b565b60fd60008282546118f89190612241565b909155505060fe54611913906001600160a01b031682611981565b60fe547f07982395c678b2ffc23fcf59aaec243ca79418c285af0d0e10b4e65bc4189f4c906001600160a01b03164261194b60355490565b604080516001600160a01b0390941684526020840192909252908201526060810183905260800160405180910390a15050505050565b6001600160a01b0382166119d75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108e5565b80603560008282546119e99190612241565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611a9c61153c565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118363390565b6001600160a01b038216611b315760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108e5565b6001600160a01b03821660009081526033602052604090205481811015611ba55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108e5565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff16611c2c5760405162461bcd60e51b81526004016108e5906121f6565b6109cf611d04565b600054610100900460ff16611c5b5760405162461bcd60e51b81526004016108e5906121f6565b6109cf611d34565b600054610100900460ff16611c8a5760405162461bcd60e51b81526004016108e5906121f6565b610ae78282611d67565b600054610100900460ff166109cf5760405162461bcd60e51b81526004016108e5906121f6565b60ca5460ff166109cf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016108e5565b600054610100900460ff16611d2b5760405162461bcd60e51b81526004016108e5906121f6565b6109cf33611a42565b600054610100900460ff16611d5b5760405162461bcd60e51b81526004016108e5906121f6565b60ca805460ff19169055565b600054610100900460ff16611d8e5760405162461bcd60e51b81526004016108e5906121f6565b8151611da1906036906020850190611db1565b508051610c709060379060208401905b828054611dbd906122b1565b90600052602060002090601f016020900481019282611ddf5760008555611e25565b82601f10611df857805160ff1916838001178555611e25565b82800160010185558215611e25579182015b82811115611e25578251825591602001919060010190611e0a565b50611e31929150611e35565b5090565b5b80821115611e315760008155600101611e36565b80356001600160a01b0381168114611e6157600080fd5b919050565b600082601f830112611e7757600080fd5b813567ffffffffffffffff80821115611e9257611e92612302565b604051601f8301601f19908116603f01168101908282118183101715611eba57611eba612302565b81604052838152866020858801011115611ed357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611f0557600080fd5b611f0e82611e4a565b9392505050565b60008060408385031215611f2857600080fd5b611f3183611e4a565b9150611f3f60208401611e4a565b90509250929050565b600080600060608486031215611f5d57600080fd5b611f6684611e4a565b9250611f7460208501611e4a565b9150604084013590509250925092565b60008060408385031215611f9757600080fd5b611fa083611e4a565b946020939093013593505050565b600060208284031215611fc057600080fd5b81518015158114611f0e57600080fd5b600060208284031215611fe257600080fd5b813567ffffffffffffffff811115611ff957600080fd5b61200584828501611e66565b949350505050565b600080600080600060a0868803121561202557600080fd5b853567ffffffffffffffff8082111561203d57600080fd5b61204989838a01611e66565b9650602088013591508082111561205f57600080fd5b5061206c88828901611e66565b9450506040860135925061208260608701611e4a565b949793965091946080013592915050565b6000602082840312156120a557600080fd5b5035919050565b600060208083528351808285015260005b818110156120d9578581018301518582016040015282016120bd565b818111156120eb576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526010908201526f1d1bc81a5cc81c995cdd1c9a58dd195960821b604082015260600190565b60208082526018908201527f6d73672e73656e64657220697320726573747269637465640000000000000000604082015260600190565b60208082526024908201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d69604082015263373a32b960e11b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115612254576122546122ec565b500190565b60008261227657634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612295576122956122ec565b500290565b6000828210156122ac576122ac6122ec565b500390565b600181811c908216806122c557607f821691505b602082108114156122e657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220df0d1fa2196dc51128dbe939df7e06d58b2b24e4a943ea1a2a36cf5c4cdadd2364736f6c63430008070033a2646970667358221220e704581688e374a77a0232e2799089f460af461eebb90d59b75a74b243e4fc1064736f6c63430008070033",
    "sourceMap": "467:3505:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1879:456;;;:::i;:::-;;2343:465;;;:::i;2531:136:11:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3463:153;;;:::i;:::-;;;;;;;:::i;3320:135::-;;;:::i;3013:143::-;;;:::i;1226:17:40:-;;;;;-1:-1:-1;;;;;1226:17:40;;;;;;-1:-1:-1;;;;;3360:32:42;;;3342:51;;3330:2;3315:18;1226:17:40;3196:203:42;924:74:40;;956:42;924:74;;2825:180:11;;;:::i;:::-;;;;;;;:::i;2675:142::-;;;:::i;:::-;;;;;;;:::i;1005:75:40:-;;1038:42;1005:75;;3164:148:11;;;:::i;2822:1133:40:-;;;:::i;2228:143:11:-;;;:::i;1865:600:5:-;;;:::i;:::-;;;9575:14:42;;9568:22;9550:41;;9538:2;9523:18;1865:600:5;9410:187:42;1089:105:40;;1151:42;1089:105;;1278:21;;;;;-1:-1:-1;;;;;1278:21:40;;;845:72;;875:42;845:72;;2379:144:11;;;:::i;555:28:40:-;;;;;-1:-1:-1;;;;;555:28:40;;;1203:16;;;;;-1:-1:-1;;;;;1203:16:40;;;1609:26:5;;;;;;;;;1879:456:40;1928:30;;-1:-1:-1;;;1928:30:40;;:13;;;;:30;;1942:15;;1928:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1914:11;:44;1982:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1969:10:40;:29;;-1:-1:-1;;;;;;1969:29:40;-1:-1:-1;;;;;1969:29:40;;;;;;;;;2116:11;;2009:154;;-1:-1:-1;;;2009:154:40;;14770:3:42;2009:154:40;;;;14752:22:42;;;;14811:2;14790:19;;;14783:31;-1:-1:-1;;;14830:19:42;;;14823:45;14906:3;14884:20;;;14877:33;14926:19;;;14919:30;-1:-1:-1;;;14965:19:42;;;14958:35;2097:4:40;15045:18:42;;;15038:34;2116:11:40;;15088:18:42;;;15081:60;2142:10:40;15157:19:42;;;15150:35;1969:29:40;2009:21;;15010:19:42;;2009:154:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2174:10:40;;2195:6;;2174:28;;-1:-1:-1;;;2174:28:40;;-1:-1:-1;;;;;2195:6:40;;;2174:28;;;3342:51:42;2174:10:40;;;-1:-1:-1;2174:20:40;;-1:-1:-1;3315:18:42;;2174:28:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2246:3:40;:16;;-1:-1:-1;;;;;;2246:16:40;;;875:42;2246:16;;;;2273:4;:19;;;;956:42;2273:19;;;2303:6;:24;;;;;1038:42;2303:24;;;-1:-1:-1;;1879:456:40:o;2343:465::-;2430:10;;:18;;;-1:-1:-1;;;2430:18:40;;;;2421:43;;-1:-1:-1;;;;;2430:10:40;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2458:4;2421:8;:43::i;:::-;2484:10;;:32;;;-1:-1:-1;;;2484:32:40;;;;2475:48;;-1:-1:-1;;;;;2484:10:40;;:30;;:32;;;;;;;;;;;;;;:10;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2518:4;2475:8;:48::i;:::-;2543:10;;:25;;;-1:-1:-1;;;2543:25:40;;;;2534:52;;-1:-1:-1;;;;;2543:10:40;;:23;;:25;;;;;;;;;;;;;;:10;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2570:15;2534:8;:52::i;:::-;2606:10;;:24;;;-1:-1:-1;;;2606:24:40;;;;2597:47;;-1:-1:-1;;;;;2606:10:40;;:22;;:24;;;;;;;;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2632:11;;-1:-1:-1;;;;;2632:11:40;2597:8;:47::i;:::-;2664:10;;:24;;;-1:-1:-1;;;2664:24:40;;;;2655:38;;-1:-1:-1;;;;;2664:10:40;;:22;;:24;;;;;:10;;:24;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2664:24:40;;;;;;;;;;;;:::i;:::-;2655:38;;;;;;;;;;;;:8;:38::i;:::-;2713:10;;:26;;;-1:-1:-1;;;2713:26:40;;;;2704:48;;-1:-1:-1;;;;;2713:10:40;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2741:10;2704:8;:48::i;:::-;2772:10;;:19;;;-1:-1:-1;;;2772:19:40;;;;2763:37;;-1:-1:-1;;;;;2772:10:40;;:17;;:19;;;;;;;;;;;;;;:10;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2793:6;;-1:-1:-1;;;;;2793:6:40;2763:8;:37::i;:::-;2343:465::o;2531:136:11:-;2578:33;2643:16;2624:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2624:35:11;;;;;;;;;;;;;;;;;;;;;;;2531:136;:::o;3463:153::-;3512:42;3589:19;3567:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3567:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3463:153;:::o;3320:135::-;3366:33;3431:16;3412:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3412:35:11;;;;;;;;;;;;;;;;;;;;;;3320:135;:::o;3013:143::-;3061:35;3130:18;3109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3109:39:11;;;;;;;;;;;;;;;;;;;;;;3013:143;:::o;2825:180::-;2881:48;2971:26;2942:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2675:142;2723:34;2791:18;2770:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3164:148;3212:40;3286:18;3265:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2822:1133:40;2882:11;;2868:26;;-1:-1:-1;;;2868:26:40;;;;;17319:25:42;;;;2868:13:40;;;;17292:18:42;;2868:26:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2905:4;;;;;;;;;-1:-1:-1;;;;;2905:4:40;-1:-1:-1;;;;;2905:12:40;;2925:4;2905:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2952:4:40;;:29;;-1:-1:-1;;;2952:29:40;;2975:4;2952:29;;;3342:51:42;2943:45:40;;-1:-1:-1;;;;;;2952:4:40;;;;-1:-1:-1;2952:14:40;;-1:-1:-1;3315:18:42;;2952:29:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2983:4;2943:8;:45::i;:::-;2999:4;;:39;;-1:-1:-1;;;2999:39:40;;1151:42;2999:39;;;3578:51:42;3033:4:40;3645:18:42;;;3638:34;-1:-1:-1;;;;;2999:4:40;;;;:12;;3551:18:42;;2999:39:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3112:544:40;;;;;;;;956:42;3112:544;;875:42;3112:544;;;;;;3264:4;3112:544;;;;;;3302:4;3112:544;;;;;;3332:15;3112:544;;;;;;3372:4;3112:544;;;;;;-1:-1:-1;3112:544:40;;;;;;;;;;;;3686:35;;-1:-1:-1;;;3686:35:40;;16660:13:42;;-1:-1:-1;;;;;16656:22:42;;;3686:35:40;;;16638:41:42;16721:24;;16717:33;;16695:20;;;16688:63;16793:24;;16819:8;16789:39;16767:20;;;16760:69;16871:24;;16867:33;;16845:20;;;16838:63;16939:24;;16917:20;;;16910:54;17002:24;16980:20;;;16973:54;17065:24;;17043:20;;;17036:54;17132:24;;17128:33;;;17106:20;;;17099:63;3112:544:40;;-1:-1:-1;1151:42:40;;3686:27;;16572:19:42;;3686:35:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3669:52;;3732:22;3744:9;3732:11;:22::i;:::-;3777:3;;;:28;;-1:-1:-1;;;3777:28:40;;3799:4;3777:28;;;3342:51:42;3765:41:40;;-1:-1:-1;;;;;3777:3:40;;;;:13;;3315:18:42;3777:28:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3765:11;:41::i;:::-;3819:3;;;3839:10;;3852:28;;-1:-1:-1;;;3852:28:40;;3874:4;3852:28;;;3342:51:42;-1:-1:-1;;;;;3819:3:40;;;;:11;;3839:10;;;;3819:3;;3852:13;;3315:18:42;3852:28:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3819:62;;-1:-1:-1;;;;;;3819:62:40;;;;;;;-1:-1:-1;;;;;3596:32:42;;;3819:62:40;;;3578:51:42;3645:18;;;3638:34;3551:18;;3819:62:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3892:10:40;;3918:3;;;:28;;-1:-1:-1;;;3918:28:40;;3940:4;3918:28;;;3342:51:42;-1:-1:-1;;;;;3892:10:40;;;;:20;;875:42;;3918:3;;;;;:13;;3315:18:42;3918:28:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3892:55;;-1:-1:-1;;;;;;3892:55:40;;;;;;;-1:-1:-1;;;;;3596:32:42;;;3892:55:40;;;3578:51:42;3645:18;;;3638:34;3551:18;;3892:55:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1098;;2822:1133::o;2228:143:11:-;2277:34;2345:18;2324:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:600:5;1920:7;;1899:4;;1920:7;;;;;1916:542;;;-1:-1:-1;1951:7:5;;;;;;;;1865:600::o;1916:542::-;1991:17;3077:42;3065:55;3148:16;2031:382;;2251:43;;;1712:64;2251:43;;;3578:51:42;;;-1:-1:-1;;;3645:18:42;;;3638:34;2251:43:5;;;;;;;;;3551:18:42;;;2251:43:5;;;-1:-1:-1;;1712:64:5;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:5;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:5:o;2379:144:11:-;2428:35;2497:18;2476:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2476:39:11;;;;;;;;;;;;;;;;;;;;;;2379:144;:::o;3728:284:5:-;3797:1;-1:-1:-1;;;;;3792:6:5;:1;-1:-1:-1;;;;;3792:6:5;;3788:217;;3820:44;;;;;12944:2:42;12926:21;;;12983:2;12963:18;;;12956:30;13022:34;13017:2;13002:18;;12995:62;-1:-1:-1;;;13088:2:42;13073:18;;13066:35;13133:3;13118:19;;12742:401;3820:44:5;;;;;;;;3884:34;3916:1;3884:34;;;;;;:::i;:::-;;;;;;;;3938;3970:1;3938:34;;;;;;:::i;:::-;;;;;;;;3987:6;:4;:6::i;:::-;3728:284;;:::o;5365:269::-;5428:1;5423;:6;5419:208;;5451:41;;;;;12136:2:42;12118:21;;;12175:2;12155:18;;;12148:30;12214:34;12209:2;12194:18;;12187:62;-1:-1:-1;;;12280:2:42;12265:18;;12258:32;12322:3;12307:19;;11934:398;5451:41:5;;;;;;;;5512:31;5541:1;5512:31;;;;;;:::i;:::-;;;;;;;;5563;5592:1;5563:31;;;;;;:::i;18422:351::-;18559:1;18542:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18532:30;;;;;;18525:1;18508:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18498:30;;;;;;:64;18494:272;;18584:43;;;;;12539:2:42;12521:21;;;12578:2;12558:18;;;12551:30;12617:34;12612:2;12597:18;;12590:62;-1:-1:-1;;;12683:2:42;12668:18;;12661:34;12727:3;12712:19;;12337:400;18584:43:5;;;;;;;;18647:33;18678:1;18647:33;;;;;;:::i;:::-;;;;;;;;18700;18731:1;18700:33;;;;;;:::i;5686:112:19:-;5733:57;5786:2;5749:40;;;;;;17319:25:42;;17307:2;17292:18;;17173:177;5749:40:19;;;;-1:-1:-1;;5749:40:19;;;;;;;;;;;;;;-1:-1:-1;;;;;5749:40:19;-1:-1:-1;;;5749:40:19;;;5733:15;:57::i;:::-;5686:112;:::o;2473:443:5:-;3077:42;3065:55;3148:16;2517:367;;2721:67;;;1712:64;2721:67;;;3885:51:42;;;-1:-1:-1;;;3952:18:42;;;3945:34;;;;2781:4:5;3995:18:42;;;3988:34;2555:11:5;;1712:64;2654:43;;3858:18:42;;2721:67:5;;;-1:-1:-1;;2721:67:5;;;;;;;;;;2608:199;;;2721:67;2608:199;;:::i;:::-;;;;-1:-1:-1;;2608:199:5;;;;;;;;;;2572:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2517:367:5;2894:7;:14;;-1:-1:-1;;2894:14:5;;;;;2473:443::o;187:384:19:-;282:14;;135:42;459:2;446:16;;258:21;;282:14;446:16;135:42;496:5;485:68;476:77;;411:153;;187:384;:::o;-1:-1:-1:-;;;;;;;;:::o;14:290:42:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:42;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:42:o;309:277::-;376:6;429:2;417:9;408:7;404:23;400:32;397:52;;;445:1;442;435:12;397:52;477:9;471:16;530:5;523:13;516:21;509:5;506:32;496:60;;552:1;549;542:12;591:884;671:6;724:2;712:9;703:7;699:23;695:32;692:52;;;740:1;737;730:12;692:52;773:9;767:16;802:18;843:2;835:6;832:14;829:34;;;859:1;856;849:12;829:34;897:6;886:9;882:22;872:32;;942:7;935:4;931:2;927:13;923:27;913:55;;964:1;961;954:12;913:55;993:2;987:9;1015:2;1011;1008:10;1005:36;;;1021:18;;:::i;:::-;1096:2;1090:9;1064:2;1150:13;;-1:-1:-1;;1146:22:42;;;1170:2;1142:31;1138:40;1126:53;;;1194:18;;;1214:22;;;1191:46;1188:72;;;1240:18;;:::i;:::-;1280:10;1276:2;1269:22;1315:2;1307:6;1300:18;1355:7;1350:2;1345;1341;1337:11;1333:20;1330:33;1327:53;;;1376:1;1373;1366:12;1327:53;1389:55;1441:2;1436;1428:6;1424:15;1419:2;1415;1411:11;1389:55;:::i;:::-;1463:6;591:884;-1:-1:-1;;;;;;;591:884:42:o;1480:184::-;1550:6;1603:2;1591:9;1582:7;1578:23;1574:32;1571:52;;;1619:1;1616;1609:12;1571:52;-1:-1:-1;1642:16:42;;1480:184;-1:-1:-1;1480:184:42:o;1669:258::-;1711:3;1749:5;1743:12;1776:6;1771:3;1764:19;1792:63;1848:6;1841:4;1836:3;1832:14;1825:4;1818:5;1814:16;1792:63;:::i;:::-;1909:2;1888:15;-1:-1:-1;;1884:29:42;1875:39;;;;1916:4;1871:50;;1669:258;-1:-1:-1;;1669:258:42:o;2260:371::-;-1:-1:-1;;;;;;2445:33:42;;2433:46;;2502:13;;2415:3;;2524:61;2502:13;2574:1;2565:11;;2558:4;2546:17;;2524:61;:::i;:::-;2605:16;;;;2623:1;2601:24;;2260:371;-1:-1:-1;;;2260:371:42:o;2636:274::-;2765:3;2803:6;2797:13;2819:53;2865:6;2860:3;2853:4;2845:6;2841:17;2819:53;:::i;:::-;2888:16;;;;;2636:274;-1:-1:-1;;2636:274:42:o;4616:658::-;4787:2;4839:21;;;4909:13;;4812:18;;;4931:22;;;4758:4;;4787:2;5010:15;;;;4984:2;4969:18;;;4758:4;5053:195;5067:6;5064:1;5061:13;5053:195;;;5132:13;;-1:-1:-1;;;;;5128:39:42;5116:52;;5223:15;;;;5188:12;;;;5164:1;5082:9;5053:195;;;-1:-1:-1;5265:3:42;;4616:658;-1:-1:-1;;;;;;4616:658:42:o;5279:803::-;5441:4;5470:2;5510;5499:9;5495:18;5540:2;5529:9;5522:21;5563:6;5598;5592:13;5629:6;5621;5614:22;5667:2;5656:9;5652:18;5645:25;;5729:2;5719:6;5716:1;5712:14;5701:9;5697:30;5693:39;5679:53;;5767:2;5759:6;5755:15;5788:1;5798:255;5812:6;5809:1;5806:13;5798:255;;;5905:2;5901:7;5889:9;5881:6;5877:22;5873:36;5868:3;5861:49;5933:40;5966:6;5957;5951:13;5933:40;:::i;:::-;5923:50;-1:-1:-1;6031:12:42;;;;5996:15;;;;5834:1;5827:9;5798:255;;;-1:-1:-1;6070:6:42;;5279:803;-1:-1:-1;;;;;;;5279:803:42:o;6087:1744::-;6322:2;6374:21;;;6444:13;;6347:18;;;6466:22;;;6293:4;;6322:2;6507;;6525:18;;;;6562:1;6605:15;;;6590:31;;6586:40;;6649:15;;;6293:4;;6713:1089;6729:6;6724:3;6721:15;6713:1089;;;-1:-1:-1;;6798:22:42;;;6794:36;6782:49;;6854:13;;6941:9;;-1:-1:-1;;;;;6937:35:42;6922:51;;7012:11;;7006:18;7044:15;;;7037:27;;;7125:19;;6894:15;;;7157:24;;;7338:21;;;;7204:2;7286:17;;;7274:30;;7270:39;;;7228:15;;;;7383:1;7397:296;7413:8;7408:3;7405:17;7397:296;;;7519:2;7515:7;7506:6;7498;7494:19;7490:33;7483:5;7476:48;7551:42;7586:6;7575:8;7569:15;7551:42;:::i;:::-;7622:17;;;;7541:52;-1:-1:-1;7665:14:42;;;;7441:1;7432:11;7397:296;;;-1:-1:-1;;;7780:12:42;;;;7716:6;-1:-1:-1;;7745:15:42;;;;6755:1;6746:11;6713:1089;;;-1:-1:-1;7819:6:42;;6087:1744;-1:-1:-1;;;;;;;;;;6087:1744:42:o;7836:1569::-;8040:4;8069:2;8109;8098:9;8094:18;8139:2;8128:9;8121:21;8162:6;8197;8191:13;8228:6;8220;8213:22;8254:2;8244:12;;8287:2;8276:9;8272:18;8265:25;;8349:2;8339:6;8336:1;8332:14;8321:9;8317:30;8313:39;8387:2;8379:6;8375:15;8408:1;8429;8439:937;8455:6;8450:3;8447:15;8439:937;;;8524:22;;;-1:-1:-1;;8520:36:42;8508:49;;8580:13;;8667:9;;-1:-1:-1;;;;;8663:35:42;8648:51;;8738:11;;8732:18;8770:15;;;8763:27;;;8851:19;;8620:15;;;8883:24;;;8973:21;;;;9018:1;;8941:2;8929:15;;;9032:236;9048:8;9043:3;9040:17;9032:236;;;9129:15;;-1:-1:-1;;;;;;9125:42:42;9111:57;;9237:17;;;;9076:1;9067:11;;;;;9194:14;;;;9032:236;;;-1:-1:-1;9354:12:42;;;;9291:5;-1:-1:-1;;;9319:15:42;;;;8481:1;8472:11;8439:937;;;-1:-1:-1;9393:6:42;;7836:1569;-1:-1:-1;;;;;;;;;7836:1569:42:o;10732:1197::-;10841:4;10870:2;10899;10888:9;10881:21;10922:1;10955:6;10949:13;10985:3;11007:1;11035:9;11031:2;11027:18;11017:28;;11095:2;11084:9;11080:18;11117;11107:61;;11161:4;11153:6;11149:17;11139:27;;11107:61;11214:2;11206:6;11203:14;11183:18;11180:38;11177:165;;;-1:-1:-1;;;11241:33:42;;11297:4;11294:1;11287:15;11327:4;11248:3;11315:17;11177:165;11409:18;;;17579:19;;;17631:4;17622:14;11452:18;11479:100;;;;11593:1;11588:315;;;;11445:458;;11479:100;-1:-1:-1;;11512:24:42;;11500:37;;11557:12;;;;-1:-1:-1;11479:100:42;;11588:315;17428:1;17421:14;;;17465:4;17452:18;;11683:1;11697:165;11711:6;11708:1;11705:13;11697:165;;;11789:14;;11776:11;;;11769:35;11832:16;;;;11726:10;;11697:165;;;11882:11;;;-1:-1:-1;;11445:458:42;-1:-1:-1;11920:3:42;;10732:1197;-1:-1:-1;;;;;;;;;10732:1197:42:o;13148:374::-;13378:2;13367:9;13360:21;13341:4;13398:49;13443:2;13432:9;13428:18;2009:2;1997:15;;-1:-1:-1;;;2037:4:42;2028:14;;2021:36;2082:2;2073:12;;1932:159;13398:49;-1:-1:-1;;;;;13483:32:42;;;;13478:2;13463:18;;;;13456:60;;;;-1:-1:-1;13390:57:42;13148:374::o;13527:440::-;13777:2;13766:9;13759:21;13740:4;13803:49;13848:2;13837:9;13833:18;2009:2;1997:15;;-1:-1:-1;;;2037:4:42;2028:14;;2021:36;2082:2;2073:12;;1932:159;13803:49;13900:9;13892:6;13888:22;13883:2;13872:9;13868:18;13861:50;13928:33;13954:6;13946;13928:33;:::i;:::-;13920:41;13527:440;-1:-1:-1;;;;13527:440:42:o;13972:348::-;14202:2;14191:9;14184:21;14165:4;14222:49;14267:2;14256:9;14252:18;2009:2;1997:15;;-1:-1:-1;;;2037:4:42;2028:14;;2021:36;2082:2;2073:12;;1932:159;14222:49;14214:57;;14307:6;14302:2;14291:9;14287:18;14280:34;13972:348;;;;:::o;15196:374::-;15426:2;15415:9;15408:21;15389:4;15446:49;15491:2;15480:9;15476:18;2173:2;2161:15;;-1:-1:-1;;;2201:4:42;2192:14;;2185:36;2246:2;2237:12;;2096:159;15575:440;15825:2;15814:9;15807:21;15788:4;15851:49;15896:2;15885:9;15881:18;2173:2;2161:15;;-1:-1:-1;;;2201:4:42;2192:14;;2185:36;2246:2;2237:12;;2096:159;16020:348;16250:2;16239:9;16232:21;16213:4;16270:49;16315:2;16304:9;16300:18;2173:2;2161:15;;-1:-1:-1;;;2201:4:42;2192:14;;2185:36;2246:2;2237:12;;2096:159;17647:258;17719:1;17729:113;17743:6;17740:1;17737:13;17729:113;;;17819:11;;;17813:18;17800:11;;;17793:39;17765:2;17758:10;17729:113;;;17860:6;17857:1;17854:13;17851:48;;;17895:1;17886:6;17881:3;17877:16;17870:27;17851:48;;17647:258;;;:::o;17910:380::-;17989:1;17985:12;;;;18032;;;18053:61;;18107:4;18099:6;18095:17;18085:27;;18053:61;18160:2;18152:6;18149:14;18129:18;18126:38;18123:161;;;18206:10;18201:3;18197:20;18194:1;18187:31;18241:4;18238:1;18231:15;18269:4;18266:1;18259:15;18123:161;;17910:380;;;:::o;18295:127::-;18356:10;18351:3;18347:20;18344:1;18337:31;18387:4;18384:1;18377:15;18411:4;18408:1;18401:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DAI()": "e0bab4c4",
    "IS_TEST()": "fa7626d4",
    "QUOTER()": "8dae88c2",
    "WETH9()": "4aa4a4fc",
    "dai()": "f4b9fa75",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "indexToken()": "e7d015f2",
    "quoter()": "c6bbd5a7",
    "setUp()": "0a9254e4",
    "swapRouter()": "c31c9c07",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testInitialized()": "0e7628c6",
    "testMintWithSwap()": "96c023e7",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeRatePerDayScaled\",\"type\":\"uint256\"}],\"name\":\"FeeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"methodologist\",\"type\":\"address\"}],\"name\":\"MethodologistSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"methodology\",\"type\":\"string\"}],\"name\":\"MethodologySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintFeeToReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"SupplyCeilingSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRestricted\",\"type\":\"bool\"}],\"name\":\"ToggledRestricted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexToken\",\"outputs\":[{\"internalType\":\"contract IndexToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"contract IQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMintWithSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/IndexTokenFactory.t.sol\":\"CounterTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x94dfbd5474881d8f4f122e7c6d00ec2e6966ed7866f73a9ba964d164732cb4ab\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b3ed4a03060e542c16f47466c3e2412c92a48f7a9bb42dc7ff3c8216030ef3f\",\"dweb:/ipfs/QmQ1Fz9iwE8r8MvEZA6KVYhMLCVXvxUQKoUXSYJmkyGT8N\"]},\"contracts/proposable/ProposableOwnableUpgradeable.sol\":{\"keccak256\":\"0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65\",\"dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72\"]},\"contracts/token/IndexToken.sol\":{\"keccak256\":\"0x6cd3f9725cf8c1dda92534b2ab7b430066455b2563f4817e00de5ec89b1db3c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31eb08181fb7cf06e5522c747d94bdcc3a23172114ecd2edab86b3937935a246\",\"dweb:/ipfs/QmeUFsUev33xZESrktfijnGs3YifusLbwYbMQjwjVGMZzc\"]},\"contracts/token/TokenInterface.sol\":{\"keccak256\":\"0xd530600bcc7a81e3996517a2c6967dd448b2b9702eca4efe15f772de69c6d880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f61d2aab02ee0f4c376b1b41629632d894c52127cd15669e9ffca3fb21f1307\",\"dweb:/ipfs/Qmb47gpnWD7i6Va4nKcmg7kPyaYcpXb74QFCQePomaJjZj\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3\",\"dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731\",\"dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a\",\"dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f\",\"dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c\",\"dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a\",\"dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254\",\"dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f\",\"dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc\",\"dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1\",\"dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"test/foundry/IndexTokenFactory.t.sol\":{\"keccak256\":\"0x36082d452c9e185f3dd6c402ebbbadd2e86c69aec9b45bd977c2cb3ff909eca7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3c2c2c2895b976d0ed87db54cadd068ec930353afa59b25517ed234ef220b36c\",\"dweb:/ipfs/Qmcubtnd67wHLerC5mK5P64ztVbqgMTokKxVsemCRPd8mh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "feeRatePerDayScaled",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeRateSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeReceiverSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "methodologist",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MethodologistSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "methodology",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MethodologySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintFeeToReceiver",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MinterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supplyCeiling",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupplyCeilingSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isRestricted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ToggledRestricted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dai",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "indexToken",
          "outputs": [
            {
              "internalType": "contract IndexToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quoter",
          "outputs": [
            {
              "internalType": "contract IQuoter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMintWithSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/IndexTokenFactory.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x94dfbd5474881d8f4f122e7c6d00ec2e6966ed7866f73a9ba964d164732cb4ab",
        "urls": [
          "bzz-raw://2b3ed4a03060e542c16f47466c3e2412c92a48f7a9bb42dc7ff3c8216030ef3f",
          "dweb:/ipfs/QmQ1Fz9iwE8r8MvEZA6KVYhMLCVXvxUQKoUXSYJmkyGT8N"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/proposable/ProposableOwnableUpgradeable.sol": {
        "keccak256": "0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70",
        "urls": [
          "bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65",
          "dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72"
        ],
        "license": "MIT"
      },
      "contracts/token/IndexToken.sol": {
        "keccak256": "0x6cd3f9725cf8c1dda92534b2ab7b430066455b2563f4817e00de5ec89b1db3c9",
        "urls": [
          "bzz-raw://31eb08181fb7cf06e5522c747d94bdcc3a23172114ecd2edab86b3937935a246",
          "dweb:/ipfs/QmeUFsUev33xZESrktfijnGs3YifusLbwYbMQjwjVGMZzc"
        ],
        "license": "MIT"
      },
      "contracts/token/TokenInterface.sol": {
        "keccak256": "0xd530600bcc7a81e3996517a2c6967dd448b2b9702eca4efe15f772de69c6d880",
        "urls": [
          "bzz-raw://6f61d2aab02ee0f4c376b1b41629632d894c52127cd15669e9ffca3fb21f1307",
          "dweb:/ipfs/Qmb47gpnWD7i6Va4nKcmg7kPyaYcpXb74QFCQePomaJjZj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261",
        "urls": [
          "bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379",
          "dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e",
        "urls": [
          "bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3",
          "dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc",
        "urls": [
          "bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731",
          "dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52",
        "urls": [
          "bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a",
          "dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb",
        "urls": [
          "bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f",
          "dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04",
        "urls": [
          "bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c",
          "dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417",
        "urls": [
          "bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a",
          "dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357",
        "urls": [
          "bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254",
          "dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a",
        "urls": [
          "bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f",
          "dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a",
        "urls": [
          "bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc",
          "dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb",
        "urls": [
          "bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4",
          "dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb",
        "urls": [
          "bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1",
          "dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": {
        "keccak256": "0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff",
        "urls": [
          "bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417",
          "dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/IndexTokenFactory.t.sol": {
        "keccak256": "0x36082d452c9e185f3dd6c402ebbbadd2e86c69aec9b45bd977c2cb3ff909eca7",
        "urls": [
          "bzz-raw://3c2c2c2895b976d0ed87db54cadd068ec930353afa59b25517ed234ef220b36c",
          "dweb:/ipfs/Qmcubtnd67wHLerC5mK5P64ztVbqgMTokKxVsemCRPd8mh"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/IndexTokenFactory.t.sol",
    "id": 4691,
    "exportedSymbols": {
      "AddressUpgradeable": [
        2346
      ],
      "Context": [
        49545
      ],
      "ContextUpgradeable": [
        2388
      ],
      "CounterTest": [
        4690
      ],
      "DSTest": [
        8624
      ],
      "ERC20": [
        6020
      ],
      "ERC20Upgradeable": [
        1913
      ],
      "IERC20": [
        5054
      ],
      "IERC20Metadata": [
        49523
      ],
      "IERC20MetadataUpgradeable": [
        2016
      ],
      "IERC20Upgradeable": [
        1991
      ],
      "IQuoter": [
        5111
      ],
      "ISwapRouter": [
        5211
      ],
      "IUniswapV3SwapCallback": [
        6332
      ],
      "IWETH": [
        4976
      ],
      "IndexToken": [
        747
      ],
      "Initializable": [
        1174
      ],
      "OwnableUpgradeable": [
        1005
      ],
      "PausableUpgradeable": [
        1301
      ],
      "ProposableOwnableUpgradeable": [
        71
      ],
      "StdAssertions": [
        10117
      ],
      "StdChains": [
        10881
      ],
      "StdCheats": [
        13734
      ],
      "StdInvariant": [
        14059
      ],
      "StdStorage": [
        14825
      ],
      "StdStyle": [
        17675
      ],
      "StdUtils": [
        18523
      ],
      "Test": [
        5433
      ],
      "TestBase": [
        8690
      ],
      "TokenInterface": [
        873
      ],
      "TransferHelper": [
        5382
      ],
      "Vm": [
        20234
      ],
      "console": [
        28298
      ],
      "console2": [
        36423
      ],
      "safeconsole": [
        49498
      ],
      "stdError": [
        13800
      ],
      "stdJson": [
        14651
      ],
      "stdMath": [
        14793
      ],
      "stdStorage": [
        16464
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:3932:40",
    "nodes": [
      {
        "id": 4344,
        "nodeType": "PragmaDirective",
        "src": "40:23:40",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 4345,
        "nodeType": "ImportDirective",
        "src": "67:28:40",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4691,
        "sourceUnit": 5434,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4346,
        "nodeType": "ImportDirective",
        "src": "97:46:40",
        "nodes": [],
        "absolutePath": "contracts/token/IndexToken.sol",
        "file": "../../contracts/token/IndexToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4691,
        "sourceUnit": 748,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4347,
        "nodeType": "ImportDirective",
        "src": "145:55:40",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4691,
        "sourceUnit": 6021,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4348,
        "nodeType": "ImportDirective",
        "src": "202:55:40",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4691,
        "sourceUnit": 6021,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4349,
        "nodeType": "ImportDirective",
        "src": "259:68:40",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4691,
        "sourceUnit": 5212,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4350,
        "nodeType": "ImportDirective",
        "src": "329:70:40",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4691,
        "sourceUnit": 5383,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4351,
        "nodeType": "ImportDirective",
        "src": "401:64:40",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4691,
        "sourceUnit": 5112,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4690,
        "nodeType": "ContractDefinition",
        "src": "467:3505:40",
        "nodes": [
          {
            "id": 4356,
            "nodeType": "VariableDeclaration",
            "src": "507:39:40",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SCALAR",
            "nameLocation": "533:6:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4354,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "507:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653230",
              "id": 4355,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "542:4:40",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "1e20"
            },
            "visibility": "internal"
          },
          {
            "id": 4359,
            "nodeType": "VariableDeclaration",
            "src": "555:28:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "e7d015f2",
            "mutability": "mutable",
            "name": "indexToken",
            "nameLocation": "573:10:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexToken_$747",
              "typeString": "contract IndexToken"
            },
            "typeName": {
              "id": 4358,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4357,
                "name": "IndexToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 747,
                "src": "555:10:40"
              },
              "referencedDeclaration": 747,
              "src": "555:10:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexToken_$747",
                "typeString": "contract IndexToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4361,
            "nodeType": "VariableDeclaration",
            "src": "590:19:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mainnetFork",
            "nameLocation": "598:11:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4360,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "590:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4367,
            "nodeType": "VariableDeclaration",
            "src": "618:32:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "feeReceiver",
            "nameLocation": "626:11:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4362,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "618:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 4365,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "648:1:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "expression": {
                  "id": 4363,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8683,
                  "src": "640:2:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20234",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4364,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18594,
                "src": "640:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4366,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "640:10:40",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4373,
            "nodeType": "VariableDeclaration",
            "src": "657:35:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newFeeReceiver",
            "nameLocation": "665:14:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4368,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "657:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "32",
                  "id": 4371,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "690:1:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  }
                ],
                "expression": {
                  "id": 4369,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8683,
                  "src": "682:2:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20234",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4370,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18594,
                "src": "682:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4372,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "682:10:40",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4379,
            "nodeType": "VariableDeclaration",
            "src": "699:27:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "707:6:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4374,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "699:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "33",
                  "id": 4377,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "724:1:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  }
                ],
                "expression": {
                  "id": 4375,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8683,
                  "src": "716:2:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20234",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4376,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18594,
                "src": "716:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4378,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "716:10:40",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4385,
            "nodeType": "VariableDeclaration",
            "src": "733:30:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newMinter",
            "nameLocation": "741:9:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4380,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "733:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "34",
                  "id": 4383,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "761:1:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  },
                  "value": "4"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  }
                ],
                "expression": {
                  "id": 4381,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8683,
                  "src": "753:2:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20234",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4382,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18594,
                "src": "753:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4384,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "753:10:40",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4391,
            "nodeType": "VariableDeclaration",
            "src": "770:34:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "methodologist",
            "nameLocation": "778:13:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4386,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "770:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "35",
                  "id": 4389,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "802:1:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  },
                  "value": "5"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  }
                ],
                "expression": {
                  "id": 4387,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8683,
                  "src": "794:2:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20234",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4388,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18594,
                "src": "794:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4390,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "794:10:40",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4397,
            "nodeType": "VariableDeclaration",
            "src": "811:25:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "add1",
            "nameLocation": "819:4:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4392,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "811:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "36",
                  "id": 4395,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "834:1:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  }
                ],
                "expression": {
                  "id": 4393,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8683,
                  "src": "826:2:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20234",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4394,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18594,
                "src": "826:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4396,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "826:10:40",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4400,
            "nodeType": "VariableDeclaration",
            "src": "845:72:40",
            "nodes": [],
            "constant": true,
            "functionSelector": "e0bab4c4",
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "869:3:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4398,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "845:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 4399,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "875:42:40",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "id": 4403,
            "nodeType": "VariableDeclaration",
            "src": "924:74:40",
            "nodes": [],
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "mutability": "constant",
            "name": "WETH9",
            "nameLocation": "948:5:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4401,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "924:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 4402,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "956:42:40",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "id": 4406,
            "nodeType": "VariableDeclaration",
            "src": "1005:75:40",
            "nodes": [],
            "constant": true,
            "functionSelector": "8dae88c2",
            "mutability": "constant",
            "name": "QUOTER",
            "nameLocation": "1029:6:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4404,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1005:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862323733303866394639304436303734363362623333654131426542623431433237434535414236",
              "id": 4405,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1038:42:40",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6"
            },
            "visibility": "public"
          },
          {
            "id": 4412,
            "nodeType": "VariableDeclaration",
            "src": "1089:105:40",
            "nodes": [],
            "constant": true,
            "functionSelector": "c31c9c07",
            "mutability": "constant",
            "name": "swapRouter",
            "nameLocation": "1117:10:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$5211",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 4408,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4407,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5211,
                "src": "1089:11:40"
              },
              "referencedDeclaration": 5211,
              "src": "1089:11:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$5211",
                "typeString": "contract ISwapRouter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                  "id": 4410,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1151:42:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 4409,
                "name": "ISwapRouter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5211,
                "src": "1139:11:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$5211_$",
                  "typeString": "type(contract ISwapRouter)"
                }
              },
              "id": 4411,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1139:55:40",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$5211",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4415,
            "nodeType": "VariableDeclaration",
            "src": "1203:16:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "f4b9fa75",
            "mutability": "mutable",
            "name": "dai",
            "nameLocation": "1216:3:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$6020",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 4414,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4413,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6020,
                "src": "1203:5:40"
              },
              "referencedDeclaration": 6020,
              "src": "1203:5:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6020",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4418,
            "nodeType": "VariableDeclaration",
            "src": "1226:17:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "1239:4:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$4976",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 4417,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4416,
                "name": "IWETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4976,
                "src": "1226:5:40"
              },
              "referencedDeclaration": 4976,
              "src": "1226:5:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$4976",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4421,
            "nodeType": "VariableDeclaration",
            "src": "1278:21:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "c6bbd5a7",
            "mutability": "mutable",
            "name": "quoter",
            "nameLocation": "1293:6:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IQuoter_$5111",
              "typeString": "contract IQuoter"
            },
            "typeName": {
              "id": 4420,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4419,
                "name": "IQuoter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5111,
                "src": "1278:7:40"
              },
              "referencedDeclaration": 5111,
              "src": "1278:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IQuoter_$5111",
                "typeString": "contract IQuoter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4427,
            "nodeType": "VariableDeclaration",
            "src": "1308:56:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "MAINNET_RPC_URL",
            "nameLocation": "1315:15:40",
            "scope": 4690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4422,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1308:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d41494e4e45545f5250435f55524c",
                  "id": 4425,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1346:17:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  },
                  "value": "MAINNET_RPC_URL"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  }
                ],
                "expression": {
                  "id": 4423,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8683,
                  "src": "1333:2:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20234",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4424,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18956,
                "src": "1333:12:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 4426,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1333:31:40",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4431,
            "nodeType": "EventDefinition",
            "src": "1373:50:40",
            "nodes": [],
            "anonymous": false,
            "name": "FeeReceiverSet",
            "nameLocation": "1379:14:40",
            "parameters": {
              "id": 4430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4429,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "1410:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4431,
                  "src": "1394:27:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1393:29:40"
            }
          },
          {
            "id": 4435,
            "nodeType": "EventDefinition",
            "src": "1429:54:40",
            "nodes": [],
            "anonymous": false,
            "name": "FeeRateSet",
            "nameLocation": "1435:10:40",
            "parameters": {
              "id": 4434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4433,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeRatePerDayScaled",
                  "nameLocation": "1462:19:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4435,
                  "src": "1446:35:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1445:37:40"
            }
          },
          {
            "id": 4439,
            "nodeType": "EventDefinition",
            "src": "1489:54:40",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologistSet",
            "nameLocation": "1495:16:40",
            "parameters": {
              "id": 4438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4437,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "methodologist",
                  "nameLocation": "1528:13:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4439,
                  "src": "1512:29:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1511:31:40"
            }
          },
          {
            "id": 4443,
            "nodeType": "EventDefinition",
            "src": "1549:41:40",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologySet",
            "nameLocation": "1555:14:40",
            "parameters": {
              "id": 4442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4441,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "methodology",
                  "nameLocation": "1577:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4443,
                  "src": "1570:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4440,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1569:20:40"
            }
          },
          {
            "id": 4447,
            "nodeType": "EventDefinition",
            "src": "1596:40:40",
            "nodes": [],
            "anonymous": false,
            "name": "MinterSet",
            "nameLocation": "1602:9:40",
            "parameters": {
              "id": 4446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4445,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1628:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4447,
                  "src": "1612:22:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1611:24:40"
            }
          },
          {
            "id": 4451,
            "nodeType": "EventDefinition",
            "src": "1642:46:40",
            "nodes": [],
            "anonymous": false,
            "name": "SupplyCeilingSet",
            "nameLocation": "1648:16:40",
            "parameters": {
              "id": 4450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4449,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supplyCeiling",
                  "nameLocation": "1673:13:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4451,
                  "src": "1665:21:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1664:23:40"
            }
          },
          {
            "id": 4461,
            "nodeType": "EventDefinition",
            "src": "1694:101:40",
            "nodes": [],
            "anonymous": false,
            "name": "MintFeeToReceiver",
            "nameLocation": "1700:17:40",
            "parameters": {
              "id": 4460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4453,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "1726:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "1718:19:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4455,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1747:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "1739:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1739:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4457,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "1766:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "1758:19:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1758:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4459,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1787:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "1779:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1717:77:40"
            }
          },
          {
            "id": 4467,
            "nodeType": "EventDefinition",
            "src": "1801:68:40",
            "nodes": [],
            "anonymous": false,
            "name": "ToggledRestricted",
            "nameLocation": "1807:17:40",
            "parameters": {
              "id": 4466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4463,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1841:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4467,
                  "src": "1825:23:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4465,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isRestricted",
                  "nameLocation": "1855:12:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 4467,
                  "src": "1850:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1824:44:40"
            }
          },
          {
            "id": 4519,
            "nodeType": "FunctionDefinition",
            "src": "1879:456:40",
            "nodes": [],
            "body": {
              "id": 4518,
              "nodeType": "Block",
              "src": "1903:432:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4470,
                      "name": "mainnetFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4361,
                      "src": "1914:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4473,
                          "name": "MAINNET_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4427,
                          "src": "1942:15:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 4471,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8683,
                          "src": "1928:2:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$20234",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 4472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19960,
                        "src": "1928:13:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 4474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1928:30:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1914:44:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4476,
                  "nodeType": "ExpressionStatement",
                  "src": "1914:44:40"
                },
                {
                  "expression": {
                    "id": 4482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4477,
                      "name": "indexToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4359,
                      "src": "1969:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$747",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1982:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_IndexToken_$747_$",
                          "typeString": "function () returns (contract IndexToken)"
                        },
                        "typeName": {
                          "id": 4479,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4478,
                            "name": "IndexToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 747,
                            "src": "1986:10:40"
                          },
                          "referencedDeclaration": 747,
                          "src": "1986:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexToken_$747",
                            "typeString": "contract IndexToken"
                          }
                        }
                      },
                      "id": 4481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1982:16:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$747",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "src": "1969:29:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IndexToken_$747",
                      "typeString": "contract IndexToken"
                    }
                  },
                  "id": 4483,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:29:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416e746920496e666c6174696f6e",
                        "id": 4487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2045:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc91b5e2c1c095e17fa21cce3bb4bf4e3f12c19c51ecd9f6cf3cf89a49c428f2",
                          "typeString": "literal_string \"Anti Inflation\""
                        },
                        "value": "Anti Inflation"
                      },
                      {
                        "hexValue": "414e4649",
                        "id": 4488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2076:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_784ef5cf3b103bdcbbdc385d5d143611309cf4293b5afd2549dfc4901f697bcc",
                          "typeString": "literal_string \"ANFI\""
                        },
                        "value": "ANFI"
                      },
                      {
                        "hexValue": "31653138",
                        "id": 4489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2097:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "id": 4490,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4367,
                        "src": "2116:11:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 4491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2142:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bc91b5e2c1c095e17fa21cce3bb4bf4e3f12c19c51ecd9f6cf3cf89a49c428f2",
                          "typeString": "literal_string \"Anti Inflation\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_784ef5cf3b103bdcbbdc385d5d143611309cf4293b5afd2549dfc4901f697bcc",
                          "typeString": "literal_string \"ANFI\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4484,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4359,
                        "src": "2009:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$747",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 4486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 219,
                      "src": "2009:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256,address,uint256) external"
                      }
                    },
                    "id": 4492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:154:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4493,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:154:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4497,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "2195:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4494,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4359,
                        "src": "2174:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$747",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 4496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 523,
                      "src": "2174:20:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2174:28:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4499,
                  "nodeType": "ExpressionStatement",
                  "src": "2174:28:40"
                },
                {
                  "expression": {
                    "id": 4504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4500,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4415,
                      "src": "2246:3:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$6020",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4502,
                          "name": "DAI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "2258:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4501,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6020,
                        "src": "2252:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$6020_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 4503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2252:10:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$6020",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2246:16:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$6020",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 4505,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:16:40"
                },
                {
                  "expression": {
                    "id": 4510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4506,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4418,
                      "src": "2273:4:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$4976",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4508,
                          "name": "WETH9",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4403,
                          "src": "2286:5:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4507,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4976,
                        "src": "2280:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$4976_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 4509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2280:12:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$4976",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "2273:19:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$4976",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 4511,
                  "nodeType": "ExpressionStatement",
                  "src": "2273:19:40"
                },
                {
                  "expression": {
                    "id": 4516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4512,
                      "name": "quoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4421,
                      "src": "2303:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$5111",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4514,
                          "name": "QUOTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4406,
                          "src": "2320:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4513,
                        "name": "IQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5111,
                        "src": "2312:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IQuoter_$5111_$",
                          "typeString": "type(contract IQuoter)"
                        }
                      },
                      "id": 4515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2312:15:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$5111",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "src": "2303:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IQuoter_$5111",
                      "typeString": "contract IQuoter"
                    }
                  },
                  "id": 4517,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:24:40"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1888:5:40",
            "parameters": {
              "id": 4468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1893:2:40"
            },
            "returnParameters": {
              "id": 4469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1903:0:40"
            },
            "scope": 4690,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4576,
            "nodeType": "FunctionDefinition",
            "src": "2343:465:40",
            "nodes": [],
            "body": {
              "id": 4575,
              "nodeType": "Block",
              "src": "2377:431:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4523,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "2430:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 928,
                          "src": "2430:16:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 4525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2430:18:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4528,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2458:4:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$4690",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$4690",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 4527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2450:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4526,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2450:7:40",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2450:13:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4522,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8818,
                        8843,
                        8856,
                        8872,
                        8914,
                        8956,
                        8998,
                        9035,
                        9072,
                        9109,
                        6653,
                        6678,
                        6708,
                        6733,
                        6792,
                        6817,
                        6847,
                        6872,
                        8345,
                        8380
                      ],
                      "referencedDeclaration": 6653,
                      "src": "2421:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2421:43:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4531,
                  "nodeType": "ExpressionStatement",
                  "src": "2421:43:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4533,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "2484:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRatePerDayScaled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 98,
                          "src": "2484:30:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 4535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2484:32:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 4536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2518:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 4532,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8818,
                        8843,
                        8856,
                        8872,
                        8914,
                        8956,
                        8998,
                        9035,
                        9072,
                        9109,
                        6653,
                        6678,
                        6708,
                        6733,
                        6792,
                        6817,
                        6847,
                        6872,
                        8345,
                        8380
                      ],
                      "referencedDeclaration": 6847,
                      "src": "2475:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2475:48:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4538,
                  "nodeType": "ExpressionStatement",
                  "src": "2475:48:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4540,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "2543:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 100,
                          "src": "2543:23:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 4542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2543:25:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4543,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2570:5:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2570:15:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4539,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8818,
                        8843,
                        8856,
                        8872,
                        8914,
                        8956,
                        8998,
                        9035,
                        9072,
                        9109,
                        6653,
                        6678,
                        6708,
                        6733,
                        6792,
                        6817,
                        6847,
                        6872,
                        8345,
                        8380
                      ],
                      "referencedDeclaration": 6847,
                      "src": "2534:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2534:52:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4546,
                  "nodeType": "ExpressionStatement",
                  "src": "2534:52:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4548,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "2606:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeReceiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 102,
                          "src": "2606:22:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 4550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2606:24:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4551,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4367,
                        "src": "2632:11:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4547,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8818,
                        8843,
                        8856,
                        8872,
                        8914,
                        8956,
                        8998,
                        9035,
                        9072,
                        9109,
                        6653,
                        6678,
                        6708,
                        6733,
                        6792,
                        6817,
                        6847,
                        6872,
                        8345,
                        8380
                      ],
                      "referencedDeclaration": 6653,
                      "src": "2597:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2597:47:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4553,
                  "nodeType": "ExpressionStatement",
                  "src": "2597:47:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4555,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "2664:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "methodology",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 108,
                          "src": "2664:22:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 4557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2664:24:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 4558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2690:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 4554,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8818,
                        8843,
                        8856,
                        8872,
                        8914,
                        8956,
                        8998,
                        9035,
                        9072,
                        9109,
                        6653,
                        6678,
                        6708,
                        6733,
                        6792,
                        6817,
                        6847,
                        6872,
                        8345,
                        8380
                      ],
                      "referencedDeclaration": 8345,
                      "src": "2655:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 4559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2655:38:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4560,
                  "nodeType": "ExpressionStatement",
                  "src": "2655:38:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4562,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "2713:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supplyCeiling",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 110,
                          "src": "2713:24:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 4564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2713:26:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 4565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2741:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "id": 4561,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8818,
                        8843,
                        8856,
                        8872,
                        8914,
                        8956,
                        8998,
                        9035,
                        9072,
                        9109,
                        6653,
                        6678,
                        6708,
                        6733,
                        6792,
                        6817,
                        6847,
                        6872,
                        8345,
                        8380
                      ],
                      "referencedDeclaration": 6847,
                      "src": "2704:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2704:48:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4567,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:48:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4569,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "2772:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106,
                          "src": "2772:17:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 4571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2772:19:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4572,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "2793:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4568,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8818,
                        8843,
                        8856,
                        8872,
                        8914,
                        8956,
                        8998,
                        9035,
                        9072,
                        9109,
                        6653,
                        6678,
                        6708,
                        6733,
                        6792,
                        6817,
                        6847,
                        6872,
                        8345,
                        8380
                      ],
                      "referencedDeclaration": 6653,
                      "src": "2763:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2763:37:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4574,
                  "nodeType": "ExpressionStatement",
                  "src": "2763:37:40"
                }
              ]
            },
            "functionSelector": "0e7628c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialized",
            "nameLocation": "2352:15:40",
            "parameters": {
              "id": 4520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2367:2:40"
            },
            "returnParameters": {
              "id": 4521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2377:0:40"
            },
            "scope": 4690,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4689,
            "nodeType": "FunctionDefinition",
            "src": "2822:1133:40",
            "nodes": [],
            "body": {
              "id": 4688,
              "nodeType": "Block",
              "src": "2857:1098:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4582,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4361,
                        "src": "2882:11:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4579,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8683,
                        "src": "2868:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$20234",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 4581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20023,
                      "src": "2868:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2868:26:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4584,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:26:40"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 4585,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4418,
                          "src": "2905:4:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$4976",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 4587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4904,
                        "src": "2905:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 4589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31653137",
                          "id": 4588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2925:4:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "1e17"
                        }
                      ],
                      "src": "2905:25:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 4590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2905:27:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4591,
                  "nodeType": "ExpressionStatement",
                  "src": "2905:27:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4597,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2975:4:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$4690",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$4690",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 4596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2967:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4595,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2967:7:40",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2967:13:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4593,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4418,
                            "src": "2952:4:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$4976",
                              "typeString": "contract IWETH"
                            }
                          },
                          "id": 4594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4921,
                          "src": "2952:14:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2952:29:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 4600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2983:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "id": 4592,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8818,
                        8843,
                        8856,
                        8872,
                        8914,
                        8956,
                        8998,
                        9035,
                        9072,
                        9109,
                        6653,
                        6678,
                        6708,
                        6733,
                        6792,
                        6817,
                        6847,
                        6872,
                        8345,
                        8380
                      ],
                      "referencedDeclaration": 6847,
                      "src": "2943:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2943:45:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4602,
                  "nodeType": "ExpressionStatement",
                  "src": "2943:45:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4608,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4412,
                            "src": "3020:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$5211",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$5211",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 4607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3012:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4606,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3012:7:40",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3012:19:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 4610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3033:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4603,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4418,
                        "src": "2999:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$4976",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 4605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4948,
                      "src": "2999:12:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2999:39:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4612,
                  "nodeType": "ExpressionStatement",
                  "src": "2999:39:40"
                },
                {
                  "assignments": [
                    4617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4617,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3103:6:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 4688,
                      "src": "3061:48:40",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$5135_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 4616,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4615,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5135,
                          "src": "3061:34:40"
                        },
                        "referencedDeclaration": 5135,
                        "src": "3061:34:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$5135_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4633,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4620,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4403,
                        "src": "3181:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4621,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4400,
                        "src": "3211:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 4622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3264:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 4625,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3302:4:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$4690",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$4690",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 4624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3294:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4623,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3294:7:40",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3294:13:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4627,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3332:5:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3332:15:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 4629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3372:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      },
                      {
                        "hexValue": "30",
                        "id": 4630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3409:1:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 4631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3643:1:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4618,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5211,
                        "src": "3112:11:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$5211_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 4619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5135,
                      "src": "3112:44:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$5135_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 4632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3112:544:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$5135_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3061:595:40"
                },
                {
                  "assignments": [
                    4635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4635,
                      "mutability": "mutable",
                      "name": "daiAmount",
                      "nameLocation": "3674:9:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 4688,
                      "src": "3669:14:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4634,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3669:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4640,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4638,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4617,
                        "src": "3714:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$5135_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$5135_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 4636,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4412,
                        "src": "3686:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$5211",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 4637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5144,
                      "src": "3686:27:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$5135_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 4639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3686:35:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3669:52:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4644,
                        "name": "daiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4635,
                        "src": "3744:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4641,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28298,
                        "src": "3732:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$28298_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 4643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20815,
                      "src": "3732:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 4645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3732:22:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4646,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:22:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4654,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3799:4:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$4690",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$4690",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 4653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3791:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4652,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3791:7:40",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3791:13:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4650,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4415,
                            "src": "3777:3:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$6020",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5532,
                          "src": "3777:13:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3777:28:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4647,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28298,
                        "src": "3765:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$28298_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 4649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20815,
                      "src": "3765:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 4657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3765:41:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4658,
                  "nodeType": "ExpressionStatement",
                  "src": "3765:41:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4664,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "3839:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          ],
                          "id": 4663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3831:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3831:7:40",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3831:19:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4670,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3874:4:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$4690",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$4690",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 4669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3866:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4668,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3866:7:40",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3866:13:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4666,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4415,
                            "src": "3852:3:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$6020",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5532,
                          "src": "3852:13:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3852:28:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4659,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4415,
                        "src": "3819:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$6020",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5600,
                      "src": "3819:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3819:62:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4674,
                  "nodeType": "ExpressionStatement",
                  "src": "3819:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4678,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4400,
                        "src": "3913:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4683,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3940:4:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$4690",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$4690",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 4682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3932:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4681,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3932:7:40",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3932:13:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4679,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4415,
                            "src": "3918:3:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$6020",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5532,
                          "src": "3918:13:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3918:28:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4675,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4359,
                        "src": "3892:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$747",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 4677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 746,
                      "src": "3892:20:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3892:55:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4687,
                  "nodeType": "ExpressionStatement",
                  "src": "3892:55:40"
                }
              ]
            },
            "functionSelector": "96c023e7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintWithSwap",
            "nameLocation": "2831:16:40",
            "parameters": {
              "id": 4577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2847:2:40"
            },
            "returnParameters": {
              "id": 4578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2857:0:40"
            },
            "scope": 4690,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4352,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5433,
              "src": "491:4:40"
            },
            "id": 4353,
            "nodeType": "InheritanceSpecifier",
            "src": "491:4:40"
          }
        ],
        "contractDependencies": [
          747
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4690,
          5433,
          18523,
          14059,
          13734,
          12941,
          10881,
          10117,
          8624,
          8690,
          8687
        ],
        "name": "CounterTest",
        "nameLocation": "476:11:40",
        "scope": 4691,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 40
}