{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "feeRatePerDayScaled",
          "type": "uint256"
        }
      ],
      "name": "FeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "FeeReceiverSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "methodologist",
          "type": "address"
        }
      ],
      "name": "MethodologistSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "methodology",
          "type": "string"
        }
      ],
      "name": "MethodologySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintFeeToReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "SupplyCeilingSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRestricted",
          "type": "bool"
        }
      ],
      "name": "ToggledRestricted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BNB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BONE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BabyDoge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CURVE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ELON",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FLOKI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FactoryV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FactoryV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HarryPotterObamaSonic10Inu",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEASH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LINK",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MEME",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PEPE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SHIB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SwapRouterV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SwapRouterV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WSM",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WXRP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assetList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IndexFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryV3",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexToken",
      "outputs": [
        {
          "internalType": "contract IndexToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeAssetList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract MockApiOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoter",
      "outputs": [
        {
          "internalType": "contract IQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "swapVersions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIssuanceWithEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIssuanceWithTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOracleList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwap",
      "outputs": [
        {
          "internalType": "contract TestSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateOracleList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "772:15373:79:-:0;;;;;1609:26:28;;;1631:4;-1:-1:-1;;1609:26:28;;;;;;;;3191:44:31;;;;;;;;;;-1:-1:-1;;;;;;1050:10:79;;;;1555:25:81;-1:-1:-1;;;;;;;;;;;1050:7:79;1528:18:81;1050:10:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1028:32;;;-1:-1:-1;;;;;;1028:32:79;-1:-1:-1;;;;;1028:32:79;;;;;;;;;;1092:10;;-1:-1:-1;;;;;;1092:10:79;;1100:1;1092:10;;;1555:25:81;-1:-1:-1;;;;;;;;;;;1092:7:79;;;1528:18:81;;1092:10:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1067:35;;;-1:-1:-1;;;;;;1067:35:79;-1:-1:-1;;;;;1067:35:79;;;;;;;;;;1126:10;;-1:-1:-1;;;;;;1126:10:79;;1134:1;1126:10;;;1555:25:81;-1:-1:-1;;;;;;;;;;;1126:7:79;;;1528:18:81;;1126:10:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1109:27;;;-1:-1:-1;;;;;;1109:27:79;-1:-1:-1;;;;;1109:27:79;;;;;;;;;;1163:10;;-1:-1:-1;;;;;;1163:10:79;;1171:1;1163:10;;;1555:25:81;-1:-1:-1;;;;;;;;;;;1163:7:79;;;1528:18:81;;1163:10:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1143:30;;;-1:-1:-1;;;;;;1143:30:79;-1:-1:-1;;;;;1143:30:79;;;;;;;;;;1204:10;;-1:-1:-1;;;;;;1204:10:79;;1212:1;1204:10;;;1555:25:81;-1:-1:-1;;;;;;;;;;;1204:7:79;;;1528:18:81;;1204:10:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1180:34;;;-1:-1:-1;;;;;;1180:34:79;-1:-1:-1;;;;;1180:34:79;;;;;;;;;;1237:10;;-1:-1:-1;;;;;;1237:10:79;;1245:1;1237:10;;;1555:25:81;-1:-1:-1;;;;;;;;;;;1237:7:79;;;1528:18:81;1237:10:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1221:26;;;-1:-1:-1;;;;;;1221:26:79;-1:-1:-1;;;;;1221:26:79;;;;;;;;;;1269:10;;-1:-1:-1;;;;;;1269:10:79;;1277:1;1269:10;;;1555:25:81;-1:-1:-1;;;;;;;;;;;1269:7:79;;;1528:18:81;;1269:10:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1254:25;;;-1:-1:-1;;;;;1254:25:79;;;;-1:-1:-1;;;;;;1254:25:79;;;;;;1667:64;;;;;;1689:42;1667:64;;;2968:312;;;;;;;;2518:42;2968:312;;2597:42;2968:312;;;;2758:42;2968:312;;;;;;;2838:42;2968:312;;;;2917:42;2968:312;;;;;;;;;;:::i;:::-;-1:-1:-1;3289:209:79;;;;;;;;3328:5;3289:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3507:243:79;;;;;;;;3547:1;3507:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4530:31:79;;-1:-1:-1;;;4530:31:79;;2933:2:81;4530:31:79;;;2915:21:81;2972:2;2952:18;;;2945:30;-1:-1:-1;;;2991:18:81;;;2984:45;-1:-1:-1;;;;;;;;;;;4530:12:79;;;3046:18:81;;4530:31:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4530:31:79;;;;;;;;;;;;:::i;:::-;4505:56;;;;;;;;;;;;:::i;:::-;;4568:50;;;772:15373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;772:15373:79;-1:-1:-1;;;;;772:15373:79;;;;;;;;;;;-1:-1:-1;772:15373:79;;;;;;;-1:-1:-1;772:15373:79;;;-1:-1:-1;772:15373:79;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;772:15373:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:290:81;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:81;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:81:o;309:1087::-;389:6;420:2;463;451:9;442:7;438:23;434:32;431:52;;;479:1;476;469:12;431:52;506:16;;-1:-1:-1;;;;;571:14:81;;;568:34;;;598:1;595;588:12;568:34;636:6;625:9;621:22;611:32;;681:7;674:4;670:2;666:13;662:27;652:55;;703:1;700;693:12;652:55;732:2;726:9;754:2;750;747:10;744:36;;;760:18;;:::i;:::-;835:2;829:9;803:2;889:13;;-1:-1:-1;;885:22:81;;;909:2;881:31;877:40;865:53;;;933:18;;;953:22;;;930:46;927:72;;;979:18;;:::i;:::-;1019:10;1015:2;1008:22;1054:2;1046:6;1039:18;1094:7;1089:2;1084;1080;1076:11;1072:20;1069:33;1066:53;;;1115:1;1112;1105:12;1066:53;1137:1;1128:10;;1147:129;1161:2;1158:1;1155:9;1147:129;;;1249:10;;;1245:19;;1239:26;1218:14;;;1214:23;;1207:59;1172:10;;;;1147:129;;;1294:2;1291:1;1288:9;1285:80;;;1353:1;1348:2;1343;1335:6;1331:15;1327:24;1320:35;1285:80;1384:6;309:1087;-1:-1:-1;;;;;;;;309:1087:81:o;3075:380::-;3154:1;3150:12;;;;3197;;;3218:61;;3272:4;3264:6;3260:17;3250:27;;3218:61;3325:2;3317:6;3314:14;3294:18;3291:38;3288:161;;;3371:10;3366:3;3362:20;3359:1;3352:31;3406:4;3403:1;3396:15;3434:4;3431:1;3424:15;3288:161;;3075:380;;;:::o;3460:127::-;3521:10;3516:3;3512:20;3509:1;3502:31;3552:4;3549:1;3542:15;3576:4;3573:1;3566:15;3460:127;772:15373:79;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "772:15373:79:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5190:1301;;;:::i;:::-;;6499:475;;;:::i;2143:95::-;;2196:42;2143:95;;;;;-1:-1:-1;;;;;7858:32:81;;;7840:51;;7828:2;7813:18;2143:95:79;;;;;;;;2807:73;;2838:42;2807:73;;1538:116;;1611:42;1538:116;;2531:136:34;;;:::i;:::-;;;;;;;:::i;13548:1384:79:-;;;:::i;3463:153:34:-;;;:::i;:::-;;;;;;;:::i;1899:73:79:-;;1930:42;1899:73;;1818:74;;1850:42;1818:74;;2245:73;;2276:42;2245:73;;12306:1234;;;:::i;7470:2258::-;;;:::i;2726:74::-;;2758:42;2726:74;;3289:209;;;;;;:::i;:::-;;:::i;:::-;;;19885:25:81;;;19873:2;19858:18;3289:209:79;19731:185:81;3320:135:34;;;:::i;3013:143::-;;;:::i;4423:17:79:-;;;;;-1:-1:-1;;;;;4423:17:79;;;3877:74;;3909:42;3877:74;;2487:73;;2518:42;2487:73;;2887:72;;2917:42;2887:72;;2325;;2355:42;2325:72;;2567;;2597:42;2567:72;;3507:243;;;;;;:::i;:::-;;:::i;10551:1741::-;;;:::i;2825:180:34:-;;;:::i;:::-;;;;;;;:::i;967:24:79:-;;;;;-1:-1:-1;;;;;967:24:79;;;4627:27;;;;;-1:-1:-1;;;;;4627:27:79;;;2675:142:34;;;:::i;:::-;;;;;;;:::i;9742:799:79:-;;;:::i;3958:75::-;;3991:42;3958:75;;3164:148:34;;;:::i;7054:410:79:-;;;:::i;2968:312::-;;;;;;:::i;:::-;;:::i;2404:74::-;;2436:42;2404:74;;2228:143:34;;;:::i;1865:600:28:-;;;:::i;:::-;;;16490:14:81;;16483:22;16465:41;;16453:2;16438:18;1865:600:28;16325:187:81;3759:105:79;;3821:42;3759:105;;2063:73;;2094:42;2063:73;;933:27;;;;;-1:-1:-1;;;;;933:27:79;;;4475:21;;;;;-1:-1:-1;;;;;4475:21:79;;;4213:81;;4252:42;4213:81;;1979:77;;2014:42;1979:77;;4301:78;;4337:42;4301:78;;2646:73;;2677:42;2646:73;;1288:72;;1318:42;1288:72;;14942:1184;;;:::i;2379:144:34:-;;;:::i;1667:64:79:-;;;;;-1:-1:-1;;;;;1667:64:79;;;1738:73;;1769:42;1738:73;;898:28;;;;;-1:-1:-1;;;;;898:28:79;;;4400:16;;;;;-1:-1:-1;;;;;4400:16:79;;;1609:26:28;;;;;;;;;5190:1301:79;5239:30;;-1:-1:-1;;;5239:30:79;;-1:-1:-1;;;;;;;;;;;5239:13:79;;;:30;;5253:15;;5239:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5225:11;:44;;;5282:26;;-1:-1:-1;;;5282:26:79;;;;;19885:25:81;;;;-1:-1:-1;;;;;;;;;;;5282:13:79;;;19858:18:81;;5282:26:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5407:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5400:4:79;:22;;-1:-1:-1;;;;;;5400:22:79;-1:-1:-1;;;;;5400:22:79;;;;;;;;;5442:32;;;;;:::i;:::-;-1:-1:-1;;;;;7858:32:81;;;7840:51;;7828:2;7813:18;5442:32:79;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5433:6:79;:41;;-1:-1:-1;;;;;;5433:41:79;-1:-1:-1;;;;;5433:41:79;;;;;;;;;;5500:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5487:10:79;:29;;-1:-1:-1;;;;;;5487:29:79;-1:-1:-1;;;;;5487:29:79;;;;;;;;;5634:11;;5527:327;;-1:-1:-1;;;5527:327:79;;5487:29;;5527:21;;:327;;5615:4;;5634:11;;5660:10;;3909:42;;3991;;4079;;4164;;4252;;4337;;5527:327;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5877:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5867:7:79;:28;;-1:-1:-1;;;;;;5867:28:79;-1:-1:-1;;;;;5867:28:79;;;;;;;;;5955:10;;6018:4;;6046:6;;6068:5;;5906:351;;-1:-1:-1;;;5906:351:79;;5955:10;;;5906:351;;;8355:34:81;6018:4:79;;;8405:18:81;;;8398:43;6046:6:79;;;8457:18:81;;;8450:43;8509:18;;;8502:34;;;;3909:42:79;8552:19:81;;;8545:44;3991:42:79;8605:19:81;;;8598:44;4079:42:79;8658:19:81;;;8651:44;4164:42:79;8711:19:81;;;8704:44;4252:42:79;8764:19:81;;;8757:44;4337:42:79;8817:19:81;;;8810:44;5867:28:79;5906:18;;8289:19:81;;5906:351:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6270:10:79;;6299:7;;6270:38;;-1:-1:-1;;;6270:38:79;;-1:-1:-1;;;;;6299:7:79;;;6270:38;;;7840:51:81;6270:10:79;;;-1:-1:-1;6270:20:79;;-1:-1:-1;7813:18:81;;6270:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6352:3:79;:16;;-1:-1:-1;;;;;;6352:16:79;;;1318:42;6352:16;;;;6379:4;:19;;;;3909:42;6379:19;;;6409:6;:24;;;;;3991:42;6409:24;;;-1:-1:-1;;6457:14:79;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6446:8:79;:25;;-1:-1:-1;;;;;;6446:25:79;-1:-1:-1;;;;;6446:25:79;;;;;;;;;;5190:1301::o;6499:475::-;6586:10;;:18;;;-1:-1:-1;;;6586:18:79;;;;6577:43;;-1:-1:-1;;;;;6586:10:79;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6614:4;6577:8;:43::i;:::-;6640:10;;:32;;;-1:-1:-1;;;6640:32:79;;;;6631:48;;-1:-1:-1;;;;;6640:10:79;;:30;;:32;;;;;;;;;;;;;;:10;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6674:4;6631:8;:48::i;:::-;6699:10;;:25;;;-1:-1:-1;;;6699:25:79;;;;6690:52;;-1:-1:-1;;;;;6699:10:79;;:23;;:25;;;;;;;;;;;;;;:10;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6726:15;6690:8;:52::i;:::-;6762:10;;:24;;;-1:-1:-1;;;6762:24:79;;;;6753:47;;-1:-1:-1;;;;;6762:10:79;;:22;;:24;;;;;;;;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6788:11;;-1:-1:-1;;;;;6788:11:79;6753:8;:47::i;:::-;6820:10;;:24;;;-1:-1:-1;;;6820:24:79;;;;6811:38;;-1:-1:-1;;;;;6820:10:79;;:22;;:24;;;;;:10;;:24;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6820:24:79;;;;;;;;;;;;:::i;:::-;6811:38;;;;;;;;;;;;:8;:38::i;:::-;6869:10;;:26;;;-1:-1:-1;;;6869:26:79;;;;6860:48;;-1:-1:-1;;;;;6869:10:79;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6897:10;6860:8;:48::i;:::-;6928:10;;:19;;;-1:-1:-1;;;6928:19:79;;;;6919:47;;-1:-1:-1;;;;;6928:10:79;;:17;;:19;;;;;;;;;;;;;;:10;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6957:7;;-1:-1:-1;;;;;6957:7:79;6919:8;:47::i;:::-;6499:475::o;2531:136:34:-;2578:33;2643:16;2624:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2624:35:34;;;;;;;;;;;;;;;;;;;;;;;2531:136;:::o;13548:1384:79:-;13605:86;;-1:-1:-1;;;13605:86:79;;3909:42;13605:86;;;9601:34:81;2518:42:79;9651:18:81;;;9644:43;13676:4:79;9703:18:81;;;9696:49;13590:12:79;;1611:42;;13605:17;;9536:18:81;;13605:86:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13590:101;;13716:20;13751:10;13776:23;13814:29;13858:33;13906:17;13938:13;13980:4;-1:-1:-1;;;;;13965:26:79;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13701:292;;;;;;;;;;;;;;14004:25;14016:12;-1:-1:-1;;;;;14004:25:79;:11;:25::i;:::-;14052:7;;:42;;-1:-1:-1;;;14052:42:79;;3909;14052;;;9168:34:81;2518:42:79;9218:18:81;;;9211:43;14086:4:79;9270:18:81;;;9263:34;14092:1:79;9313:18:81;;;9306:34;14040:55:79;;-1:-1:-1;;;;;14052:7:79;;:20;;9102:19:81;;14052:42:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14040:11;:55::i;:::-;14124:4;;;;;;;;;-1:-1:-1;;;;;14124:4:79;-1:-1:-1;;;;;14124:12:79;;14143:4;14124:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14161:48:79;;-1:-1:-1;;;14161:48:79;;3909:42;;-1:-1:-1;14161:21:79;;-1:-1:-1;14161:48:79;;-1:-1:-1;3821:42:79;;14204:4;;14161:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14271:545:79;;;;;;;;3909:42;14271:545;;2518:42;14271:545;;;;14424:4;14271:545;;;;14462:4;14271:545;;;;14492:15;14271:545;;;;14532:4;14271:545;;;;14220:48;14271:545;;;;;;;;;;;;14849:35;;-1:-1:-1;;;14849:35:79;;14271:545;;14220:48;3821:42;;14849:27;;:35;;14271:545;;14849:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14827:57;;14895:27;14907:14;14895:11;:27::i;:::-;13579:1353;;;;;;;;;;13548:1384::o;3463:153:34:-;3512:42;3589:19;3567:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3567:41:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3463:153;:::o;12306:1234:79:-;12377:21;:19;:21::i;:::-;12445:90;;;;;;;;;;;;-1:-1:-1;;;12445:90:79;;;;12483:10;;12445:163;;12602:5;;12445:128;;12567:4;;12445:90;;;:50;;-1:-1:-1;;;;;;;12483:10:79;12445:29;:50::i;:::-;:68;;:90::i;:::-;:113;;:128::i;:::-;:156;;:163::i;:::-;12619:85;;;;;;;;;;;;-1:-1:-1;;;12619:85:79;;;;12657:10;;12619:161;;12774:5;;12619:85;;;:50;;-1:-1:-1;;;;;;;12657:10:79;12619:29;:50::i;:161::-;12986:6;12982:230;12998:9;:16;12994:20;;12982:230;;;13031:169;13193:6;13031:133;13155:7;;;;;;;;;-1:-1:-1;;;;;13155:7:79;13031:92;;;;;;;;;;;;;;-1:-1:-1;;;13031:92:79;;;:52;13069:9;13079:1;13069:12;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;13069:12:79;13031:29;:52::i;:169::-;13016:3;;;;:::i;:::-;;;;12982:230;;;;13226:6;13222:125;13238:9;:16;13234:20;;13222:125;;;13256:3;;;;:::i;:::-;;;;13222:125;;;-1:-1:-1;13369:7:79;;:29;;;-1:-1:-1;;;13369:29:79;;;;13357:42;;-1:-1:-1;;;;;13369:7:79;;:27;;:29;;;;;;;;;;;;;;:7;:29;;;;;;;;;;13357:42;13410:38;;;;;;;;;;;;;;;;;;:11;:38::i;:::-;13459:7;;13478:10;;:35;;-1:-1:-1;;;13478:35:79;;13507:4;13478:35;;;7840:51:81;-1:-1:-1;;;;;13459:7:79;;;;:18;;13478:10;;:20;;7813:18:81;;13478:35:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13523:4;;13459:73;;;;;;-1:-1:-1;;;;;;13459:73:79;;;;;;30251:25:81;;;;-1:-1:-1;;;;;13523:4:79;30292:18:81;;;30285:60;13530:1:79;30361:18:81;;;30354:34;30224:18;;13459:73:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12306:1234::o;7470:2258::-;7514:18;:16;:18::i;:::-;7575:7;;:21;;-1:-1:-1;;;7575:21:79;;:7;:21;;;19885:25:81;7566:45:79;;-1:-1:-1;;;;;7575:7:79;;:18;;19858::81;;7575:21:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7598:9;7608:1;7598:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7598:12:79;7566:8;:45::i;:::-;7631:7;;:21;;-1:-1:-1;;;7631:21:79;;:7;:21;;;19885:25:81;7622:45:79;;-1:-1:-1;;;;;7631:7:79;;:18;;19858::81;;7631:21:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7654:9;7664:1;7654:12;;;;;;;;:::i;7622:45::-;7687:7;;:21;;-1:-1:-1;;;7687:21:79;;7706:1;7687:21;;;19885:25:81;7678:45:79;;-1:-1:-1;;;;;7687:7:79;;:18;;19858::81;;7687:21:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7710:9;7720:1;7710:12;;;;;;;;:::i;7678:45::-;7743:7;;:21;;-1:-1:-1;;;7743:21:79;;7762:1;7743:21;;;19885:25:81;7734:45:79;;-1:-1:-1;;;;;7743:7:79;;:18;;19858::81;;7743:21:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7766:9;7776:1;7766:12;;;;;;;;:::i;7734:45::-;7799:7;;:21;;-1:-1:-1;;;7799:21:79;;7818:1;7799:21;;;19885:25:81;7790:45:79;;-1:-1:-1;;;;;7799:7:79;;:18;;19858::81;;7799:21:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7822:9;7832:1;7822:12;;;;;;;;:::i;7790:45::-;8175:7;;8200:9;:12;;8166:64;;-1:-1:-1;;;;;8175:7:79;;:24;;:7;;8200:12;;;;:::i;:::-;;;;;;;;;;;8175:38;;;;;;-1:-1:-1;;;;;;8175:38:79;;;-1:-1:-1;;;;;8200:12:79;;;8175:38;;;7840:51:81;7813:18;;8175:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8215:11;8227:1;8215:14;;;;;;;;:::i;:::-;;;;;;;;;8166:8;:64::i;:::-;8250:7;;8275:9;:12;;8241:64;;-1:-1:-1;;;;;8250:7:79;;:24;;:7;;8275:12;;;;;;:::i;:::-;;;;;;;;;;;8250:38;;;;;;-1:-1:-1;;;;;;8250:38:79;;;-1:-1:-1;;;;;8275:12:79;;;8250:38;;;7840:51:81;7813:18;;8250:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8290:11;8302:1;8290:14;;;;;;;;:::i;8241:64::-;8325:7;;8350:9;:12;;8316:64;;-1:-1:-1;;;;;8325:7:79;;:24;;8360:1;;8350:12;;;;;;:::i;:::-;;;;;;;;;;;8325:38;;;;;;-1:-1:-1;;;;;;8325:38:79;;;-1:-1:-1;;;;;8350:12:79;;;8325:38;;;7840:51:81;7813:18;;8325:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8365:11;8377:1;8365:14;;;;;;;;:::i;8316:64::-;8400:7;;8425:9;:12;;8391:64;;-1:-1:-1;;;;;8400:7:79;;:24;;8435:1;;8425:12;;;;;;:::i;:::-;;;;;;;;;;;8400:38;;;;;;-1:-1:-1;;;;;;8400:38:79;;;-1:-1:-1;;;;;8425:12:79;;;8400:38;;;7840:51:81;7813:18;;8400:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8440:11;8452:1;8440:14;;;;;;;;:::i;8391:64::-;8475:7;;8500:9;:12;;8466:64;;-1:-1:-1;;;;;8475:7:79;;:24;;8510:1;;8500:12;;;;;;:::i;:::-;;;;;;;;;;;8475:38;;;;;;-1:-1:-1;;;;;;8475:38:79;;;-1:-1:-1;;;;;8500:12:79;;;8475:38;;;7840:51:81;7813:18;;8475:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8515:11;8527:1;8515:14;;;;;;;;:::i;8466:64::-;8965:7;;8990:9;:12;;8956:65;;-1:-1:-1;;;;;8965:7:79;;:24;;:7;;8990:12;;;;:::i;:::-;;;;;;;;;;;8965:38;;;;;;-1:-1:-1;;;;;;8965:38:79;;;-1:-1:-1;;;;;8990:12:79;;;8965:38;;;7840:51:81;7813:18;;8965:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9005:12;9018:1;9005:15;;;;;;;;:::i;8956:65::-;9041:7;;9066:9;:12;;9032:65;;-1:-1:-1;;;;;9041:7:79;;:24;;:7;;9066:12;;;;;;:::i;:::-;;;;;;;;;;;9041:38;;;;;;-1:-1:-1;;;;;;9041:38:79;;;-1:-1:-1;;;;;9066:12:79;;;9041:38;;;7840:51:81;7813:18;;9041:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9081:12;9094:1;9081:15;;;;;;;;:::i;9032:65::-;9117:7;;9142:9;:12;;9108:65;;-1:-1:-1;;;;;9117:7:79;;:24;;9152:1;;9142:12;;;;;;:::i;:::-;;;;;;;;;;;9117:38;;;;;;-1:-1:-1;;;;;;9117:38:79;;;-1:-1:-1;;;;;9142:12:79;;;9117:38;;;7840:51:81;7813:18;;9117:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9157:12;9170:1;9157:15;;;;;;;;:::i;9108:65::-;9193:7;;9218:9;:12;;9184:65;;-1:-1:-1;;;;;9193:7:79;;:24;;9228:1;;9218:12;;;;;;:::i;:::-;;;;;;;;;;;9193:38;;;;;;-1:-1:-1;;;;;;9193:38:79;;;-1:-1:-1;;;;;9218:12:79;;;9193:38;;;7840:51:81;7813:18;;9193:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9233:12;9246:1;9233:15;;;;;;;;:::i;9184:65::-;9269:7;;9294:9;:12;;9260:65;;-1:-1:-1;;;;;9269:7:79;;:24;;9304:1;;9294:12;;;;;;:::i;:::-;;;;;;;;;;;9269:38;;;;;;-1:-1:-1;;;;;;9269:38:79;;;-1:-1:-1;;;;;9294:12:79;;;9269:38;;;7840:51:81;7813:18;;9269:38:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9309:12;9322:1;9309:15;;;;;;;;:::i;3289:209::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3289:209:79;:::o;3320:135:34:-;3366:33;3431:16;3412:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3412:35:34;;;;;;;;;;;;;;;;;;;;;;3320:135;:::o;3013:143::-;3061:35;3130:18;3109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3109:39:34;;;;;;;;;;;;;;;;;;;;;;3013:143;:::o;3507:243:79:-;;;;;;;;;;;;10551:1741;10647:4;;:27;;;-1:-1:-1;;;10647:27:79;;;;10622:4;;-1:-1:-1;;;;;10647:4:79;;:12;;10666:5;;10647:27;;;;;10603:16;;10647:27;;;;;;;;10666:5;10647:4;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10685:49:79;;-1:-1:-1;;;10685:49:79;;3909:42;;-1:-1:-1;10685:21:79;;-1:-1:-1;10685:49:79;;-1:-1:-1;3821:42:79;;10728:5;;10685:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10796:545:79;;;;;;;;3909:42;10796:545;;1318:42;10796:545;;;;10948:4;10796:545;;;;10986:4;10796:545;;;;11016:15;10796:545;;;;11056:5;10796:545;;;;10745:48;10796:545;;;;;;;;;;;;11374:35;;-1:-1:-1;;;11374:35:79;;10796:545;;10745:48;3821:42;;11374:27;;:35;;10796:545;;11374:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11420:65;;;;;;;;;;;-1:-1:-1;;;11420:65:79;;;;11448:36;;-1:-1:-1;;;11448:36:79;;11478:4;11448:36;;;7840:51:81;11352:57:79;;-1:-1:-1;11420:65:79;;1318:42;;11448:21;;7813:18:81;;11448:36:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11420:11;:65::i;:::-;11496:18;:16;:18::i;:::-;11535:7;;11556:5;;11535:27;;-1:-1:-1;;;11535:27:79;;-1:-1:-1;;;;;11556:5:79;;;11535:27;;;7840:51:81;11535:7:79;;;:20;;7813:18:81;;11535:27:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11587:5:79;;11573:20;;-1:-1:-1;;;11573:20:79;;-1:-1:-1;;;;;11587:5:79;;;11573:20;;;7840:51:81;-1:-1:-1;;;;;;;;;;;11573:13:79;-1:-1:-1;11573:13:79;;-1:-1:-1;7813:18:81;;11573:20:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11604:7:79;;11630:5;;11604:32;;-1:-1:-1;;;11604:32:79;;-1:-1:-1;;;;;11630:5:79;;;11604:32;;;7840:51:81;11604:7:79;;;-1:-1:-1;11604:25:79;;-1:-1:-1;7813:18:81;;11604:32:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;317:37:29;;-1:-1:-1;;;;;11647:12:79;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11736:4:79;;11715:35;;-1:-1:-1;;;11715:35:79;;1318:42;;-1:-1:-1;11715:20:79;;-1:-1:-1;11715:35:79;;-1:-1:-1;;;;;11736:4:79;;11742:7;;11715:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11775:4:79;;11761:19;;-1:-1:-1;;;11761:19:79;;-1:-1:-1;;;;;11775:4:79;;;11761:19;;;7840:51:81;-1:-1:-1;;;;;;;;;;;11761:13:79;;;7813:18:81;;11761:19:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11791:63:79;;;;;;;;;;;-1:-1:-1;;;11791:63:79;;;;11844:7;;11812:41;;-1:-1:-1;;;11812:41:79;;-1:-1:-1;;;;;11844:7:79;;;11812:41;;;7840:51:81;11791:63:79;;-1:-1:-1;11791:63:79;-1:-1:-1;1850:42:79;;11812:23;;7813:18:81;;11812:41:79;7694:203:81;11791:63:79;11903:7;;11875:46;;-1:-1:-1;;;11875:46:79;;1318:42;;11875:19;;:46;;-1:-1:-1;;;;;11903:7:79;;11913;;11875:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11932:7:79;;:53;;-1:-1:-1;;;11932:53:79;;-1:-1:-1;;;;;11932:7:79;;;;:27;;:53;;1318:42;;11974:7;;11983:1;;11932:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11996:71:79;;;;;;;;;;;-1:-1:-1;;;11996:71:79;;;;12031:10;;12060:4;;12031:35;;-1:-1:-1;;;12031:35:79;;-1:-1:-1;;;;;12060:4:79;;;12031:35;;;7840:51:81;11996:71:79;;-1:-1:-1;11996:71:79;;-1:-1:-1;12031:10:79;;;;;:20;;7813:18:81;;12031:35:79;7694:203:81;11996:71:79;12078:61;;;;;;;;;;;-1:-1:-1;;;12078:61:79;;;;;;;;12109:7;;:29;;-1:-1:-1;;;12109:29:79;;;;12078:61;;-1:-1:-1;;;;;12109:7:79;;;;:27;;:29;;;;;;;;;;;:7;:29;;;;;;;;;;12078:61;12150:7;;12169:10;;12198:4;;12169:35;;-1:-1:-1;;;12169:35:79;;-1:-1:-1;;;;;12198:4:79;;;12169:35;;;7840:51:81;12150:7:79;;;;:18;;12169:10;;;;;:20;;7813:18:81;;12169:35:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12214:4;;12150:73;;;;;;-1:-1:-1;;;;;;12150:73:79;;;;;;30251:25:81;;;;-1:-1:-1;;;;;12214:4:79;30292:18:81;;;30285:60;12221:1:79;30361:18:81;;;30354:34;30224:18;;12150:73:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12234:50:79;;;;;;;;;;;;-1:-1:-1;;;12234:50:79;;;;12271:4;;12234:50;;-1:-1:-1;12234:50:79;;-1:-1:-1;;;;;;12271:4:79;:12;12234:11;:50::i;:::-;10592:1700;;;10551:1741::o;2825:180:34:-;2881:48;2971:26;2942:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2675:142;2723:34;2791:18;2770:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9742:799:79;9810:4;9837:18;:16;:18::i;:::-;9876:7;;9897:5;;9876:27;;-1:-1:-1;;;9876:27:79;;-1:-1:-1;;;;;9897:5:79;;;9876:27;;;7840:51:81;9876:7:79;;;:20;;7813:18:81;;9876:27:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9928:5:79;;9914:20;;-1:-1:-1;;;9914:20:79;;-1:-1:-1;;;;;9928:5:79;;;9914:20;;;7840:51:81;-1:-1:-1;;;;;;;;;;;9914:13:79;-1:-1:-1;9914:13:79;;-1:-1:-1;7813:18:81;;9914:20:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9945:7:79;;9971:5;;9945:32;;-1:-1:-1;;;9945:32:79;;-1:-1:-1;;;;;9971:5:79;;;9945:32;;;7840:51:81;9945:7:79;;;-1:-1:-1;9945:25:79;;-1:-1:-1;7813:18:81;;9945:32:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;317:37:29;;-1:-1:-1;;;;;9988:12:79;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10021:4:79;;10013:29;;-1:-1:-1;;;;;10021:4:79;;;;-1:-1:-1;10021:4:79;;-1:-1:-1;10036:5:79;;10021:4;10013:29;10021:4;10013:29;10036:5;10021:4;;10013:29;;;;;;;;;;;;;;;;;;;-1:-1:-1;10067:4:79;;10053:19;;-1:-1:-1;;;10053:19:79;;-1:-1:-1;;;;;10067:4:79;;;10053:19;;;7840:51:81;-1:-1:-1;;;;;;;;;;;10053:13:79;;;7813:18:81;;10053:19:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10083:63:79;;;;;;;;;;;-1:-1:-1;;;10083:63:79;;;;10136:7;;10104:41;;-1:-1:-1;;;10104:41:79;;-1:-1:-1;;;;;10136:7:79;;;10104:41;;;7840:51:81;10083:63:79;;-1:-1:-1;10083:63:79;-1:-1:-1;1850:42:79;;10104:23;;7813:18:81;;10104:41:79;7694:203:81;10083:63:79;10167:7;;:67;;-1:-1:-1;;;10167:67:79;;10228:5;10167:67;;;19885:25:81;-1:-1:-1;;;;;10167:7:79;;;;:34;;10209:17;;19858:18:81;;10167:67:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10245:71:79;;;;;;;;;;;-1:-1:-1;;;10245:71:79;;;;10280:10;;10309:4;;10280:35;;-1:-1:-1;;;10280:35:79;;-1:-1:-1;;;;;10309:4:79;;;10280:35;;;7840:51:81;10245:71:79;;-1:-1:-1;10245:71:79;;-1:-1:-1;10280:10:79;;;;;-1:-1:-1;10280:20:79;;7813:18:81;;10280:35:79;7694:203:81;10245:71:79;10327:61;;;;;;;;;;;-1:-1:-1;;;10327:61:79;;;;;;;;10358:7;;:29;;-1:-1:-1;;;10358:29:79;;;;10327:61;;-1:-1:-1;;;;;10358:7:79;;;;:27;;:29;;;;;;;;;;;:7;:29;;;;;;;;;;10327:61;10399:7;;10418:10;;10447:4;;10418:35;;-1:-1:-1;;;10418:35:79;;-1:-1:-1;;;;;10447:4:79;;;10418:35;;;7840:51:81;10399:7:79;;;;:18;;10418:10;;;;;:20;;7813:18:81;;10418:35:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10463:4;;10399:73;;;;;;-1:-1:-1;;;;;;10399:73:79;;;;;;30251:25:81;;;;-1:-1:-1;;;;;10463:4:79;30292:18:81;;;30285:60;10470:1:79;30361:18:81;;;30354:34;30224:18;;10399:73:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10483:50:79;;;;;;;;;;;;-1:-1:-1;;;10483:50:79;;;;10520:4;;10483:50;;-1:-1:-1;10483:50:79;;-1:-1:-1;;;;;;10520:4:79;:12;10483:11;:50::i;:::-;9780:761;9742:799::o;3164:148:34:-;3212:40;3286:18;3265:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7054:410:79;7263:4;;7285:7;;7263:37;;-1:-1:-1;;;7263:37:79;;-1:-1:-1;;;;;7263:4:79;;;;:13;;:37;;7285:7;;;7295:4;;7263:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7331:7:79;;:27;;;-1:-1:-1;;;7331:27:79;;;;7311:17;;-1:-1:-1;;;;;7331:7:79;;:25;;:27;;;;;;;;;;;;;;7311:17;7331:7;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7369:6;;:87;;-1:-1:-1;;;7369:87:79;;7311:47;;-1:-1:-1;;;;;;7369:6:79;;:38;;:87;;7311:47;;7419:9;;7430:11;;7443:12;;7369:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7089:375;7054:410::o;2968:312::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2968:312:79;;-1:-1:-1;2968:312:79;:::o;2228:143:34:-;2277:34;2345:18;2324:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:600:28;1920:7;;1899:4;;1920:7;;;;;1916:542;;;-1:-1:-1;1951:7:28;;;;;;;;1865:600::o;1916:542::-;1991:17;-1:-1:-1;;;;;;;;;;;3065:55:28;3148:16;2031:382;;2251:43;;2075:20;;-1:-1:-1;;;;;;;;;;;1712:64:28;2189:34;;2251:43;;1712:64;;-1:-1:-1;;;2276:17:28;2251:43;;;:::i;:::-;;;;-1:-1:-1;;2251:43:28;;;;;;;;;;2139:178;;;2251:43;2139:178;;:::i;:::-;;;;-1:-1:-1;;2139:178:28;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:28:o;14942:1184:79:-;14995:6;14991:773;15011:9;:16;15007:20;;14991:773;;;15045:156;15188:9;15198:1;15188:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;15045:88;;;;;;;;;;;;-1:-1:-1;;;15045:88:79;;;;;;;15083:7;;-1:-1:-1;;;;;15188:12:79;;;;15045:114;;15157:1;;15045:88;;;;:47;;15188:12;;15083:7;15045:29;:47::i;:88::-;:111;;:114::i;:::-;:142;;:156::i;:::-;15212:157;15356:9;15366:1;15356:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;15212:89;;;;;;;;;;;;-1:-1:-1;;;15212:89:79;;;;;;;15250:7;;-1:-1:-1;;;;;15356:12:79;;;;15212:115;;15325:1;;15212:89;;;;:47;;15356:12;;15250:7;15212:29;:47::i;:157::-;15380:175;15540:11;15552:1;15540:14;;;;;;;;:::i;:::-;;;;;;;;;15380:131;15498:9;15508:1;15498:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;15380:94;;;;;;;;;;;;;;;;;;;;15418:7;;-1:-1:-1;;;;;15498:12:79;;;;15380:94;;;:47;;15418:7;15380:29;:47::i;:175::-;15566:176;15726:12;15739:1;15726:15;;;;;;;;:::i;:::-;;;;;;;;;15566:131;15684:9;15694:1;15684:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;15566:94;;;;;;;;;;;;;;;;;;;;15604:7;;-1:-1:-1;;;;;15684:12:79;;;;15566:94;;;:47;;15604:7;15566:29;:47::i;:176::-;15029:3;;;;:::i;:::-;;;;14991:773;;;-1:-1:-1;15918:9:79;:16;15774:86;;;;;;;;;;;;-1:-1:-1;;;15774:86:79;;;;15812:7;;15774:161;;15918:16;15774:86;;:47;;-1:-1:-1;;;;;;;15812:7:79;15774:29;:47::i;:161::-;16091:9;:16;15946:87;;;;;;;;;;;;-1:-1:-1;;;15946:87:79;;;;15984:7;;15946:162;;16091:16;15946:87;;:47;;-1:-1:-1;;;;;;;15984:7:79;15946:29;:47::i;2379:144:34:-;2428:35;2497:18;2476:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2476:39:34;;;;;;;;;;;;;;;;;;;;;;2379:144;:::o;3728:284:28:-;3797:1;-1:-1:-1;;;;;3792:6:28;:1;-1:-1:-1;;;;;3792:6:28;;3788:217;;3820:44;;;;;25044:2:81;25026:21;;;25083:2;25063:18;;;25056:30;25122:34;25117:2;25102:18;;25095:62;-1:-1:-1;;;25188:2:81;25173:18;;25166:35;25233:3;25218:19;;24842:401;3820:44:28;;;;;;;;3884:34;3916:1;3884:34;;;;;;:::i;:::-;;;;;;;;3938;3970:1;3938:34;;;;;;:::i;:::-;;;;;;;;3987:6;:4;:6::i;5365:269::-;5428:1;5423;:6;5419:208;;5451:41;;;;;23259:2:81;23241:21;;;23298:2;23278:18;;;23271:30;23337:34;23332:2;23317:18;;23310:62;-1:-1:-1;;;23403:2:81;23388:18;;23381:32;23445:3;23430:19;;23057:398;5451:41:28;;;;;;;;5512:31;5541:1;5512:31;;;;;;:::i;:::-;;;;;;;;5563;5592:1;5563:31;;;;;;:::i;18422:351::-;18559:1;18542:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18532:30;;;;;;18525:1;18508:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18498:30;;;;;;:64;18494:272;;18584:43;;;;;24639:2:81;24621:21;;;24678:2;24658:18;;;24651:30;24717:34;24712:2;24697:18;;24690:62;-1:-1:-1;;;24783:2:81;24768:18;;24761:34;24827:3;24812:19;;24437:400;18584:43:28;;;;;;;;18647:33;18678:1;18647:33;;;;;;:::i;:::-;;;;;;;;18700;18731:1;18700:33;;;;;;:::i;5686:112:42:-;5733:57;5786:2;5749:40;;;;;;19885:25:81;;19873:2;19858:18;;19731:185;5749:40:42;;;;-1:-1:-1;;5749:40:42;;;;;;;;;;;;;;-1:-1:-1;;;;;5749:40:42;-1:-1:-1;;;5749:40:42;;;5733:15;:57::i;9475:158:37:-;4791:12;;;:22;;-1:-1:-1;;;;;;4791:22:37;-1:-1:-1;;;;;4791:22:37;;;;;-1:-1:-1;4791:12:37;9589:36;9582:43;9475:158;-1:-1:-1;;;9475:158:37:o;9794:152::-;740:24;;;;;;5112:9;;;:22;;-1:-1:-1;;5112:22:37;;;;;;;;;;;;9870:18;9927:4;9908:30;5005:159;9954:154;5277:10;;;:47;;;;;;;10028:18;5277:47;;;;;;-1:-1:-1;;;;;5301:21:37;;5277:47;;;10090:4;10066:34;5172:182;10750:122;10831:33;10845:4;10859:3;10831:13;:33::i;5806:123:42:-;5862:59;5917:2;5878:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5878:42:42;;;;;;;;;;;;;;-1:-1:-1;;;;;5878:42:42;-1:-1:-1;;;5878:42:42;;;5862:15;:59::i;6752:141::-;6817:68;6877:2;6881;6833:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6833:51:42;;;;;;;;;;;;;;-1:-1:-1;;;;;6833:51:42;-1:-1:-1;;;6833:51:42;;;6817:15;:68::i;10116:154:37:-;5467:10;;;:29;;;;;;;10190:18;5467:29;;;;;;;;;;10252:4;10228:34;5362:164;10602:140;10683:51;10697:4;-1:-1:-1;;;;;10711:21:37;;10683:13;:51::i;2473:443:28:-;-1:-1:-1;;;;;;;;;;;3065:55:28;3148:16;2517:367;;2721:67;;2555:11;;-1:-1:-1;;;;;;;;;;;1712:64:28;2654:43;;2721:67;;1712:64;;-1:-1:-1;;;2746:17:28;2781:4;;2721:67;;;:::i;:::-;;;;-1:-1:-1;;2721:67:28;;;;;;;;;;2608:199;;;2721:67;2608:199;;:::i;:::-;;;;-1:-1:-1;;2608:199:28;;;;;;;;;;2572:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2517:367:28;2894:7;:14;;-1:-1:-1;;2894:14:28;;;;;2473:443::o;187:384:42:-;282:14;;135:42;459:2;446:16;;258:21;;282:14;446:16;135:42;496:5;485:68;476:77;;411:153;;187:384;:::o;11259:1125:37:-;11354:12;;;;11391:9;;;;11433:11;;;;11478:10;;;11455:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11354:12:37;;;;11391:9;;;;;;11340:11;;11455:33;;11478:10;;11455:33;;11478:10;11455:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11501:17;11538:4;11544:12;11552:3;11544:7;:12::i;:::-;11521:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11521:36:37;;;;;;;;;-1:-1:-1;;;;;11573:15:37;;;;;;:10;;;11521:36;11573:15;;;;;;-1:-1:-1;;;;;;11573:21:37;;;;;;;;;11521:36;;-1:-1:-1;11573:21:37;;:15;;11605:34;;11622:3;;11627:11;;11605:34;;:::i;:::-;;;;-1:-1:-1;;11605:34:37;;;;;;;;;11595:45;;11605:34;11595:45;;;;11573:68;;;;;;;;;;-1:-1:-1;11573:68:37;;;;11568:112;;11658:10;11663:4;11658;:10::i;:::-;;11568:112;-1:-1:-1;;;;;11713:15:37;;11690:12;11713:15;;;;;;;;;;;-1:-1:-1;;;;;;11713:21:37;;;;;;;;;11745:34;;11713:21;;11690:12;;11745:34;;11762:3;;11767:11;;11745:34;;:::i;:::-;;;;;;;;;;;;;11735:45;;;;;;11713:68;;;;;;;;;;;;11705:77;;11690:92;;11795:12;11836:17;11857:3;-1:-1:-1;;;;;11857:14:37;11872:4;11857:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11833:44:37;-1:-1:-1;11899:38:37;;-1:-1:-1;11833:44:37;11920:16;11925:11;11920:2;:16;:::i;:::-;11899:14;:38::i;:::-;11974:18;;-1:-1:-1;;;11974:18:37;;11892:45;;-1:-1:-1;11959:12:37;;-1:-1:-1;;;;;;;;;;;;11974:7:37;;;:18;;11982:3;;11987:4;;11974:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11959:33;;12017:4;12009;:12;12005:223;;12038:178;;-1:-1:-1;;;12038:178:37;;;;;;;:::i;:::-;;;;;;;;;12238:24;;-1:-1:-1;;;12238:24:37;;-1:-1:-1;;;;;;;;;;;12238:8:37;;;:24;;12247:3;;12252:4;;12258:3;;12238:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12280:12:37;;;12273:19;;-1:-1:-1;;;;;;12273:19:37;;;-1:-1:-1;12310:9:37;;;12303:16;;-1:-1:-1;;12303:16:37;;;12330:17;-1:-1:-1;12337:10:37;;12280:12;12330:17;:::i;:::-;12365:4;:11;;12358:18;;;11329:1055;;;;;;;;11259:1125;;:::o;13760:404::-;13819:12;13844:19;13876:1;:8;13887:2;13876:13;;;;:::i;:::-;13866:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13866:24:37;;13844:46;;13906:9;13901:230;13925:1;:8;13921:1;:12;13901:230;;;13955:9;13967:1;13969;13967:4;;;;;;;;:::i;:::-;;;;;;;13955:16;;14103:1;14097;14093:2;14089:10;14085:2;14081:19;14073:6;14069:32;14062:43;14043:77;13935:3;;;;;:::i;:::-;;;;13901:230;;;-1:-1:-1;14150:6:37;13760:404;-1:-1:-1;;13760:404:37:o;9350:117::-;9407:7;9434:25;9454:4;9434:19;:25::i;:::-;9427:32;9350:117;-1:-1:-1;;9350:117:37:o;13388:312::-;13466:7;13486:11;13510;13535:2;13524:1;:8;:13;:29;;13545:1;:8;13524:29;;;13540:2;13524:29;13510:43;;13569:9;13564:108;13588:3;13584:1;:7;13564:108;;;13654:5;:1;13658;13654:5;:::i;:::-;13628:1;13630:10;13639:1;13630:6;:10;:::i;:::-;13628:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;13628:13:37;13620:40;;13613:47;;;;;13593:3;;;;:::i;:::-;;;;13564:108;;;-1:-1:-1;13689:3:37;;13388:312;-1:-1:-1;;;;13388:312:37:o;1295:3381::-;1386:12;;;;1423:9;;;;1465:11;;;;1510:10;;;1487:33;;;;;;;;;;;;;;;;;;;1352:7;;-1:-1:-1;;;;;1386:12:37;;1423:9;;;1465:11;1352:7;;1487:33;;1510:10;;1487:33;;;1510:10;1487:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1574:15:37;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1574:21:37;;;;;;;;;1606:34;;1487:33;;-1:-1:-1;1574:21:37;:15;;-1:-1:-1;1606:34:37;;-1:-1:-1;1487:33:37;;1628:11;;1606:34;;:::i;:::-;;;;-1:-1:-1;;1606:34:37;;;;;;;;;1596:45;;1606:34;1596:45;;;;1574:68;;;;;;;;;;-1:-1:-1;1574:68:37;;;;1570:176;;;-1:-1:-1;;;;;1666:15:37;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1666:21:37;;;;;;;;;1698:34;;1666:21;;:10;1698:34;;1715:3;;1720:11;;1698:34;;:::i;:::-;;;;;;;;;;;;;1688:45;;;;;;1666:68;;;;;;;;;;;;1659:75;;;;;;1295:3381;;;:::o;1570:176::-;1756:17;1793:4;1799:12;1807:3;1799:7;:12::i;:::-;1776:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1756:56;;-1:-1:-1;;;;;;;;;;;599:37:37;;-1:-1:-1;;;;;1823:9:37;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1845:12;1886:17;1907:3;-1:-1:-1;;;;;1907:14:37;1922:4;1907:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1883:44:37;-1:-1:-1;1949:38:37;;-1:-1:-1;1883:44:37;1970:16;1975:11;1970:2;:16;:::i;:::-;1949:14;:38::i;:::-;2039:25;;-1:-1:-1;;;2039:25:37;;-1:-1:-1;;;;;7858:32:81;;2039:25:37;;;7840:51:81;1942:45:37;;-1:-1:-1;2012:22:37;;-1:-1:-1;;;;;;;;;;;;2039:11:37;;;7813:18:81;;2039:25:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2039:25:37;;;;;;;;;;;;:::i;:::-;2011:53;;;2079:5;:12;2095:1;2079:17;2075:2212;;;2113:12;-1:-1:-1;;;;;;;;;;;599:37:37;;-1:-1:-1;;;;;2128:7:37;;2136:3;2141:5;2147:1;2141:8;;;;;;;;:::i;:::-;;;;;;;2128:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2113:37;-1:-1:-1;2169:18:37;2165:108;;2213:44;2234:3;2247:5;2253:1;2247:8;;;;;;;;:::i;:::-;;;;;;;2239:17;;2213:44;;;;;;;:::i;:::-;;;;;;;;2165:108;2299:4;2291;:12;2287:243;;2324:190;;-1:-1:-1;;;2324:190:37;;;;;;;:::i;:::-;2549:86;2559:3;2564:4;2597:3;2602:11;2580:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2570:45;;;;;;2625:5;2631:1;2625:8;;;;;;;;:::i;:::-;;;;;;;2617:17;;2549:86;;;;;;;;;:::i;:::-;;;;;;;;2729:5;2735:1;2729:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2650:15:37;;2721:17;2650:15;;;;;;;;;;-1:-1:-1;;;;;;2650:21:37;;;;;;;;;2682:34;;2729:8;;2650:21;;2682:34;;2699:3;;2704:11;;2682:34;;:::i;:::-;;;;-1:-1:-1;;2682:34:37;;;;;;;;;2672:45;;2682:34;2672:45;;;;2650:68;;;;;;;;;;;;-1:-1:-1;2650:68:37;;;:88;;;;-1:-1:-1;;;;;2753:15:37;;;;2824:4;2753:10;;;:15;;;;;-1:-1:-1;;;;;;2753:21:37;;;;;;;;;2785:34;;2824:4;;-1:-1:-1;2785:34:37;;2802:3;;2807:11;;2785:34;;:::i;:::-;;;;;;;-1:-1:-1;;2785:34:37;;;;;;2775:45;;2785:34;2775:45;;;;2753:68;;;;;;;;;;-1:-1:-1;2753:68:37;:75;;-1:-1:-1;;2753:75:37;;;;;;;;;;-1:-1:-1;2075:2212:37;;;2865:1;2850:5;:12;:16;2846:1441;;;2888:9;2883:1286;2907:5;:12;2903:1;:16;2883:1286;;;2945:12;-1:-1:-1;;;;;;;;;;;599:37:37;;-1:-1:-1;;;;;2960:7:37;;2968:3;2973:5;2979:1;2973:8;;;;;;;;:::i;:::-;;;;;;;2960:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2945:37;-1:-1:-1;3005:18:37;3001:116;;3053:44;3074:3;3087:5;3093:1;3087:8;;;;;;;;:::i;:::-;;;;;;;3079:17;;3053:44;;;;;;;:::i;:::-;;;;;;;;3001:116;3147:4;3139;:12;3135:69;;3176:8;;;3135:69;3304:8;;3240:5;;;-1:-1:-1;;;;;;;;;;;3290:8:37;;;3299:3;;3304:5;;3310:1;;3304:8;;;;;;:::i;:::-;;;;;;;3314:7;3290:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:12;3395:17;3453:3;-1:-1:-1;;;;;3453:14:37;3468:4;3453:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3435:38:37;;-1:-1:-1;3435:38:37;-1:-1:-1;3503:38:37;3435;3524:16;3529:11;3524:2;:16;:::i;3503:38::-;3496:45;;3372:189;3585:7;:26;;;;;3604:7;3596:4;:15;3585:26;3581:525;;;3711:86;3721:3;3726:4;3759:3;3764:11;3742:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3732:45;;;;;;3787:5;3793:1;3787:8;;;;;;;;:::i;:::-;;;;;;;3779:17;;3711:86;;;;;;;;;:::i;:::-;;;;;;;;3899:5;3905:1;3899:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3820:15:37;;3891:17;3820:15;;;;;;;;;;-1:-1:-1;;;;;;3820:21:37;;;;;;;;;3852:34;;3899:8;;3820:21;;3852:34;;3869:3;;3874:11;;3852:34;;:::i;:::-;;;;;;;;;;;;;3842:45;;;;;;3820:68;;;;;;;;;;;:88;;;;4002:4;3931;:10;;:15;3942:3;-1:-1:-1;;;;;3931:15:37;-1:-1:-1;;;;;3931:15:37;;;;;;;;;;;;:21;3947:4;-1:-1:-1;;;;;3931:21:37;;-1:-1:-1;;;;;3931:21:37;;;;;;;;;;;;;:68;3980:3;3985:11;3963:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3953:45;;;;;;3931:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;599:37:37;;-1:-1:-1;;;;;4029:8:37;;4038:3;4043:5;4049:1;4043:8;;;;;;;;:::i;:::-;;;;;;;4053:4;4029:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4081:5;;;;;3581:525;-1:-1:-1;;;;;;;;;;;599:37:37;;-1:-1:-1;;;;;4124:8:37;;4133:3;4138:5;4144:1;4138:8;;;;;;;;:::i;:::-;;;;;;;4148:4;4124:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:1243;;;2883:1286;2921:3;;;;:::i;:::-;;;;2883:1286;;;;2846:1441;;;4201:74;;;-1:-1:-1;;;4201:74:37;;22826:2:81;4201:74:37;;;22808:21:81;22845:18;;;22838:30;;;;22904:34;22884:18;;;22877:62;22975:34;22955:18;;;22948:62;23027:19;;4201:74:37;22624:428:81;2846:1441:37;-1:-1:-1;;;;;4321:15:37;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4321:21:37;;;;;;;;;4353:34;;4321:21;;:15;4353:34;;4370:3;;4375:11;;4353:34;;:::i;:::-;;;;-1:-1:-1;;4353:34:37;;;;;;;;;4343:45;;4353:34;4343:45;;;;4321:68;;;;;;;;;;-1:-1:-1;4321:68:37;;;;4299:165;;;;-1:-1:-1;;;4299:165:37;;23662:2:81;4299:165:37;;;23644:21:81;23701:2;23681:18;;;23674:30;23740:34;23720:18;;;23713:62;-1:-1:-1;;;23791:18:81;;;23784:45;23846:19;;4299:165:37;23460:411:81;4299:165:37;4484:12;;;4477:19;;-1:-1:-1;;;;;;4477:19:37;;;4514:9;;;4507:16;;-1:-1:-1;;4507:16:37;;;4534:17;-1:-1:-1;4541:10:37;;4484:12;4534:17;:::i;:::-;4562:18;4569:11;;;4562:18;;;-1:-1:-1;;;;;4600:15:37;;;;;;;;;;;;-1:-1:-1;;;;;;4600:21:37;;;;;;;;;4632:34;;4600:21;;4562:18;4632:34;;4649:3;;4654:11;;4632:34;;:::i;:::-;;;;;;;;;;;;;4622:45;;;;;;4600:68;;;;;;;;;;;;4593:75;;;;;;;;;1295:3381;;;:::o;8692:404::-;8751:12;8776:19;8808:1;:8;8819:2;8808:13;;;;:::i;:::-;8798:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8798:24:37;;8776:46;;8838:9;8833:230;8857:1;:8;8853:1;:12;8833:230;;;8887:9;8899:1;8901;8899:4;;;;;;;;:::i;:::-;;;;;;;8887:16;;9035:1;9029;9025:2;9021:10;9017:2;9013:19;9005:6;9001:32;8994:43;8975:77;8867:3;;;;;:::i;:::-;;;;8833:230;;8372:312;8450:7;8470:11;8494;8519:2;8508:1;:8;:13;:29;;8529:1;:8;8508:29;;;8524:2;8508:29;8494:43;;8553:9;8548:108;8572:3;8568:1;:7;8548:108;;;8638:5;:1;8642;8638:5;:::i;:::-;8612:1;8614:10;8623:1;8614:6;:10;:::i;:::-;8612:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;8612:13:37;8604:40;;8597:47;;;;;8577:3;;;;:::i;:::-;;;;8548:108;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:720:81:-;79:5;132:3;125:4;117:6;113:17;109:27;99:55;;150:1;147;140:12;99:55;179:6;173:13;205:4;228:18;224:2;221:26;218:52;;;250:18;;:::i;:::-;296:2;293:1;289:10;319:28;343:2;339;335:11;319:28;:::i;:::-;381:15;;;412:12;;;;444:15;;;478;;;474:24;;471:33;-1:-1:-1;468:53:81;;;517:1;514;507:12;468:53;539:1;530:10;;549:156;563:2;560:1;557:9;549:156;;;620:10;;608:23;;581:1;574:9;;;;;651:12;;;;683;;549:156;;;-1:-1:-1;723:5:81;14:720;-1:-1:-1;;;;;;;14:720:81:o;739:164::-;815:13;;864;;857:21;847:32;;837:60;;893:1;890;883:12;908:163;986:13;;1039:6;1028:18;;1018:29;;1008:57;;1061:1;1058;1051:12;1076:251;1146:6;1199:2;1187:9;1178:7;1174:23;1170:32;1167:52;;;1215:1;1212;1205:12;1167:52;1247:9;1241:16;1266:31;1291:5;1266:31;:::i;1332:614::-;1461:6;1469;1522:2;1510:9;1501:7;1497:23;1493:32;1490:52;;;1538:1;1535;1528:12;1490:52;1571:9;1565:16;1600:18;1641:2;1633:6;1630:14;1627:34;;;1657:1;1654;1647:12;1627:34;1680:72;1744:7;1735:6;1724:9;1720:22;1680:72;:::i;:::-;1670:82;;1798:2;1787:9;1783:18;1777:25;1761:41;;1827:2;1817:8;1814:16;1811:36;;;1843:1;1840;1833:12;1811:36;;1866:74;1932:7;1921:8;1910:9;1906:24;1866:74;:::i;:::-;1856:84;;;1332:614;;;;;:::o;1951:202::-;2018:6;2071:2;2059:9;2050:7;2046:23;2042:32;2039:52;;;2087:1;2084;2077:12;2039:52;2110:37;2137:9;2110:37;:::i;2158:184::-;2228:6;2281:2;2269:9;2260:7;2256:23;2252:32;2249:52;;;2297:1;2294;2287:12;2249:52;-1:-1:-1;2320:16:81;;2158:184;-1:-1:-1;2158:184:81:o;2347:706::-;2427:6;2480:2;2468:9;2459:7;2455:23;2451:32;2448:52;;;2496:1;2493;2486:12;2448:52;2529:9;2523:16;2558:18;2599:2;2591:6;2588:14;2585:34;;;2615:1;2612;2605:12;2585:34;2653:6;2642:9;2638:22;2628:32;;2698:7;2691:4;2687:2;2683:13;2679:27;2669:55;;2720:1;2717;2710:12;2669:55;2749:2;2743:9;2771:2;2767;2764:10;2761:36;;;2777:18;;:::i;:::-;2819:53;2862:2;2843:13;;-1:-1:-1;;2839:27:81;2868:2;2835:36;2819:53;:::i;:::-;2806:66;;2895:2;2888:5;2881:17;2935:7;2930:2;2925;2921;2917:11;2913:20;2910:33;2907:53;;;2956:1;2953;2946:12;2907:53;2969:54;3020:2;3015;3008:5;3004:14;2999:2;2995;2991:11;2969:54;:::i;:::-;-1:-1:-1;3042:5:81;2347:706;-1:-1:-1;;;;2347:706:81:o;3058:903::-;3172:6;3180;3188;3196;3204;3212;3220;3273:3;3261:9;3252:7;3248:23;3244:33;3241:53;;;3290:1;3287;3280:12;3241:53;3322:9;3316:16;3341:31;3366:5;3341:31;:::i;:::-;3391:5;3381:15;;;3441:2;3430:9;3426:18;3420:25;3490:7;3487:1;3476:22;3467:7;3464:35;3454:63;;3513:1;3510;3503:12;3454:63;3536:7;-1:-1:-1;3562:48:81;3606:2;3591:18;;3562:48;:::i;:::-;3552:58;;3629:48;3673:2;3662:9;3658:18;3629:48;:::i;:::-;3619:58;;3696:49;3740:3;3729:9;3725:19;3696:49;:::i;:::-;3686:59;;3790:3;3779:9;3775:19;3769:26;3839:4;3830:7;3826:18;3817:7;3814:31;3804:59;;3859:1;3856;3849:12;3804:59;3882:7;-1:-1:-1;3908:47:81;3950:3;3935:19;;3908:47;:::i;:::-;3898:57;;3058:903;;;;;;;;;;:::o;3966:180::-;4025:6;4078:2;4066:9;4057:7;4053:23;4049:32;4046:52;;;4094:1;4091;4084:12;4046:52;-1:-1:-1;4117:23:81;;3966:180;-1:-1:-1;3966:180:81:o;4457:616::-;4509:3;4547:5;4541:12;4574:6;4569:3;4562:19;4600:4;4641:2;4636:3;4632:12;4666:11;4693;4686:18;;4743:6;4740:1;4736:14;4729:5;4725:26;4713:38;;4785:2;4778:5;4774:14;4806:1;4816:231;4830:6;4827:1;4824:13;4816:231;;;4901:5;4895:4;4891:16;4886:3;4879:29;4929:38;4962:4;4953:6;4947:13;4929:38;:::i;:::-;5025:12;;;;4921:46;-1:-1:-1;4990:15:81;;;;4852:1;4845:9;4816:231;;;-1:-1:-1;5063:4:81;;4457:616;-1:-1:-1;;;;;;;4457:616:81:o;5078:469::-;5139:3;5177:5;5171:12;5204:6;5199:3;5192:19;5230:4;5259:2;5254:3;5250:12;5243:19;;5281:5;5278:1;5271:16;5323:2;5320:1;5310:16;5344:1;5354:168;5368:6;5365:1;5362:13;5354:168;;;5429:13;;5417:26;;5463:12;;;;5510:1;5498:14;;;;5383:9;5354:168;;;-1:-1:-1;5538:3:81;;5078:469;-1:-1:-1;;;;;5078:469:81:o;5552:258::-;5594:3;5632:5;5626:12;5659:6;5654:3;5647:19;5675:63;5731:6;5724:4;5719:3;5715:14;5708:4;5701:5;5697:16;5675:63;:::i;:::-;5792:2;5771:15;-1:-1:-1;;5767:29:81;5758:39;;;;5799:4;5754:50;;5552:258;-1:-1:-1;;5552:258:81:o;6143:610::-;6389:13;;6332:3;;6363;;6442:4;6469:15;;;6332:3;6512:175;6526:6;6523:1;6520:13;6512:175;;;6589:13;;6575:28;;6625:14;;;;6662:15;;;;6548:1;6541:9;6512:175;;;-1:-1:-1;;6696:21:81;;;-1:-1:-1;6733:14:81;;;;;-1:-1:-1;;;6143:610:81:o;6758:371::-;-1:-1:-1;;;;;;6943:33:81;;6931:46;;7000:13;;6913:3;;7022:61;7000:13;7072:1;7063:11;;7056:4;7044:17;;7022:61;:::i;:::-;7103:16;;;;7121:1;7099:24;;6758:371;-1:-1:-1;;;6758:371:81:o;7134:274::-;7263:3;7301:6;7295:13;7317:53;7363:6;7358:3;7351:4;7343:6;7339:17;7317:53;:::i;:::-;7386:16;;;;;7134:274;-1:-1:-1;;7134:274:81:o;9756:::-;-1:-1:-1;;;;;9948:32:81;;;;9930:51;;10012:2;9997:18;;9990:34;9918:2;9903:18;;9756:274::o;10035:345::-;-1:-1:-1;;;;;10255:32:81;;;;10237:51;;10319:2;10304:18;;10297:34;;;;10362:2;10347:18;;10340:34;10225:2;10210:18;;10035:345::o;10385:442::-;-1:-1:-1;;;;;10632:32:81;;;;10614:51;;-1:-1:-1;;;;;;10701:33:81;;;;10696:2;10681:18;;10674:61;10766:2;10751:18;;10744:34;10809:2;10794:18;;10787:34;10601:3;10586:19;;10385:442::o;12721:658::-;12892:2;12944:21;;;13014:13;;12917:18;;;13036:22;;;12863:4;;12892:2;13115:15;;;;13089:2;13074:18;;;12863:4;13158:195;13172:6;13169:1;13166:13;13158:195;;;13237:13;;-1:-1:-1;;;;;13233:39:81;13221:52;;13328:15;;;;13293:12;;;;13269:1;13187:9;13158:195;;;-1:-1:-1;13370:3:81;;12721:658;-1:-1:-1;;;;;;12721:658:81:o;13384:280::-;13583:2;13572:9;13565:21;13546:4;13603:55;13654:2;13643:9;13639:18;13631:6;13603:55;:::i;13669:1077::-;13875:4;13904:2;13944;13933:9;13929:18;13974:2;13963:9;13956:21;13997:6;14032;14026:13;14063:6;14055;14048:22;14089:2;14079:12;;14122:2;14111:9;14107:18;14100:25;;14184:2;14174:6;14171:1;14167:14;14156:9;14152:30;14148:39;14222:2;14214:6;14210:15;14243:1;14253:464;14267:6;14264:1;14261:13;14253:464;;;14332:22;;;-1:-1:-1;;14328:36:81;14316:49;;14388:13;;14433:9;;-1:-1:-1;;;;;14429:35:81;14414:51;;14504:11;;14498:18;14536:15;;;14529:27;;;14579:58;14621:15;;;14498:18;14579:58;:::i;:::-;14695:12;;;;14569:68;-1:-1:-1;;14660:15:81;;;;14289:1;14282:9;14253:464;;;-1:-1:-1;14734:6:81;;13669:1077;-1:-1:-1;;;;;;;;13669:1077:81:o;14751:1569::-;14955:4;14984:2;15024;15013:9;15009:18;15054:2;15043:9;15036:21;15077:6;15112;15106:13;15143:6;15135;15128:22;15169:2;15159:12;;15202:2;15191:9;15187:18;15180:25;;15264:2;15254:6;15251:1;15247:14;15236:9;15232:30;15228:39;15302:2;15294:6;15290:15;15323:1;15344;15354:937;15370:6;15365:3;15362:15;15354:937;;;15439:22;;;-1:-1:-1;;15435:36:81;15423:49;;15495:13;;15582:9;;-1:-1:-1;;;;;15578:35:81;15563:51;;15653:11;;15647:18;15685:15;;;15678:27;;;15766:19;;15535:15;;;15798:24;;;15888:21;;;;15933:1;;15856:2;15844:15;;;15947:236;15963:8;15958:3;15955:17;15947:236;;;16044:15;;-1:-1:-1;;;;;;16040:42:81;16026:57;;16152:17;;;;15991:1;15982:11;;;;;16109:14;;;;15947:236;;;-1:-1:-1;16269:12:81;;;;16206:5;-1:-1:-1;;;16234:15:81;;;;15396:1;15387:11;15354:937;;;-1:-1:-1;16308:6:81;;14751:1569;-1:-1:-1;;;;;;;;;14751:1569:81:o;16517:1141::-;16834:4;16882:3;16871:9;16867:19;16913:6;16902:9;16895:25;16939:2;16977:3;16972:2;16961:9;16957:18;16950:31;17001:6;17036;17030:13;17067:6;17059;17052:22;17105:3;17094:9;17090:19;17083:26;;17128:6;17125:1;17118:17;17171:2;17168:1;17158:16;17144:30;;17192:1;17202:194;17216:6;17213:1;17210:13;17202:194;;;17281:13;;-1:-1:-1;;;;;17277:39:81;17265:52;;17313:1;17372:14;;;;17337:12;;;;17231:9;17202:194;;;17206:3;;17441:9;17436:3;17432:19;17427:2;17416:9;17412:18;17405:47;17475:49;17520:3;17512:6;17475:49;:::i;:::-;17461:63;;;;17572:9;17564:6;17560:22;17555:2;17544:9;17540:18;17533:50;17600:52;17645:6;17637;17600:52;:::i;:::-;17592:60;16517:1141;-1:-1:-1;;;;;;;16517:1141:81:o;20890:220::-;21039:2;21028:9;21021:21;21002:4;21059:45;21100:2;21089:9;21085:18;21077:6;21059:45;:::i;21115:291::-;21292:2;21281:9;21274:21;21255:4;21312:45;21353:2;21342:9;21338:18;21330:6;21312:45;:::i;:::-;21304:53;;21393:6;21388:2;21377:9;21373:18;21366:34;21115:291;;;;;:::o;21411:1208::-;21520:4;21549:2;21578;21567:9;21560:21;21601:1;21634:6;21628:13;21664:3;21686:1;21714:9;21710:2;21706:18;21696:28;;21774:2;21763:9;21759:18;21796;21786:61;;21840:4;21832:6;21828:17;21818:27;;21786:61;21893:2;21885:6;21882:14;21862:18;21859:38;21856:165;;;-1:-1:-1;;;21920:33:81;;21976:4;21973:1;21966:15;22006:4;21927:3;21994:17;21856:165;22088:18;;;30914:19;;;30966:4;30957:14;22131:18;22158:100;;;;22272:1;22267:326;;;;22124:469;;22158:100;-1:-1:-1;;22191:24:81;;22179:37;;22236:12;;;;-1:-1:-1;22158:100:81;;22267:326;30763:1;30756:14;;;30800:4;30787:18;;22373:1;22387:165;22401:6;22398:1;22395:13;22387:165;;;22479:14;;22466:11;;;22459:35;22522:16;;;;22416:10;;22387:165;;;22572:11;;;-1:-1:-1;;22124:469:81;-1:-1:-1;22610:3:81;;21411:1208;-1:-1:-1;;;;;;;;;21411:1208:81:o;23876:556::-;24078:2;24060:21;;;24117:3;24097:18;;;24090:31;24157:34;24152:2;24137:18;;24130:62;24228:34;24223:2;24208:18;;24201:62;24300:34;24294:3;24279:19;;24272:63;-1:-1:-1;;;24366:3:81;24351:19;;24344:46;24422:3;24407:19;;23876:556::o;25248:374::-;25478:2;25467:9;25460:21;25441:4;25498:49;25543:2;25532:9;25528:18;5892:2;5880:15;;-1:-1:-1;;;5920:4:81;5911:14;;5904:36;5965:2;5956:12;;5815:159;25498:49;-1:-1:-1;;;;;25583:32:81;;;;25578:2;25563:18;;;;25556:60;;;;-1:-1:-1;25490:57:81;25248:374::o;25627:440::-;25877:2;25866:9;25859:21;25840:4;25903:49;25948:2;25937:9;25933:18;5892:2;5880:15;;-1:-1:-1;;;5920:4:81;5911:14;;5904:36;5965:2;5956:12;;5815:159;25903:49;26000:9;25992:6;25988:22;25983:2;25972:9;25968:18;25961:50;26028:33;26054:6;26046;26028:33;:::i;:::-;26020:41;25627:440;-1:-1:-1;;;;25627:440:81:o;26072:348::-;26302:2;26291:9;26284:21;26265:4;26322:49;26367:2;26356:9;26352:18;5892:2;5880:15;;-1:-1:-1;;;5920:4:81;5911:14;;5904:36;5965:2;5956:12;;5815:159;26322:49;26314:57;;26407:6;26402:2;26391:9;26387:18;26380:34;26072:348;;;;:::o;26425:1452::-;27030:3;27042:21;;;27099:2;27079:18;;;27072:30;-1:-1:-1;;;27133:3:81;27118:19;;27111:45;27175:3;27209:4;27194:20;;27187:32;;;27255:1;27235:18;;;27228:29;-1:-1:-1;;;27288:3:81;27273:19;;27266:35;27368:2;27353:18;;27346:34;;;-1:-1:-1;;;;;4414:31:81;;27439:2;27424:18;;4402:44;27333:3;27318:19;;27480:6;27474:3;27463:9;27459:19;27452:35;27496:55;27546:3;27535:9;27531:19;27523:6;-1:-1:-1;;;;;4414:31:81;4402:44;;4340:112;27496:55;-1:-1:-1;;;;;4414:31:81;;;27610:3;27595:19;;4402:44;4414:31;;;27674:3;27659:19;;4402:44;4414:31;;;27738:3;27723:19;;4402:44;4414:31;;;27802:3;27787:19;;4402:44;4414:31;;;27866:3;27851:19;;;4402:44;;;;26425:1452;;-1:-1:-1;;;;26425:1452:81:o;27882:374::-;28112:2;28101:9;28094:21;28075:4;28132:49;28177:2;28166:9;28162:18;6056:2;6044:15;;-1:-1:-1;;;6084:4:81;6075:14;;6068:36;6129:2;6120:12;;5979:159;28261:440;28511:2;28500:9;28493:21;28474:4;28537:49;28582:2;28571:9;28567:18;6056:2;6044:15;;-1:-1:-1;;;6084:4:81;6075:14;;6068:36;6129:2;6120:12;;5979:159;28706:348;28936:2;28925:9;28918:21;28899:4;28956:49;29001:2;28990:9;28986:18;6056:2;6044:15;;-1:-1:-1;;;6084:4:81;6075:14;;6068:36;6129:2;6120:12;;5979:159;29059:795;29346:13;;-1:-1:-1;;;;;29342:22:81;;;29324:41;;29425:4;29413:17;;;29407:24;29403:33;;29381:20;;;29374:63;29497:4;29485:17;;;29479:24;29505:8;29475:39;29453:20;;;29446:69;29575:4;29563:17;;;29557:24;29553:33;;29531:20;;;29524:63;29643:4;29631:17;;;29625:24;29603:20;;;29596:54;29304:3;29694:17;;;29688:24;29666:20;;;29659:54;29769:4;29757:17;;;29751:24;29729:20;;;29722:54;29836:4;29824:17;;;29818:24;29814:33;29792:20;;;29785:63;;;;29273:3;29258:19;;29059:795::o;30399:275::-;30470:2;30464:9;30535:2;30516:13;;-1:-1:-1;;30512:27:81;30500:40;;30570:18;30555:34;;30591:22;;;30552:62;30549:88;;;30617:18;;:::i;:::-;30653:2;30646:22;30399:275;;-1:-1:-1;30399:275:81:o;30982:128::-;31022:3;31053:1;31049:6;31046:1;31043:13;31040:39;;;31059:18;;:::i;:::-;-1:-1:-1;31095:9:81;;30982:128::o;31115:168::-;31155:7;31221:1;31217;31213:6;31209:14;31206:1;31203:21;31198:1;31191:9;31184:17;31180:45;31177:71;;;31228:18;;:::i;:::-;-1:-1:-1;31268:9:81;;31115:168::o;31288:258::-;31360:1;31370:113;31384:6;31381:1;31378:13;31370:113;;;31460:11;;;31454:18;31441:11;;;31434:39;31406:2;31399:10;31370:113;;;31501:6;31498:1;31495:13;31492:48;;;-1:-1:-1;;31536:1:81;31518:16;;31511:27;31288:258::o;31551:380::-;31630:1;31626:12;;;;31673;;;31694:61;;31748:4;31740:6;31736:17;31726:27;;31694:61;31801:2;31793:6;31790:14;31770:18;31767:38;31764:161;;;31847:10;31842:3;31838:20;31835:1;31828:31;31882:4;31879:1;31872:15;31910:4;31907:1;31900:15;31764:161;;31551:380;;;:::o;31936:135::-;31975:3;-1:-1:-1;;31996:17:81;;31993:43;;;32016:18;;:::i;:::-;-1:-1:-1;32063:1:81;32052:13;;31936:135::o;32076:127::-;32137:10;32132:3;32128:20;32125:1;32118:31;32168:4;32165:1;32158:15;32192:4;32189:1;32182:15;32208:127;32269:10;32264:3;32260:20;32257:1;32250:31;32300:4;32297:1;32290:15;32324:4;32321:1;32314:15;32340:127;32401:10;32396:3;32392:20;32389:1;32382:31;32432:4;32429:1;32422:15;32456:4;32453:1;32446:15;32472:131;-1:-1:-1;;;;;32547:31:81;;32537:42;;32527:70;;32593:1;32590;32583:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BNB()": "58f7f6d2",
    "BONE()": "c36596a6",
    "BabyDoge()": "d1a72ed6",
    "CURVE()": "3a3c3b87",
    "DAI()": "e0bab4c4",
    "ELON()": "2fab7aea",
    "FLOKI()": "2f9f8c13",
    "FactoryV2()": "d5bfbe4c",
    "FactoryV3()": "c2867f20",
    "HarryPotterObamaSonic10Inu()": "0fb405b7",
    "IS_TEST()": "fa7626d4",
    "LEASH()": "ad39e5fd",
    "LINK()": "1b6b6d23",
    "MEME()": "2e7b0948",
    "PEPE()": "e4fbaecb",
    "QUOTER()": "8dae88c2",
    "SHIB()": "e24b85e7",
    "SwapRouterV2()": "ce2da055",
    "SwapRouterV3()": "d1a3925a",
    "UNI()": "541bcb76",
    "WBTC()": "4dede3de",
    "WETH9()": "4aa4a4fc",
    "WSM()": "5725a977",
    "WXRP()": "d8280a7e",
    "assetList(uint256)": "a0b4b301",
    "dai()": "f4b9fa75",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "factory()": "c45a0155",
    "factoryV3()": "1d5f45f5",
    "failed()": "ba414fa6",
    "indexToken()": "e7d015f2",
    "initializeAssetList()": "e1497cff",
    "oracle()": "7dc0d1d0",
    "quoter()": "c6bbd5a7",
    "setUp()": "0a9254e4",
    "swapRouter()": "c31c9c07",
    "swapVersions(uint256)": "5b718560",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testBlock()": "38d6c81c",
    "testGetPrice()": "2a888735",
    "testInitialized()": "0e7628c6",
    "testIssuanceWithEth()": "85f65a27",
    "testIssuanceWithTokens()": "5cc6f954",
    "testOracleList()": "39c66af1",
    "testSwap()": "6e008a03",
    "tokenShares(uint256)": "3ae64e0c",
    "updateOracleList()": "95d5772d",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeRatePerDayScaled\",\"type\":\"uint256\"}],\"name\":\"FeeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"methodologist\",\"type\":\"address\"}],\"name\":\"MethodologistSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"methodology\",\"type\":\"string\"}],\"name\":\"MethodologySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintFeeToReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"SupplyCeilingSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRestricted\",\"type\":\"bool\"}],\"name\":\"ToggledRestricted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BabyDoge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CURVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ELON\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLOKI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FactoryV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FactoryV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HarryPotterObamaSonic10Inu\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEASH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MEME\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PEPE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHIB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SwapRouterV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SwapRouterV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WSM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WXRP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IndexFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryV3\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexToken\",\"outputs\":[{\"internalType\":\"contract IndexToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeAssetList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract MockApiOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"contract IQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"swapVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIssuanceWithEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIssuanceWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOracleList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwap\",\"outputs\":[{\"internalType\":\"contract TestSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateOracleList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/IndexTokenFactory.t.sol\":\"CounterTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/chainlink/ChainlinkClient.sol\":{\"keccak256\":\"0x459b2ff354049bb0d7c0b5c76441a150f528904c598d9787ef97229fc18f5caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://195b51d95794bb7a129c8ae3d98e6825d9c68043125cf2a364aa49eae3345599\",\"dweb:/ipfs/QmQGw4VDEbx8ZK6vCosRoVFxPrDHsrbAjkZFqMYQeDgUeh\"]},\"contracts/factory/IndexFactory.sol\":{\"keccak256\":\"0xfc8f4faa402728e395090758cd9b2fa874650b9f04e0ebaf38fba354b197042c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddde801fc1a10cf8bbb774b7461920ae5a4b12b7fa17e9ac972295914db2a4fe\",\"dweb:/ipfs/QmeEfj19jCbcND77ANhgazLb87g7ETEsUnb9Txg1ue5836\"]},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xb039ad91b6085aa9b1339072f5aab0d4c5b66c7cca2b80053f21307feab7e498\",\"urls\":[\"bzz-raw://06e4d0d4f480a233ad0362458c845afc3b3e8e153b6f58161caaa5fc13324e7c\",\"dweb:/ipfs/QmXvm8goJsdoLjWCDNgcFPieSoJm4hvTKmoKtTcbQYHbex\"]},\"contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x90b99057688a80fe2344dc12047db39490b0d3672f32512f308d75e5539e9b22\",\"urls\":[\"bzz-raw://98345e471311762dcd4c8ce954ca448ce798815ad3492746726650acf64eba25\",\"dweb:/ipfs/QmUGPBBvhSgbZCq5Cawt7P5AX38WoYX7f3jKw1SSdsuMhV\"]},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0xf0cf73251d12bc74c7fa4a92fec66bd6e77a0f9c5c76e7dabf4f7145bc9d9ec4\",\"urls\":[\"bzz-raw://71f01e841269fae77e51e1cd725c3a8b514cf0ab8ab77624c48d299db8609ccc\",\"dweb:/ipfs/QmTrabnQ7HpuiBEYxAJZWQE6iHoSf89Ad545SPcHb2CA2W\"]},\"contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x849b51880895815bcfc84b4b660fedae95612f814084860c855d905b3a78830b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://196befeddd2f3fbba1a2f9c84fbb7387180f61ba5c3640d465abfa90be64515e\",\"dweb:/ipfs/QmZkSW6eNZeD9NVTTKeCiPpxY3C4Mf1HHH5BrypaR2Tsif\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2\",\"dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro\"]},\"contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x2a1203a982f477fc8c9e6bf3b9189cd9fcbf75a86a0ceb133b5ade3ff6d464db\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3a45ba66a916cce5f2c897829201cec76cd4670c17d11388d6e7457d641e5981\",\"dweb:/ipfs/QmYJgYx2y98A9TTtkUJ8A66Hu7tcXbRDk7Ng25TWSBW7Yy\"]},\"contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0x77b10716cd03e543440af3d92a68fd0316dc857b232b2fb34f8fea378e6e1f96\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a3663072ea331f7c375c08895045afcd9a847e6e69ee8b5a06c1eed64111baee\",\"dweb:/ipfs/QmQHaLiJSLUqr4ikQUZ9edmbXsLCRo6X881RFxzkpJXMkD\"]},\"contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0x4f65f1f9e253311980d031d85338742939beaeea20d10834b58d397483b6bf01\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4c704da7cec1464a94afd20426bbfcd028f98b49d6337e412db9a29e04159e8\",\"dweb:/ipfs/QmdYWeGzeLuab75RaHLLxy9Lwwy5RjTX76zcEXgCBgsgMr\"]},\"contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x35ad671af6dc4e1826e4cfc95eeee7d05b41222c91ff0f930f14f90d6b67bad3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9437fe522a4c239b74577e7c1c124d1dda2fc5876c9ff2d3447d38de7aec00ce\",\"dweb:/ipfs/QmaDhDyuo1uANPDwUDsfQtW2pFqeFic7ujaSStbG1fMJPc\"]},\"contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x3987c968f344c38ffe2c6722a96fa813829850b75dee91ac3ca840d19778f08b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d46c695389a8354d6ae853575d111b146e2ad4462dd9547b51951dfdb926fe37\",\"dweb:/ipfs/QmVLPideqDGYxf8jTEhSMGg5R6HZW3pApE5t9wQHJwADw8\"]},\"contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x6cbc7997317eeeb1556f3eb2dfc3687c6e59a8b50a9603d755501fd9eccdada4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e52777a66fedc4c3448cbabe8885ae8daeeac42ce4705cdec9bd667f7804306\",\"dweb:/ipfs/QmVZ9dRCj56rK9ZgesKAQap6bDRKdEsVeRv64Si42LV5Pk\"]},\"contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x9e87b8eb3ac1e7ab4eca0054217e265cc67d13d583e2645d4dfcd35b91889c79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea51e01a588bfb14c1377e430382ceca2926961e4e9d20f8d0eb8f4c423bb20c\",\"dweb:/ipfs/QmcvQ4bt7xuMFoKXKLs5jQPt6Z1nru4k1sBX5eA4A1G67T\"]},\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x98f8df4eeddbeffac13b91aee976d9bccb7a866be8073f55b13f95b214ba5afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1987e919bd75258c05cbaa691545a7555f09c664d1f657749ce19309ec2ab4d4\",\"dweb:/ipfs/Qmdx9e4wVAR94Ej9qM1FRHDZ6WBgXHRpJBwozwZAuVpnUF\"]},\"contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0x7efc566f04b02c84ddcafc4a8ec134f099a255b5d3f54afc7b49fe16a7818252\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9871cbac1a4a3159c75a7279134dc15b01b63b5975f40df5e151cbd72187b944\",\"dweb:/ipfs/QmZaDg41mATrwyevdFCpvASkn36xi5vmCJ14L6L8h3Wxjo\"]},\"contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x37d79844cca46b38abf4c0969567c731c2c6ac2d98f65ea44bfcd6e32f3a7f0f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c76e3fdae638dc2b08fc53eddf614a679660f16d5b544c9c2f31420741c773c3\",\"dweb:/ipfs/Qmcwd8jd2yhEjr6tDPAcWdZcUKSKx4BXnksGgcNc2xLjkm\"]},\"contracts/proposable/ProposableOwnableUpgradeable.sol\":{\"keccak256\":\"0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65\",\"dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72\"]},\"contracts/test/LinkToken.sol\":{\"keccak256\":\"0xac1b483b01db9f5f20d76d1deb5a75e1f454ef9048d04817576236468b0e3884\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9417c186bfb06c004f421ae5efec185063076c0bb729a7e00a9fab9839d33010\",\"dweb:/ipfs/QmRw6aekTLJjscgM79JcyY5hjv4LH8o2Ng8cErMAdeDbMV\"]},\"contracts/test/MockApiOracle.sol\":{\"keccak256\":\"0x41773ec7b1ff0a7e132034d1eb1eacd8c9494e9e90ddeb2cc8d6ea0174e1c278\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38e65e87565ed9aa3cad5a66981993fc1c2671a89a7c9f39dd113b6c715849a2\",\"dweb:/ipfs/Qmbq7oc6awYvrFJxGx754xe1ttAeoVp2yntQ8SKaLhAN3G\"]},\"contracts/test/MockV3Aggregator.sol\":{\"keccak256\":\"0x7fc96b521298f9ad72fec0208a98435da1f02d821626f54313ca50fd544a55db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07a0f2e7c5c51605c298bfdf9487740566a9686b304362d6c73c6dd5396d67fc\",\"dweb:/ipfs/QmPg2GY3xjCZtZHqGWsdTEpHTB9o73CLRhz8XM48Pjqfj9\"]},\"contracts/test/TestSwap.sol\":{\"keccak256\":\"0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b\",\"dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW\"]},\"contracts/test/libs/LinkTokenReceiver.sol\":{\"keccak256\":\"0x221baf5efeb32e9f0eceebb7556d1e94f0677e0432da0beac17c1bdec6aa04c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb5d72ba9a4472100ef3755a64e7516726344f1b499b934994c96df0d3d0001\",\"dweb:/ipfs/QmVGYdMSyi3oKx5QkU8q9ELUyv9Y7QE8erandAVSf9PG6L\"]},\"contracts/test/libs/SafeMathChainlink.sol\":{\"keccak256\":\"0x60cb79389647fba9e6aac2be7a4995c78839546e5dd9b73b5c4c9b0beb30f882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c83d59e05254c95818f00663ae174fd084697613477a83925f750165d8983d3a\",\"dweb:/ipfs/QmetcPnpPG4WUT397ggx6fXJLMNp8pKb24jagPXKUDvUhW\"]},\"contracts/token/IndexToken.sol\":{\"keccak256\":\"0xa4a770d03c8d38588b118f33f4a9e4bd145c97362a0e54c3c5e2756ccf0dbc50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21aa9ce1ff3c34f4ee4af1c5282fca9669569b5255ed023287579794032738cd\",\"dweb:/ipfs/QmfJ9W5jUx3CKEiNy7aRL4Wa56dBHSzS2KZPW6KKN5U1mT\"]},\"contracts/token/TokenInterface.sol\":{\"keccak256\":\"0xf928abf1e7c62da780bd92fcfe85320afa6be336e3cd9c83a5da901dc2ecd710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://512f00a70ce82640a62c6a7684e21cc43f09f2d6b7ca0251225fc54128e7d41c\",\"dweb:/ipfs/QmQGr9drQxgSb1LXyB6LGJGB3HagthFoUZzXP5y2DruX71\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3\",\"dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731\",\"dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a\",\"dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f\",\"dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c\",\"dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a\",\"dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254\",\"dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f\",\"dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc\",\"dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1\",\"dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh\"]},\"node_modules/@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fbfa4cee3ce9fe3f5be6eda7e3304263d77b514be0bf5fadffa24d3f654ad2d\",\"dweb:/ipfs/QmTQmA4AJ9NookAyTg9DP6Mem6X8WSHJ5WjQJvqhE8K9qV\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a\",\"dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40958fa820d41025822fe423111c74d5b8d0dfe1a30ae4fba4f6896a55fc2868\",\"dweb:/ipfs/QmbwYCM5k6h43T6qQV8DEpUxv5uErVSTCD6Fqm5DMLDgNi\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ed9275abc614a37a13f86c148f3a4341d955a6b52a1a655357505e0926caab\",\"dweb:/ipfs/Qmaqgq3HiakdSBAe9NtGXYMxVFBjTkLbzyiiyjJUJ1g1M3\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8fbc2ccf2b3dfc8249306b7dc63624a4ec6f6ee43649d631f7363710c763b6\",\"dweb:/ipfs/QmePqh8R8EZMygYkawshsWArTrVA8VCdamLGV6ZZsVJgTz\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ec80973bbc95f59ce3a46aadd7761df6e4131bda14a01a265d76a8e007dd5d\",\"dweb:/ipfs/QmXwhsxjbkuXSHu6SX6tZxrQCXrdnJ4o2M7b3yFSgcWR1f\"]},\"node_modules/@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol\":{\"keccak256\":\"0x7a5ac06d48ad507a441c8de5f813765f3beed7fb47aa88b26ad34c020ea0c644\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecae51d09e8cb28f7d12203a3fdf44254a73ad9e95074d763a4803bd7a1c3f43\",\"dweb:/ipfs/QmayV4kJPUg5eVUw9N3HyJCzuS2SR5N6299j8Krc2RJH38\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88cb96caa94128821daec5478c0f3646902007b81a0604b2e3ab79ea2f40b056\",\"dweb:/ipfs/Qmd1nu9CpgouPmukNQpZThxKgPZAayXxqBfwbDVHfMrCrF\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d47a793b314afe9cd82fcf05ffe4ebbfa5504c2decc83004edbb3b2069d4f0c3\",\"dweb:/ipfs/Qmd2YLSiS8xeeXqireh6qJgTTwVY2VscZpv2cQBU8gkEJT\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63b50d13ca97c4dd62738398bb2e423a36563b827b0af94c0e7a47cf0d4a2e6b\",\"dweb:/ipfs/QmXjy7BmtnPeCLMaMnGGnsxDPGxohfDpYzP8PnUoh6gBGa\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"test/foundry/IndexTokenFactory.t.sol\":{\"keccak256\":\"0xdd800ae06cb4e93632ddc3611c04b9de6836b1098c2e83a1bf225e7e9ee83ed3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c8948c589f5cfbe8755c4fb560957f42ae9631ec248700191ebf030adbfd0d04\",\"dweb:/ipfs/QmUhJghSuQKM2YH6QGEUdrqsgFD8j7xnQZ9FM3zNUPaUro\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "feeRatePerDayScaled",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeRateSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeReceiverSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "methodologist",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MethodologistSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "methodology",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MethodologySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintFeeToReceiver",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MinterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supplyCeiling",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupplyCeilingSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isRestricted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ToggledRestricted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BNB",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BONE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BabyDoge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CURVE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ELON",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FLOKI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FactoryV2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FactoryV3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HarryPotterObamaSonic10Inu",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LEASH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LINK",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MEME",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PEPE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SHIB",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SwapRouterV2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SwapRouterV3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UNI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WBTC",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WSM",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WXRP",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetList",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dai",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "contract IndexFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryV3",
          "outputs": [
            {
              "internalType": "contract IUniswapV3Factory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "indexToken",
          "outputs": [
            {
              "internalType": "contract IndexToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeAssetList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "contract MockApiOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quoter",
          "outputs": [
            {
              "internalType": "contract IQuoter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "swapVersions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBlock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetPrice"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIssuanceWithEth"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIssuanceWithTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOracleList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testSwap",
          "outputs": [
            {
              "internalType": "contract TestSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOracleList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/IndexTokenFactory.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/chainlink/ChainlinkClient.sol": {
        "keccak256": "0x459b2ff354049bb0d7c0b5c76441a150f528904c598d9787ef97229fc18f5caf",
        "urls": [
          "bzz-raw://195b51d95794bb7a129c8ae3d98e6825d9c68043125cf2a364aa49eae3345599",
          "dweb:/ipfs/QmQGw4VDEbx8ZK6vCosRoVFxPrDHsrbAjkZFqMYQeDgUeh"
        ],
        "license": "MIT"
      },
      "contracts/factory/IndexFactory.sol": {
        "keccak256": "0xfc8f4faa402728e395090758cd9b2fa874650b9f04e0ebaf38fba354b197042c",
        "urls": [
          "bzz-raw://ddde801fc1a10cf8bbb774b7461920ae5a4b12b7fa17e9ac972295914db2a4fe",
          "dweb:/ipfs/QmeEfj19jCbcND77ANhgazLb87g7ETEsUnb9Txg1ue5836"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IUniswapV2Factory.sol": {
        "keccak256": "0xb039ad91b6085aa9b1339072f5aab0d4c5b66c7cca2b80053f21307feab7e498",
        "urls": [
          "bzz-raw://06e4d0d4f480a233ad0362458c845afc3b3e8e153b6f58161caaa5fc13324e7c",
          "dweb:/ipfs/QmXvm8goJsdoLjWCDNgcFPieSoJm4hvTKmoKtTcbQYHbex"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV2Router01.sol": {
        "keccak256": "0x90b99057688a80fe2344dc12047db39490b0d3672f32512f308d75e5539e9b22",
        "urls": [
          "bzz-raw://98345e471311762dcd4c8ce954ca448ce798815ad3492746726650acf64eba25",
          "dweb:/ipfs/QmUGPBBvhSgbZCq5Cawt7P5AX38WoYX7f3jKw1SSdsuMhV"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV2Router02.sol": {
        "keccak256": "0xf0cf73251d12bc74c7fa4a92fec66bd6e77a0f9c5c76e7dabf4f7145bc9d9ec4",
        "urls": [
          "bzz-raw://71f01e841269fae77e51e1cd725c3a8b514cf0ab8ab77624c48d299db8609ccc",
          "dweb:/ipfs/QmTrabnQ7HpuiBEYxAJZWQE6iHoSf89Ad545SPcHb2CA2W"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x849b51880895815bcfc84b4b660fedae95612f814084860c855d905b3a78830b",
        "urls": [
          "bzz-raw://196befeddd2f3fbba1a2f9c84fbb7387180f61ba5c3640d465abfa90be64515e",
          "dweb:/ipfs/QmZkSW6eNZeD9NVTTKeCiPpxY3C4Mf1HHH5BrypaR2Tsif"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9",
        "urls": [
          "bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2",
          "dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x2a1203a982f477fc8c9e6bf3b9189cd9fcbf75a86a0ceb133b5ade3ff6d464db",
        "urls": [
          "bzz-raw://3a45ba66a916cce5f2c897829201cec76cd4670c17d11388d6e7457d641e5981",
          "dweb:/ipfs/QmYJgYx2y98A9TTtkUJ8A66Hu7tcXbRDk7Ng25TWSBW7Yy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0x77b10716cd03e543440af3d92a68fd0316dc857b232b2fb34f8fea378e6e1f96",
        "urls": [
          "bzz-raw://a3663072ea331f7c375c08895045afcd9a847e6e69ee8b5a06c1eed64111baee",
          "dweb:/ipfs/QmQHaLiJSLUqr4ikQUZ9edmbXsLCRo6X881RFxzkpJXMkD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0x4f65f1f9e253311980d031d85338742939beaeea20d10834b58d397483b6bf01",
        "urls": [
          "bzz-raw://c4c704da7cec1464a94afd20426bbfcd028f98b49d6337e412db9a29e04159e8",
          "dweb:/ipfs/QmdYWeGzeLuab75RaHLLxy9Lwwy5RjTX76zcEXgCBgsgMr"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x35ad671af6dc4e1826e4cfc95eeee7d05b41222c91ff0f930f14f90d6b67bad3",
        "urls": [
          "bzz-raw://9437fe522a4c239b74577e7c1c124d1dda2fc5876c9ff2d3447d38de7aec00ce",
          "dweb:/ipfs/QmaDhDyuo1uANPDwUDsfQtW2pFqeFic7ujaSStbG1fMJPc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0x3987c968f344c38ffe2c6722a96fa813829850b75dee91ac3ca840d19778f08b",
        "urls": [
          "bzz-raw://d46c695389a8354d6ae853575d111b146e2ad4462dd9547b51951dfdb926fe37",
          "dweb:/ipfs/QmVLPideqDGYxf8jTEhSMGg5R6HZW3pApE5t9wQHJwADw8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x6cbc7997317eeeb1556f3eb2dfc3687c6e59a8b50a9603d755501fd9eccdada4",
        "urls": [
          "bzz-raw://6e52777a66fedc4c3448cbabe8885ae8daeeac42ce4705cdec9bd667f7804306",
          "dweb:/ipfs/QmVZ9dRCj56rK9ZgesKAQap6bDRKdEsVeRv64Si42LV5Pk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x9e87b8eb3ac1e7ab4eca0054217e265cc67d13d583e2645d4dfcd35b91889c79",
        "urls": [
          "bzz-raw://ea51e01a588bfb14c1377e430382ceca2926961e4e9d20f8d0eb8f4c423bb20c",
          "dweb:/ipfs/QmcvQ4bt7xuMFoKXKLs5jQPt6Z1nru4k1sBX5eA4A1G67T"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FullMath.sol": {
        "keccak256": "0x98f8df4eeddbeffac13b91aee976d9bccb7a866be8073f55b13f95b214ba5afb",
        "urls": [
          "bzz-raw://1987e919bd75258c05cbaa691545a7555f09c664d1f657749ce19309ec2ab4d4",
          "dweb:/ipfs/Qmdx9e4wVAR94Ej9qM1FRHDZ6WBgXHRpJBwozwZAuVpnUF"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0x7efc566f04b02c84ddcafc4a8ec134f099a255b5d3f54afc7b49fe16a7818252",
        "urls": [
          "bzz-raw://9871cbac1a4a3159c75a7279134dc15b01b63b5975f40df5e151cbd72187b944",
          "dweb:/ipfs/QmZaDg41mATrwyevdFCpvASkn36xi5vmCJ14L6L8h3Wxjo"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/TickMath.sol": {
        "keccak256": "0x37d79844cca46b38abf4c0969567c731c2c6ac2d98f65ea44bfcd6e32f3a7f0f",
        "urls": [
          "bzz-raw://c76e3fdae638dc2b08fc53eddf614a679660f16d5b544c9c2f31420741c773c3",
          "dweb:/ipfs/Qmcwd8jd2yhEjr6tDPAcWdZcUKSKx4BXnksGgcNc2xLjkm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/proposable/ProposableOwnableUpgradeable.sol": {
        "keccak256": "0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70",
        "urls": [
          "bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65",
          "dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72"
        ],
        "license": "MIT"
      },
      "contracts/test/LinkToken.sol": {
        "keccak256": "0xac1b483b01db9f5f20d76d1deb5a75e1f454ef9048d04817576236468b0e3884",
        "urls": [
          "bzz-raw://9417c186bfb06c004f421ae5efec185063076c0bb729a7e00a9fab9839d33010",
          "dweb:/ipfs/QmRw6aekTLJjscgM79JcyY5hjv4LH8o2Ng8cErMAdeDbMV"
        ],
        "license": "MIT"
      },
      "contracts/test/MockApiOracle.sol": {
        "keccak256": "0x41773ec7b1ff0a7e132034d1eb1eacd8c9494e9e90ddeb2cc8d6ea0174e1c278",
        "urls": [
          "bzz-raw://38e65e87565ed9aa3cad5a66981993fc1c2671a89a7c9f39dd113b6c715849a2",
          "dweb:/ipfs/Qmbq7oc6awYvrFJxGx754xe1ttAeoVp2yntQ8SKaLhAN3G"
        ],
        "license": "MIT"
      },
      "contracts/test/MockV3Aggregator.sol": {
        "keccak256": "0x7fc96b521298f9ad72fec0208a98435da1f02d821626f54313ca50fd544a55db",
        "urls": [
          "bzz-raw://07a0f2e7c5c51605c298bfdf9487740566a9686b304362d6c73c6dd5396d67fc",
          "dweb:/ipfs/QmPg2GY3xjCZtZHqGWsdTEpHTB9o73CLRhz8XM48Pjqfj9"
        ],
        "license": "MIT"
      },
      "contracts/test/TestSwap.sol": {
        "keccak256": "0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3",
        "urls": [
          "bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b",
          "dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/libs/LinkTokenReceiver.sol": {
        "keccak256": "0x221baf5efeb32e9f0eceebb7556d1e94f0677e0432da0beac17c1bdec6aa04c0",
        "urls": [
          "bzz-raw://dfb5d72ba9a4472100ef3755a64e7516726344f1b499b934994c96df0d3d0001",
          "dweb:/ipfs/QmVGYdMSyi3oKx5QkU8q9ELUyv9Y7QE8erandAVSf9PG6L"
        ],
        "license": "MIT"
      },
      "contracts/test/libs/SafeMathChainlink.sol": {
        "keccak256": "0x60cb79389647fba9e6aac2be7a4995c78839546e5dd9b73b5c4c9b0beb30f882",
        "urls": [
          "bzz-raw://c83d59e05254c95818f00663ae174fd084697613477a83925f750165d8983d3a",
          "dweb:/ipfs/QmetcPnpPG4WUT397ggx6fXJLMNp8pKb24jagPXKUDvUhW"
        ],
        "license": "MIT"
      },
      "contracts/token/IndexToken.sol": {
        "keccak256": "0xa4a770d03c8d38588b118f33f4a9e4bd145c97362a0e54c3c5e2756ccf0dbc50",
        "urls": [
          "bzz-raw://21aa9ce1ff3c34f4ee4af1c5282fca9669569b5255ed023287579794032738cd",
          "dweb:/ipfs/QmfJ9W5jUx3CKEiNy7aRL4Wa56dBHSzS2KZPW6KKN5U1mT"
        ],
        "license": "MIT"
      },
      "contracts/token/TokenInterface.sol": {
        "keccak256": "0xf928abf1e7c62da780bd92fcfe85320afa6be336e3cd9c83a5da901dc2ecd710",
        "urls": [
          "bzz-raw://512f00a70ce82640a62c6a7684e21cc43f09f2d6b7ca0251225fc54128e7d41c",
          "dweb:/ipfs/QmQGr9drQxgSb1LXyB6LGJGB3HagthFoUZzXP5y2DruX71"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261",
        "urls": [
          "bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379",
          "dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e",
        "urls": [
          "bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3",
          "dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc",
        "urls": [
          "bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731",
          "dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52",
        "urls": [
          "bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a",
          "dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb",
        "urls": [
          "bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f",
          "dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04",
        "urls": [
          "bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c",
          "dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417",
        "urls": [
          "bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a",
          "dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357",
        "urls": [
          "bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254",
          "dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a",
        "urls": [
          "bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f",
          "dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a",
        "urls": [
          "bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc",
          "dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb",
        "urls": [
          "bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4",
          "dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb",
        "urls": [
          "bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1",
          "dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/Chainlink.sol": {
        "keccak256": "0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105",
        "urls": [
          "bzz-raw://6fbfa4cee3ce9fe3f5be6eda7e3304263d77b514be0bf5fadffa24d3f654ad2d",
          "dweb:/ipfs/QmTQmA4AJ9NookAyTg9DP6Mem6X8WSHJ5WjQJvqhE8K9qV"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol": {
        "keccak256": "0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04",
        "urls": [
          "bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a",
          "dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol": {
        "keccak256": "0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0",
        "urls": [
          "bzz-raw://40958fa820d41025822fe423111c74d5b8d0dfe1a30ae4fba4f6896a55fc2868",
          "dweb:/ipfs/QmbwYCM5k6h43T6qQV8DEpUxv5uErVSTCD6Fqm5DMLDgNi"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
        "keccak256": "0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5",
        "urls": [
          "bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd",
          "dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol": {
        "keccak256": "0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68",
        "urls": [
          "bzz-raw://b6ed9275abc614a37a13f86c148f3a4341d955a6b52a1a655357505e0926caab",
          "dweb:/ipfs/Qmaqgq3HiakdSBAe9NtGXYMxVFBjTkLbzyiiyjJUJ1g1M3"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol": {
        "keccak256": "0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a",
        "urls": [
          "bzz-raw://ba8fbc2ccf2b3dfc8249306b7dc63624a4ec6f6ee43649d631f7363710c763b6",
          "dweb:/ipfs/QmePqh8R8EZMygYkawshsWArTrVA8VCdamLGV6ZZsVJgTz"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol": {
        "keccak256": "0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7",
        "urls": [
          "bzz-raw://12ec80973bbc95f59ce3a46aadd7761df6e4131bda14a01a265d76a8e007dd5d",
          "dweb:/ipfs/QmXwhsxjbkuXSHu6SX6tZxrQCXrdnJ4o2M7b3yFSgcWR1f"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol": {
        "keccak256": "0x7a5ac06d48ad507a441c8de5f813765f3beed7fb47aa88b26ad34c020ea0c644",
        "urls": [
          "bzz-raw://ecae51d09e8cb28f7d12203a3fdf44254a73ad9e95074d763a4803bd7a1c3f43",
          "dweb:/ipfs/QmayV4kJPUg5eVUw9N3HyJCzuS2SR5N6299j8Krc2RJH38"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol": {
        "keccak256": "0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d",
        "urls": [
          "bzz-raw://88cb96caa94128821daec5478c0f3646902007b81a0604b2e3ab79ea2f40b056",
          "dweb:/ipfs/Qmd1nu9CpgouPmukNQpZThxKgPZAayXxqBfwbDVHfMrCrF"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol": {
        "keccak256": "0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48",
        "urls": [
          "bzz-raw://d47a793b314afe9cd82fcf05ffe4ebbfa5504c2decc83004edbb3b2069d4f0c3",
          "dweb:/ipfs/Qmd2YLSiS8xeeXqireh6qJgTTwVY2VscZpv2cQBU8gkEJT"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol": {
        "keccak256": "0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d",
        "urls": [
          "bzz-raw://63b50d13ca97c4dd62738398bb2e423a36563b827b0af94c0e7a47cf0d4a2e6b",
          "dweb:/ipfs/QmXjy7BmtnPeCLMaMnGGnsxDPGxohfDpYzP8PnUoh6gBGa"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": {
        "keccak256": "0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff",
        "urls": [
          "bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417",
          "dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/IndexTokenFactory.t.sol": {
        "keccak256": "0xdd800ae06cb4e93632ddc3611c04b9de6836b1098c2e83a1bf225e7e9ee83ed3",
        "urls": [
          "bzz-raw://c8948c589f5cfbe8755c4fb560957f42ae9631ec248700191ebf030adbfd0d04",
          "dweb:/ipfs/QmUhJghSuQKM2YH6QGEUdrqsgFD8j7xnQZ9FM3zNUPaUro"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/IndexTokenFactory.t.sol",
    "id": 7895,
    "exportedSymbols": {
      "AddressUpgradeable": [
        4525
      ],
      "AggregatorInterface": [
        59192
      ],
      "AggregatorV2V3Interface": [
        58981
      ],
      "AggregatorV3Interface": [
        59238
      ],
      "BufferChainlink": [
        58486
      ],
      "CBORChainlink": [
        58933
      ],
      "Chainlink": [
        12500
      ],
      "ChainlinkClient": [
        8731
      ],
      "ChainlinkRequestInterface": [
        12533
      ],
      "Context": [
        13873
      ],
      "ContextUpgradeable": [
        4567
      ],
      "CounterTest": [
        7894
      ],
      "DSTest": [
        16617
      ],
      "ENSInterface": [
        12613
      ],
      "ENSResolver_Chainlink": [
        12806
      ],
      "ERC20": [
        11933
      ],
      "ERC20Upgradeable": [
        4092
      ],
      "ERC677": [
        10097
      ],
      "ERC677Receiver": [
        10108
      ],
      "ERC677Token": [
        10201
      ],
      "FullMath": [
        13291
      ],
      "IERC20": [
        9544
      ],
      "IERC20Metadata": [
        57964
      ],
      "IERC20MetadataUpgradeable": [
        4195
      ],
      "IERC20Upgradeable": [
        4170
      ],
      "IQuoter": [
        9684
      ],
      "ISwapRouter": [
        9784
      ],
      "IUniswapV2Factory": [
        8743
      ],
      "IUniswapV2Router01": [
        13114
      ],
      "IUniswapV2Router02": [
        8831
      ],
      "IUniswapV3Factory": [
        9627
      ],
      "IUniswapV3Pool": [
        11252
      ],
      "IUniswapV3PoolActions": [
        57587
      ],
      "IUniswapV3PoolDerivedState": [
        57618
      ],
      "IUniswapV3PoolErrors": [
        57646
      ],
      "IUniswapV3PoolEvents": [
        57765
      ],
      "IUniswapV3PoolImmutables": [
        57805
      ],
      "IUniswapV3PoolOwnerActions": [
        57831
      ],
      "IUniswapV3PoolState": [
        57939
      ],
      "IUniswapV3SwapCallback": [
        13851
      ],
      "IWETH": [
        8848
      ],
      "IndexFactory": [
        1859
      ],
      "IndexToken": [
        2903
      ],
      "Initializable": [
        3353
      ],
      "LinkERC20": [
        10241
      ],
      "LinkToken": [
        10342
      ],
      "LinkTokenInterface": [
        12708
      ],
      "LinkTokenReceiver": [
        13980
      ],
      "MockApiOracle": [
        11166
      ],
      "MockV3Aggregator": [
        14325
      ],
      "OperatorInterface": [
        12788
      ],
      "OracleInterface": [
        58972
      ],
      "OracleLibrary": [
        9466
      ],
      "OwnableUpgradeable": [
        3184
      ],
      "PausableUpgradeable": [
        3480
      ],
      "PointerInterface": [
        12796
      ],
      "ProposableOwnableUpgradeable": [
        1998
      ],
      "SafeMathChainlink": [
        14119
      ],
      "StdAssertions": [
        18110
      ],
      "StdChains": [
        18874
      ],
      "StdCheats": [
        21727
      ],
      "StdInvariant": [
        22052
      ],
      "StdStorage": [
        22818
      ],
      "StdStyle": [
        25668
      ],
      "StdUtils": [
        26516
      ],
      "Test": [
        11220
      ],
      "TestBase": [
        16683
      ],
      "TestSwap": [
        11346
      ],
      "TickMath": [
        13837
      ],
      "TokenInterface": [
        3052
      ],
      "TransferHelper": [
        9955
      ],
      "Vm": [
        28227
      ],
      "console": [
        36291
      ],
      "console2": [
        44416
      ],
      "safeconsole": [
        57491
      ],
      "stdError": [
        21793
      ],
      "stdJson": [
        22644
      ],
      "stdMath": [
        22786
      ],
      "stdStorage": [
        24457
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:16105:79",
    "nodes": [
      {
        "id": 6578,
        "nodeType": "PragmaDirective",
        "src": "40:23:79",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 6579,
        "nodeType": "ImportDirective",
        "src": "67:28:79",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 11221,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6580,
        "nodeType": "ImportDirective",
        "src": "97:46:79",
        "nodes": [],
        "absolutePath": "contracts/token/IndexToken.sol",
        "file": "../../contracts/token/IndexToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 2904,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6581,
        "nodeType": "ImportDirective",
        "src": "145:50:79",
        "nodes": [],
        "absolutePath": "contracts/factory/IndexFactory.sol",
        "file": "../../contracts/factory/IndexFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 1860,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6582,
        "nodeType": "ImportDirective",
        "src": "197:43:79",
        "nodes": [],
        "absolutePath": "contracts/test/TestSwap.sol",
        "file": "../../contracts/test/TestSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 11347,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6583,
        "nodeType": "ImportDirective",
        "src": "242:55:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 11934,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6584,
        "nodeType": "ImportDirective",
        "src": "299:55:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 11934,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6585,
        "nodeType": "ImportDirective",
        "src": "356:68:79",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 9785,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6586,
        "nodeType": "ImportDirective",
        "src": "426:70:79",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 9956,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6587,
        "nodeType": "ImportDirective",
        "src": "498:64:79",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 9685,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6588,
        "nodeType": "ImportDirective",
        "src": "564:51:79",
        "nodes": [],
        "absolutePath": "contracts/test/MockV3Aggregator.sol",
        "file": "../../contracts/test/MockV3Aggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 11170,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6589,
        "nodeType": "ImportDirective",
        "src": "617:48:79",
        "nodes": [],
        "absolutePath": "contracts/test/MockApiOracle.sol",
        "file": "../../contracts/test/MockApiOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 11167,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6590,
        "nodeType": "ImportDirective",
        "src": "667:44:79",
        "nodes": [],
        "absolutePath": "contracts/test/LinkToken.sol",
        "file": "../../contracts/test/LinkToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 10344,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6591,
        "nodeType": "ImportDirective",
        "src": "713:55:79",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IUniswapV3Pool.sol",
        "file": "../../contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7895,
        "sourceUnit": 11253,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7894,
        "nodeType": "ContractDefinition",
        "src": "772:15373:79",
        "nodes": [
          {
            "id": 6597,
            "nodeType": "UsingForDirective",
            "src": "810:32:79",
            "nodes": [],
            "libraryName": {
              "id": 6594,
              "name": "stdStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24457,
              "src": "816:10:79"
            },
            "typeName": {
              "id": 6596,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6595,
                "name": "StdStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22818,
                "src": "831:10:79"
              },
              "referencedDeclaration": 22818,
              "src": "831:10:79",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 6600,
            "nodeType": "VariableDeclaration",
            "src": "850:39:79",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SCALAR",
            "nameLocation": "876:6:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6598,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "850:7:79",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653230",
              "id": 6599,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "885:4:79",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "1e20"
            },
            "visibility": "internal"
          },
          {
            "id": 6603,
            "nodeType": "VariableDeclaration",
            "src": "898:28:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "e7d015f2",
            "mutability": "mutable",
            "name": "indexToken",
            "nameLocation": "916:10:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexToken_$2903",
              "typeString": "contract IndexToken"
            },
            "typeName": {
              "id": 6602,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6601,
                "name": "IndexToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2903,
                "src": "898:10:79"
              },
              "referencedDeclaration": 2903,
              "src": "898:10:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexToken_$2903",
                "typeString": "contract IndexToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6606,
            "nodeType": "VariableDeclaration",
            "src": "933:27:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "c45a0155",
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "953:7:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexFactory_$1859",
              "typeString": "contract IndexFactory"
            },
            "typeName": {
              "id": 6605,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6604,
                "name": "IndexFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1859,
                "src": "933:12:79"
              },
              "referencedDeclaration": 1859,
              "src": "933:12:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexFactory_$1859",
                "typeString": "contract IndexFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6609,
            "nodeType": "VariableDeclaration",
            "src": "967:24:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "6e008a03",
            "mutability": "mutable",
            "name": "testSwap",
            "nameLocation": "983:8:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestSwap_$11346",
              "typeString": "contract TestSwap"
            },
            "typeName": {
              "id": 6608,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6607,
                "name": "TestSwap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11346,
                "src": "967:8:79"
              },
              "referencedDeclaration": 11346,
              "src": "967:8:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestSwap_$11346",
                "typeString": "contract TestSwap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6611,
            "nodeType": "VariableDeclaration",
            "src": "1000:19:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mainnetFork",
            "nameLocation": "1008:11:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6610,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1000:7:79",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6617,
            "nodeType": "VariableDeclaration",
            "src": "1028:32:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "feeReceiver",
            "nameLocation": "1036:11:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6612,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1028:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 6615,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1058:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "expression": {
                  "id": 6613,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16676,
                  "src": "1050:2:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$28227",
                    "typeString": "contract Vm"
                  }
                },
                "id": 6614,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 26587,
                "src": "1050:7:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 6616,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1050:10:79",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6623,
            "nodeType": "VariableDeclaration",
            "src": "1067:35:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newFeeReceiver",
            "nameLocation": "1075:14:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6618,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1067:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "32",
                  "id": 6621,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1100:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  }
                ],
                "expression": {
                  "id": 6619,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16676,
                  "src": "1092:2:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$28227",
                    "typeString": "contract Vm"
                  }
                },
                "id": 6620,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 26587,
                "src": "1092:7:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 6622,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1092:10:79",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6629,
            "nodeType": "VariableDeclaration",
            "src": "1109:27:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "1117:6:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6624,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1109:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "33",
                  "id": 6627,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1134:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  }
                ],
                "expression": {
                  "id": 6625,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16676,
                  "src": "1126:2:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$28227",
                    "typeString": "contract Vm"
                  }
                },
                "id": 6626,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 26587,
                "src": "1126:7:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 6628,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1126:10:79",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6635,
            "nodeType": "VariableDeclaration",
            "src": "1143:30:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newMinter",
            "nameLocation": "1151:9:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6630,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1143:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "34",
                  "id": 6633,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1171:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  },
                  "value": "4"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  }
                ],
                "expression": {
                  "id": 6631,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16676,
                  "src": "1163:2:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$28227",
                    "typeString": "contract Vm"
                  }
                },
                "id": 6632,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 26587,
                "src": "1163:7:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 6634,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1163:10:79",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6641,
            "nodeType": "VariableDeclaration",
            "src": "1180:34:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "methodologist",
            "nameLocation": "1188:13:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6636,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1180:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "35",
                  "id": 6639,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1212:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  },
                  "value": "5"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  }
                ],
                "expression": {
                  "id": 6637,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16676,
                  "src": "1204:2:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$28227",
                    "typeString": "contract Vm"
                  }
                },
                "id": 6638,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 26587,
                "src": "1204:7:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 6640,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1204:10:79",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6647,
            "nodeType": "VariableDeclaration",
            "src": "1221:26:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1229:5:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6642,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1221:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "36",
                  "id": 6645,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1245:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  }
                ],
                "expression": {
                  "id": 6643,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16676,
                  "src": "1237:2:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$28227",
                    "typeString": "contract Vm"
                  }
                },
                "id": 6644,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 26587,
                "src": "1237:7:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 6646,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1237:10:79",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6653,
            "nodeType": "VariableDeclaration",
            "src": "1254:25:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "add1",
            "nameLocation": "1262:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6648,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1254:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "37",
                  "id": 6651,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1277:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_7_by_1",
                    "typeString": "int_const 7"
                  },
                  "value": "7"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_7_by_1",
                    "typeString": "int_const 7"
                  }
                ],
                "expression": {
                  "id": 6649,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16676,
                  "src": "1269:2:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$28227",
                    "typeString": "contract Vm"
                  }
                },
                "id": 6650,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 26587,
                "src": "1269:7:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 6652,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1269:10:79",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6656,
            "nodeType": "VariableDeclaration",
            "src": "1288:72:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "e0bab4c4",
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "1312:3:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6654,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1288:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 6655,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1318:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "id": 6662,
            "nodeType": "VariableDeclaration",
            "src": "1538:116:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "1d5f45f5",
            "mutability": "constant",
            "name": "factoryV3",
            "nameLocation": "1572:9:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Factory_$9627",
              "typeString": "contract IUniswapV3Factory"
            },
            "typeName": {
              "id": 6658,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6657,
                "name": "IUniswapV3Factory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9627,
                "src": "1538:17:79"
              },
              "referencedDeclaration": 9627,
              "src": "1538:17:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Factory_$9627",
                "typeString": "contract IUniswapV3Factory"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
                  "id": 6660,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1611:42:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 6659,
                "name": "IUniswapV3Factory",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 9627,
                "src": "1593:17:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$9627_$",
                  "typeString": "type(contract IUniswapV3Factory)"
                }
              },
              "id": 6661,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1593:61:79",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Factory_$9627",
                "typeString": "contract IUniswapV3Factory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6665,
            "nodeType": "VariableDeclaration",
            "src": "1667:64:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "e24b85e7",
            "mutability": "mutable",
            "name": "SHIB",
            "nameLocation": "1682:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6663,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1667:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839356144363162306131353064373932313964434636344531453643633031663042363443346345",
              "id": 6664,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1689:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE"
            },
            "visibility": "public"
          },
          {
            "id": 6668,
            "nodeType": "VariableDeclaration",
            "src": "1738:73:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "e4fbaecb",
            "mutability": "constant",
            "name": "PEPE",
            "nameLocation": "1762:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6666,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1738:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836393832353038313435343534436533323564446245343761323564346563336432333131393333",
              "id": 6667,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1769:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6982508145454Ce325dDbE47a25d4ec3d2311933"
            },
            "visibility": "public"
          },
          {
            "id": 6671,
            "nodeType": "VariableDeclaration",
            "src": "1818:74:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "2f9f8c13",
            "mutability": "constant",
            "name": "FLOKI",
            "nameLocation": "1842:5:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6669,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1818:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863663043313232633662373366663830394336393344423736316537426165426536326236613245",
              "id": 6670,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1850:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xcf0C122c6b73ff809C693DB761e7BaeBe62b6a2E"
            },
            "visibility": "public"
          },
          {
            "id": 6674,
            "nodeType": "VariableDeclaration",
            "src": "1899:73:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "2e7b0948",
            "mutability": "constant",
            "name": "MEME",
            "nameLocation": "1923:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6672,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1899:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862313331663441353539303742313064314630413530643861623846413039454333343263643734",
              "id": 6673,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1930:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb131f4A55907B10d1F0A50d8ab8FA09EC342cd74"
            },
            "visibility": "public"
          },
          {
            "id": 6677,
            "nodeType": "VariableDeclaration",
            "src": "1979:77:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "d1a72ed6",
            "mutability": "constant",
            "name": "BabyDoge",
            "nameLocation": "2003:8:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6675,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1979:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841433537446539433141303946654336343845393345423938383735423231324442306434363042",
              "id": 6676,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2014:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xAC57De9C1A09FeC648E93EB98875B212DB0d460B"
            },
            "visibility": "public"
          },
          {
            "id": 6680,
            "nodeType": "VariableDeclaration",
            "src": "2063:73:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "c36596a6",
            "mutability": "constant",
            "name": "BONE",
            "nameLocation": "2087:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6678,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2063:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839383133303337656532323138373939353937643833443461354236463362363737383231386439",
              "id": 6679,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2094:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x9813037ee2218799597d83D4a5B6F3b6778218d9"
            },
            "visibility": "public"
          },
          {
            "id": 6683,
            "nodeType": "VariableDeclaration",
            "src": "2143:95:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "0fb405b7",
            "mutability": "constant",
            "name": "HarryPotterObamaSonic10Inu",
            "nameLocation": "2167:26:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6681,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2143:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837326534663946383038433439413261363164453943353839363239383932304463344545456139",
              "id": 6682,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2196:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x72e4f9F808C49A2a61dE9C5896298920Dc4EEEa9"
            },
            "visibility": "public"
          },
          {
            "id": 6686,
            "nodeType": "VariableDeclaration",
            "src": "2245:73:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "2fab7aea",
            "mutability": "constant",
            "name": "ELON",
            "nameLocation": "2269:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6684,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2245:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837363144333865356464663663636636436637633535373539643532313037353042354436304633",
              "id": 6685,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2276:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x761D38e5ddf6ccf6Cf7c55759d5210750B5D60F3"
            },
            "visibility": "public"
          },
          {
            "id": 6689,
            "nodeType": "VariableDeclaration",
            "src": "2325:72:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "5725a977",
            "mutability": "constant",
            "name": "WSM",
            "nameLocation": "2349:3:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6687,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2325:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307842363245343563334466363131646345323336413644646337413439336437394639444661644566",
              "id": 6688,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2355:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xB62E45c3Df611dcE236A6Ddc7A493d79F9DFadEf"
            },
            "visibility": "public"
          },
          {
            "id": 6692,
            "nodeType": "VariableDeclaration",
            "src": "2404:74:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "ad39e5fd",
            "mutability": "constant",
            "name": "LEASH",
            "nameLocation": "2428:5:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6690,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2404:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832374337304364313934363739354236366265396439353434313835343639393862353436363334",
              "id": 6691,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2436:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x27C70Cd1946795B66be9d954418546998b546634"
            },
            "visibility": "public"
          },
          {
            "id": 6695,
            "nodeType": "VariableDeclaration",
            "src": "2487:73:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "4dede3de",
            "mutability": "constant",
            "name": "WBTC",
            "nameLocation": "2511:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6693,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2487:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832323630464143354535353432613737334161343466424366654466374331393362633243353939",
              "id": 6694,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2518:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"
            },
            "visibility": "public"
          },
          {
            "id": 6698,
            "nodeType": "VariableDeclaration",
            "src": "2567:72:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "58f7f6d2",
            "mutability": "constant",
            "name": "BNB",
            "nameLocation": "2591:3:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6696,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2567:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834313844373566363561303262334435334232343138464238453166653439333735396337363035",
              "id": 6697,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2597:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x418D75f65a02b3D53B2418FB8E1fe493759c7605"
            },
            "visibility": "public"
          },
          {
            "id": 6701,
            "nodeType": "VariableDeclaration",
            "src": "2646:73:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "d8280a7e",
            "mutability": "constant",
            "name": "WXRP",
            "nameLocation": "2670:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6699,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2646:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831453032453265443133394635426166366266614430346330453631454262303131306441363533",
              "id": 6700,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2677:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1E02E2eD139F5Baf6bfaD04c0E61EBb0110dA653"
            },
            "visibility": "public"
          },
          {
            "id": 6704,
            "nodeType": "VariableDeclaration",
            "src": "2726:74:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "3a3c3b87",
            "mutability": "constant",
            "name": "CURVE",
            "nameLocation": "2750:5:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6702,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2726:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
              "id": 6703,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2758:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
            },
            "visibility": "public"
          },
          {
            "id": 6707,
            "nodeType": "VariableDeclaration",
            "src": "2807:73:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "1b6b6d23",
            "mutability": "constant",
            "name": "LINK",
            "nameLocation": "2831:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6705,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2807:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835313439313037373141463943613635366166383430646666383345383236344563463938364341",
              "id": 6706,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2838:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x514910771AF9Ca656af840dff83E8264EcF986CA"
            },
            "visibility": "public"
          },
          {
            "id": 6710,
            "nodeType": "VariableDeclaration",
            "src": "2887:72:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "541bcb76",
            "mutability": "constant",
            "name": "UNI",
            "nameLocation": "2911:3:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6708,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2887:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831663938343061383564356146356266314431373632463932354244414464433432303146393834",
              "id": 6709,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2917:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984"
            },
            "visibility": "public"
          },
          {
            "id": 6719,
            "nodeType": "VariableDeclaration",
            "src": "2968:312:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0b4b301",
            "mutability": "mutable",
            "name": "assetList",
            "nameLocation": "2985:9:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 6711,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2968:7:79",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 6712,
              "nodeType": "ArrayTypeName",
              "src": "2968:9:79",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": {
              "components": [
                {
                  "id": 6713,
                  "name": "WBTC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6695,
                  "src": "3008:4:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 6714,
                  "name": "BNB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6698,
                  "src": "3023:3:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 6715,
                  "name": "CURVE",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6704,
                  "src": "3037:5:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 6716,
                  "name": "LINK",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6707,
                  "src": "3053:4:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 6717,
                  "name": "UNI",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6710,
                  "src": "3068:3:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "id": 6718,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "2997:283:79",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                "typeString": "address[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6728,
            "nodeType": "VariableDeclaration",
            "src": "3289:209:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "3ae64e0c",
            "mutability": "mutable",
            "name": "tokenShares",
            "nameLocation": "3303:11:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 6720,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3289:4:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 6721,
              "nodeType": "ArrayTypeName",
              "src": "3289:6:79",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "3230653138",
                  "id": 6722,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3328:5:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 6723,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3344:5:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 6724,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3360:5:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 6725,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3376:5:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 6726,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3392:5:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                }
              ],
              "id": 6727,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "3317:181:79",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint72_$5_memory_ptr",
                "typeString": "uint72[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6737,
            "nodeType": "VariableDeclaration",
            "src": "3507:243:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "5b718560",
            "mutability": "mutable",
            "name": "swapVersions",
            "nameLocation": "3521:12:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 6729,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3507:4:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 6730,
              "nodeType": "ArrayTypeName",
              "src": "3507:6:79",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "33",
                  "id": 6731,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3547:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 6732,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3559:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 6733,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3571:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 6734,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3583:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 6735,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3595:1:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "id": 6736,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "3536:214:79",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
                "typeString": "uint8[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6743,
            "nodeType": "VariableDeclaration",
            "src": "3759:105:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "c31c9c07",
            "mutability": "constant",
            "name": "swapRouter",
            "nameLocation": "3787:10:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$9784",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 6739,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6738,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9784,
                "src": "3759:11:79"
              },
              "referencedDeclaration": 9784,
              "src": "3759:11:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$9784",
                "typeString": "contract ISwapRouter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                  "id": 6741,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3821:42:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 6740,
                "name": "ISwapRouter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 9784,
                "src": "3809:11:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$9784_$",
                  "typeString": "type(contract ISwapRouter)"
                }
              },
              "id": 6742,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3809:55:79",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$9784",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6746,
            "nodeType": "VariableDeclaration",
            "src": "3877:74:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "mutability": "constant",
            "name": "WETH9",
            "nameLocation": "3901:5:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6744,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3877:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 6745,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3909:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "id": 6749,
            "nodeType": "VariableDeclaration",
            "src": "3958:75:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "8dae88c2",
            "mutability": "constant",
            "name": "QUOTER",
            "nameLocation": "3982:6:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6747,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3958:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862323733303866394639304436303734363362623333654131426542623431433237434535414236",
              "id": 6748,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3991:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6"
            },
            "visibility": "public"
          },
          {
            "id": 6752,
            "nodeType": "VariableDeclaration",
            "src": "4040:81:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "d1a3925a",
            "mutability": "constant",
            "name": "SwapRouterV3",
            "nameLocation": "4064:12:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6750,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4040:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
              "id": 6751,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4079:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
            },
            "visibility": "public"
          },
          {
            "id": 6755,
            "nodeType": "VariableDeclaration",
            "src": "4128:78:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "c2867f20",
            "mutability": "constant",
            "name": "FactoryV3",
            "nameLocation": "4152:9:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6753,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4128:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
              "id": 6754,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4164:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
            },
            "visibility": "public"
          },
          {
            "id": 6758,
            "nodeType": "VariableDeclaration",
            "src": "4213:81:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "ce2da055",
            "mutability": "constant",
            "name": "SwapRouterV2",
            "nameLocation": "4237:12:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6756,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4213:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
              "id": 6757,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4252:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
            },
            "visibility": "public"
          },
          {
            "id": 6761,
            "nodeType": "VariableDeclaration",
            "src": "4301:78:79",
            "nodes": [],
            "constant": true,
            "functionSelector": "d5bfbe4c",
            "mutability": "constant",
            "name": "FactoryV2",
            "nameLocation": "4325:9:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6759,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4301:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835433639624565373031656638313461324236613345444434423136353243423963633561413666",
              "id": 6760,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4337:42:79",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
            },
            "visibility": "public"
          },
          {
            "id": 6764,
            "nodeType": "VariableDeclaration",
            "src": "4400:16:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "f4b9fa75",
            "mutability": "mutable",
            "name": "dai",
            "nameLocation": "4413:3:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$11933",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 6763,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6762,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11933,
                "src": "4400:5:79"
              },
              "referencedDeclaration": 11933,
              "src": "4400:5:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11933",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6767,
            "nodeType": "VariableDeclaration",
            "src": "4423:17:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "4436:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$8848",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 6766,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6765,
                "name": "IWETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8848,
                "src": "4423:5:79"
              },
              "referencedDeclaration": 8848,
              "src": "4423:5:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$8848",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6770,
            "nodeType": "VariableDeclaration",
            "src": "4475:21:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "c6bbd5a7",
            "mutability": "mutable",
            "name": "quoter",
            "nameLocation": "4490:6:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IQuoter_$9684",
              "typeString": "contract IQuoter"
            },
            "typeName": {
              "id": 6769,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6768,
                "name": "IQuoter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9684,
                "src": "4475:7:79"
              },
              "referencedDeclaration": 9684,
              "src": "4475:7:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IQuoter_$9684",
                "typeString": "contract IQuoter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6776,
            "nodeType": "VariableDeclaration",
            "src": "4505:56:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "MAINNET_RPC_URL",
            "nameLocation": "4512:15:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6771,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "4505:6:79",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d41494e4e45545f5250435f55524c",
                  "id": 6774,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4543:17:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  },
                  "value": "MAINNET_RPC_URL"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  }
                ],
                "expression": {
                  "id": 6772,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16676,
                  "src": "4530:2:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$28227",
                    "typeString": "contract Vm"
                  }
                },
                "id": 6773,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 26949,
                "src": "4530:12:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 6775,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4530:31:79",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6779,
            "nodeType": "VariableDeclaration",
            "src": "4568:50:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "jobId",
            "nameLocation": "4576:5:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6777,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4568:7:79",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "3662383865303430326535643431356562393436653532386238653063376261",
              "id": 6778,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4584:34:79",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_794b9054b63e56ef5e69b4c8fd259b3f748cccf060a2b76f00f589df40bd78fb",
                "typeString": "literal_string \"6b88e0402e5d415eb946e528b8e0c7ba\""
              },
              "value": "6b88e0402e5d415eb946e528b8e0c7ba"
            },
            "visibility": "internal"
          },
          {
            "id": 6782,
            "nodeType": "VariableDeclaration",
            "src": "4627:27:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "4648:6:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockApiOracle_$11166",
              "typeString": "contract MockApiOracle"
            },
            "typeName": {
              "id": 6781,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6780,
                "name": "MockApiOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11166,
                "src": "4627:13:79"
              },
              "referencedDeclaration": 11166,
              "src": "4627:13:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockApiOracle_$11166",
                "typeString": "contract MockApiOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6785,
            "nodeType": "VariableDeclaration",
            "src": "4661:14:79",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "link",
            "nameLocation": "4671:4:79",
            "scope": 7894,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkToken_$10342",
              "typeString": "contract LinkToken"
            },
            "typeName": {
              "id": 6784,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6783,
                "name": "LinkToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10342,
                "src": "4661:9:79"
              },
              "referencedDeclaration": 10342,
              "src": "4661:9:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkToken_$10342",
                "typeString": "contract LinkToken"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 6789,
            "nodeType": "EventDefinition",
            "src": "4684:50:79",
            "nodes": [],
            "anonymous": false,
            "name": "FeeReceiverSet",
            "nameLocation": "4690:14:79",
            "parameters": {
              "id": 6788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6787,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "4721:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6789,
                  "src": "4705:27:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4705:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4704:29:79"
            }
          },
          {
            "id": 6793,
            "nodeType": "EventDefinition",
            "src": "4740:54:79",
            "nodes": [],
            "anonymous": false,
            "name": "FeeRateSet",
            "nameLocation": "4746:10:79",
            "parameters": {
              "id": 6792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6791,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeRatePerDayScaled",
                  "nameLocation": "4773:19:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6793,
                  "src": "4757:35:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4757:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4756:37:79"
            }
          },
          {
            "id": 6797,
            "nodeType": "EventDefinition",
            "src": "4800:54:79",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologistSet",
            "nameLocation": "4806:16:79",
            "parameters": {
              "id": 6796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6795,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "methodologist",
                  "nameLocation": "4839:13:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6797,
                  "src": "4823:29:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4823:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4822:31:79"
            }
          },
          {
            "id": 6801,
            "nodeType": "EventDefinition",
            "src": "4860:41:79",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologySet",
            "nameLocation": "4866:14:79",
            "parameters": {
              "id": 6800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6799,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "methodology",
                  "nameLocation": "4888:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6801,
                  "src": "4881:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6798,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4881:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4880:20:79"
            }
          },
          {
            "id": 6805,
            "nodeType": "EventDefinition",
            "src": "4907:40:79",
            "nodes": [],
            "anonymous": false,
            "name": "MinterSet",
            "nameLocation": "4913:9:79",
            "parameters": {
              "id": 6804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6803,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "4939:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6805,
                  "src": "4923:22:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4923:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4922:24:79"
            }
          },
          {
            "id": 6809,
            "nodeType": "EventDefinition",
            "src": "4953:46:79",
            "nodes": [],
            "anonymous": false,
            "name": "SupplyCeilingSet",
            "nameLocation": "4959:16:79",
            "parameters": {
              "id": 6808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6807,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supplyCeiling",
                  "nameLocation": "4984:13:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6809,
                  "src": "4976:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4976:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4975:23:79"
            }
          },
          {
            "id": 6819,
            "nodeType": "EventDefinition",
            "src": "5005:101:79",
            "nodes": [],
            "anonymous": false,
            "name": "MintFeeToReceiver",
            "nameLocation": "5011:17:79",
            "parameters": {
              "id": 6818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6811,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "5037:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6819,
                  "src": "5029:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6813,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "5058:9:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6819,
                  "src": "5050:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5050:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6815,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "5077:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6819,
                  "src": "5069:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5069:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6817,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5098:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6819,
                  "src": "5090:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5028:77:79"
            }
          },
          {
            "id": 6825,
            "nodeType": "EventDefinition",
            "src": "5112:68:79",
            "nodes": [],
            "anonymous": false,
            "name": "ToggledRestricted",
            "nameLocation": "5118:17:79",
            "parameters": {
              "id": 6824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6821,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5152:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6825,
                  "src": "5136:23:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5136:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6823,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isRestricted",
                  "nameLocation": "5166:12:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 6825,
                  "src": "5161:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6822,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5161:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5135:44:79"
            }
          },
          {
            "id": 6951,
            "nodeType": "FunctionDefinition",
            "src": "5190:1301:79",
            "nodes": [],
            "body": {
              "id": 6950,
              "nodeType": "Block",
              "src": "5214:1277:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6828,
                      "name": "mainnetFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6611,
                      "src": "5225:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6831,
                          "name": "MAINNET_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6776,
                          "src": "5253:15:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 6829,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16676,
                          "src": "5239:2:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$28227",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 6830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27953,
                        "src": "5239:13:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 6832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5239:30:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5225:44:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6834,
                  "nodeType": "ExpressionStatement",
                  "src": "5225:44:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6838,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6611,
                        "src": "5296:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6835,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16676,
                        "src": "5282:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$28227",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 6837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28016,
                      "src": "5282:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 6839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5282:26:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6840,
                  "nodeType": "ExpressionStatement",
                  "src": "5282:26:79"
                },
                {
                  "expression": {
                    "id": 6846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6841,
                      "name": "link",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6785,
                      "src": "5400:4:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkToken_$10342",
                        "typeString": "contract LinkToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5407:13:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LinkToken_$10342_$",
                          "typeString": "function () returns (contract LinkToken)"
                        },
                        "typeName": {
                          "id": 6843,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6842,
                            "name": "LinkToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 10342,
                            "src": "5411:9:79"
                          },
                          "referencedDeclaration": 10342,
                          "src": "5411:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkToken_$10342",
                            "typeString": "contract LinkToken"
                          }
                        }
                      },
                      "id": 6845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5407:15:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkToken_$10342",
                        "typeString": "contract LinkToken"
                      }
                    },
                    "src": "5400:22:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkToken_$10342",
                      "typeString": "contract LinkToken"
                    }
                  },
                  "id": 6847,
                  "nodeType": "ExpressionStatement",
                  "src": "5400:22:79"
                },
                {
                  "expression": {
                    "id": 6857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6848,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6782,
                      "src": "5433:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockApiOracle_$11166",
                        "typeString": "contract MockApiOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6854,
                              "name": "link",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6785,
                              "src": "5468:4:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkToken_$10342",
                                "typeString": "contract LinkToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LinkToken_$10342",
                                "typeString": "contract LinkToken"
                              }
                            ],
                            "id": 6853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5460:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6852,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5460:7:79",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5460:13:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5442:17:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MockApiOracle_$11166_$",
                          "typeString": "function (address) returns (contract MockApiOracle)"
                        },
                        "typeName": {
                          "id": 6850,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6849,
                            "name": "MockApiOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11166,
                            "src": "5446:13:79"
                          },
                          "referencedDeclaration": 11166,
                          "src": "5446:13:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockApiOracle_$11166",
                            "typeString": "contract MockApiOracle"
                          }
                        }
                      },
                      "id": 6856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5442:32:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockApiOracle_$11166",
                        "typeString": "contract MockApiOracle"
                      }
                    },
                    "src": "5433:41:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockApiOracle_$11166",
                      "typeString": "contract MockApiOracle"
                    }
                  },
                  "id": 6858,
                  "nodeType": "ExpressionStatement",
                  "src": "5433:41:79"
                },
                {
                  "expression": {
                    "id": 6864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6859,
                      "name": "indexToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6603,
                      "src": "5487:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$2903",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5500:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_IndexToken_$2903_$",
                          "typeString": "function () returns (contract IndexToken)"
                        },
                        "typeName": {
                          "id": 6861,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6860,
                            "name": "IndexToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2903,
                            "src": "5504:10:79"
                          },
                          "referencedDeclaration": 2903,
                          "src": "5504:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexToken_$2903",
                            "typeString": "contract IndexToken"
                          }
                        }
                      },
                      "id": 6863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5500:16:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$2903",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "src": "5487:29:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IndexToken_$2903",
                      "typeString": "contract IndexToken"
                    }
                  },
                  "id": 6865,
                  "nodeType": "ExpressionStatement",
                  "src": "5487:29:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416e746920496e666c6174696f6e",
                        "id": 6869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5563:16:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc91b5e2c1c095e17fa21cce3bb4bf4e3f12c19c51ecd9f6cf3cf89a49c428f2",
                          "typeString": "literal_string \"Anti Inflation\""
                        },
                        "value": "Anti Inflation"
                      },
                      {
                        "hexValue": "414e4649",
                        "id": 6870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5594:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_784ef5cf3b103bdcbbdc385d5d143611309cf4293b5afd2549dfc4901f697bcc",
                          "typeString": "literal_string \"ANFI\""
                        },
                        "value": "ANFI"
                      },
                      {
                        "hexValue": "31653138",
                        "id": 6871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5615:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "id": 6872,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6617,
                        "src": "5634:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 6873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5660:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      },
                      {
                        "id": 6874,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6746,
                        "src": "5715:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6875,
                        "name": "QUOTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6749,
                        "src": "5735:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6876,
                        "name": "SwapRouterV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6752,
                        "src": "5756:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6877,
                        "name": "FactoryV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6755,
                        "src": "5783:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6878,
                        "name": "SwapRouterV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6758,
                        "src": "5807:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6879,
                        "name": "FactoryV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6761,
                        "src": "5834:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bc91b5e2c1c095e17fa21cce3bb4bf4e3f12c19c51ecd9f6cf3cf89a49c428f2",
                          "typeString": "literal_string \"Anti Inflation\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_784ef5cf3b103bdcbbdc385d5d143611309cf4293b5afd2549dfc4901f697bcc",
                          "typeString": "literal_string \"ANFI\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6866,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6603,
                        "src": "5527:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$2903",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 6868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2239,
                      "src": "5527:21:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256,address,uint256,address,address,address,address,address,address) external"
                      }
                    },
                    "id": 6880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5527:327:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6881,
                  "nodeType": "ExpressionStatement",
                  "src": "5527:327:79"
                },
                {
                  "expression": {
                    "id": 6887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6882,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6606,
                      "src": "5867:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexFactory_$1859",
                        "typeString": "contract IndexFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5877:16:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_IndexFactory_$1859_$",
                          "typeString": "function () returns (contract IndexFactory)"
                        },
                        "typeName": {
                          "id": 6884,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6883,
                            "name": "IndexFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1859,
                            "src": "5881:12:79"
                          },
                          "referencedDeclaration": 1859,
                          "src": "5881:12:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexFactory_$1859",
                            "typeString": "contract IndexFactory"
                          }
                        }
                      },
                      "id": 6886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5877:18:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexFactory_$1859",
                        "typeString": "contract IndexFactory"
                      }
                    },
                    "src": "5867:28:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IndexFactory_$1859",
                      "typeString": "contract IndexFactory"
                    }
                  },
                  "id": 6888,
                  "nodeType": "ExpressionStatement",
                  "src": "5867:28:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 6896,
                                "name": "indexToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6603,
                                "src": "5955:10:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexToken_$2903",
                                  "typeString": "contract IndexToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexToken_$2903",
                                  "typeString": "contract IndexToken"
                                }
                              ],
                              "id": 6895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5947:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6894,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5947:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5947:19:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5939:8:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 6892,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5939:8:79",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5939:28:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6901,
                            "name": "link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6785,
                            "src": "6018:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkToken_$10342",
                              "typeString": "contract LinkToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkToken_$10342",
                              "typeString": "contract LinkToken"
                            }
                          ],
                          "id": 6900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6010:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6899,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6010:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6010:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6905,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6782,
                            "src": "6046:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockApiOracle_$11166",
                              "typeString": "contract MockApiOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockApiOracle_$11166",
                              "typeString": "contract MockApiOracle"
                            }
                          ],
                          "id": 6904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6038:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6903,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6038:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6038:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6907,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6779,
                        "src": "6068:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 6908,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6746,
                        "src": "6118:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6909,
                        "name": "QUOTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6749,
                        "src": "6138:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6910,
                        "name": "SwapRouterV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6752,
                        "src": "6159:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6911,
                        "name": "FactoryV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6755,
                        "src": "6186:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6912,
                        "name": "SwapRouterV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6758,
                        "src": "6210:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6913,
                        "name": "FactoryV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6761,
                        "src": "6237:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6889,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "5906:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$1859",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 6891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 317,
                      "src": "5906:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address payable,address,address,bytes32,address,address,address,address,address,address) external"
                      }
                    },
                    "id": 6914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5906:351:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6915,
                  "nodeType": "ExpressionStatement",
                  "src": "5906:351:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6921,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "6299:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 6920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6291:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6919,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6291:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6291:16:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6916,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6603,
                        "src": "6270:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$2903",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 6918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2617,
                      "src": "6270:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 6923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6270:38:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6924,
                  "nodeType": "ExpressionStatement",
                  "src": "6270:38:79"
                },
                {
                  "expression": {
                    "id": 6929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6925,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6764,
                      "src": "6352:3:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11933",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6927,
                          "name": "DAI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6656,
                          "src": "6364:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6926,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11933,
                        "src": "6358:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$11933_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 6928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6358:10:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$11933",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "6352:16:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$11933",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 6930,
                  "nodeType": "ExpressionStatement",
                  "src": "6352:16:79"
                },
                {
                  "expression": {
                    "id": 6935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6931,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6767,
                      "src": "6379:4:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$8848",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6933,
                          "name": "WETH9",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6746,
                          "src": "6392:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6932,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8848,
                        "src": "6386:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$8848_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 6934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6386:12:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$8848",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "6379:19:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$8848",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 6936,
                  "nodeType": "ExpressionStatement",
                  "src": "6379:19:79"
                },
                {
                  "expression": {
                    "id": 6941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6937,
                      "name": "quoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6770,
                      "src": "6409:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$9684",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6939,
                          "name": "QUOTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6749,
                          "src": "6426:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6938,
                        "name": "IQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9684,
                        "src": "6418:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IQuoter_$9684_$",
                          "typeString": "type(contract IQuoter)"
                        }
                      },
                      "id": 6940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6418:15:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$9684",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "src": "6409:24:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IQuoter_$9684",
                      "typeString": "contract IQuoter"
                    }
                  },
                  "id": 6942,
                  "nodeType": "ExpressionStatement",
                  "src": "6409:24:79"
                },
                {
                  "expression": {
                    "id": 6948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6943,
                      "name": "testSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6609,
                      "src": "6446:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestSwap_$11346",
                        "typeString": "contract TestSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6457:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestSwap_$11346_$",
                          "typeString": "function () returns (contract TestSwap)"
                        },
                        "typeName": {
                          "id": 6945,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6944,
                            "name": "TestSwap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11346,
                            "src": "6461:8:79"
                          },
                          "referencedDeclaration": 11346,
                          "src": "6461:8:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestSwap_$11346",
                            "typeString": "contract TestSwap"
                          }
                        }
                      },
                      "id": 6947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6457:14:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestSwap_$11346",
                        "typeString": "contract TestSwap"
                      }
                    },
                    "src": "6446:25:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestSwap_$11346",
                      "typeString": "contract TestSwap"
                    }
                  },
                  "id": 6949,
                  "nodeType": "ExpressionStatement",
                  "src": "6446:25:79"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "5199:5:79",
            "parameters": {
              "id": 6826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5204:2:79"
            },
            "returnParameters": {
              "id": 6827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5214:0:79"
            },
            "scope": 7894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7011,
            "nodeType": "FunctionDefinition",
            "src": "6499:475:79",
            "nodes": [],
            "body": {
              "id": 7010,
              "nodeType": "Block",
              "src": "6533:441:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 6955,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "6586:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 6956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3107,
                          "src": "6586:16:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 6957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6586:18:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6960,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6614:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$7894",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$7894",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 6959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6606:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6958,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6606:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6606:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6954,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14646,
                      "src": "6577:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 6962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6577:43:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6963,
                  "nodeType": "ExpressionStatement",
                  "src": "6577:43:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 6965,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "6640:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 6966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRatePerDayScaled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2029,
                          "src": "6640:30:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 6967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6640:32:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 6968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6674:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 6964,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "6631:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 6969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6631:48:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6970,
                  "nodeType": "ExpressionStatement",
                  "src": "6631:48:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 6972,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "6699:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 6973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2031,
                          "src": "6699:23:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 6974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6699:25:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 6975,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6726:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 6976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6726:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6971,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "6690:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 6977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6690:52:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6978,
                  "nodeType": "ExpressionStatement",
                  "src": "6690:52:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 6980,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "6762:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 6981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeReceiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2033,
                          "src": "6762:22:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 6982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6762:24:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6983,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6617,
                        "src": "6788:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6979,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14646,
                      "src": "6753:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 6984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6753:47:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6985,
                  "nodeType": "ExpressionStatement",
                  "src": "6753:47:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 6987,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "6820:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 6988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "methodology",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2039,
                          "src": "6820:22:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 6989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6820:24:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 6990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6846:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 6986,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 16338,
                      "src": "6811:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 6991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6811:38:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6992,
                  "nodeType": "ExpressionStatement",
                  "src": "6811:38:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 6994,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "6869:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 6995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supplyCeiling",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2041,
                          "src": "6869:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 6996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6869:26:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 6997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6897:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "id": 6993,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "6860:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 6998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6860:48:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6999,
                  "nodeType": "ExpressionStatement",
                  "src": "6860:48:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 7001,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "6928:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 7002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2037,
                          "src": "6928:17:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 7003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6928:19:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7006,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "6957:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 7005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6949:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7004,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6949:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6949:16:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7000,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14646,
                      "src": "6919:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6919:47:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7009,
                  "nodeType": "ExpressionStatement",
                  "src": "6919:47:79"
                }
              ]
            },
            "functionSelector": "0e7628c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialized",
            "nameLocation": "6508:15:79",
            "parameters": {
              "id": 6952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6523:2:79"
            },
            "returnParameters": {
              "id": 6953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6533:0:79"
            },
            "scope": 7894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7014,
            "nodeType": "EnumDefinition",
            "src": "6982:64:79",
            "nodes": [],
            "canonicalName": "CounterTest.DexStatus",
            "members": [
              {
                "id": 7012,
                "name": "UNISWAP_V2",
                "nameLocation": "7008:10:79",
                "nodeType": "EnumValue",
                "src": "7008:10:79"
              },
              {
                "id": 7013,
                "name": "UNISWAP_V3",
                "nameLocation": "7029:10:79",
                "nodeType": "EnumValue",
                "src": "7029:10:79"
              }
            ],
            "name": "DexStatus",
            "nameLocation": "6987:9:79"
          },
          {
            "id": 7043,
            "nodeType": "FunctionDefinition",
            "src": "7054:410:79",
            "nodes": [],
            "body": {
              "id": 7042,
              "nodeType": "Block",
              "src": "7089:375:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7022,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "7285:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 7021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7277:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7020,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7277:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7277:16:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 7024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7295:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 7017,
                        "name": "link",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6785,
                        "src": "7263:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkToken_$10342",
                          "typeString": "contract LinkToken"
                        }
                      },
                      "id": 7019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11470,
                      "src": "7263:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 7025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7263:37:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7026,
                  "nodeType": "ExpressionStatement",
                  "src": "7263:37:79"
                },
                {
                  "assignments": [
                    7028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7028,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "7319:9:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7042,
                      "src": "7311:17:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7027,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7311:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7032,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7029,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "7331:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$1859",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 7030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestAssetsData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 476,
                      "src": "7331:25:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () external returns (bytes32)"
                      }
                    },
                    "id": 7031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7331:27:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7311:47:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7036,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7028,
                        "src": "7408:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7037,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "7419:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "id": 7038,
                        "name": "tokenShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6728,
                        "src": "7430:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "id": 7039,
                        "name": "swapVersions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6737,
                        "src": "7443:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 7033,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6782,
                        "src": "7369:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockApiOracle_$11166",
                          "typeString": "contract MockApiOracle"
                        }
                      },
                      "id": 7035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fulfillOracleFundingRateRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10607,
                      "src": "7369:38:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address[] memory,uint256[] memory,uint256[] memory) external returns (bool)"
                      }
                    },
                    "id": 7040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7369:87:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7041,
                  "nodeType": "ExpressionStatement",
                  "src": "7369:87:79"
                }
              ]
            },
            "functionSelector": "95d5772d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOracleList",
            "nameLocation": "7063:16:79",
            "parameters": {
              "id": 7015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7079:2:79"
            },
            "returnParameters": {
              "id": 7016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7089:0:79"
            },
            "scope": 7894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7220,
            "nodeType": "FunctionDefinition",
            "src": "7470:2258:79",
            "nodes": [],
            "body": {
              "id": 7219,
              "nodeType": "Block",
              "src": "7503:2225:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7046,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7043,
                      "src": "7514:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7514:18:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7048,
                  "nodeType": "ExpressionStatement",
                  "src": "7514:18:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 7052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7594:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 7050,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "7575:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78,
                          "src": "7575:18:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 7053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7575:21:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7054,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6719,
                          "src": "7598:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 7056,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 7055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7608:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7598:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7049,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14646,
                      "src": "7566:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7566:45:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7058,
                  "nodeType": "ExpressionStatement",
                  "src": "7566:45:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7650:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 7060,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "7631:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78,
                          "src": "7631:18:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 7063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7631:21:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7064,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6719,
                          "src": "7654:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 7066,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 7065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7664:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7654:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7059,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14646,
                      "src": "7622:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7622:45:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7068,
                  "nodeType": "ExpressionStatement",
                  "src": "7622:45:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 7072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7706:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 7070,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "7687:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78,
                          "src": "7687:18:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 7073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7687:21:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7074,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6719,
                          "src": "7710:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 7076,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 7075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7720:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7710:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7069,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14646,
                      "src": "7678:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7678:45:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7078,
                  "nodeType": "ExpressionStatement",
                  "src": "7678:45:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 7082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7762:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 7080,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "7743:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78,
                          "src": "7743:18:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 7083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7743:21:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7084,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6719,
                          "src": "7766:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 7086,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 7085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7776:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7766:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7079,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14646,
                      "src": "7734:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7734:45:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7088,
                  "nodeType": "ExpressionStatement",
                  "src": "7734:45:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 7092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7818:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 7090,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "7799:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78,
                          "src": "7799:18:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 7093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7799:21:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7094,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6719,
                          "src": "7822:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 7096,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 7095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7832:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7822:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7089,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14646,
                      "src": "7790:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7790:45:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7098,
                  "nodeType": "ExpressionStatement",
                  "src": "7790:45:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 7102,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "8200:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7104,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 7103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8210:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8200:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7100,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "8175:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "8175:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8175:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7106,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "8215:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 7108,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 7107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8227:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8215:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7099,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "8166:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8166:64:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7110,
                  "nodeType": "ExpressionStatement",
                  "src": "8166:64:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 7114,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "8275:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7116,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 7115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8285:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8275:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7112,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "8250:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "8250:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8250:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7118,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "8290:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 7120,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 7119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8302:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8290:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7111,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "8241:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8241:64:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7122,
                  "nodeType": "ExpressionStatement",
                  "src": "8241:64:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 7126,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "8350:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7128,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 7127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8360:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8350:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7124,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "8325:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "8325:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8325:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7130,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "8365:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 7132,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 7131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8377:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8365:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7123,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "8316:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8316:64:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7134,
                  "nodeType": "ExpressionStatement",
                  "src": "8316:64:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 7138,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "8425:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7140,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 7139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8435:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8425:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7136,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "8400:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "8400:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8400:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7142,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "8440:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 7144,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 7143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8452:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8440:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7135,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "8391:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8391:64:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7146,
                  "nodeType": "ExpressionStatement",
                  "src": "8391:64:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 7150,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "8500:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7152,
                            "indexExpression": {
                              "hexValue": "34",
                              "id": 7151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8510:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8500:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7148,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "8475:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "8475:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8475:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7154,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "8515:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 7156,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 7155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8527:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8515:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7147,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "8466:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8466:64:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7158,
                  "nodeType": "ExpressionStatement",
                  "src": "8466:64:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 7162,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "8990:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7164,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 7163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9000:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8990:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7160,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "8965:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 98,
                          "src": "8965:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8965:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7166,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6737,
                          "src": "9005:12:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 7168,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 7167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9018:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9005:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7159,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "8956:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8956:65:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7170,
                  "nodeType": "ExpressionStatement",
                  "src": "8956:65:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 7174,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "9066:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7176,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 7175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9076:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9066:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7172,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "9041:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 98,
                          "src": "9041:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9041:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7178,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6737,
                          "src": "9081:12:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 7180,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 7179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9094:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9081:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7171,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "9032:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9032:65:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7182,
                  "nodeType": "ExpressionStatement",
                  "src": "9032:65:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 7186,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "9142:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7188,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 7187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9152:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9142:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7184,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "9117:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 98,
                          "src": "9117:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9117:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7190,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6737,
                          "src": "9157:12:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 7192,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 7191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9170:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9157:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7183,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "9108:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9108:65:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7194,
                  "nodeType": "ExpressionStatement",
                  "src": "9108:65:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 7198,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "9218:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7200,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 7199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9228:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9218:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7196,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "9193:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 98,
                          "src": "9193:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9193:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7202,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6737,
                          "src": "9233:12:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 7204,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 7203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9246:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9233:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7195,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "9184:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9184:65:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7206,
                  "nodeType": "ExpressionStatement",
                  "src": "9184:65:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 7210,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "9294:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 7212,
                            "indexExpression": {
                              "hexValue": "34",
                              "id": 7211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9304:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9294:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7208,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "9269:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 98,
                          "src": "9269:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9269:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 7214,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6737,
                          "src": "9309:12:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 7216,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 7215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9322:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9309:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7207,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16811,
                        16836,
                        16849,
                        16865,
                        16907,
                        16949,
                        16991,
                        17028,
                        17065,
                        17102,
                        14646,
                        14671,
                        14701,
                        14726,
                        14785,
                        14810,
                        14840,
                        14865,
                        16338,
                        16373
                      ],
                      "referencedDeclaration": 14840,
                      "src": "9260:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 7217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9260:65:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7218,
                  "nodeType": "ExpressionStatement",
                  "src": "9260:65:79"
                }
              ]
            },
            "functionSelector": "39c66af1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOracleList",
            "nameLocation": "7479:14:79",
            "parameters": {
              "id": 7044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7493:2:79"
            },
            "returnParameters": {
              "id": 7045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7503:0:79"
            },
            "scope": 7894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7343,
            "nodeType": "FunctionDefinition",
            "src": "9742:799:79",
            "nodes": [],
            "body": {
              "id": 7342,
              "nodeType": "Block",
              "src": "9780:761:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7224,
                      "mutability": "mutable",
                      "name": "startAmount",
                      "nameLocation": "9796:11:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7342,
                      "src": "9791:16:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7223,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9791:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7226,
                  "initialValue": {
                    "hexValue": "31653134",
                    "id": 7225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9810:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000_by_1",
                      "typeString": "int_const 100000000000000"
                    },
                    "value": "1e14"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9791:23:79"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7227,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7043,
                      "src": "9837:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9837:18:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7229,
                  "nodeType": "ExpressionStatement",
                  "src": "9837:18:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7233,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6647,
                        "src": "9897:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7230,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "9876:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$1859",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 7232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1992,
                      "src": "9876:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9876:27:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7235,
                  "nodeType": "ExpressionStatement",
                  "src": "9876:27:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7239,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6647,
                        "src": "9928:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7236,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16676,
                        "src": "9914:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$28227",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 7238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27893,
                      "src": "9914:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9914:20:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7241,
                  "nodeType": "ExpressionStatement",
                  "src": "9914:20:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7245,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6647,
                        "src": "9971:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7242,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "9945:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$1859",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 7244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1970,
                      "src": "9945:25:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9945:32:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7247,
                  "nodeType": "ExpressionStatement",
                  "src": "9945:32:79"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7248,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16676,
                        "src": "9988:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$28227",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 7250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27910,
                      "src": "9988:12:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 7251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9988:14:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7252,
                  "nodeType": "ExpressionStatement",
                  "src": "9988:14:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3131653138",
                        "id": 7258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10036:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11000000000000000000_by_1",
                          "typeString": "int_const 11000000000000000000"
                        },
                        "value": "11e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_11000000000000000000_by_1",
                          "typeString": "int_const 11000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7255,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6653,
                            "src": "10021:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10013:8:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 7253,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10013:8:79",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10013:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 7257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "10013:22:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10013:29:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7260,
                  "nodeType": "ExpressionStatement",
                  "src": "10013:29:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7264,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6653,
                        "src": "10067:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7261,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16676,
                        "src": "10053:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$28227",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 7263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27893,
                      "src": "10053:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10053:19:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7266,
                  "nodeType": "ExpressionStatement",
                  "src": "10053:19:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "464c4f4b49",
                        "id": 7270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10095:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        "value": "FLOKI"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7277,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6606,
                                "src": "10136:7:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                  "typeString": "contract IndexFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                  "typeString": "contract IndexFactory"
                                }
                              ],
                              "id": 7276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10128:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7275,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10128:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10128:16:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 7272,
                                "name": "FLOKI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6671,
                                "src": "10111:5:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7271,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9544,
                              "src": "10104:6:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$9544_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 7273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10104:13:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$9544",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 7274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9501,
                          "src": "10104:23:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10104:41:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7267,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "10083:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28935,
                      "src": "10083:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 7280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10083:63:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7281,
                  "nodeType": "ExpressionStatement",
                  "src": "10083:63:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 7292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10228:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 7282,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6606,
                          "src": "10167:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexFactory_$1859",
                            "typeString": "contract IndexFactory"
                          }
                        },
                        "id": 7284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issuanceIndexTokensWithEth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1221,
                        "src": "10167:34:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_10010000000000000000_by_1",
                            "typeString": "int_const 10010000000000000000"
                          },
                          "id": 7290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_10010000000000000000000_by_1",
                                  "typeString": "int_const 10010000000000000000000"
                                },
                                "id": 7287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130653138",
                                  "id": 7285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10210:5:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                    "typeString": "int_const 10000000000000000000"
                                  },
                                  "value": "10e18"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31303031",
                                  "id": 7286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10216:4:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1001_by_1",
                                    "typeString": "int_const 1001"
                                  },
                                  "value": "1001"
                                },
                                "src": "10210:10:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10010000000000000000000_by_1",
                                  "typeString": "int_const 10010000000000000000000"
                                }
                              }
                            ],
                            "id": 7288,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10209:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10010000000000000000000_by_1",
                              "typeString": "int_const 10010000000000000000000"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 7289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10222:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "10209:17:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10010000000000000000_by_1",
                            "typeString": "int_const 10010000000000000000"
                          }
                        }
                      ],
                      "src": "10167:60:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10167:67:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7294,
                  "nodeType": "ExpressionStatement",
                  "src": "10167:67:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "696e64657820746f6b656e2062616c616e6365",
                        "id": 7298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10257:21:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        "value": "index token balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7303,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6653,
                                "src": "10309:4:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10301:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7301,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10301:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10301:13:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7299,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "10280:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 7300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3599,
                          "src": "10280:20:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10280:35:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7295,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "10245:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28935,
                      "src": "10245:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 7306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10245:71:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7307,
                  "nodeType": "ExpressionStatement",
                  "src": "10245:71:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f7274666f6c696f2076616c7565",
                        "id": 7311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10339:17:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        "value": "portfolio value"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 7312,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "10358:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1557,
                          "src": "10358:27:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 7314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10358:29:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7308,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "10327:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28935,
                      "src": "10327:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 7315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10327:61:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7316,
                  "nodeType": "ExpressionStatement",
                  "src": "10327:61:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7324,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6653,
                                "src": "10447:4:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10439:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7322,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10439:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10439:13:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7320,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "10418:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 7321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3599,
                          "src": "10418:20:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10418:35:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7329,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6767,
                            "src": "10463:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$8848",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$8848",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 7328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10455:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7327,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10455:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10455:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 7331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10470:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 7317,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "10399:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$1859",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 7319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1420,
                      "src": "10399:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256) external"
                      }
                    },
                    "id": 7332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10399:73:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7333,
                  "nodeType": "ExpressionStatement",
                  "src": "10399:73:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 7337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10495:23:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "expression": {
                          "id": 7338,
                          "name": "add1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6653,
                          "src": "10520:4:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10520:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7334,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "10483:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28935,
                      "src": "10483:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 7340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10483:50:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7341,
                  "nodeType": "ExpressionStatement",
                  "src": "10483:50:79"
                }
              ]
            },
            "functionSelector": "85f65a27",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIssuanceWithEth",
            "nameLocation": "9751:19:79",
            "parameters": {
              "id": 7221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9770:2:79"
            },
            "returnParameters": {
              "id": 7222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9780:0:79"
            },
            "scope": 7894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7536,
            "nodeType": "FunctionDefinition",
            "src": "10551:1741:79",
            "nodes": [],
            "body": {
              "id": 7535,
              "nodeType": "Block",
              "src": "10592:1700:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7347,
                      "mutability": "mutable",
                      "name": "startAmount",
                      "nameLocation": "10608:11:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7535,
                      "src": "10603:16:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7346,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10603:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7349,
                  "initialValue": {
                    "hexValue": "31653134",
                    "id": 7348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10622:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000_by_1",
                      "typeString": "int_const 100000000000000"
                    },
                    "value": "1e14"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10603:23:79"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 7350,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6767,
                          "src": "10647:4:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$8848",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 7352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8841,
                        "src": "10647:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 7354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130653138",
                          "id": 7353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10666:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10e18"
                        }
                      ],
                      "src": "10647:25:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 7355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10647:27:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7356,
                  "nodeType": "ExpressionStatement",
                  "src": "10647:27:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7363,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6743,
                            "src": "10715:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$9784",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$9784",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 7362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10707:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7361,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10707:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10707:19:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 7365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10728:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7358,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6746,
                            "src": "10692:5:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7357,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9544,
                          "src": "10685:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9544_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10685:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9544",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9531,
                      "src": "10685:21:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 7366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10685:49:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7367,
                  "nodeType": "ExpressionStatement",
                  "src": "10685:49:79"
                },
                {
                  "assignments": [
                    7372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7372,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "10787:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7535,
                      "src": "10745:48:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$9708_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 7371,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7370,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9708,
                          "src": "10745:34:79"
                        },
                        "referencedDeclaration": 9708,
                        "src": "10745:34:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$9708_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7388,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7375,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6746,
                        "src": "10865:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7376,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6656,
                        "src": "10895:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 7377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10948:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 7380,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10986:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$7894",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$7894",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 7379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10978:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7378,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10978:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10978:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7382,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "11016:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "11016:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 7384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11056:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      },
                      {
                        "hexValue": "30",
                        "id": 7385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11094:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 7386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11328:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 7373,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9784,
                        "src": "10796:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$9784_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 7374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9708,
                      "src": "10796:44:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$9708_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 7387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10796:545:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$9708_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10745:596:79"
                },
                {
                  "assignments": [
                    7390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7390,
                      "mutability": "mutable",
                      "name": "finalAmountOut",
                      "nameLocation": "11357:14:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7535,
                      "src": "11352:19:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7389,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11352:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7395,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7393,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7372,
                        "src": "11402:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$9708_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$9708_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 7391,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6743,
                        "src": "11374:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$9784",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 7392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9717,
                      "src": "11374:27:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$9708_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 7394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11374:35:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11352:57:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6461692062616c616c6e6365",
                        "id": 7399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11432:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        "value": "dai balalnce"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7406,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11478:4:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$7894",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$7894",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 7405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11470:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7404,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11470:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11470:13:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 7401,
                                "name": "DAI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6656,
                                "src": "11455:3:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7400,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9544,
                              "src": "11448:6:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$9544_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 7402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11448:11:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$9544",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 7403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9501,
                          "src": "11448:21:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11448:36:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7396,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "11420:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28935,
                      "src": "11420:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 7409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11420:65:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7410,
                  "nodeType": "ExpressionStatement",
                  "src": "11420:65:79"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7411,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7043,
                      "src": "11496:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11496:18:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7413,
                  "nodeType": "ExpressionStatement",
                  "src": "11496:18:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7417,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6647,
                        "src": "11556:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7414,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "11535:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$1859",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 7416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1992,
                      "src": "11535:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11535:27:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7419,
                  "nodeType": "ExpressionStatement",
                  "src": "11535:27:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7423,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6647,
                        "src": "11587:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7420,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16676,
                        "src": "11573:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$28227",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 7422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27893,
                      "src": "11573:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11573:20:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7425,
                  "nodeType": "ExpressionStatement",
                  "src": "11573:20:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7429,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6647,
                        "src": "11630:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7426,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "11604:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$1859",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 7428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1970,
                      "src": "11604:25:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11604:32:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7431,
                  "nodeType": "ExpressionStatement",
                  "src": "11604:32:79"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7432,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16676,
                        "src": "11647:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$28227",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 7434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27910,
                      "src": "11647:12:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 7435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11647:14:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7436,
                  "nodeType": "ExpressionStatement",
                  "src": "11647:14:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7441,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6653,
                        "src": "11736:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 7442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11742:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7438,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6656,
                            "src": "11722:3:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7437,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9544,
                          "src": "11715:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9544_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11715:11:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9544",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9511,
                      "src": "11715:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 7443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11715:35:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7444,
                  "nodeType": "ExpressionStatement",
                  "src": "11715:35:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7448,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6653,
                        "src": "11775:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7445,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16676,
                        "src": "11761:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$28227",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 7447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27893,
                      "src": "11761:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11761:19:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7450,
                  "nodeType": "ExpressionStatement",
                  "src": "11761:19:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "464c4f4b49",
                        "id": 7454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11803:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        "value": "FLOKI"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7461,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6606,
                                "src": "11844:7:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                  "typeString": "contract IndexFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                  "typeString": "contract IndexFactory"
                                }
                              ],
                              "id": 7460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11836:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7459,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11836:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11836:16:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 7456,
                                "name": "FLOKI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6671,
                                "src": "11819:5:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7455,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9544,
                              "src": "11812:6:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$9544_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 7457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11812:13:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$9544",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 7458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9501,
                          "src": "11812:23:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11812:41:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7451,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "11791:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28935,
                      "src": "11791:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 7464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11791:63:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7465,
                  "nodeType": "ExpressionStatement",
                  "src": "11791:63:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7472,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "11903:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 7471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11895:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7470,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11895:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11895:16:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 7474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11913:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7467,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6656,
                            "src": "11882:3:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7466,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9544,
                          "src": "11875:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9544_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11875:11:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9544",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9531,
                      "src": "11875:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 7475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11875:46:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7476,
                  "nodeType": "ExpressionStatement",
                  "src": "11875:46:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7482,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6656,
                            "src": "11968:3:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11960:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7480,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11960:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11960:12:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030653138",
                        "id": 7484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11974:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      },
                      {
                        "hexValue": "33",
                        "id": 7485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11983:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 7477,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "11932:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$1859",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 7479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuanceIndexTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1064,
                      "src": "11932:27:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 7486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11932:53:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7487,
                  "nodeType": "ExpressionStatement",
                  "src": "11932:53:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "696e64657820746f6b656e2062616c616e6365",
                        "id": 7491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12008:21:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        "value": "index token balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7496,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6653,
                                "src": "12060:4:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12052:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7494,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12052:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12052:13:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7492,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "12031:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 7493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3599,
                          "src": "12031:20:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12031:35:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7488,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "11996:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28935,
                      "src": "11996:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 7499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11996:71:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7500,
                  "nodeType": "ExpressionStatement",
                  "src": "11996:71:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f7274666f6c696f2076616c7565",
                        "id": 7504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12090:17:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        "value": "portfolio value"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 7505,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "12109:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1557,
                          "src": "12109:27:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 7507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12109:29:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7501,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "12078:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28935,
                      "src": "12078:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 7508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12078:61:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7509,
                  "nodeType": "ExpressionStatement",
                  "src": "12078:61:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7517,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6653,
                                "src": "12198:4:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12190:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7515,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12190:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12190:13:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7513,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "12169:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 7514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3599,
                          "src": "12169:20:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12169:35:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7522,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6767,
                            "src": "12214:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$8848",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$8848",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 7521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12206:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7520,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12206:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12206:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 7524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12221:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 7510,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "12150:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$1859",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 7512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1420,
                      "src": "12150:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256) external"
                      }
                    },
                    "id": 7525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12150:73:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7526,
                  "nodeType": "ExpressionStatement",
                  "src": "12150:73:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 7530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12246:23:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "expression": {
                          "id": 7531,
                          "name": "add1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6653,
                          "src": "12271:4:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "12271:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7527,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "12234:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28935,
                      "src": "12234:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 7533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12234:50:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7534,
                  "nodeType": "ExpressionStatement",
                  "src": "12234:50:79"
                }
              ]
            },
            "functionSelector": "5cc6f954",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIssuanceWithTokens",
            "nameLocation": "10560:22:79",
            "parameters": {
              "id": 7344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10582:2:79"
            },
            "returnParameters": {
              "id": 7345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10592:0:79"
            },
            "scope": 7894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7657,
            "nodeType": "FunctionDefinition",
            "src": "12306:1234:79",
            "nodes": [],
            "body": {
              "id": 7656,
              "nodeType": "Block",
              "src": "12334:1206:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7539,
                      "name": "initializeAssetList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7893,
                      "src": "12377:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12377:21:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7541,
                  "nodeType": "ExpressionStatement",
                  "src": "12377:21:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 7560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12602:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7556,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12567:4:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$7894",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$7894",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 7555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12559:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7554,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12559:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12559:13:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "62616c616e63654f66286164647265737329",
                                "id": 7551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12514:20:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                  "typeString": "literal_string \"balanceOf(address)\""
                                },
                                "value": "balanceOf(address)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                  "typeString": "literal_string \"balanceOf(address)\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 7547,
                                        "name": "indexToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6603,
                                        "src": "12483:10:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IndexToken_$2903",
                                          "typeString": "contract IndexToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IndexToken_$2903",
                                          "typeString": "contract IndexToken"
                                        }
                                      ],
                                      "id": 7546,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "12475:7:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 7545,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "12475:7:79",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 7548,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12475:19:79",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 7542,
                                    "name": "stdstore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16679,
                                    "src": "12445:8:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StdStorage_$22818_storage",
                                      "typeString": "struct StdStorage storage ref"
                                    }
                                  },
                                  "id": 7544,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "target",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23928,
                                  "src": "12445:29:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                    "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                  }
                                },
                                "id": 7549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12445:50:79",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                  "typeString": "struct StdStorage storage pointer"
                                }
                              },
                              "id": 7550,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23964,
                              "src": "12445:68:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 7552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12445:90:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 7553,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "with_key",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23982,
                          "src": "12445:113:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 7558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12445:128:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 7559,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24076,
                      "src": "12445:156:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 7561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12445:163:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7562,
                  "nodeType": "ExpressionStatement",
                  "src": "12445:163:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 7575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12774:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c537570706c792829",
                            "id": 7572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12688:15:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_18160ddd7f15c72528c2f94fd8dfe3c8d5aa26e2c50c7d81f4bc7bee8d4b7932",
                              "typeString": "literal_string \"totalSupply()\""
                            },
                            "value": "totalSupply()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_18160ddd7f15c72528c2f94fd8dfe3c8d5aa26e2c50c7d81f4bc7bee8d4b7932",
                              "typeString": "literal_string \"totalSupply()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7568,
                                    "name": "indexToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6603,
                                    "src": "12657:10:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexToken_$2903",
                                      "typeString": "contract IndexToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexToken_$2903",
                                      "typeString": "contract IndexToken"
                                    }
                                  ],
                                  "id": 7567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12649:7:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7566,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12649:7:79",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12649:19:79",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 7563,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16679,
                                "src": "12619:8:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$22818_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 7565,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23928,
                              "src": "12619:29:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 7570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12619:50:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 7571,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23964,
                          "src": "12619:68:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 7573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12619:85:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 7574,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24076,
                      "src": "12619:154:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 7576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12619:161:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7577,
                  "nodeType": "ExpressionStatement",
                  "src": "12619:161:79"
                },
                {
                  "body": {
                    "id": 7611,
                    "nodeType": "Block",
                    "src": "13020:192:79",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "323030653138",
                              "id": 7608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13193:6:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000000000000000_by_1",
                                "typeString": "int_const 200000000000000000000"
                              },
                              "value": "200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_200000000000000000000_by_1",
                                "typeString": "int_const 200000000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 7604,
                                      "name": "factory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6606,
                                      "src": "13155:7:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                        "typeString": "contract IndexFactory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                        "typeString": "contract IndexFactory"
                                      }
                                    ],
                                    "id": 7603,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13147:7:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7602,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13147:7:79",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7605,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13147:16:79",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "62616c616e63654f66286164647265737329",
                                      "id": 7599,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13102:20:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                        "typeString": "literal_string \"balanceOf(address)\""
                                      },
                                      "value": "balanceOf(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                        "typeString": "literal_string \"balanceOf(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 7593,
                                                "name": "assetList",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6719,
                                                "src": "13069:9:79",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 7595,
                                              "indexExpression": {
                                                "id": 7594,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7579,
                                                "src": "13079:1:79",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "13069:12:79",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 7592,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "13061:7:79",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 7591,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "13061:7:79",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 7596,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13061:21:79",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 7588,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 16679,
                                          "src": "13031:8:79",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$22818_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 7590,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 23928,
                                        "src": "13031:29:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 7597,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13031:52:79",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 7598,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23964,
                                    "src": "13031:70:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 7600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13031:92:79",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 7601,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23982,
                                "src": "13031:115:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 7606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13031:133:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 7607,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24076,
                            "src": "13031:161:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 7609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13031:169:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7610,
                        "nodeType": "ExpressionStatement",
                        "src": "13031:169:79"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7581,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7579,
                      "src": "12994:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 7582,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "12998:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 7583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12998:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12994:20:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7612,
                  "initializationExpression": {
                    "assignments": [
                      7579
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7579,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12991:1:79",
                        "nodeType": "VariableDeclaration",
                        "scope": 7612,
                        "src": "12986:6:79",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7578,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12986:4:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7580,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12986:6:79"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13016:3:79",
                      "subExpression": {
                        "id": 7585,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7579,
                        "src": "13016:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7587,
                    "nodeType": "ExpressionStatement",
                    "src": "13016:3:79"
                  },
                  "nodeType": "ForStatement",
                  "src": "12982:230:79"
                },
                {
                  "body": {
                    "id": 7623,
                    "nodeType": "Block",
                    "src": "13260:87:79",
                    "statements": []
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7616,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7614,
                      "src": "13234:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 7617,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "13238:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 7618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13238:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13234:20:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7624,
                  "initializationExpression": {
                    "assignments": [
                      7614
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7614,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13231:1:79",
                        "nodeType": "VariableDeclaration",
                        "scope": 7624,
                        "src": "13226:6:79",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7613,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13226:4:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7615,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13226:6:79"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13256:3:79",
                      "subExpression": {
                        "id": 7620,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7614,
                        "src": "13256:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7622,
                    "nodeType": "ExpressionStatement",
                    "src": "13256:3:79"
                  },
                  "nodeType": "ForStatement",
                  "src": "13222:125:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 7628,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "13369:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1557,
                          "src": "13369:27:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 7630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13369:29:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7625,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "13357:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28808,
                      "src": "13357:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 7631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13357:42:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7632,
                  "nodeType": "ExpressionStatement",
                  "src": "13357:42:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726564656d7074696f6e2068617070656e696e672e2e2e",
                        "id": 7636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13422:25:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea7960792d59f7a66f9f9ef77bf35564014a5245f985c11384dc22c8b22dfdf7",
                          "typeString": "literal_string \"redemption happening...\""
                        },
                        "value": "redemption happening..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea7960792d59f7a66f9f9ef77bf35564014a5245f985c11384dc22c8b22dfdf7",
                          "typeString": "literal_string \"redemption happening...\""
                        }
                      ],
                      "expression": {
                        "id": 7633,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "13410:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28822,
                      "src": "13410:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 7637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13410:38:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7638,
                  "nodeType": "ExpressionStatement",
                  "src": "13410:38:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7646,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "13507:4:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$7894",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$7894",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 7645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13499:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7644,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13499:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13499:13:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7642,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6603,
                            "src": "13478:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2903",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 7643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3599,
                          "src": "13478:20:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 7648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13478:35:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7651,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6767,
                            "src": "13523:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$8848",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$8848",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 7650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13515:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7649,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13515:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13515:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 7653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13530:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 7639,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6606,
                        "src": "13459:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$1859",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 7641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1420,
                      "src": "13459:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256) external"
                      }
                    },
                    "id": 7654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13459:73:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7655,
                  "nodeType": "ExpressionStatement",
                  "src": "13459:73:79"
                }
              ]
            },
            "functionSelector": "38d6c81c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBlock",
            "nameLocation": "12315:9:79",
            "parameters": {
              "id": 7537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12324:2:79"
            },
            "returnParameters": {
              "id": 7538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12334:0:79"
            },
            "scope": 7894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7760,
            "nodeType": "FunctionDefinition",
            "src": "13548:1384:79",
            "nodes": [],
            "body": {
              "id": 7759,
              "nodeType": "Block",
              "src": "13579:1353:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7661,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "13598:4:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7759,
                      "src": "13590:12:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7660,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13590:7:79",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7668,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7664,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6746,
                        "src": "13637:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7665,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6695,
                        "src": "13657:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 7666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13676:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        }
                      ],
                      "expression": {
                        "id": 7662,
                        "name": "factoryV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6662,
                        "src": "13605:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$9627",
                          "typeString": "contract IUniswapV3Factory"
                        }
                      },
                      "id": 7663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9600,
                      "src": "13605:17:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                        "typeString": "function (address,address,uint24) view external returns (address)"
                      }
                    },
                    "id": 7667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13605:86:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13590:101:79"
                },
                {
                  "assignments": [
                    7670,
                    7672,
                    7674,
                    7676,
                    7678,
                    7680,
                    7682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7670,
                      "mutability": "mutable",
                      "name": "sqrtPriceX96",
                      "nameLocation": "13724:12:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7759,
                      "src": "13716:20:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 7669,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "13716:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7672,
                      "mutability": "mutable",
                      "name": "tick",
                      "nameLocation": "13757:4:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7759,
                      "src": "13751:10:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 7671,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "13751:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7674,
                      "mutability": "mutable",
                      "name": "observationIndex",
                      "nameLocation": "13783:16:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7759,
                      "src": "13776:23:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 7673,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "13776:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7676,
                      "mutability": "mutable",
                      "name": "observationCardinality",
                      "nameLocation": "13821:22:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7759,
                      "src": "13814:29:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 7675,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "13814:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7678,
                      "mutability": "mutable",
                      "name": "observationCardinalityNext",
                      "nameLocation": "13865:26:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7759,
                      "src": "13858:33:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 7677,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "13858:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7680,
                      "mutability": "mutable",
                      "name": "feeProtocol",
                      "nameLocation": "13912:11:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7759,
                      "src": "13906:17:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 7679,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "13906:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7682,
                      "mutability": "mutable",
                      "name": "unlocked",
                      "nameLocation": "13943:8:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7759,
                      "src": "13938:13:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7681,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13938:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7688,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7684,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7661,
                            "src": "13980:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7683,
                          "name": "IUniswapV3Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11252,
                          "src": "13965:14:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$11252_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        },
                        "id": 7685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13965:20:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$11252",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 7686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57852,
                      "src": "13965:26:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 7687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13965:28:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13701:292:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7692,
                        "name": "sqrtPriceX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7670,
                        "src": "14016:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "expression": {
                        "id": 7689,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "14004:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28808,
                      "src": "14004:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 7693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14004:25:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7694,
                  "nodeType": "ExpressionStatement",
                  "src": "14004:25:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7700,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6746,
                            "src": "14073:5:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7701,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6695,
                            "src": "14080:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31653138",
                            "id": 7702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14086:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          {
                            "hexValue": "33",
                            "id": 7703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14092:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 7698,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6606,
                            "src": "14052:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$1859",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 7699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAmountOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1502,
                          "src": "14052:20:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 7704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14052:42:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7695,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "14040:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28808,
                      "src": "14040:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 7705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14040:55:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7706,
                  "nodeType": "ExpressionStatement",
                  "src": "14040:55:79"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 7707,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6767,
                          "src": "14124:4:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$8848",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 7709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8841,
                        "src": "14124:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 7711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31653138",
                          "id": 7710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14143:4:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        }
                      ],
                      "src": "14124:24:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 7712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14124:26:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7713,
                  "nodeType": "ExpressionStatement",
                  "src": "14124:26:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7720,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6743,
                            "src": "14191:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$9784",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$9784",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 7719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14183:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7718,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14183:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14183:19:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 7722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14204:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7715,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6746,
                            "src": "14168:5:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7714,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9544,
                          "src": "14161:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9544_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14161:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9544",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9531,
                      "src": "14161:21:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 7723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14161:48:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7724,
                  "nodeType": "ExpressionStatement",
                  "src": "14161:48:79"
                },
                {
                  "assignments": [
                    7729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7729,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "14262:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7759,
                      "src": "14220:48:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$9708_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 7728,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7727,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9708,
                          "src": "14220:34:79"
                        },
                        "referencedDeclaration": 9708,
                        "src": "14220:34:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$9708_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7745,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7732,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6746,
                        "src": "14340:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7733,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6695,
                        "src": "14370:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 7734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14424:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 7737,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14462:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$7894",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$7894",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 7736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14454:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7735,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14454:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14454:13:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7739,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "14492:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "14492:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 7741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14532:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "30",
                        "id": 7742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14569:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 7743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14803:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 7730,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9784,
                        "src": "14271:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$9784_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 7731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9708,
                      "src": "14271:44:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$9708_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 7744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "14271:545:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$9708_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14220:596:79"
                },
                {
                  "assignments": [
                    7747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7747,
                      "mutability": "mutable",
                      "name": "finalAmountOut",
                      "nameLocation": "14832:14:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 7759,
                      "src": "14827:19:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7746,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14827:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7752,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7750,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7729,
                        "src": "14877:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$9708_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$9708_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 7748,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6743,
                        "src": "14849:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$9784",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 7749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9717,
                      "src": "14849:27:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$9708_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 7751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14849:35:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14827:57:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7756,
                        "name": "finalAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7747,
                        "src": "14907:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7753,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36291,
                        "src": "14895:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$36291_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 7755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28808,
                      "src": "14895:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 7757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14895:27:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7758,
                  "nodeType": "ExpressionStatement",
                  "src": "14895:27:79"
                }
              ]
            },
            "functionSelector": "2a888735",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetPrice",
            "nameLocation": "13557:12:79",
            "parameters": {
              "id": 7658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13569:2:79"
            },
            "returnParameters": {
              "id": 7659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13579:0:79"
            },
            "scope": 7894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 7893,
            "nodeType": "FunctionDefinition",
            "src": "14942:1184:79",
            "nodes": [],
            "body": {
              "id": 7892,
              "nodeType": "Block",
              "src": "14980:1146:79",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 7858,
                    "nodeType": "Block",
                    "src": "15034:730:79",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 7789,
                                "name": "assetList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6719,
                                "src": "15188:9:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 7791,
                              "indexExpression": {
                                "id": 7790,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7764,
                                "src": "15198:1:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15188:12:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7786,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7764,
                                  "src": "15157:1:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "6f7261636c654c6973742875696e7432353629",
                                      "id": 7783,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15111:21:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_239aad0df7726bcd645ee02195770ea74ffd42d5dc84b1eb9279ea9cf39a39a1",
                                        "typeString": "literal_string \"oracleList(uint256)\""
                                      },
                                      "value": "oracleList(uint256)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_239aad0df7726bcd645ee02195770ea74ffd42d5dc84b1eb9279ea9cf39a39a1",
                                        "typeString": "literal_string \"oracleList(uint256)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 7779,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6606,
                                              "src": "15083:7:79",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 7778,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "15075:7:79",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 7777,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "15075:7:79",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 7780,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15075:16:79",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 7774,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 16679,
                                          "src": "15045:8:79",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$22818_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 7776,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 23928,
                                        "src": "15045:29:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 7781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15045:47:79",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 7782,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23964,
                                    "src": "15045:65:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 7784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15045:88:79",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 7785,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24000,
                                "src": "15045:111:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_uint256_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,uint256) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 7787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15045:114:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 7788,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24059,
                            "src": "15045:142:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,address)"
                            }
                          },
                          "id": 7792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15045:156:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7793,
                        "nodeType": "ExpressionStatement",
                        "src": "15045:156:79"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 7809,
                                "name": "assetList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6719,
                                "src": "15356:9:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 7811,
                              "indexExpression": {
                                "id": 7810,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7764,
                                "src": "15366:1:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15356:12:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7806,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7764,
                                  "src": "15325:1:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "63757272656e744c6973742875696e7432353629",
                                      "id": 7803,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15278:22:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_9932ba4c600b0d32a7f3471f2819be02d7a06b8a7a4a3c683d5e79d6635739d4",
                                        "typeString": "literal_string \"currentList(uint256)\""
                                      },
                                      "value": "currentList(uint256)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_9932ba4c600b0d32a7f3471f2819be02d7a06b8a7a4a3c683d5e79d6635739d4",
                                        "typeString": "literal_string \"currentList(uint256)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 7799,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6606,
                                              "src": "15250:7:79",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 7798,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "15242:7:79",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 7797,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "15242:7:79",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 7800,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15242:16:79",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 7794,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 16679,
                                          "src": "15212:8:79",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$22818_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 7796,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 23928,
                                        "src": "15212:29:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 7801,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15212:47:79",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 7802,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23964,
                                    "src": "15212:65:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 7804,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15212:89:79",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 7805,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24000,
                                "src": "15212:112:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_uint256_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,uint256) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 7807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15212:115:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 7808,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24059,
                            "src": "15212:143:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,address)"
                            }
                          },
                          "id": 7812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15212:157:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7813,
                        "nodeType": "ExpressionStatement",
                        "src": "15212:157:79"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 7831,
                                "name": "tokenShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6728,
                                "src": "15540:11:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 7833,
                              "indexExpression": {
                                "id": 7832,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7764,
                                "src": "15552:1:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15540:14:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 7826,
                                    "name": "assetList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6719,
                                    "src": "15498:9:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 7828,
                                  "indexExpression": {
                                    "id": 7827,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7764,
                                    "src": "15508:1:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15498:12:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "746f6b656e4d61726b65745368617265286164647265737329",
                                      "id": 7823,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15446:27:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_fcaae87b56804c66b17f138a81029c896b0ec3952302a16dfb275660ea7f1540",
                                        "typeString": "literal_string \"tokenMarketShare(address)\""
                                      },
                                      "value": "tokenMarketShare(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_fcaae87b56804c66b17f138a81029c896b0ec3952302a16dfb275660ea7f1540",
                                        "typeString": "literal_string \"tokenMarketShare(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 7819,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6606,
                                              "src": "15418:7:79",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 7818,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "15410:7:79",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 7817,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "15410:7:79",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 7820,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15410:16:79",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 7814,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 16679,
                                          "src": "15380:8:79",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$22818_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 7816,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 23928,
                                        "src": "15380:29:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 7821,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15380:47:79",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 7822,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23964,
                                    "src": "15380:65:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 7824,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15380:94:79",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 7825,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23982,
                                "src": "15380:117:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 7829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15380:131:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 7830,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24076,
                            "src": "15380:159:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 7834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15380:175:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7835,
                        "nodeType": "ExpressionStatement",
                        "src": "15380:175:79"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 7853,
                                "name": "swapVersions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6737,
                                "src": "15726:12:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 7855,
                              "indexExpression": {
                                "id": 7854,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7764,
                                "src": "15739:1:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15726:15:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 7848,
                                    "name": "assetList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6719,
                                    "src": "15684:9:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 7850,
                                  "indexExpression": {
                                    "id": 7849,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7764,
                                    "src": "15694:1:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15684:12:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "746f6b656e5377617056657273696f6e286164647265737329",
                                      "id": 7845,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15632:27:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_d90bc211448c02154e13cc66867cb2fa9b509ab0ca2b6f62443e8f6dc26d7274",
                                        "typeString": "literal_string \"tokenSwapVersion(address)\""
                                      },
                                      "value": "tokenSwapVersion(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_d90bc211448c02154e13cc66867cb2fa9b509ab0ca2b6f62443e8f6dc26d7274",
                                        "typeString": "literal_string \"tokenSwapVersion(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 7841,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6606,
                                              "src": "15604:7:79",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 7840,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "15596:7:79",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 7839,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "15596:7:79",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 7842,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15596:16:79",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 7836,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 16679,
                                          "src": "15566:8:79",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$22818_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 7838,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 23928,
                                        "src": "15566:29:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 7843,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15566:47:79",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 7844,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23964,
                                    "src": "15566:65:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 7846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15566:94:79",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 7847,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23982,
                                "src": "15566:117:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 7851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15566:131:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 7852,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24076,
                            "src": "15566:159:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 7856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15566:176:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7857,
                        "nodeType": "ExpressionStatement",
                        "src": "15566:176:79"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7767,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7764,
                      "src": "15007:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 7768,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "15011:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 7769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15011:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15007:20:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7859,
                  "initializationExpression": {
                    "assignments": [
                      7764
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7764,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15000:1:79",
                        "nodeType": "VariableDeclaration",
                        "scope": 7859,
                        "src": "14995:6:79",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7763,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14995:4:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7766,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 7765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15004:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14995:10:79"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15029:3:79",
                      "subExpression": {
                        "id": 7771,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7764,
                        "src": "15029:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7773,
                    "nodeType": "ExpressionStatement",
                    "src": "15029:3:79"
                  },
                  "nodeType": "ForStatement",
                  "src": "14991:773:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7872,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6719,
                          "src": "15918:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 7873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "15918:16:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c4f7261636c654c6973742829",
                            "id": 7869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15840:19:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c8599dedd2267d7ace54d927af92d01c1f424c72735cd282fed113a258ea6c35",
                              "typeString": "literal_string \"totalOracleList()\""
                            },
                            "value": "totalOracleList()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c8599dedd2267d7ace54d927af92d01c1f424c72735cd282fed113a258ea6c35",
                              "typeString": "literal_string \"totalOracleList()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7865,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6606,
                                    "src": "15812:7:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                      "typeString": "contract IndexFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                      "typeString": "contract IndexFactory"
                                    }
                                  ],
                                  "id": 7864,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15804:7:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7863,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15804:7:79",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15804:16:79",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 7860,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16679,
                                "src": "15774:8:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$22818_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 7862,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23928,
                              "src": "15774:29:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 7867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15774:47:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 7868,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23964,
                          "src": "15774:65:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 7870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15774:86:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 7871,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24076,
                      "src": "15774:143:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 7874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15774:161:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7875,
                  "nodeType": "ExpressionStatement",
                  "src": "15774:161:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7888,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6719,
                          "src": "16091:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 7889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "16091:16:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c43757272656e744c6973742829",
                            "id": 7885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16012:20:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_53fd4332f2a0b7090fb49c3aa55b2f1e0988040a339bc2dee556b3d3a622838d",
                              "typeString": "literal_string \"totalCurrentList()\""
                            },
                            "value": "totalCurrentList()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_53fd4332f2a0b7090fb49c3aa55b2f1e0988040a339bc2dee556b3d3a622838d",
                              "typeString": "literal_string \"totalCurrentList()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7881,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6606,
                                    "src": "15984:7:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                      "typeString": "contract IndexFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexFactory_$1859",
                                      "typeString": "contract IndexFactory"
                                    }
                                  ],
                                  "id": 7880,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15976:7:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7879,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15976:7:79",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15976:16:79",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 7876,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16679,
                                "src": "15946:8:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$22818_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 7878,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23928,
                              "src": "15946:29:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 7883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15946:47:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 7884,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23964,
                          "src": "15946:65:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$22818_storage_ptr_$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 7886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15946:87:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$22818_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 7887,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24076,
                      "src": "15946:144:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$22818_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$22818_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 7890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15946:162:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7891,
                  "nodeType": "ExpressionStatement",
                  "src": "15946:162:79"
                }
              ]
            },
            "functionSelector": "e1497cff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeAssetList",
            "nameLocation": "14951:19:79",
            "parameters": {
              "id": 7761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14970:2:79"
            },
            "returnParameters": {
              "id": 7762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14980:0:79"
            },
            "scope": 7894,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6592,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11220,
              "src": "796:4:79"
            },
            "id": 6593,
            "nodeType": "InheritanceSpecifier",
            "src": "796:4:79"
          }
        ],
        "contractDependencies": [
          1859,
          2903,
          10342,
          11166,
          11346
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          7894,
          11220,
          26516,
          22052,
          21727,
          20934,
          18874,
          18110,
          16617,
          16683,
          16680
        ],
        "name": "CounterTest",
        "nameLocation": "781:11:79",
        "scope": 7895,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 79
}