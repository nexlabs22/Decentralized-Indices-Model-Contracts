{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "feeRatePerDayScaled",
          "type": "uint256"
        }
      ],
      "name": "FeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "FeeReceiverSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "methodologist",
          "type": "address"
        }
      ],
      "name": "MethodologistSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "methodology",
          "type": "string"
        }
      ],
      "name": "MethodologySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintFeeToReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "SupplyCeilingSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRestricted",
          "type": "bool"
        }
      ],
      "name": "ToggledRestricted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BNB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BONE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BabyDoge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CURVE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ELON",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FLOKI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FactoryV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FactoryV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HarryPotterObamaSonic10Inu",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEASH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LINK",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MEME",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PEPE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SHIB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SwapRouterV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SwapRouterV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WSM",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WXRP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assetList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IndexFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryV3",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexToken",
      "outputs": [
        {
          "internalType": "contract IndexToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeAssetList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract MockApiOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoter",
      "outputs": [
        {
          "internalType": "contract IQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "swapVersions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIssuanceWithEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIssuanceWithTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOracleList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwap",
      "outputs": [
        {
          "internalType": "contract TestSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateOracleList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "772:15370:95:-:0;;;;;1609:26:27;;;1631:4;-1:-1:-1;;1609:26:27;;;;;;;;3191:44:30;;;;;;;;;;-1:-1:-1;;;;;;1050:10:95;;;;1555:25:97;-1:-1:-1;;;;;;;;;;;1050:7:95;1528:18:97;1050:10:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1028:32;;;-1:-1:-1;;;;;;1028:32:95;-1:-1:-1;;;;;1028:32:95;;;;;;;;;;1092:10;;-1:-1:-1;;;;;;1092:10:95;;1100:1;1092:10;;;1555:25:97;-1:-1:-1;;;;;;;;;;;1092:7:95;;;1528:18:97;;1092:10:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1067:35;;;-1:-1:-1;;;;;;1067:35:95;-1:-1:-1;;;;;1067:35:95;;;;;;;;;;1126:10;;-1:-1:-1;;;;;;1126:10:95;;1134:1;1126:10;;;1555:25:97;-1:-1:-1;;;;;;;;;;;1126:7:95;;;1528:18:97;;1126:10:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1109:27;;;-1:-1:-1;;;;;;1109:27:95;-1:-1:-1;;;;;1109:27:95;;;;;;;;;;1163:10;;-1:-1:-1;;;;;;1163:10:95;;1171:1;1163:10;;;1555:25:97;-1:-1:-1;;;;;;;;;;;1163:7:95;;;1528:18:97;;1163:10:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1143:30;;;-1:-1:-1;;;;;;1143:30:95;-1:-1:-1;;;;;1143:30:95;;;;;;;;;;1204:10;;-1:-1:-1;;;;;;1204:10:95;;1212:1;1204:10;;;1555:25:97;-1:-1:-1;;;;;;;;;;;1204:7:95;;;1528:18:97;;1204:10:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1180:34;;;-1:-1:-1;;;;;;1180:34:95;-1:-1:-1;;;;;1180:34:95;;;;;;;;;;1237:10;;-1:-1:-1;;;;;;1237:10:95;;1245:1;1237:10;;;1555:25:97;-1:-1:-1;;;;;;;;;;;1237:7:95;;;1528:18:97;1237:10:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1221:26;;;-1:-1:-1;;;;;;1221:26:95;-1:-1:-1;;;;;1221:26:95;;;;;;;;;;1269:10;;-1:-1:-1;;;;;;1269:10:95;;1277:1;1269:10;;;1555:25:97;-1:-1:-1;;;;;;;;;;;1269:7:95;;;1528:18:97;;1269:10:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1254:25;;;-1:-1:-1;;;;;1254:25:95;;;;-1:-1:-1;;;;;;1254:25:95;;;;;;1667:64;;;;;;1689:42;1667:64;;;2968:312;;;;;;;;2518:42;2968:312;;2597:42;2968:312;;;;2758:42;2968:312;;;;;;;2838:42;2968:312;;;;2917:42;2968:312;;;;;;;;;;:::i;:::-;-1:-1:-1;3289:209:95;;;;;;;;3328:5;3289:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3507:243:95;;;;;;;;3547:1;3507:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4530:31:95;;-1:-1:-1;;;4530:31:95;;2933:2:97;4530:31:95;;;2915:21:97;2972:2;2952:18;;;2945:30;-1:-1:-1;;;2991:18:97;;;2984:45;-1:-1:-1;;;;;;;;;;;4530:12:95;;;3046:18:97;;4530:31:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4530:31:95;;;;;;;;;;;;:::i;:::-;4505:56;;;;;;;;;;;;:::i;:::-;;4568:50;;;772:15370;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;772:15370:95;-1:-1:-1;;;;;772:15370:95;;;;;;;;;;;-1:-1:-1;772:15370:95;;;;;;;-1:-1:-1;772:15370:95;;;-1:-1:-1;772:15370:95;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;772:15370:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:290:97;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:97;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:97:o;309:1087::-;389:6;420:2;463;451:9;442:7;438:23;434:32;431:52;;;479:1;476;469:12;431:52;506:16;;-1:-1:-1;;;;;571:14:97;;;568:34;;;598:1;595;588:12;568:34;636:6;625:9;621:22;611:32;;681:7;674:4;670:2;666:13;662:27;652:55;;703:1;700;693:12;652:55;732:2;726:9;754:2;750;747:10;744:36;;;760:18;;:::i;:::-;835:2;829:9;803:2;889:13;;-1:-1:-1;;885:22:97;;;909:2;881:31;877:40;865:53;;;933:18;;;953:22;;;930:46;927:72;;;979:18;;:::i;:::-;1019:10;1015:2;1008:22;1054:2;1046:6;1039:18;1094:7;1089:2;1084;1080;1076:11;1072:20;1069:33;1066:53;;;1115:1;1112;1105:12;1066:53;1137:1;1128:10;;1147:129;1161:2;1158:1;1155:9;1147:129;;;1249:10;;;1245:19;;1239:26;1218:14;;;1214:23;;1207:59;1172:10;;;;1147:129;;;1294:2;1291:1;1288:9;1285:80;;;1353:1;1348:2;1343;1335:6;1331:15;1327:24;1320:35;1285:80;1384:6;309:1087;-1:-1:-1;;;;;;;;309:1087:97:o;3075:380::-;3154:1;3150:12;;;;3197;;;3218:61;;3272:4;3264:6;3260:17;3250:27;;3218:61;3325:2;3317:6;3314:14;3294:18;3291:38;3288:161;;;3371:10;3366:3;3362:20;3359:1;3352:31;3406:4;3403:1;3396:15;3434:4;3431:1;3424:15;3288:161;;3075:380;;;:::o;3460:127::-;3521:10;3516:3;3512:20;3509:1;3502:31;3552:4;3549:1;3542:15;3576:4;3573:1;3566:15;3460:127;772:15370:95;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "772:15370:95:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5190:1298;;;:::i;:::-;;6496:475;;;:::i;2143:95::-;;2196:42;2143:95;;;;;-1:-1:-1;;;;;7858:32:97;;;7840:51;;7828:2;7813:18;2143:95:95;;;;;;;;2807:73;;2838:42;2807:73;;1538:116;;1611:42;1538:116;;2531:136:33;;;:::i;:::-;;;;;;;:::i;13545:1384:95:-;;;:::i;3463:153:33:-;;;:::i;:::-;;;;;;;:::i;1899:73:95:-;;1930:42;1899:73;;1818:74;;1850:42;1818:74;;2245:73;;2276:42;2245:73;;12303:1234;;;:::i;7467:2258::-;;;:::i;2726:74::-;;2758:42;2726:74;;3289:209;;;;;;:::i;:::-;;:::i;:::-;;;19972:25:97;;;19960:2;19945:18;3289:209:95;19818:185:97;3320:135:33;;;:::i;3013:143::-;;;:::i;4423:17:95:-;;;;;-1:-1:-1;;;;;4423:17:95;;;3877:74;;3909:42;3877:74;;2487:73;;2518:42;2487:73;;2887:72;;2917:42;2887:72;;2325;;2355:42;2325:72;;2567;;2597:42;2567:72;;3507:243;;;;;;:::i;:::-;;:::i;10548:1741::-;;;:::i;2825:180:33:-;;;:::i;:::-;;;;;;;:::i;967:24:95:-;;;;;-1:-1:-1;;;;;967:24:95;;;4627:27;;;;;-1:-1:-1;;;;;4627:27:95;;;2675:142:33;;;:::i;:::-;;;;;;;:::i;9739:799:95:-;;;:::i;3958:75::-;;3991:42;3958:75;;3164:148:33;;;:::i;7051:410:95:-;;;:::i;2968:312::-;;;;;;:::i;:::-;;:::i;2404:74::-;;2436:42;2404:74;;2228:143:33;;;:::i;1865:600:27:-;;;:::i;:::-;;;16573:14:97;;16566:22;16548:41;;16536:2;16521:18;1865:600:27;16408:187:97;3759:105:95;;3821:42;3759:105;;2063:73;;2094:42;2063:73;;933:27;;;;;-1:-1:-1;;;;;933:27:95;;;4475:21;;;;;-1:-1:-1;;;;;4475:21:95;;;4213:81;;4252:42;4213:81;;1979:77;;2014:42;1979:77;;4301:78;;4337:42;4301:78;;2646:73;;2677:42;2646:73;;1288:72;;1318:42;1288:72;;14939:1184;;;:::i;2379:144:33:-;;;:::i;1667:64:95:-;;;;;-1:-1:-1;;;;;1667:64:95;;;1738:73;;1769:42;1738:73;;898:28;;;;;-1:-1:-1;;;;;898:28:95;;;4400:16;;;;;-1:-1:-1;;;;;4400:16:95;;;1609:26:27;;;;;;;;;5190:1298:95;5239:30;;-1:-1:-1;;;5239:30:95;;-1:-1:-1;;;;;;;;;;;5239:13:95;;;:30;;5253:15;;5239:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5225:11;:44;;;5282:26;;-1:-1:-1;;;5282:26:95;;;;;19972:25:97;;;;-1:-1:-1;;;;;;;;;;;5282:13:95;;;19945:18:97;;5282:26:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5407:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5400:4:95;:22;;-1:-1:-1;;;;;;5400:22:95;-1:-1:-1;;;;;5400:22:95;;;;;;;;;5442:32;;;;;:::i;:::-;-1:-1:-1;;;;;7858:32:97;;;7840:51;;7828:2;7813:18;5442:32:95;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5433:6:95;:41;;-1:-1:-1;;;;;;5433:41:95;-1:-1:-1;;;;;5433:41:95;;;;;;;;;;5500:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5487:10:95;:29;;-1:-1:-1;;;;;;5487:29:95;-1:-1:-1;;;;;5487:29:95;;;;;;;;;5634:11;;5527:327;;-1:-1:-1;;;5527:327:95;;5487:29;;5527:21;;:327;;5615:4;;5634:11;;5660:10;;3909:42;;3991;;4079;;4164;;4252;;4337;;5527:327;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5877:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5867:7:95;:28;;-1:-1:-1;;;;;;5867:28:95;-1:-1:-1;;;;;5867:28:95;;;;;;;;;5955:10;;6015:4;;6043:6;;6065:5;;5906:348;;-1:-1:-1;;;5906:348:95;;5955:10;;;5906:348;;;8384:34:97;-1:-1:-1;8434:18:97;;;8427:43;6015:4:95;;;8486:18:97;;;8479:43;6043:6:95;;;8538:18:97;;;8531:43;8590:19;;;8583:35;;;;3909:42:95;8634:19:97;;;8627:44;3991:42:95;8687:19:97;;;8680:44;4079:42:95;8740:19:97;;;8733:44;4164:42:95;8793:19:97;;;8786:44;4252:42:95;8846:19:97;;;8839:44;4337:42:95;8899:19:97;;;8892:45;5867:28:95;5906:18;;8318:19:97;;5906:348:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6267:10:95;;6296:7;;6267:38;;-1:-1:-1;;;6267:38:95;;-1:-1:-1;;;;;6296:7:95;;;6267:38;;;7840:51:97;6267:10:95;;;-1:-1:-1;6267:20:95;;-1:-1:-1;7813:18:97;;6267:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6349:3:95;:16;;-1:-1:-1;;;;;;6349:16:95;;;1318:42;6349:16;;;;6376:4;:19;;;;3909:42;6376:19;;;6406:6;:24;;;;;3991:42;6406:24;;;-1:-1:-1;;6454:14:95;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6443:8:95;:25;;-1:-1:-1;;;;;;6443:25:95;-1:-1:-1;;;;;6443:25:95;;;;;;;;;;5190:1298::o;6496:475::-;6583:10;;:18;;;-1:-1:-1;;;6583:18:95;;;;6574:43;;-1:-1:-1;;;;;6583:10:95;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6611:4;6574:8;:43::i;:::-;6637:10;;:32;;;-1:-1:-1;;;6637:32:95;;;;6628:48;;-1:-1:-1;;;;;6637:10:95;;:30;;:32;;;;;;;;;;;;;;:10;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6671:4;6628:8;:48::i;:::-;6696:10;;:25;;;-1:-1:-1;;;6696:25:95;;;;6687:52;;-1:-1:-1;;;;;6696:10:95;;:23;;:25;;;;;;;;;;;;;;:10;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6723:15;6687:8;:52::i;:::-;6759:10;;:24;;;-1:-1:-1;;;6759:24:95;;;;6750:47;;-1:-1:-1;;;;;6759:10:95;;:22;;:24;;;;;;;;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6785:11;;-1:-1:-1;;;;;6785:11:95;6750:8;:47::i;:::-;6817:10;;:24;;;-1:-1:-1;;;6817:24:95;;;;6808:38;;-1:-1:-1;;;;;6817:10:95;;:22;;:24;;;;;:10;;:24;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6817:24:95;;;;;;;;;;;;:::i;:::-;6808:38;;;;;;;;;;;;:8;:38::i;:::-;6866:10;;:26;;;-1:-1:-1;;;6866:26:95;;;;6857:48;;-1:-1:-1;;;;;6866:10:95;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6894:10;6857:8;:48::i;:::-;6925:10;;:19;;;-1:-1:-1;;;6925:19:95;;;;6916:47;;-1:-1:-1;;;;;6925:10:95;;:17;;:19;;;;;;;;;;;;;;:10;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6954:7;;-1:-1:-1;;;;;6954:7:95;6916:8;:47::i;:::-;6496:475::o;2531:136:33:-;2578:33;2643:16;2624:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2624:35:33;;;;;;;;;;;;;;;;;;;;;;;2531:136;:::o;13545:1384:95:-;13602:86;;-1:-1:-1;;;13602:86:95;;3909:42;13602:86;;;9684:34:97;2518:42:95;9734:18:97;;;9727:43;13673:4:95;9786:18:97;;;9779:49;13587:12:95;;1611:42;;13602:17;;9619:18:97;;13602:86:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13587:101;;13713:20;13748:10;13773:23;13811:29;13855:33;13903:17;13935:13;13977:4;-1:-1:-1;;;;;13962:26:95;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13698:292;;;;;;;;;;;;;;14001:25;14013:12;-1:-1:-1;;;;;14001:25:95;:11;:25::i;:::-;14049:7;;:42;;-1:-1:-1;;;14049:42:95;;3909;14049;;;9251:34:97;2518:42:95;9301:18:97;;;9294:43;14083:4:95;9353:18:97;;;9346:34;14089:1:95;9396:18:97;;;9389:34;14037:55:95;;-1:-1:-1;;;;;14049:7:95;;:20;;9185:19:97;;14049:42:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14037:11;:55::i;:::-;14121:4;;;;;;;;;-1:-1:-1;;;;;14121:4:95;-1:-1:-1;;;;;14121:12:95;;14140:4;14121:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14158:48:95;;-1:-1:-1;;;14158:48:95;;3909:42;;-1:-1:-1;14158:21:95;;-1:-1:-1;14158:48:95;;-1:-1:-1;3821:42:95;;14201:4;;14158:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14268:545:95;;;;;;;;3909:42;14268:545;;2518:42;14268:545;;;;14421:4;14268:545;;;;14459:4;14268:545;;;;14489:15;14268:545;;;;14529:4;14268:545;;;;14217:48;14268:545;;;;;;;;;;;;14846:35;;-1:-1:-1;;;14846:35:95;;14268:545;;14217:48;3821:42;;14846:27;;:35;;14268:545;;14846:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14824:57;;14892:27;14904:14;14892:11;:27::i;:::-;13576:1353;;;;;;;;;;13545:1384::o;3463:153:33:-;3512:42;3589:19;3567:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3567:41:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3463:153;:::o;12303:1234:95:-;12374:21;:19;:21::i;:::-;12442:90;;;;;;;;;;;;-1:-1:-1;;;12442:90:95;;;;12480:10;;12442:163;;12599:5;;12442:128;;12564:4;;12442:90;;;:50;;-1:-1:-1;;;;;;;12480:10:95;12442:29;:50::i;:::-;:68;;:90::i;:::-;:113;;:128::i;:::-;:156;;:163::i;:::-;12616:85;;;;;;;;;;;;-1:-1:-1;;;12616:85:95;;;;12654:10;;12616:161;;12771:5;;12616:85;;;:50;;-1:-1:-1;;;;;;;12654:10:95;12616:29;:50::i;:161::-;12983:6;12979:230;12995:9;:16;12991:20;;12979:230;;;13028:169;13190:6;13028:133;13152:7;;;;;;;;;-1:-1:-1;;;;;13152:7:95;13028:92;;;;;;;;;;;;;;-1:-1:-1;;;13028:92:95;;;:52;13066:9;13076:1;13066:12;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;13066:12:95;13028:29;:52::i;:169::-;13013:3;;;;:::i;:::-;;;;12979:230;;;;13223:6;13219:125;13235:9;:16;13231:20;;13219:125;;;13253:3;;;;:::i;:::-;;;;13219:125;;;-1:-1:-1;13366:7:95;;:29;;;-1:-1:-1;;;13366:29:95;;;;13354:42;;-1:-1:-1;;;;;13366:7:95;;:27;;:29;;;;;;;;;;;;;;:7;:29;;;;;;;;;;13354:42;13407:38;;;;;;;;;;;;;;;;;;:11;:38::i;:::-;13456:7;;13475:10;;:35;;-1:-1:-1;;;13475:35:95;;13504:4;13475:35;;;7840:51:97;-1:-1:-1;;;;;13456:7:95;;;;:18;;13475:10;;:20;;7813:18:97;;13475:35:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13520:4;;13456:73;;;;;;-1:-1:-1;;;;;;13456:73:95;;;;;;30340:25:97;;;;-1:-1:-1;;;;;13520:4:95;30381:18:97;;;30374:60;13527:1:95;30450:18:97;;;30443:34;30313:18;;13456:73:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12303:1234::o;7467:2258::-;7511:18;:16;:18::i;:::-;7572:7;;:21;;-1:-1:-1;;;7572:21:95;;:7;:21;;;19972:25:97;7563:45:95;;-1:-1:-1;;;;;7572:7:95;;:18;;19945::97;;7572:21:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7595:9;7605:1;7595:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7595:12:95;7563:8;:45::i;:::-;7628:7;;:21;;-1:-1:-1;;;7628:21:95;;:7;:21;;;19972:25:97;7619:45:95;;-1:-1:-1;;;;;7628:7:95;;:18;;19945::97;;7628:21:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7651:9;7661:1;7651:12;;;;;;;;:::i;7619:45::-;7684:7;;:21;;-1:-1:-1;;;7684:21:95;;7703:1;7684:21;;;19972:25:97;7675:45:95;;-1:-1:-1;;;;;7684:7:95;;:18;;19945::97;;7684:21:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7707:9;7717:1;7707:12;;;;;;;;:::i;7675:45::-;7740:7;;:21;;-1:-1:-1;;;7740:21:95;;7759:1;7740:21;;;19972:25:97;7731:45:95;;-1:-1:-1;;;;;7740:7:95;;:18;;19945::97;;7740:21:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7763:9;7773:1;7763:12;;;;;;;;:::i;7731:45::-;7796:7;;:21;;-1:-1:-1;;;7796:21:95;;7815:1;7796:21;;;19972:25:97;7787:45:95;;-1:-1:-1;;;;;7796:7:95;;:18;;19945::97;;7796:21:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7819:9;7829:1;7819:12;;;;;;;;:::i;7787:45::-;8172:7;;8197:9;:12;;8163:64;;-1:-1:-1;;;;;8172:7:95;;:24;;:7;;8197:12;;;;:::i;:::-;;;;;;;;;;;8172:38;;;;;;-1:-1:-1;;;;;;8172:38:95;;;-1:-1:-1;;;;;8197:12:95;;;8172:38;;;7840:51:97;7813:18;;8172:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8212:11;8224:1;8212:14;;;;;;;;:::i;:::-;;;;;;;;;8163:8;:64::i;:::-;8247:7;;8272:9;:12;;8238:64;;-1:-1:-1;;;;;8247:7:95;;:24;;:7;;8272:12;;;;;;:::i;:::-;;;;;;;;;;;8247:38;;;;;;-1:-1:-1;;;;;;8247:38:95;;;-1:-1:-1;;;;;8272:12:95;;;8247:38;;;7840:51:97;7813:18;;8247:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8287:11;8299:1;8287:14;;;;;;;;:::i;8238:64::-;8322:7;;8347:9;:12;;8313:64;;-1:-1:-1;;;;;8322:7:95;;:24;;8357:1;;8347:12;;;;;;:::i;:::-;;;;;;;;;;;8322:38;;;;;;-1:-1:-1;;;;;;8322:38:95;;;-1:-1:-1;;;;;8347:12:95;;;8322:38;;;7840:51:97;7813:18;;8322:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8362:11;8374:1;8362:14;;;;;;;;:::i;8313:64::-;8397:7;;8422:9;:12;;8388:64;;-1:-1:-1;;;;;8397:7:95;;:24;;8432:1;;8422:12;;;;;;:::i;:::-;;;;;;;;;;;8397:38;;;;;;-1:-1:-1;;;;;;8397:38:95;;;-1:-1:-1;;;;;8422:12:95;;;8397:38;;;7840:51:97;7813:18;;8397:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8437:11;8449:1;8437:14;;;;;;;;:::i;8388:64::-;8472:7;;8497:9;:12;;8463:64;;-1:-1:-1;;;;;8472:7:95;;:24;;8507:1;;8497:12;;;;;;:::i;:::-;;;;;;;;;;;8472:38;;;;;;-1:-1:-1;;;;;;8472:38:95;;;-1:-1:-1;;;;;8497:12:95;;;8472:38;;;7840:51:97;7813:18;;8472:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8512:11;8524:1;8512:14;;;;;;;;:::i;8463:64::-;8962:7;;8987:9;:12;;8953:65;;-1:-1:-1;;;;;8962:7:95;;:24;;:7;;8987:12;;;;:::i;:::-;;;;;;;;;;;8962:38;;;;;;-1:-1:-1;;;;;;8962:38:95;;;-1:-1:-1;;;;;8987:12:95;;;8962:38;;;7840:51:97;7813:18;;8962:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9002:12;9015:1;9002:15;;;;;;;;:::i;8953:65::-;9038:7;;9063:9;:12;;9029:65;;-1:-1:-1;;;;;9038:7:95;;:24;;:7;;9063:12;;;;;;:::i;:::-;;;;;;;;;;;9038:38;;;;;;-1:-1:-1;;;;;;9038:38:95;;;-1:-1:-1;;;;;9063:12:95;;;9038:38;;;7840:51:97;7813:18;;9038:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9078:12;9091:1;9078:15;;;;;;;;:::i;9029:65::-;9114:7;;9139:9;:12;;9105:65;;-1:-1:-1;;;;;9114:7:95;;:24;;9149:1;;9139:12;;;;;;:::i;:::-;;;;;;;;;;;9114:38;;;;;;-1:-1:-1;;;;;;9114:38:95;;;-1:-1:-1;;;;;9139:12:95;;;9114:38;;;7840:51:97;7813:18;;9114:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9154:12;9167:1;9154:15;;;;;;;;:::i;9105:65::-;9190:7;;9215:9;:12;;9181:65;;-1:-1:-1;;;;;9190:7:95;;:24;;9225:1;;9215:12;;;;;;:::i;:::-;;;;;;;;;;;9190:38;;;;;;-1:-1:-1;;;;;;9190:38:95;;;-1:-1:-1;;;;;9215:12:95;;;9190:38;;;7840:51:97;7813:18;;9190:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9230:12;9243:1;9230:15;;;;;;;;:::i;9181:65::-;9266:7;;9291:9;:12;;9257:65;;-1:-1:-1;;;;;9266:7:95;;:24;;9301:1;;9291:12;;;;;;:::i;:::-;;;;;;;;;;;9266:38;;;;;;-1:-1:-1;;;;;;9266:38:95;;;-1:-1:-1;;;;;9291:12:95;;;9266:38;;;7840:51:97;7813:18;;9266:38:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9306:12;9319:1;9306:15;;;;;;;;:::i;3289:209::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3289:209:95;:::o;3320:135:33:-;3366:33;3431:16;3412:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3412:35:33;;;;;;;;;;;;;;;;;;;;;;3320:135;:::o;3013:143::-;3061:35;3130:18;3109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3109:39:33;;;;;;;;;;;;;;;;;;;;;;3013:143;:::o;3507:243:95:-;;;;;;;;;;;;10548:1741;10644:4;;:27;;;-1:-1:-1;;;10644:27:95;;;;10619:4;;-1:-1:-1;;;;;10644:4:95;;:12;;10663:5;;10644:27;;;;;10600:16;;10644:27;;;;;;;;10663:5;10644:4;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10682:49:95;;-1:-1:-1;;;10682:49:95;;3909:42;;-1:-1:-1;10682:21:95;;-1:-1:-1;10682:49:95;;-1:-1:-1;3821:42:95;;10725:5;;10682:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10793:545:95;;;;;;;;3909:42;10793:545;;1318:42;10793:545;;;;10945:4;10793:545;;;;10983:4;10793:545;;;;11013:15;10793:545;;;;11053:5;10793:545;;;;10742:48;10793:545;;;;;;;;;;;;11371:35;;-1:-1:-1;;;11371:35:95;;10793:545;;10742:48;3821:42;;11371:27;;:35;;10793:545;;11371:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11417:65;;;;;;;;;;;-1:-1:-1;;;11417:65:95;;;;11445:36;;-1:-1:-1;;;11445:36:95;;11475:4;11445:36;;;7840:51:97;11349:57:95;;-1:-1:-1;11417:65:95;;1318:42;;11445:21;;7813:18:97;;11445:36:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11417:11;:65::i;:::-;11493:18;:16;:18::i;:::-;11532:7;;11553:5;;11532:27;;-1:-1:-1;;;11532:27:95;;-1:-1:-1;;;;;11553:5:95;;;11532:27;;;7840:51:97;11532:7:95;;;:20;;7813:18:97;;11532:27:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11584:5:95;;11570:20;;-1:-1:-1;;;11570:20:95;;-1:-1:-1;;;;;11584:5:95;;;11570:20;;;7840:51:97;-1:-1:-1;;;;;;;;;;;11570:13:95;-1:-1:-1;11570:13:95;;-1:-1:-1;7813:18:97;;11570:20:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11601:7:95;;11627:5;;11601:32;;-1:-1:-1;;;11601:32:95;;-1:-1:-1;;;;;11627:5:95;;;11601:32;;;7840:51:97;11601:7:95;;;-1:-1:-1;11601:25:95;;-1:-1:-1;7813:18:97;;11601:32:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;317:37:28;;-1:-1:-1;;;;;11644:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11733:4:95;;11712:35;;-1:-1:-1;;;11712:35:95;;1318:42;;-1:-1:-1;11712:20:95;;-1:-1:-1;11712:35:95;;-1:-1:-1;;;;;11733:4:95;;11739:7;;11712:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11772:4:95;;11758:19;;-1:-1:-1;;;11758:19:95;;-1:-1:-1;;;;;11772:4:95;;;11758:19;;;7840:51:97;-1:-1:-1;;;;;;;;;;;11758:13:95;;;7813:18:97;;11758:19:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11788:63:95;;;;;;;;;;;-1:-1:-1;;;11788:63:95;;;;11841:7;;11809:41;;-1:-1:-1;;;11809:41:95;;-1:-1:-1;;;;;11841:7:95;;;11809:41;;;7840:51:97;11788:63:95;;-1:-1:-1;11788:63:95;-1:-1:-1;1850:42:95;;11809:23;;7813:18:97;;11809:41:95;7694:203:97;11788:63:95;11900:7;;11872:46;;-1:-1:-1;;;11872:46:95;;1318:42;;11872:19;;:46;;-1:-1:-1;;;;;11900:7:95;;11910;;11872:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11929:7:95;;:53;;-1:-1:-1;;;11929:53:95;;-1:-1:-1;;;;;11929:7:95;;;;:27;;:53;;1318:42;;11971:7;;11980:1;;11929:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11993:71:95;;;;;;;;;;;-1:-1:-1;;;11993:71:95;;;;12028:10;;12057:4;;12028:35;;-1:-1:-1;;;12028:35:95;;-1:-1:-1;;;;;12057:4:95;;;12028:35;;;7840:51:97;11993:71:95;;-1:-1:-1;11993:71:95;;-1:-1:-1;12028:10:95;;;;;:20;;7813:18:97;;12028:35:95;7694:203:97;11993:71:95;12075:61;;;;;;;;;;;-1:-1:-1;;;12075:61:95;;;;;;;;12106:7;;:29;;-1:-1:-1;;;12106:29:95;;;;12075:61;;-1:-1:-1;;;;;12106:7:95;;;;:27;;:29;;;;;;;;;;;:7;:29;;;;;;;;;;12075:61;12147:7;;12166:10;;12195:4;;12166:35;;-1:-1:-1;;;12166:35:95;;-1:-1:-1;;;;;12195:4:95;;;12166:35;;;7840:51:97;12147:7:95;;;;:18;;12166:10;;;;;:20;;7813:18:97;;12166:35:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12211:4;;12147:73;;;;;;-1:-1:-1;;;;;;12147:73:95;;;;;;30340:25:97;;;;-1:-1:-1;;;;;12211:4:95;30381:18:97;;;30374:60;12218:1:95;30450:18:97;;;30443:34;30313:18;;12147:73:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12231:50:95;;;;;;;;;;;;-1:-1:-1;;;12231:50:95;;;;12268:4;;12231:50;;-1:-1:-1;12231:50:95;;-1:-1:-1;;;;;;12268:4:95;:12;12231:11;:50::i;:::-;10589:1700;;;10548:1741::o;2825:180:33:-;2881:48;2971:26;2942:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2675:142;2723:34;2791:18;2770:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9739:799:95;9807:4;9834:18;:16;:18::i;:::-;9873:7;;9894:5;;9873:27;;-1:-1:-1;;;9873:27:95;;-1:-1:-1;;;;;9894:5:95;;;9873:27;;;7840:51:97;9873:7:95;;;:20;;7813:18:97;;9873:27:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9925:5:95;;9911:20;;-1:-1:-1;;;9911:20:95;;-1:-1:-1;;;;;9925:5:95;;;9911:20;;;7840:51:97;-1:-1:-1;;;;;;;;;;;9911:13:95;-1:-1:-1;9911:13:95;;-1:-1:-1;7813:18:97;;9911:20:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9942:7:95;;9968:5;;9942:32;;-1:-1:-1;;;9942:32:95;;-1:-1:-1;;;;;9968:5:95;;;9942:32;;;7840:51:97;9942:7:95;;;-1:-1:-1;9942:25:95;;-1:-1:-1;7813:18:97;;9942:32:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;317:37:28;;-1:-1:-1;;;;;9985:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10018:4:95;;10010:29;;-1:-1:-1;;;;;10018:4:95;;;;-1:-1:-1;10018:4:95;;-1:-1:-1;10033:5:95;;10018:4;10010:29;10018:4;10010:29;10033:5;10018:4;;10010:29;;;;;;;;;;;;;;;;;;;-1:-1:-1;10064:4:95;;10050:19;;-1:-1:-1;;;10050:19:95;;-1:-1:-1;;;;;10064:4:95;;;10050:19;;;7840:51:97;-1:-1:-1;;;;;;;;;;;10050:13:95;;;7813:18:97;;10050:19:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10080:63:95;;;;;;;;;;;-1:-1:-1;;;10080:63:95;;;;10133:7;;10101:41;;-1:-1:-1;;;10101:41:95;;-1:-1:-1;;;;;10133:7:95;;;10101:41;;;7840:51:97;10080:63:95;;-1:-1:-1;10080:63:95;-1:-1:-1;1850:42:95;;10101:23;;7813:18:97;;10101:41:95;7694:203:97;10080:63:95;10164:7;;:67;;-1:-1:-1;;;10164:67:95;;10225:5;10164:67;;;19972:25:97;-1:-1:-1;;;;;10164:7:95;;;;:34;;10206:17;;19945:18:97;;10164:67:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10242:71:95;;;;;;;;;;;-1:-1:-1;;;10242:71:95;;;;10277:10;;10306:4;;10277:35;;-1:-1:-1;;;10277:35:95;;-1:-1:-1;;;;;10306:4:95;;;10277:35;;;7840:51:97;10242:71:95;;-1:-1:-1;10242:71:95;;-1:-1:-1;10277:10:95;;;;;-1:-1:-1;10277:20:95;;7813:18:97;;10277:35:95;7694:203:97;10242:71:95;10324:61;;;;;;;;;;;-1:-1:-1;;;10324:61:95;;;;;;;;10355:7;;:29;;-1:-1:-1;;;10355:29:95;;;;10324:61;;-1:-1:-1;;;;;10355:7:95;;;;:27;;:29;;;;;;;;;;;:7;:29;;;;;;;;;;10324:61;10396:7;;10415:10;;10444:4;;10415:35;;-1:-1:-1;;;10415:35:95;;-1:-1:-1;;;;;10444:4:95;;;10415:35;;;7840:51:97;10396:7:95;;;;:18;;10415:10;;;;;:20;;7813:18:97;;10415:35:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10460:4;;10396:73;;;;;;-1:-1:-1;;;;;;10396:73:95;;;;;;30340:25:97;;;;-1:-1:-1;;;;;10460:4:95;30381:18:97;;;30374:60;10467:1:95;30450:18:97;;;30443:34;30313:18;;10396:73:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10480:50:95;;;;;;;;;;;;-1:-1:-1;;;10480:50:95;;;;10517:4;;10480:50;;-1:-1:-1;10480:50:95;;-1:-1:-1;;;;;;10517:4:95;:12;10480:11;:50::i;:::-;9777:761;9739:799::o;3164:148:33:-;3212:40;3286:18;3265:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7051:410:95;7260:4;;7282:7;;7260:37;;-1:-1:-1;;;7260:37:95;;-1:-1:-1;;;;;7260:4:95;;;;:13;;:37;;7282:7;;;7292:4;;7260:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7328:7:95;;:27;;;-1:-1:-1;;;7328:27:95;;;;7308:17;;-1:-1:-1;;;;;7328:7:95;;:25;;:27;;;;;;;;;;;;;;7308:17;7328:7;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7366:6;;:87;;-1:-1:-1;;;7366:87:95;;7308:47;;-1:-1:-1;;;;;;7366:6:95;;:38;;:87;;7308:47;;7416:9;;7427:11;;7440:12;;7366:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7086:375;7051:410::o;2968:312::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2968:312:95;;-1:-1:-1;2968:312:95;:::o;2228:143:33:-;2277:34;2345:18;2324:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:600:27;1920:7;;1899:4;;1920:7;;;;;1916:542;;;-1:-1:-1;1951:7:27;;;;;;;;1865:600::o;1916:542::-;1991:17;-1:-1:-1;;;;;;;;;;;3065:55:27;3148:16;2031:382;;2251:43;;2075:20;;-1:-1:-1;;;;;;;;;;;1712:64:27;2189:34;;2251:43;;1712:64;;-1:-1:-1;;;2276:17:27;2251:43;;;:::i;:::-;;;;-1:-1:-1;;2251:43:27;;;;;;;;;;2139:178;;;2251:43;2139:178;;:::i;:::-;;;;-1:-1:-1;;2139:178:27;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:27:o;14939:1184:95:-;14992:6;14988:773;15008:9;:16;15004:20;;14988:773;;;15042:156;15185:9;15195:1;15185:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;15042:88;;;;;;;;;;;;-1:-1:-1;;;15042:88:95;;;;;;;15080:7;;-1:-1:-1;;;;;15185:12:95;;;;15042:114;;15154:1;;15042:88;;;;:47;;15185:12;;15080:7;15042:29;:47::i;:88::-;:111;;:114::i;:::-;:142;;:156::i;:::-;15209:157;15353:9;15363:1;15353:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;15209:89;;;;;;;;;;;;-1:-1:-1;;;15209:89:95;;;;;;;15247:7;;-1:-1:-1;;;;;15353:12:95;;;;15209:115;;15322:1;;15209:89;;;;:47;;15353:12;;15247:7;15209:29;:47::i;:157::-;15377:175;15537:11;15549:1;15537:14;;;;;;;;:::i;:::-;;;;;;;;;15377:131;15495:9;15505:1;15495:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;15377:94;;;;;;;;;;;;;;;;;;;;15415:7;;-1:-1:-1;;;;;15495:12:95;;;;15377:94;;;:47;;15415:7;15377:29;:47::i;:175::-;15563:176;15723:12;15736:1;15723:15;;;;;;;;:::i;:::-;;;;;;;;;15563:131;15681:9;15691:1;15681:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;15563:94;;;;;;;;;;;;;;;;;;;;15601:7;;-1:-1:-1;;;;;15681:12:95;;;;15563:94;;;:47;;15601:7;15563:29;:47::i;:176::-;15026:3;;;;:::i;:::-;;;;14988:773;;;-1:-1:-1;15915:9:95;:16;15771:86;;;;;;;;;;;;-1:-1:-1;;;15771:86:95;;;;15809:7;;15771:161;;15915:16;15771:86;;:47;;-1:-1:-1;;;;;;;15809:7:95;15771:29;:47::i;:161::-;16088:9;:16;15943:87;;;;;;;;;;;;-1:-1:-1;;;15943:87:95;;;;15981:7;;15943:162;;16088:16;15943:87;;:47;;-1:-1:-1;;;;;;;15981:7:95;15943:29;:47::i;2379:144:33:-;2428:35;2497:18;2476:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2476:39:33;;;;;;;;;;;;;;;;;;;;;;2379:144;:::o;3728:284:27:-;3797:1;-1:-1:-1;;;;;3792:6:27;:1;-1:-1:-1;;;;;3792:6:27;;3788:217;;3820:44;;;;;25131:2:97;25113:21;;;25170:2;25150:18;;;25143:30;25209:34;25204:2;25189:18;;25182:62;-1:-1:-1;;;25275:2:97;25260:18;;25253:35;25320:3;25305:19;;24929:401;3820:44:27;;;;;;;;3884:34;3916:1;3884:34;;;;;;:::i;:::-;;;;;;;;3938;3970:1;3938:34;;;;;;:::i;:::-;;;;;;;;3987:6;:4;:6::i;5365:269::-;5428:1;5423;:6;5419:208;;5451:41;;;;;23346:2:97;23328:21;;;23385:2;23365:18;;;23358:30;23424:34;23419:2;23404:18;;23397:62;-1:-1:-1;;;23490:2:97;23475:18;;23468:32;23532:3;23517:19;;23144:398;5451:41:27;;;;;;;;5512:31;5541:1;5512:31;;;;;;:::i;:::-;;;;;;;;5563;5592:1;5563:31;;;;;;:::i;18422:351::-;18559:1;18542:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18532:30;;;;;;18525:1;18508:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18498:30;;;;;;:64;18494:272;;18584:43;;;;;24726:2:97;24708:21;;;24765:2;24745:18;;;24738:30;24804:34;24799:2;24784:18;;24777:62;-1:-1:-1;;;24870:2:97;24855:18;;24848:34;24914:3;24899:19;;24524:400;18584:43:27;;;;;;;;18647:33;18678:1;18647:33;;;;;;:::i;:::-;;;;;;;;18700;18731:1;18700:33;;;;;;:::i;5686:112:41:-;5733:57;5786:2;5749:40;;;;;;19972:25:97;;19960:2;19945:18;;19818:185;5749:40:41;;;;-1:-1:-1;;5749:40:41;;;;;;;;;;;;;;-1:-1:-1;;;;;5749:40:41;-1:-1:-1;;;5749:40:41;;;5733:15;:57::i;9475:158:36:-;4791:12;;;:22;;-1:-1:-1;;;;;;4791:22:36;-1:-1:-1;;;;;4791:22:36;;;;;-1:-1:-1;4791:12:36;9589:36;9582:43;9475:158;-1:-1:-1;;;9475:158:36:o;9794:152::-;740:24;;;;;;5112:9;;;:22;;-1:-1:-1;;5112:22:36;;;;;;;;;;;;9870:18;9927:4;9908:30;5005:159;9954:154;5277:10;;;:47;;;;;;;10028:18;5277:47;;;;;;-1:-1:-1;;;;;5301:21:36;;5277:47;;;10090:4;10066:34;5172:182;10750:122;10831:33;10845:4;10859:3;10831:13;:33::i;5806:123:41:-;5862:59;5917:2;5878:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5878:42:41;;;;;;;;;;;;;;-1:-1:-1;;;;;5878:42:41;-1:-1:-1;;;5878:42:41;;;5862:15;:59::i;6752:141::-;6817:68;6877:2;6881;6833:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6833:51:41;;;;;;;;;;;;;;-1:-1:-1;;;;;6833:51:41;-1:-1:-1;;;6833:51:41;;;6817:15;:68::i;10116:154:36:-;5467:10;;;:29;;;;;;;10190:18;5467:29;;;;;;;;;;10252:4;10228:34;5362:164;10602:140;10683:51;10697:4;-1:-1:-1;;;;;10711:21:36;;10683:13;:51::i;2473:443:27:-;-1:-1:-1;;;;;;;;;;;3065:55:27;3148:16;2517:367;;2721:67;;2555:11;;-1:-1:-1;;;;;;;;;;;1712:64:27;2654:43;;2721:67;;1712:64;;-1:-1:-1;;;2746:17:27;2781:4;;2721:67;;;:::i;:::-;;;;-1:-1:-1;;2721:67:27;;;;;;;;;;2608:199;;;2721:67;2608:199;;:::i;:::-;;;;-1:-1:-1;;2608:199:27;;;;;;;;;;2572:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2517:367:27;2894:7;:14;;-1:-1:-1;;2894:14:27;;;;;2473:443::o;187:384:41:-;282:14;;135:42;459:2;446:16;;258:21;;282:14;446:16;135:42;496:5;485:68;476:77;;411:153;;187:384;:::o;11259:1125:36:-;11354:12;;;;11391:9;;;;11433:11;;;;11478:10;;;11455:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11354:12:36;;;;11391:9;;;;;;11340:11;;11455:33;;11478:10;;11455:33;;11478:10;11455:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11501:17;11538:4;11544:12;11552:3;11544:7;:12::i;:::-;11521:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11521:36:36;;;;;;;;;-1:-1:-1;;;;;11573:15:36;;;;;;:10;;;11521:36;11573:15;;;;;;-1:-1:-1;;;;;;11573:21:36;;;;;;;;;11521:36;;-1:-1:-1;11573:21:36;;:15;;11605:34;;11622:3;;11627:11;;11605:34;;:::i;:::-;;;;-1:-1:-1;;11605:34:36;;;;;;;;;11595:45;;11605:34;11595:45;;;;11573:68;;;;;;;;;;-1:-1:-1;11573:68:36;;;;11568:112;;11658:10;11663:4;11658;:10::i;:::-;;11568:112;-1:-1:-1;;;;;11713:15:36;;11690:12;11713:15;;;;;;;;;;;-1:-1:-1;;;;;;11713:21:36;;;;;;;;;11745:34;;11713:21;;11690:12;;11745:34;;11762:3;;11767:11;;11745:34;;:::i;:::-;;;;;;;;;;;;;11735:45;;;;;;11713:68;;;;;;;;;;;;11705:77;;11690:92;;11795:12;11836:17;11857:3;-1:-1:-1;;;;;11857:14:36;11872:4;11857:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11833:44:36;-1:-1:-1;11899:38:36;;-1:-1:-1;11833:44:36;11920:16;11925:11;11920:2;:16;:::i;:::-;11899:14;:38::i;:::-;11974:18;;-1:-1:-1;;;11974:18:36;;11892:45;;-1:-1:-1;11959:12:36;;-1:-1:-1;;;;;;;;;;;;11974:7:36;;;:18;;11982:3;;11987:4;;11974:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11959:33;;12017:4;12009;:12;12005:223;;12038:178;;-1:-1:-1;;;12038:178:36;;;;;;;:::i;:::-;;;;;;;;;12238:24;;-1:-1:-1;;;12238:24:36;;-1:-1:-1;;;;;;;;;;;12238:8:36;;;:24;;12247:3;;12252:4;;12258:3;;12238:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12280:12:36;;;12273:19;;-1:-1:-1;;;;;;12273:19:36;;;-1:-1:-1;12310:9:36;;;12303:16;;-1:-1:-1;;12303:16:36;;;12330:17;-1:-1:-1;12337:10:36;;12280:12;12330:17;:::i;:::-;12365:4;:11;;12358:18;;;11329:1055;;;;;;;;11259:1125;;:::o;13760:404::-;13819:12;13844:19;13876:1;:8;13887:2;13876:13;;;;:::i;:::-;13866:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13866:24:36;;13844:46;;13906:9;13901:230;13925:1;:8;13921:1;:12;13901:230;;;13955:9;13967:1;13969;13967:4;;;;;;;;:::i;:::-;;;;;;;13955:16;;14103:1;14097;14093:2;14089:10;14085:2;14081:19;14073:6;14069:32;14062:43;14043:77;13935:3;;;;;:::i;:::-;;;;13901:230;;;-1:-1:-1;14150:6:36;13760:404;-1:-1:-1;;13760:404:36:o;9350:117::-;9407:7;9434:25;9454:4;9434:19;:25::i;:::-;9427:32;9350:117;-1:-1:-1;;9350:117:36:o;13388:312::-;13466:7;13486:11;13510;13535:2;13524:1;:8;:13;:29;;13545:1;:8;13524:29;;;13540:2;13524:29;13510:43;;13569:9;13564:108;13588:3;13584:1;:7;13564:108;;;13654:5;:1;13658;13654:5;:::i;:::-;13628:1;13630:10;13639:1;13630:6;:10;:::i;:::-;13628:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;13628:13:36;13620:40;;13613:47;;;;;13593:3;;;;:::i;:::-;;;;13564:108;;;-1:-1:-1;13689:3:36;;13388:312;-1:-1:-1;;;;13388:312:36:o;1295:3381::-;1386:12;;;;1423:9;;;;1465:11;;;;1510:10;;;1487:33;;;;;;;;;;;;;;;;;;;1352:7;;-1:-1:-1;;;;;1386:12:36;;1423:9;;;1465:11;1352:7;;1487:33;;1510:10;;1487:33;;;1510:10;1487:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1574:15:36;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1574:21:36;;;;;;;;;1606:34;;1487:33;;-1:-1:-1;1574:21:36;:15;;-1:-1:-1;1606:34:36;;-1:-1:-1;1487:33:36;;1628:11;;1606:34;;:::i;:::-;;;;-1:-1:-1;;1606:34:36;;;;;;;;;1596:45;;1606:34;1596:45;;;;1574:68;;;;;;;;;;-1:-1:-1;1574:68:36;;;;1570:176;;;-1:-1:-1;;;;;1666:15:36;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1666:21:36;;;;;;;;;1698:34;;1666:21;;:10;1698:34;;1715:3;;1720:11;;1698:34;;:::i;:::-;;;;;;;;;;;;;1688:45;;;;;;1666:68;;;;;;;;;;;;1659:75;;;;;;1295:3381;;;:::o;1570:176::-;1756:17;1793:4;1799:12;1807:3;1799:7;:12::i;:::-;1776:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1756:56;;-1:-1:-1;;;;;;;;;;;599:37:36;;-1:-1:-1;;;;;1823:9:36;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1845:12;1886:17;1907:3;-1:-1:-1;;;;;1907:14:36;1922:4;1907:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1883:44:36;-1:-1:-1;1949:38:36;;-1:-1:-1;1883:44:36;1970:16;1975:11;1970:2;:16;:::i;:::-;1949:14;:38::i;:::-;2039:25;;-1:-1:-1;;;2039:25:36;;-1:-1:-1;;;;;7858:32:97;;2039:25:36;;;7840:51:97;1942:45:36;;-1:-1:-1;2012:22:36;;-1:-1:-1;;;;;;;;;;;;2039:11:36;;;7813:18:97;;2039:25:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2039:25:36;;;;;;;;;;;;:::i;:::-;2011:53;;;2079:5;:12;2095:1;2079:17;2075:2212;;;2113:12;-1:-1:-1;;;;;;;;;;;599:37:36;;-1:-1:-1;;;;;2128:7:36;;2136:3;2141:5;2147:1;2141:8;;;;;;;;:::i;:::-;;;;;;;2128:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2113:37;-1:-1:-1;2169:18:36;2165:108;;2213:44;2234:3;2247:5;2253:1;2247:8;;;;;;;;:::i;:::-;;;;;;;2239:17;;2213:44;;;;;;;:::i;:::-;;;;;;;;2165:108;2299:4;2291;:12;2287:243;;2324:190;;-1:-1:-1;;;2324:190:36;;;;;;;:::i;:::-;2549:86;2559:3;2564:4;2597:3;2602:11;2580:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2570:45;;;;;;2625:5;2631:1;2625:8;;;;;;;;:::i;:::-;;;;;;;2617:17;;2549:86;;;;;;;;;:::i;:::-;;;;;;;;2729:5;2735:1;2729:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2650:15:36;;2721:17;2650:15;;;;;;;;;;-1:-1:-1;;;;;;2650:21:36;;;;;;;;;2682:34;;2729:8;;2650:21;;2682:34;;2699:3;;2704:11;;2682:34;;:::i;:::-;;;;-1:-1:-1;;2682:34:36;;;;;;;;;2672:45;;2682:34;2672:45;;;;2650:68;;;;;;;;;;;;-1:-1:-1;2650:68:36;;;:88;;;;-1:-1:-1;;;;;2753:15:36;;;;2824:4;2753:10;;;:15;;;;;-1:-1:-1;;;;;;2753:21:36;;;;;;;;;2785:34;;2824:4;;-1:-1:-1;2785:34:36;;2802:3;;2807:11;;2785:34;;:::i;:::-;;;;;;;-1:-1:-1;;2785:34:36;;;;;;2775:45;;2785:34;2775:45;;;;2753:68;;;;;;;;;;-1:-1:-1;2753:68:36;:75;;-1:-1:-1;;2753:75:36;;;;;;;;;;-1:-1:-1;2075:2212:36;;;2865:1;2850:5;:12;:16;2846:1441;;;2888:9;2883:1286;2907:5;:12;2903:1;:16;2883:1286;;;2945:12;-1:-1:-1;;;;;;;;;;;599:37:36;;-1:-1:-1;;;;;2960:7:36;;2968:3;2973:5;2979:1;2973:8;;;;;;;;:::i;:::-;;;;;;;2960:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2945:37;-1:-1:-1;3005:18:36;3001:116;;3053:44;3074:3;3087:5;3093:1;3087:8;;;;;;;;:::i;:::-;;;;;;;3079:17;;3053:44;;;;;;;:::i;:::-;;;;;;;;3001:116;3147:4;3139;:12;3135:69;;3176:8;;;3135:69;3304:8;;3240:5;;;-1:-1:-1;;;;;;;;;;;3290:8:36;;;3299:3;;3304:5;;3310:1;;3304:8;;;;;;:::i;:::-;;;;;;;3314:7;3290:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:12;3395:17;3453:3;-1:-1:-1;;;;;3453:14:36;3468:4;3453:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3435:38:36;;-1:-1:-1;3435:38:36;-1:-1:-1;3503:38:36;3435;3524:16;3529:11;3524:2;:16;:::i;3503:38::-;3496:45;;3372:189;3585:7;:26;;;;;3604:7;3596:4;:15;3585:26;3581:525;;;3711:86;3721:3;3726:4;3759:3;3764:11;3742:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3732:45;;;;;;3787:5;3793:1;3787:8;;;;;;;;:::i;:::-;;;;;;;3779:17;;3711:86;;;;;;;;;:::i;:::-;;;;;;;;3899:5;3905:1;3899:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3820:15:36;;3891:17;3820:15;;;;;;;;;;-1:-1:-1;;;;;;3820:21:36;;;;;;;;;3852:34;;3899:8;;3820:21;;3852:34;;3869:3;;3874:11;;3852:34;;:::i;:::-;;;;;;;;;;;;;3842:45;;;;;;3820:68;;;;;;;;;;;:88;;;;4002:4;3931;:10;;:15;3942:3;-1:-1:-1;;;;;3931:15:36;-1:-1:-1;;;;;3931:15:36;;;;;;;;;;;;:21;3947:4;-1:-1:-1;;;;;3931:21:36;;-1:-1:-1;;;;;3931:21:36;;;;;;;;;;;;;:68;3980:3;3985:11;3963:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3953:45;;;;;;3931:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;599:37:36;;-1:-1:-1;;;;;4029:8:36;;4038:3;4043:5;4049:1;4043:8;;;;;;;;:::i;:::-;;;;;;;4053:4;4029:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4081:5;;;;;3581:525;-1:-1:-1;;;;;;;;;;;599:37:36;;-1:-1:-1;;;;;4124:8:36;;4133:3;4138:5;4144:1;4138:8;;;;;;;;:::i;:::-;;;;;;;4148:4;4124:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:1243;;;2883:1286;2921:3;;;;:::i;:::-;;;;2883:1286;;;;2846:1441;;;4201:74;;;-1:-1:-1;;;4201:74:36;;22913:2:97;4201:74:36;;;22895:21:97;22932:18;;;22925:30;;;;22991:34;22971:18;;;22964:62;23062:34;23042:18;;;23035:62;23114:19;;4201:74:36;22711:428:97;2846:1441:36;-1:-1:-1;;;;;4321:15:36;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4321:21:36;;;;;;;;;4353:34;;4321:21;;:15;4353:34;;4370:3;;4375:11;;4353:34;;:::i;:::-;;;;-1:-1:-1;;4353:34:36;;;;;;;;;4343:45;;4353:34;4343:45;;;;4321:68;;;;;;;;;;-1:-1:-1;4321:68:36;;;;4299:165;;;;-1:-1:-1;;;4299:165:36;;23749:2:97;4299:165:36;;;23731:21:97;23788:2;23768:18;;;23761:30;23827:34;23807:18;;;23800:62;-1:-1:-1;;;23878:18:97;;;23871:45;23933:19;;4299:165:36;23547:411:97;4299:165:36;4484:12;;;4477:19;;-1:-1:-1;;;;;;4477:19:36;;;4514:9;;;4507:16;;-1:-1:-1;;4507:16:36;;;4534:17;-1:-1:-1;4541:10:36;;4484:12;4534:17;:::i;:::-;4562:18;4569:11;;;4562:18;;;-1:-1:-1;;;;;4600:15:36;;;;;;;;;;;;-1:-1:-1;;;;;;4600:21:36;;;;;;;;;4632:34;;4600:21;;4562:18;4632:34;;4649:3;;4654:11;;4632:34;;:::i;:::-;;;;;;;;;;;;;4622:45;;;;;;4600:68;;;;;;;;;;;;4593:75;;;;;;;;;1295:3381;;;:::o;8692:404::-;8751:12;8776:19;8808:1;:8;8819:2;8808:13;;;;:::i;:::-;8798:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8798:24:36;;8776:46;;8838:9;8833:230;8857:1;:8;8853:1;:12;8833:230;;;8887:9;8899:1;8901;8899:4;;;;;;;;:::i;:::-;;;;;;;8887:16;;9035:1;9029;9025:2;9021:10;9017:2;9013:19;9005:6;9001:32;8994:43;8975:77;8867:3;;;;;:::i;:::-;;;;8833:230;;8372:312;8450:7;8470:11;8494;8519:2;8508:1;:8;:13;:29;;8529:1;:8;8508:29;;;8524:2;8508:29;8494:43;;8553:9;8548:108;8572:3;8568:1;:7;8548:108;;;8638:5;:1;8642;8638:5;:::i;:::-;8612:1;8614:10;8623:1;8614:6;:10;:::i;:::-;8612:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;8612:13:36;8604:40;;8597:47;;;;;8577:3;;;;:::i;:::-;;;;8548:108;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:720:97:-;79:5;132:3;125:4;117:6;113:17;109:27;99:55;;150:1;147;140:12;99:55;179:6;173:13;205:4;228:18;224:2;221:26;218:52;;;250:18;;:::i;:::-;296:2;293:1;289:10;319:28;343:2;339;335:11;319:28;:::i;:::-;381:15;;;412:12;;;;444:15;;;478;;;474:24;;471:33;-1:-1:-1;468:53:97;;;517:1;514;507:12;468:53;539:1;530:10;;549:156;563:2;560:1;557:9;549:156;;;620:10;;608:23;;581:1;574:9;;;;;651:12;;;;683;;549:156;;;-1:-1:-1;723:5:97;14:720;-1:-1:-1;;;;;;;14:720:97:o;739:164::-;815:13;;864;;857:21;847:32;;837:60;;893:1;890;883:12;908:163;986:13;;1039:6;1028:18;;1018:29;;1008:57;;1061:1;1058;1051:12;1076:251;1146:6;1199:2;1187:9;1178:7;1174:23;1170:32;1167:52;;;1215:1;1212;1205:12;1167:52;1247:9;1241:16;1266:31;1291:5;1266:31;:::i;1332:614::-;1461:6;1469;1522:2;1510:9;1501:7;1497:23;1493:32;1490:52;;;1538:1;1535;1528:12;1490:52;1571:9;1565:16;1600:18;1641:2;1633:6;1630:14;1627:34;;;1657:1;1654;1647:12;1627:34;1680:72;1744:7;1735:6;1724:9;1720:22;1680:72;:::i;:::-;1670:82;;1798:2;1787:9;1783:18;1777:25;1761:41;;1827:2;1817:8;1814:16;1811:36;;;1843:1;1840;1833:12;1811:36;;1866:74;1932:7;1921:8;1910:9;1906:24;1866:74;:::i;:::-;1856:84;;;1332:614;;;;;:::o;1951:202::-;2018:6;2071:2;2059:9;2050:7;2046:23;2042:32;2039:52;;;2087:1;2084;2077:12;2039:52;2110:37;2137:9;2110:37;:::i;2158:184::-;2228:6;2281:2;2269:9;2260:7;2256:23;2252:32;2249:52;;;2297:1;2294;2287:12;2249:52;-1:-1:-1;2320:16:97;;2158:184;-1:-1:-1;2158:184:97:o;2347:706::-;2427:6;2480:2;2468:9;2459:7;2455:23;2451:32;2448:52;;;2496:1;2493;2486:12;2448:52;2529:9;2523:16;2558:18;2599:2;2591:6;2588:14;2585:34;;;2615:1;2612;2605:12;2585:34;2653:6;2642:9;2638:22;2628:32;;2698:7;2691:4;2687:2;2683:13;2679:27;2669:55;;2720:1;2717;2710:12;2669:55;2749:2;2743:9;2771:2;2767;2764:10;2761:36;;;2777:18;;:::i;:::-;2819:53;2862:2;2843:13;;-1:-1:-1;;2839:27:97;2868:2;2835:36;2819:53;:::i;:::-;2806:66;;2895:2;2888:5;2881:17;2935:7;2930:2;2925;2921;2917:11;2913:20;2910:33;2907:53;;;2956:1;2953;2946:12;2907:53;2969:54;3020:2;3015;3008:5;3004:14;2999:2;2995;2991:11;2969:54;:::i;:::-;-1:-1:-1;3042:5:97;2347:706;-1:-1:-1;;;;2347:706:97:o;3058:903::-;3172:6;3180;3188;3196;3204;3212;3220;3273:3;3261:9;3252:7;3248:23;3244:33;3241:53;;;3290:1;3287;3280:12;3241:53;3322:9;3316:16;3341:31;3366:5;3341:31;:::i;:::-;3391:5;3381:15;;;3441:2;3430:9;3426:18;3420:25;3490:7;3487:1;3476:22;3467:7;3464:35;3454:63;;3513:1;3510;3503:12;3454:63;3536:7;-1:-1:-1;3562:48:97;3606:2;3591:18;;3562:48;:::i;:::-;3552:58;;3629:48;3673:2;3662:9;3658:18;3629:48;:::i;:::-;3619:58;;3696:49;3740:3;3729:9;3725:19;3696:49;:::i;:::-;3686:59;;3790:3;3779:9;3775:19;3769:26;3839:4;3830:7;3826:18;3817:7;3814:31;3804:59;;3859:1;3856;3849:12;3804:59;3882:7;-1:-1:-1;3908:47:97;3950:3;3935:19;;3908:47;:::i;:::-;3898:57;;3058:903;;;;;;;;;;:::o;3966:180::-;4025:6;4078:2;4066:9;4057:7;4053:23;4049:32;4046:52;;;4094:1;4091;4084:12;4046:52;-1:-1:-1;4117:23:97;;3966:180;-1:-1:-1;3966:180:97:o;4457:616::-;4509:3;4547:5;4541:12;4574:6;4569:3;4562:19;4600:4;4641:2;4636:3;4632:12;4666:11;4693;4686:18;;4743:6;4740:1;4736:14;4729:5;4725:26;4713:38;;4785:2;4778:5;4774:14;4806:1;4816:231;4830:6;4827:1;4824:13;4816:231;;;4901:5;4895:4;4891:16;4886:3;4879:29;4929:38;4962:4;4953:6;4947:13;4929:38;:::i;:::-;5025:12;;;;4921:46;-1:-1:-1;4990:15:97;;;;4852:1;4845:9;4816:231;;;-1:-1:-1;5063:4:97;;4457:616;-1:-1:-1;;;;;;;4457:616:97:o;5078:469::-;5139:3;5177:5;5171:12;5204:6;5199:3;5192:19;5230:4;5259:2;5254:3;5250:12;5243:19;;5281:5;5278:1;5271:16;5323:2;5320:1;5310:16;5344:1;5354:168;5368:6;5365:1;5362:13;5354:168;;;5429:13;;5417:26;;5463:12;;;;5510:1;5498:14;;;;5383:9;5354:168;;;-1:-1:-1;5538:3:97;;5078:469;-1:-1:-1;;;;;5078:469:97:o;5552:258::-;5594:3;5632:5;5626:12;5659:6;5654:3;5647:19;5675:63;5731:6;5724:4;5719:3;5715:14;5708:4;5701:5;5697:16;5675:63;:::i;:::-;5792:2;5771:15;-1:-1:-1;;5767:29:97;5758:39;;;;5799:4;5754:50;;5552:258;-1:-1:-1;;5552:258:97:o;6143:610::-;6389:13;;6332:3;;6363;;6442:4;6469:15;;;6332:3;6512:175;6526:6;6523:1;6520:13;6512:175;;;6589:13;;6575:28;;6625:14;;;;6662:15;;;;6548:1;6541:9;6512:175;;;-1:-1:-1;;6696:21:97;;;-1:-1:-1;6733:14:97;;;;;-1:-1:-1;;;6143:610:97:o;6758:371::-;-1:-1:-1;;;;;;6943:33:97;;6931:46;;7000:13;;6913:3;;7022:61;7000:13;7072:1;7063:11;;7056:4;7044:17;;7022:61;:::i;:::-;7103:16;;;;7121:1;7099:24;;6758:371;-1:-1:-1;;;6758:371:97:o;7134:274::-;7263:3;7301:6;7295:13;7317:53;7363:6;7358:3;7351:4;7343:6;7339:17;7317:53;:::i;:::-;7386:16;;;;;7134:274;-1:-1:-1;;7134:274:97:o;9839:::-;-1:-1:-1;;;;;10031:32:97;;;;10013:51;;10095:2;10080:18;;10073:34;10001:2;9986:18;;9839:274::o;10118:345::-;-1:-1:-1;;;;;10338:32:97;;;;10320:51;;10402:2;10387:18;;10380:34;;;;10445:2;10430:18;;10423:34;10308:2;10293:18;;10118:345::o;10468:442::-;-1:-1:-1;;;;;10715:32:97;;;;10697:51;;-1:-1:-1;;;;;;10784:33:97;;;;10779:2;10764:18;;10757:61;10849:2;10834:18;;10827:34;10892:2;10877:18;;10870:34;10684:3;10669:19;;10468:442::o;12804:658::-;12975:2;13027:21;;;13097:13;;13000:18;;;13119:22;;;12946:4;;12975:2;13198:15;;;;13172:2;13157:18;;;12946:4;13241:195;13255:6;13252:1;13249:13;13241:195;;;13320:13;;-1:-1:-1;;;;;13316:39:97;13304:52;;13411:15;;;;13376:12;;;;13352:1;13270:9;13241:195;;;-1:-1:-1;13453:3:97;;12804:658;-1:-1:-1;;;;;;12804:658:97:o;13467:280::-;13666:2;13655:9;13648:21;13629:4;13686:55;13737:2;13726:9;13722:18;13714:6;13686:55;:::i;13752:1077::-;13958:4;13987:2;14027;14016:9;14012:18;14057:2;14046:9;14039:21;14080:6;14115;14109:13;14146:6;14138;14131:22;14172:2;14162:12;;14205:2;14194:9;14190:18;14183:25;;14267:2;14257:6;14254:1;14250:14;14239:9;14235:30;14231:39;14305:2;14297:6;14293:15;14326:1;14336:464;14350:6;14347:1;14344:13;14336:464;;;14415:22;;;-1:-1:-1;;14411:36:97;14399:49;;14471:13;;14516:9;;-1:-1:-1;;;;;14512:35:97;14497:51;;14587:11;;14581:18;14619:15;;;14612:27;;;14662:58;14704:15;;;14581:18;14662:58;:::i;:::-;14778:12;;;;14652:68;-1:-1:-1;;14743:15:97;;;;14372:1;14365:9;14336:464;;;-1:-1:-1;14817:6:97;;13752:1077;-1:-1:-1;;;;;;;;13752:1077:97:o;14834:1569::-;15038:4;15067:2;15107;15096:9;15092:18;15137:2;15126:9;15119:21;15160:6;15195;15189:13;15226:6;15218;15211:22;15252:2;15242:12;;15285:2;15274:9;15270:18;15263:25;;15347:2;15337:6;15334:1;15330:14;15319:9;15315:30;15311:39;15385:2;15377:6;15373:15;15406:1;15427;15437:937;15453:6;15448:3;15445:15;15437:937;;;15522:22;;;-1:-1:-1;;15518:36:97;15506:49;;15578:13;;15665:9;;-1:-1:-1;;;;;15661:35:97;15646:51;;15736:11;;15730:18;15768:15;;;15761:27;;;15849:19;;15618:15;;;15881:24;;;15971:21;;;;16016:1;;15939:2;15927:15;;;16030:236;16046:8;16041:3;16038:17;16030:236;;;16127:15;;-1:-1:-1;;;;;;16123:42:97;16109:57;;16235:17;;;;16074:1;16065:11;;;;;16192:14;;;;16030:236;;;-1:-1:-1;16352:12:97;;;;16289:5;-1:-1:-1;;;16317:15:97;;;;15479:1;15470:11;15437:937;;;-1:-1:-1;16391:6:97;;14834:1569;-1:-1:-1;;;;;;;;;14834:1569:97:o;16600:1141::-;16917:4;16965:3;16954:9;16950:19;16996:6;16985:9;16978:25;17022:2;17060:3;17055:2;17044:9;17040:18;17033:31;17084:6;17119;17113:13;17150:6;17142;17135:22;17188:3;17177:9;17173:19;17166:26;;17211:6;17208:1;17201:17;17254:2;17251:1;17241:16;17227:30;;17275:1;17285:194;17299:6;17296:1;17293:13;17285:194;;;17364:13;;-1:-1:-1;;;;;17360:39:97;17348:52;;17396:1;17455:14;;;;17420:12;;;;17314:9;17285:194;;;17289:3;;17524:9;17519:3;17515:19;17510:2;17499:9;17495:18;17488:47;17558:49;17603:3;17595:6;17558:49;:::i;:::-;17544:63;;;;17655:9;17647:6;17643:22;17638:2;17627:9;17623:18;17616:50;17683:52;17728:6;17720;17683:52;:::i;:::-;17675:60;16600:1141;-1:-1:-1;;;;;;;16600:1141:97:o;20977:220::-;21126:2;21115:9;21108:21;21089:4;21146:45;21187:2;21176:9;21172:18;21164:6;21146:45;:::i;21202:291::-;21379:2;21368:9;21361:21;21342:4;21399:45;21440:2;21429:9;21425:18;21417:6;21399:45;:::i;:::-;21391:53;;21480:6;21475:2;21464:9;21460:18;21453:34;21202:291;;;;;:::o;21498:1208::-;21607:4;21636:2;21665;21654:9;21647:21;21688:1;21721:6;21715:13;21751:3;21773:1;21801:9;21797:2;21793:18;21783:28;;21861:2;21850:9;21846:18;21883;21873:61;;21927:4;21919:6;21915:17;21905:27;;21873:61;21980:2;21972:6;21969:14;21949:18;21946:38;21943:165;;;-1:-1:-1;;;22007:33:97;;22063:4;22060:1;22053:15;22093:4;22014:3;22081:17;21943:165;22175:18;;;31003:19;;;31055:4;31046:14;22218:18;22245:100;;;;22359:1;22354:326;;;;22211:469;;22245:100;-1:-1:-1;;22278:24:97;;22266:37;;22323:12;;;;-1:-1:-1;22245:100:97;;22354:326;30852:1;30845:14;;;30889:4;30876:18;;22460:1;22474:165;22488:6;22485:1;22482:13;22474:165;;;22566:14;;22553:11;;;22546:35;22609:16;;;;22503:10;;22474:165;;;22659:11;;;-1:-1:-1;;22211:469:97;-1:-1:-1;22697:3:97;;21498:1208;-1:-1:-1;;;;;;;;;21498:1208:97:o;23963:556::-;24165:2;24147:21;;;24204:3;24184:18;;;24177:31;24244:34;24239:2;24224:18;;24217:62;24315:34;24310:2;24295:18;;24288:62;24387:34;24381:3;24366:19;;24359:63;-1:-1:-1;;;24453:3:97;24438:19;;24431:46;24509:3;24494:19;;23963:556::o;25335:374::-;25565:2;25554:9;25547:21;25528:4;25585:49;25630:2;25619:9;25615:18;5892:2;5880:15;;-1:-1:-1;;;5920:4:97;5911:14;;5904:36;5965:2;5956:12;;5815:159;25585:49;-1:-1:-1;;;;;25670:32:97;;;;25665:2;25650:18;;;;25643:60;;;;-1:-1:-1;25577:57:97;25335:374::o;25714:440::-;25964:2;25953:9;25946:21;25927:4;25990:49;26035:2;26024:9;26020:18;5892:2;5880:15;;-1:-1:-1;;;5920:4:97;5911:14;;5904:36;5965:2;5956:12;;5815:159;25990:49;26087:9;26079:6;26075:22;26070:2;26059:9;26055:18;26048:50;26115:33;26141:6;26133;26115:33;:::i;:::-;26107:41;25714:440;-1:-1:-1;;;;25714:440:97:o;26159:348::-;26389:2;26378:9;26371:21;26352:4;26409:49;26454:2;26443:9;26439:18;5892:2;5880:15;;-1:-1:-1;;;5920:4:97;5911:14;;5904:36;5965:2;5956:12;;5815:159;26409:49;26401:57;;26494:6;26489:2;26478:9;26474:18;26467:34;26159:348;;;;:::o;26512:1452::-;27117:3;27129:21;;;27186:2;27166:18;;;27159:30;-1:-1:-1;;;27220:3:97;27205:19;;27198:45;27262:3;27296:4;27281:20;;27274:32;;;27342:1;27322:18;;;27315:29;-1:-1:-1;;;27375:3:97;27360:19;;27353:35;27455:2;27440:18;;27433:34;;;-1:-1:-1;;;;;4414:31:97;;27526:2;27511:18;;4402:44;27420:3;27405:19;;27567:6;27561:3;27550:9;27546:19;27539:35;27583:55;27633:3;27622:9;27618:19;27610:6;-1:-1:-1;;;;;4414:31:97;4402:44;;4340:112;27583:55;-1:-1:-1;;;;;4414:31:97;;;27697:3;27682:19;;4402:44;4414:31;;;27761:3;27746:19;;4402:44;4414:31;;;27825:3;27810:19;;4402:44;4414:31;;;27889:3;27874:19;;4402:44;4414:31;;;27953:3;27938:19;;;4402:44;;;;26512:1452;;-1:-1:-1;;;;26512:1452:97:o;27969:374::-;28199:2;28188:9;28181:21;28162:4;28219:49;28264:2;28253:9;28249:18;6056:2;6044:15;;-1:-1:-1;;;6084:4:97;6075:14;;6068:36;6129:2;6120:12;;5979:159;28348:440;28598:2;28587:9;28580:21;28561:4;28624:49;28669:2;28658:9;28654:18;6056:2;6044:15;;-1:-1:-1;;;6084:4:97;6075:14;;6068:36;6129:2;6120:12;;5979:159;28793:348;29023:2;29012:9;29005:21;28986:4;29043:49;29088:2;29077:9;29073:18;6056:2;6044:15;;-1:-1:-1;;;6084:4:97;6075:14;;6068:36;6129:2;6120:12;;5979:159;29146:797;29435:13;;-1:-1:-1;;;;;29431:22:97;;;29413:41;;29514:4;29502:17;;;29496:24;29492:33;;29470:20;;;29463:63;29586:4;29574:17;;;29568:24;29594:8;29564:39;29542:20;;;29535:69;29664:4;29652:17;;;29646:24;29642:33;;29620:20;;;29613:63;29732:4;29720:17;;;29714:24;29692:20;;;29685:54;29393:3;29783:17;;;29777:24;29755:20;;;29748:54;29858:4;29846:17;;;29840:24;29818:20;;;29811:54;29925:4;29913:17;;;29907:24;29903:33;29881:20;;;29874:63;;;;29362:3;29347:19;;29146:797::o;30488:275::-;30559:2;30553:9;30624:2;30605:13;;-1:-1:-1;;30601:27:97;30589:40;;30659:18;30644:34;;30680:22;;;30641:62;30638:88;;;30706:18;;:::i;:::-;30742:2;30735:22;30488:275;;-1:-1:-1;30488:275:97:o;31071:128::-;31111:3;31142:1;31138:6;31135:1;31132:13;31129:39;;;31148:18;;:::i;:::-;-1:-1:-1;31184:9:97;;31071:128::o;31204:168::-;31244:7;31310:1;31306;31302:6;31298:14;31295:1;31292:21;31287:1;31280:9;31273:17;31269:45;31266:71;;;31317:18;;:::i;:::-;-1:-1:-1;31357:9:97;;31204:168::o;31377:258::-;31449:1;31459:113;31473:6;31470:1;31467:13;31459:113;;;31549:11;;;31543:18;31530:11;;;31523:39;31495:2;31488:10;31459:113;;;31590:6;31587:1;31584:13;31581:48;;;-1:-1:-1;;31625:1:97;31607:16;;31600:27;31377:258::o;31640:380::-;31719:1;31715:12;;;;31762;;;31783:61;;31837:4;31829:6;31825:17;31815:27;;31783:61;31890:2;31882:6;31879:14;31859:18;31856:38;31853:161;;;31936:10;31931:3;31927:20;31924:1;31917:31;31971:4;31968:1;31961:15;31999:4;31996:1;31989:15;31853:161;;31640:380;;;:::o;32025:135::-;32064:3;-1:-1:-1;;32085:17:97;;32082:43;;;32105:18;;:::i;:::-;-1:-1:-1;32152:1:97;32141:13;;32025:135::o;32165:127::-;32226:10;32221:3;32217:20;32214:1;32207:31;32257:4;32254:1;32247:15;32281:4;32278:1;32271:15;32297:127;32358:10;32353:3;32349:20;32346:1;32339:31;32389:4;32386:1;32379:15;32413:4;32410:1;32403:15;32429:127;32490:10;32485:3;32481:20;32478:1;32471:31;32521:4;32518:1;32511:15;32545:4;32542:1;32535:15;32561:131;-1:-1:-1;;;;;32636:31:97;;32626:42;;32616:70;;32682:1;32679;32672:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BNB()": "58f7f6d2",
    "BONE()": "c36596a6",
    "BabyDoge()": "d1a72ed6",
    "CURVE()": "3a3c3b87",
    "DAI()": "e0bab4c4",
    "ELON()": "2fab7aea",
    "FLOKI()": "2f9f8c13",
    "FactoryV2()": "d5bfbe4c",
    "FactoryV3()": "c2867f20",
    "HarryPotterObamaSonic10Inu()": "0fb405b7",
    "IS_TEST()": "fa7626d4",
    "LEASH()": "ad39e5fd",
    "LINK()": "1b6b6d23",
    "MEME()": "2e7b0948",
    "PEPE()": "e4fbaecb",
    "QUOTER()": "8dae88c2",
    "SHIB()": "e24b85e7",
    "SwapRouterV2()": "ce2da055",
    "SwapRouterV3()": "d1a3925a",
    "UNI()": "541bcb76",
    "WBTC()": "4dede3de",
    "WETH9()": "4aa4a4fc",
    "WSM()": "5725a977",
    "WXRP()": "d8280a7e",
    "assetList(uint256)": "a0b4b301",
    "dai()": "f4b9fa75",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "factory()": "c45a0155",
    "factoryV3()": "1d5f45f5",
    "failed()": "ba414fa6",
    "indexToken()": "e7d015f2",
    "initializeAssetList()": "e1497cff",
    "oracle()": "7dc0d1d0",
    "quoter()": "c6bbd5a7",
    "setUp()": "0a9254e4",
    "swapRouter()": "c31c9c07",
    "swapVersions(uint256)": "5b718560",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testBlock()": "38d6c81c",
    "testGetPrice()": "2a888735",
    "testInitialized()": "0e7628c6",
    "testIssuanceWithEth()": "85f65a27",
    "testIssuanceWithTokens()": "5cc6f954",
    "testOracleList()": "39c66af1",
    "testSwap()": "6e008a03",
    "tokenShares(uint256)": "3ae64e0c",
    "updateOracleList()": "95d5772d",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeRatePerDayScaled\",\"type\":\"uint256\"}],\"name\":\"FeeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"methodologist\",\"type\":\"address\"}],\"name\":\"MethodologistSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"methodology\",\"type\":\"string\"}],\"name\":\"MethodologySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintFeeToReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"SupplyCeilingSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRestricted\",\"type\":\"bool\"}],\"name\":\"ToggledRestricted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BabyDoge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CURVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ELON\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLOKI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FactoryV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FactoryV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HarryPotterObamaSonic10Inu\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEASH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MEME\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PEPE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHIB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SwapRouterV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SwapRouterV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WSM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WXRP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IndexFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryV3\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexToken\",\"outputs\":[{\"internalType\":\"contract IndexToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeAssetList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract MockApiOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"contract IQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"swapVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIssuanceWithEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIssuanceWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOracleList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwap\",\"outputs\":[{\"internalType\":\"contract TestSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateOracleList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/IndexTokenFactory.t.sol\":\"CounterTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/factory/IndexFactory.sol\":{\"keccak256\":\"0x76a71a331d3fcef1799fb9a1b3593871da8f7ca462a85df01dc97f4b95bd437c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55a00b3ab105371e7653e98daf5e7f3f3313ffbd05a44c291a342e7f1ea2f147\",\"dweb:/ipfs/QmYYs7NRopcjeKpQ3PRBYW19SF5iBCpdjcj2kuVtBZrVeG\"]},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xb039ad91b6085aa9b1339072f5aab0d4c5b66c7cca2b80053f21307feab7e498\",\"urls\":[\"bzz-raw://06e4d0d4f480a233ad0362458c845afc3b3e8e153b6f58161caaa5fc13324e7c\",\"dweb:/ipfs/QmXvm8goJsdoLjWCDNgcFPieSoJm4hvTKmoKtTcbQYHbex\"]},\"contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x90b99057688a80fe2344dc12047db39490b0d3672f32512f308d75e5539e9b22\",\"urls\":[\"bzz-raw://98345e471311762dcd4c8ce954ca448ce798815ad3492746726650acf64eba25\",\"dweb:/ipfs/QmUGPBBvhSgbZCq5Cawt7P5AX38WoYX7f3jKw1SSdsuMhV\"]},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0xf0cf73251d12bc74c7fa4a92fec66bd6e77a0f9c5c76e7dabf4f7145bc9d9ec4\",\"urls\":[\"bzz-raw://71f01e841269fae77e51e1cd725c3a8b514cf0ab8ab77624c48d299db8609ccc\",\"dweb:/ipfs/QmTrabnQ7HpuiBEYxAJZWQE6iHoSf89Ad545SPcHb2CA2W\"]},\"contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x849b51880895815bcfc84b4b660fedae95612f814084860c855d905b3a78830b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://196befeddd2f3fbba1a2f9c84fbb7387180f61ba5c3640d465abfa90be64515e\",\"dweb:/ipfs/QmZkSW6eNZeD9NVTTKeCiPpxY3C4Mf1HHH5BrypaR2Tsif\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2\",\"dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro\"]},\"contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x2a1203a982f477fc8c9e6bf3b9189cd9fcbf75a86a0ceb133b5ade3ff6d464db\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3a45ba66a916cce5f2c897829201cec76cd4670c17d11388d6e7457d641e5981\",\"dweb:/ipfs/QmYJgYx2y98A9TTtkUJ8A66Hu7tcXbRDk7Ng25TWSBW7Yy\"]},\"contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0x77b10716cd03e543440af3d92a68fd0316dc857b232b2fb34f8fea378e6e1f96\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a3663072ea331f7c375c08895045afcd9a847e6e69ee8b5a06c1eed64111baee\",\"dweb:/ipfs/QmQHaLiJSLUqr4ikQUZ9edmbXsLCRo6X881RFxzkpJXMkD\"]},\"contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0x4f65f1f9e253311980d031d85338742939beaeea20d10834b58d397483b6bf01\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4c704da7cec1464a94afd20426bbfcd028f98b49d6337e412db9a29e04159e8\",\"dweb:/ipfs/QmdYWeGzeLuab75RaHLLxy9Lwwy5RjTX76zcEXgCBgsgMr\"]},\"contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x35ad671af6dc4e1826e4cfc95eeee7d05b41222c91ff0f930f14f90d6b67bad3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9437fe522a4c239b74577e7c1c124d1dda2fc5876c9ff2d3447d38de7aec00ce\",\"dweb:/ipfs/QmaDhDyuo1uANPDwUDsfQtW2pFqeFic7ujaSStbG1fMJPc\"]},\"contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x3987c968f344c38ffe2c6722a96fa813829850b75dee91ac3ca840d19778f08b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d46c695389a8354d6ae853575d111b146e2ad4462dd9547b51951dfdb926fe37\",\"dweb:/ipfs/QmVLPideqDGYxf8jTEhSMGg5R6HZW3pApE5t9wQHJwADw8\"]},\"contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x6cbc7997317eeeb1556f3eb2dfc3687c6e59a8b50a9603d755501fd9eccdada4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e52777a66fedc4c3448cbabe8885ae8daeeac42ce4705cdec9bd667f7804306\",\"dweb:/ipfs/QmVZ9dRCj56rK9ZgesKAQap6bDRKdEsVeRv64Si42LV5Pk\"]},\"contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x9e87b8eb3ac1e7ab4eca0054217e265cc67d13d583e2645d4dfcd35b91889c79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea51e01a588bfb14c1377e430382ceca2926961e4e9d20f8d0eb8f4c423bb20c\",\"dweb:/ipfs/QmcvQ4bt7xuMFoKXKLs5jQPt6Z1nru4k1sBX5eA4A1G67T\"]},\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x98f8df4eeddbeffac13b91aee976d9bccb7a866be8073f55b13f95b214ba5afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1987e919bd75258c05cbaa691545a7555f09c664d1f657749ce19309ec2ab4d4\",\"dweb:/ipfs/Qmdx9e4wVAR94Ej9qM1FRHDZ6WBgXHRpJBwozwZAuVpnUF\"]},\"contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0x7efc566f04b02c84ddcafc4a8ec134f099a255b5d3f54afc7b49fe16a7818252\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9871cbac1a4a3159c75a7279134dc15b01b63b5975f40df5e151cbd72187b944\",\"dweb:/ipfs/QmZaDg41mATrwyevdFCpvASkn36xi5vmCJ14L6L8h3Wxjo\"]},\"contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x37d79844cca46b38abf4c0969567c731c2c6ac2d98f65ea44bfcd6e32f3a7f0f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c76e3fdae638dc2b08fc53eddf614a679660f16d5b544c9c2f31420741c773c3\",\"dweb:/ipfs/Qmcwd8jd2yhEjr6tDPAcWdZcUKSKx4BXnksGgcNc2xLjkm\"]},\"contracts/proposable/ProposableOwnableUpgradeable.sol\":{\"keccak256\":\"0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65\",\"dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72\"]},\"contracts/test/LinkToken.sol\":{\"keccak256\":\"0xac1b483b01db9f5f20d76d1deb5a75e1f454ef9048d04817576236468b0e3884\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9417c186bfb06c004f421ae5efec185063076c0bb729a7e00a9fab9839d33010\",\"dweb:/ipfs/QmRw6aekTLJjscgM79JcyY5hjv4LH8o2Ng8cErMAdeDbMV\"]},\"contracts/test/MockApiOracle.sol\":{\"keccak256\":\"0x41773ec7b1ff0a7e132034d1eb1eacd8c9494e9e90ddeb2cc8d6ea0174e1c278\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38e65e87565ed9aa3cad5a66981993fc1c2671a89a7c9f39dd113b6c715849a2\",\"dweb:/ipfs/Qmbq7oc6awYvrFJxGx754xe1ttAeoVp2yntQ8SKaLhAN3G\"]},\"contracts/test/MockV3Aggregator.sol\":{\"keccak256\":\"0x7fc96b521298f9ad72fec0208a98435da1f02d821626f54313ca50fd544a55db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07a0f2e7c5c51605c298bfdf9487740566a9686b304362d6c73c6dd5396d67fc\",\"dweb:/ipfs/QmPg2GY3xjCZtZHqGWsdTEpHTB9o73CLRhz8XM48Pjqfj9\"]},\"contracts/test/TestSwap.sol\":{\"keccak256\":\"0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b\",\"dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW\"]},\"contracts/test/libs/LinkTokenReceiver.sol\":{\"keccak256\":\"0x221baf5efeb32e9f0eceebb7556d1e94f0677e0432da0beac17c1bdec6aa04c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb5d72ba9a4472100ef3755a64e7516726344f1b499b934994c96df0d3d0001\",\"dweb:/ipfs/QmVGYdMSyi3oKx5QkU8q9ELUyv9Y7QE8erandAVSf9PG6L\"]},\"contracts/test/libs/SafeMathChainlink.sol\":{\"keccak256\":\"0x60cb79389647fba9e6aac2be7a4995c78839546e5dd9b73b5c4c9b0beb30f882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c83d59e05254c95818f00663ae174fd084697613477a83925f750165d8983d3a\",\"dweb:/ipfs/QmetcPnpPG4WUT397ggx6fXJLMNp8pKb24jagPXKUDvUhW\"]},\"contracts/token/IndexToken.sol\":{\"keccak256\":\"0xa4a770d03c8d38588b118f33f4a9e4bd145c97362a0e54c3c5e2756ccf0dbc50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21aa9ce1ff3c34f4ee4af1c5282fca9669569b5255ed023287579794032738cd\",\"dweb:/ipfs/QmfJ9W5jUx3CKEiNy7aRL4Wa56dBHSzS2KZPW6KKN5U1mT\"]},\"contracts/token/RequestNFT.sol\":{\"keccak256\":\"0xa0409797f3ae6a1b7859c2ce9a6ba297e1b0b8edb31e12f2de682c7b1a14b522\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adb5a8545b04090f2b1585e127801d5e92198a080c8990920f3f3c05af36b1ea\",\"dweb:/ipfs/QmRDCcgCVKGw3K5RccVYbpeXzmemfAhtEaWGxDEcFeQY49\"]},\"contracts/token/TokenInterface.sol\":{\"keccak256\":\"0xf928abf1e7c62da780bd92fcfe85320afa6be336e3cd9c83a5da901dc2ecd710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://512f00a70ce82640a62c6a7684e21cc43f09f2d6b7ca0251225fc54128e7d41c\",\"dweb:/ipfs/QmQGr9drQxgSb1LXyB6LGJGB3HagthFoUZzXP5y2DruX71\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3\",\"dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731\",\"dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a\",\"dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f\",\"dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c\",\"dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a\",\"dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254\",\"dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f\",\"dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc\",\"dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1\",\"dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh\"]},\"node_modules/@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fbfa4cee3ce9fe3f5be6eda7e3304263d77b514be0bf5fadffa24d3f654ad2d\",\"dweb:/ipfs/QmTQmA4AJ9NookAyTg9DP6Mem6X8WSHJ5WjQJvqhE8K9qV\"]},\"node_modules/@chainlink/contracts/src/v0.8/ChainlinkClient.sol\":{\"keccak256\":\"0xa221ccfa4763977cc78c57e3a83d47f5aaf7c15535a2c20dba5f46af80fb3bd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba0f668a6f55a546ac1fe7fbf8539878a62811c1b0606fb4fadafb62f661e853\",\"dweb:/ipfs/QmTUmXvjWQno67W4CUdkVyTRAwSKWrko8EPjtizzavNVLJ\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a\",\"dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40958fa820d41025822fe423111c74d5b8d0dfe1a30ae4fba4f6896a55fc2868\",\"dweb:/ipfs/QmbwYCM5k6h43T6qQV8DEpUxv5uErVSTCD6Fqm5DMLDgNi\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ed9275abc614a37a13f86c148f3a4341d955a6b52a1a655357505e0926caab\",\"dweb:/ipfs/Qmaqgq3HiakdSBAe9NtGXYMxVFBjTkLbzyiiyjJUJ1g1M3\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8fbc2ccf2b3dfc8249306b7dc63624a4ec6f6ee43649d631f7363710c763b6\",\"dweb:/ipfs/QmePqh8R8EZMygYkawshsWArTrVA8VCdamLGV6ZZsVJgTz\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ec80973bbc95f59ce3a46aadd7761df6e4131bda14a01a265d76a8e007dd5d\",\"dweb:/ipfs/QmXwhsxjbkuXSHu6SX6tZxrQCXrdnJ4o2M7b3yFSgcWR1f\"]},\"node_modules/@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol\":{\"keccak256\":\"0x7a5ac06d48ad507a441c8de5f813765f3beed7fb47aa88b26ad34c020ea0c644\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecae51d09e8cb28f7d12203a3fdf44254a73ad9e95074d763a4803bd7a1c3f43\",\"dweb:/ipfs/QmayV4kJPUg5eVUw9N3HyJCzuS2SR5N6299j8Krc2RJH38\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88cb96caa94128821daec5478c0f3646902007b81a0604b2e3ab79ea2f40b056\",\"dweb:/ipfs/Qmd1nu9CpgouPmukNQpZThxKgPZAayXxqBfwbDVHfMrCrF\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d47a793b314afe9cd82fcf05ffe4ebbfa5504c2decc83004edbb3b2069d4f0c3\",\"dweb:/ipfs/Qmd2YLSiS8xeeXqireh6qJgTTwVY2VscZpv2cQBU8gkEJT\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63b50d13ca97c4dd62738398bb2e423a36563b827b0af94c0e7a47cf0d4a2e6b\",\"dweb:/ipfs/QmXjy7BmtnPeCLMaMnGGnsxDPGxohfDpYzP8PnUoh6gBGa\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC721Supply.sol\":{\"keccak256\":\"0x1d39805301405a873830fa9a837e7da4c8982c1a9d7e0fb7733d605e73bada3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6660876244819d0117b0c18bbbc986f2c70d1f83e39afa77f0a1517de47c7321\",\"dweb:/ipfs/QmbCKPURANj1CWQjjJTyqygWe5kRC4tNGsSC4eiq26g9Pr\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0x0c8ad17afea99676d4dbab1857f52a7660b67602a79d03abd0a4c742074bbeb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://692d64ac089a389d2e955d92c75e9f3ee642257a39c91c2efa7493a21e79d61a\",\"dweb:/ipfs/QmVSGRBRjeh4APNHjHD5GbYY7BrBhWRj8aHkmqHJQwQiK1\"]},\"test/foundry/IndexTokenFactory.t.sol\":{\"keccak256\":\"0x7a2b914ad437159089d135ca57578db20a312884438ee6b310f0fbda9400389f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4e049062b9d795d868ab8152334d67fc14b04db57d7257d11694f3c8a6a33c0a\",\"dweb:/ipfs/QmSYMedGkdBuBf3gsRdjsZbDdS2vsfQctDvMiUvf9BxLRc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "feeRatePerDayScaled",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeRateSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeReceiverSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "methodologist",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MethodologistSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "methodology",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MethodologySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintFeeToReceiver",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MinterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supplyCeiling",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupplyCeilingSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isRestricted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ToggledRestricted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BNB",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BONE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BabyDoge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CURVE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ELON",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FLOKI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FactoryV2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FactoryV3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HarryPotterObamaSonic10Inu",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LEASH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LINK",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MEME",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PEPE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SHIB",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SwapRouterV2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SwapRouterV3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UNI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WBTC",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WSM",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WXRP",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetList",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dai",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "contract IndexFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryV3",
          "outputs": [
            {
              "internalType": "contract IUniswapV3Factory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "indexToken",
          "outputs": [
            {
              "internalType": "contract IndexToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeAssetList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "contract MockApiOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quoter",
          "outputs": [
            {
              "internalType": "contract IQuoter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "swapVersions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBlock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetPrice"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIssuanceWithEth"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIssuanceWithTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOracleList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testSwap",
          "outputs": [
            {
              "internalType": "contract TestSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOracleList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/IndexTokenFactory.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/factory/IndexFactory.sol": {
        "keccak256": "0x76a71a331d3fcef1799fb9a1b3593871da8f7ca462a85df01dc97f4b95bd437c",
        "urls": [
          "bzz-raw://55a00b3ab105371e7653e98daf5e7f3f3313ffbd05a44c291a342e7f1ea2f147",
          "dweb:/ipfs/QmYYs7NRopcjeKpQ3PRBYW19SF5iBCpdjcj2kuVtBZrVeG"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IUniswapV2Factory.sol": {
        "keccak256": "0xb039ad91b6085aa9b1339072f5aab0d4c5b66c7cca2b80053f21307feab7e498",
        "urls": [
          "bzz-raw://06e4d0d4f480a233ad0362458c845afc3b3e8e153b6f58161caaa5fc13324e7c",
          "dweb:/ipfs/QmXvm8goJsdoLjWCDNgcFPieSoJm4hvTKmoKtTcbQYHbex"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV2Router01.sol": {
        "keccak256": "0x90b99057688a80fe2344dc12047db39490b0d3672f32512f308d75e5539e9b22",
        "urls": [
          "bzz-raw://98345e471311762dcd4c8ce954ca448ce798815ad3492746726650acf64eba25",
          "dweb:/ipfs/QmUGPBBvhSgbZCq5Cawt7P5AX38WoYX7f3jKw1SSdsuMhV"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV2Router02.sol": {
        "keccak256": "0xf0cf73251d12bc74c7fa4a92fec66bd6e77a0f9c5c76e7dabf4f7145bc9d9ec4",
        "urls": [
          "bzz-raw://71f01e841269fae77e51e1cd725c3a8b514cf0ab8ab77624c48d299db8609ccc",
          "dweb:/ipfs/QmTrabnQ7HpuiBEYxAJZWQE6iHoSf89Ad545SPcHb2CA2W"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x849b51880895815bcfc84b4b660fedae95612f814084860c855d905b3a78830b",
        "urls": [
          "bzz-raw://196befeddd2f3fbba1a2f9c84fbb7387180f61ba5c3640d465abfa90be64515e",
          "dweb:/ipfs/QmZkSW6eNZeD9NVTTKeCiPpxY3C4Mf1HHH5BrypaR2Tsif"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9",
        "urls": [
          "bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2",
          "dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x2a1203a982f477fc8c9e6bf3b9189cd9fcbf75a86a0ceb133b5ade3ff6d464db",
        "urls": [
          "bzz-raw://3a45ba66a916cce5f2c897829201cec76cd4670c17d11388d6e7457d641e5981",
          "dweb:/ipfs/QmYJgYx2y98A9TTtkUJ8A66Hu7tcXbRDk7Ng25TWSBW7Yy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0x77b10716cd03e543440af3d92a68fd0316dc857b232b2fb34f8fea378e6e1f96",
        "urls": [
          "bzz-raw://a3663072ea331f7c375c08895045afcd9a847e6e69ee8b5a06c1eed64111baee",
          "dweb:/ipfs/QmQHaLiJSLUqr4ikQUZ9edmbXsLCRo6X881RFxzkpJXMkD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0x4f65f1f9e253311980d031d85338742939beaeea20d10834b58d397483b6bf01",
        "urls": [
          "bzz-raw://c4c704da7cec1464a94afd20426bbfcd028f98b49d6337e412db9a29e04159e8",
          "dweb:/ipfs/QmdYWeGzeLuab75RaHLLxy9Lwwy5RjTX76zcEXgCBgsgMr"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x35ad671af6dc4e1826e4cfc95eeee7d05b41222c91ff0f930f14f90d6b67bad3",
        "urls": [
          "bzz-raw://9437fe522a4c239b74577e7c1c124d1dda2fc5876c9ff2d3447d38de7aec00ce",
          "dweb:/ipfs/QmaDhDyuo1uANPDwUDsfQtW2pFqeFic7ujaSStbG1fMJPc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0x3987c968f344c38ffe2c6722a96fa813829850b75dee91ac3ca840d19778f08b",
        "urls": [
          "bzz-raw://d46c695389a8354d6ae853575d111b146e2ad4462dd9547b51951dfdb926fe37",
          "dweb:/ipfs/QmVLPideqDGYxf8jTEhSMGg5R6HZW3pApE5t9wQHJwADw8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x6cbc7997317eeeb1556f3eb2dfc3687c6e59a8b50a9603d755501fd9eccdada4",
        "urls": [
          "bzz-raw://6e52777a66fedc4c3448cbabe8885ae8daeeac42ce4705cdec9bd667f7804306",
          "dweb:/ipfs/QmVZ9dRCj56rK9ZgesKAQap6bDRKdEsVeRv64Si42LV5Pk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x9e87b8eb3ac1e7ab4eca0054217e265cc67d13d583e2645d4dfcd35b91889c79",
        "urls": [
          "bzz-raw://ea51e01a588bfb14c1377e430382ceca2926961e4e9d20f8d0eb8f4c423bb20c",
          "dweb:/ipfs/QmcvQ4bt7xuMFoKXKLs5jQPt6Z1nru4k1sBX5eA4A1G67T"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FullMath.sol": {
        "keccak256": "0x98f8df4eeddbeffac13b91aee976d9bccb7a866be8073f55b13f95b214ba5afb",
        "urls": [
          "bzz-raw://1987e919bd75258c05cbaa691545a7555f09c664d1f657749ce19309ec2ab4d4",
          "dweb:/ipfs/Qmdx9e4wVAR94Ej9qM1FRHDZ6WBgXHRpJBwozwZAuVpnUF"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0x7efc566f04b02c84ddcafc4a8ec134f099a255b5d3f54afc7b49fe16a7818252",
        "urls": [
          "bzz-raw://9871cbac1a4a3159c75a7279134dc15b01b63b5975f40df5e151cbd72187b944",
          "dweb:/ipfs/QmZaDg41mATrwyevdFCpvASkn36xi5vmCJ14L6L8h3Wxjo"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/TickMath.sol": {
        "keccak256": "0x37d79844cca46b38abf4c0969567c731c2c6ac2d98f65ea44bfcd6e32f3a7f0f",
        "urls": [
          "bzz-raw://c76e3fdae638dc2b08fc53eddf614a679660f16d5b544c9c2f31420741c773c3",
          "dweb:/ipfs/Qmcwd8jd2yhEjr6tDPAcWdZcUKSKx4BXnksGgcNc2xLjkm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/proposable/ProposableOwnableUpgradeable.sol": {
        "keccak256": "0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70",
        "urls": [
          "bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65",
          "dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72"
        ],
        "license": "MIT"
      },
      "contracts/test/LinkToken.sol": {
        "keccak256": "0xac1b483b01db9f5f20d76d1deb5a75e1f454ef9048d04817576236468b0e3884",
        "urls": [
          "bzz-raw://9417c186bfb06c004f421ae5efec185063076c0bb729a7e00a9fab9839d33010",
          "dweb:/ipfs/QmRw6aekTLJjscgM79JcyY5hjv4LH8o2Ng8cErMAdeDbMV"
        ],
        "license": "MIT"
      },
      "contracts/test/MockApiOracle.sol": {
        "keccak256": "0x41773ec7b1ff0a7e132034d1eb1eacd8c9494e9e90ddeb2cc8d6ea0174e1c278",
        "urls": [
          "bzz-raw://38e65e87565ed9aa3cad5a66981993fc1c2671a89a7c9f39dd113b6c715849a2",
          "dweb:/ipfs/Qmbq7oc6awYvrFJxGx754xe1ttAeoVp2yntQ8SKaLhAN3G"
        ],
        "license": "MIT"
      },
      "contracts/test/MockV3Aggregator.sol": {
        "keccak256": "0x7fc96b521298f9ad72fec0208a98435da1f02d821626f54313ca50fd544a55db",
        "urls": [
          "bzz-raw://07a0f2e7c5c51605c298bfdf9487740566a9686b304362d6c73c6dd5396d67fc",
          "dweb:/ipfs/QmPg2GY3xjCZtZHqGWsdTEpHTB9o73CLRhz8XM48Pjqfj9"
        ],
        "license": "MIT"
      },
      "contracts/test/TestSwap.sol": {
        "keccak256": "0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3",
        "urls": [
          "bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b",
          "dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/libs/LinkTokenReceiver.sol": {
        "keccak256": "0x221baf5efeb32e9f0eceebb7556d1e94f0677e0432da0beac17c1bdec6aa04c0",
        "urls": [
          "bzz-raw://dfb5d72ba9a4472100ef3755a64e7516726344f1b499b934994c96df0d3d0001",
          "dweb:/ipfs/QmVGYdMSyi3oKx5QkU8q9ELUyv9Y7QE8erandAVSf9PG6L"
        ],
        "license": "MIT"
      },
      "contracts/test/libs/SafeMathChainlink.sol": {
        "keccak256": "0x60cb79389647fba9e6aac2be7a4995c78839546e5dd9b73b5c4c9b0beb30f882",
        "urls": [
          "bzz-raw://c83d59e05254c95818f00663ae174fd084697613477a83925f750165d8983d3a",
          "dweb:/ipfs/QmetcPnpPG4WUT397ggx6fXJLMNp8pKb24jagPXKUDvUhW"
        ],
        "license": "MIT"
      },
      "contracts/token/IndexToken.sol": {
        "keccak256": "0xa4a770d03c8d38588b118f33f4a9e4bd145c97362a0e54c3c5e2756ccf0dbc50",
        "urls": [
          "bzz-raw://21aa9ce1ff3c34f4ee4af1c5282fca9669569b5255ed023287579794032738cd",
          "dweb:/ipfs/QmfJ9W5jUx3CKEiNy7aRL4Wa56dBHSzS2KZPW6KKN5U1mT"
        ],
        "license": "MIT"
      },
      "contracts/token/RequestNFT.sol": {
        "keccak256": "0xa0409797f3ae6a1b7859c2ce9a6ba297e1b0b8edb31e12f2de682c7b1a14b522",
        "urls": [
          "bzz-raw://adb5a8545b04090f2b1585e127801d5e92198a080c8990920f3f3c05af36b1ea",
          "dweb:/ipfs/QmRDCcgCVKGw3K5RccVYbpeXzmemfAhtEaWGxDEcFeQY49"
        ],
        "license": "MIT"
      },
      "contracts/token/TokenInterface.sol": {
        "keccak256": "0xf928abf1e7c62da780bd92fcfe85320afa6be336e3cd9c83a5da901dc2ecd710",
        "urls": [
          "bzz-raw://512f00a70ce82640a62c6a7684e21cc43f09f2d6b7ca0251225fc54128e7d41c",
          "dweb:/ipfs/QmQGr9drQxgSb1LXyB6LGJGB3HagthFoUZzXP5y2DruX71"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261",
        "urls": [
          "bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379",
          "dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e",
        "urls": [
          "bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3",
          "dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc",
        "urls": [
          "bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731",
          "dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52",
        "urls": [
          "bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a",
          "dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb",
        "urls": [
          "bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f",
          "dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04",
        "urls": [
          "bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c",
          "dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417",
        "urls": [
          "bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a",
          "dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357",
        "urls": [
          "bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254",
          "dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a",
        "urls": [
          "bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f",
          "dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a",
        "urls": [
          "bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc",
          "dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb",
        "urls": [
          "bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4",
          "dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb",
        "urls": [
          "bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1",
          "dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/Chainlink.sol": {
        "keccak256": "0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105",
        "urls": [
          "bzz-raw://6fbfa4cee3ce9fe3f5be6eda7e3304263d77b514be0bf5fadffa24d3f654ad2d",
          "dweb:/ipfs/QmTQmA4AJ9NookAyTg9DP6Mem6X8WSHJ5WjQJvqhE8K9qV"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/ChainlinkClient.sol": {
        "keccak256": "0xa221ccfa4763977cc78c57e3a83d47f5aaf7c15535a2c20dba5f46af80fb3bd7",
        "urls": [
          "bzz-raw://ba0f668a6f55a546ac1fe7fbf8539878a62811c1b0606fb4fadafb62f661e853",
          "dweb:/ipfs/QmTUmXvjWQno67W4CUdkVyTRAwSKWrko8EPjtizzavNVLJ"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol": {
        "keccak256": "0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04",
        "urls": [
          "bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a",
          "dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol": {
        "keccak256": "0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0",
        "urls": [
          "bzz-raw://40958fa820d41025822fe423111c74d5b8d0dfe1a30ae4fba4f6896a55fc2868",
          "dweb:/ipfs/QmbwYCM5k6h43T6qQV8DEpUxv5uErVSTCD6Fqm5DMLDgNi"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
        "keccak256": "0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5",
        "urls": [
          "bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd",
          "dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol": {
        "keccak256": "0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68",
        "urls": [
          "bzz-raw://b6ed9275abc614a37a13f86c148f3a4341d955a6b52a1a655357505e0926caab",
          "dweb:/ipfs/Qmaqgq3HiakdSBAe9NtGXYMxVFBjTkLbzyiiyjJUJ1g1M3"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol": {
        "keccak256": "0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a",
        "urls": [
          "bzz-raw://ba8fbc2ccf2b3dfc8249306b7dc63624a4ec6f6ee43649d631f7363710c763b6",
          "dweb:/ipfs/QmePqh8R8EZMygYkawshsWArTrVA8VCdamLGV6ZZsVJgTz"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol": {
        "keccak256": "0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7",
        "urls": [
          "bzz-raw://12ec80973bbc95f59ce3a46aadd7761df6e4131bda14a01a265d76a8e007dd5d",
          "dweb:/ipfs/QmXwhsxjbkuXSHu6SX6tZxrQCXrdnJ4o2M7b3yFSgcWR1f"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol": {
        "keccak256": "0x7a5ac06d48ad507a441c8de5f813765f3beed7fb47aa88b26ad34c020ea0c644",
        "urls": [
          "bzz-raw://ecae51d09e8cb28f7d12203a3fdf44254a73ad9e95074d763a4803bd7a1c3f43",
          "dweb:/ipfs/QmayV4kJPUg5eVUw9N3HyJCzuS2SR5N6299j8Krc2RJH38"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol": {
        "keccak256": "0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d",
        "urls": [
          "bzz-raw://88cb96caa94128821daec5478c0f3646902007b81a0604b2e3ab79ea2f40b056",
          "dweb:/ipfs/Qmd1nu9CpgouPmukNQpZThxKgPZAayXxqBfwbDVHfMrCrF"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol": {
        "keccak256": "0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48",
        "urls": [
          "bzz-raw://d47a793b314afe9cd82fcf05ffe4ebbfa5504c2decc83004edbb3b2069d4f0c3",
          "dweb:/ipfs/Qmd2YLSiS8xeeXqireh6qJgTTwVY2VscZpv2cQBU8gkEJT"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol": {
        "keccak256": "0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d",
        "urls": [
          "bzz-raw://63b50d13ca97c4dd62738398bb2e423a36563b827b0af94c0e7a47cf0d4a2e6b",
          "dweb:/ipfs/QmXjy7BmtnPeCLMaMnGGnsxDPGxohfDpYzP8PnUoh6gBGa"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4",
        "urls": [
          "bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6",
          "dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c",
        "urls": [
          "bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8",
          "dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
        "keccak256": "0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37",
        "urls": [
          "bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f",
          "dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC721Supply.sol": {
        "keccak256": "0x1d39805301405a873830fa9a837e7da4c8982c1a9d7e0fb7733d605e73bada3f",
        "urls": [
          "bzz-raw://6660876244819d0117b0c18bbbc986f2c70d1f83e39afa77f0a1517de47c7321",
          "dweb:/ipfs/QmbCKPURANj1CWQjjJTyqygWe5kRC4tNGsSC4eiq26g9Pr"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": {
        "keccak256": "0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff",
        "urls": [
          "bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417",
          "dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0x0c8ad17afea99676d4dbab1857f52a7660b67602a79d03abd0a4c742074bbeb3",
        "urls": [
          "bzz-raw://692d64ac089a389d2e955d92c75e9f3ee642257a39c91c2efa7493a21e79d61a",
          "dweb:/ipfs/QmVSGRBRjeh4APNHjHD5GbYY7BrBhWRj8aHkmqHJQwQiK1"
        ],
        "license": "MIT"
      },
      "test/foundry/IndexTokenFactory.t.sol": {
        "keccak256": "0x7a2b914ad437159089d135ca57578db20a312884438ee6b310f0fbda9400389f",
        "urls": [
          "bzz-raw://4e049062b9d795d868ab8152334d67fc14b04db57d7257d11694f3c8a6a33c0a",
          "dweb:/ipfs/QmSYMedGkdBuBf3gsRdjsZbDdS2vsfQctDvMiUvf9BxLRc"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/IndexTokenFactory.t.sol",
    "id": 10036,
    "exportedSymbols": {
      "Address": [
        61339
      ],
      "AddressUpgradeable": [
        6662
      ],
      "AggregatorInterface": [
        61640
      ],
      "AggregatorV2V3Interface": [
        60679
      ],
      "AggregatorV3Interface": [
        61686
      ],
      "Base64": [
        15594
      ],
      "BufferChainlink": [
        4732
      ],
      "CBORChainlink": [
        5179
      ],
      "Chainlink": [
        3410
      ],
      "ChainlinkClient": [
        4003
      ],
      "ChainlinkRequestInterface": [
        11976
      ],
      "Context": [
        59721
      ],
      "ContextUpgradeable": [
        6704
      ],
      "CounterTest": [
        10035
      ],
      "DSTest": [
        18352
      ],
      "ENSInterface": [
        4083
      ],
      "ENSResolver_Chainlink": [
        5189
      ],
      "ERC165": [
        61592
      ],
      "ERC20": [
        13936
      ],
      "ERC20Upgradeable": [
        6229
      ],
      "ERC677": [
        12100
      ],
      "ERC677Receiver": [
        12111
      ],
      "ERC677Token": [
        12204
      ],
      "ERC721": [
        60670
      ],
      "ERC721URIStorage": [
        15534
      ],
      "FullMath": [
        14719
      ],
      "IERC165": [
        61698
      ],
      "IERC20": [
        11532
      ],
      "IERC20Metadata": [
        59699
      ],
      "IERC20MetadataUpgradeable": [
        6332
      ],
      "IERC20Upgradeable": [
        6307
      ],
      "IERC4906": [
        59743
      ],
      "IERC721": [
        60964
      ],
      "IERC721Metadata": [
        61009
      ],
      "IERC721Receiver": [
        60982
      ],
      "IERC721Supply": [
        15544
      ],
      "IQuoter": [
        11672
      ],
      "ISwapRouter": [
        11772
      ],
      "IUniswapV2Factory": [
        10292
      ],
      "IUniswapV2Router01": [
        14542
      ],
      "IUniswapV2Router02": [
        10380
      ],
      "IUniswapV3Factory": [
        11615
      ],
      "IUniswapV3Pool": [
        13255
      ],
      "IUniswapV3PoolActions": [
        59322
      ],
      "IUniswapV3PoolDerivedState": [
        59353
      ],
      "IUniswapV3PoolErrors": [
        59381
      ],
      "IUniswapV3PoolEvents": [
        59500
      ],
      "IUniswapV3PoolImmutables": [
        59540
      ],
      "IUniswapV3PoolOwnerActions": [
        59566
      ],
      "IUniswapV3PoolState": [
        59674
      ],
      "IUniswapV3SwapCallback": [
        15608
      ],
      "IWETH": [
        10397
      ],
      "IndexFactory": [
        2015
      ],
      "IndexToken": [
        2992
      ],
      "Initializable": [
        5490
      ],
      "LinkERC20": [
        12244
      ],
      "LinkToken": [
        12345
      ],
      "LinkTokenInterface": [
        12071
      ],
      "LinkTokenReceiver": [
        15715
      ],
      "Math": [
        62564
      ],
      "MockApiOracle": [
        13169
      ],
      "MockV3Aggregator": [
        16060
      ],
      "OperatorInterface": [
        4163
      ],
      "OracleInterface": [
        4202
      ],
      "OracleLibrary": [
        11015
      ],
      "Ownable": [
        15378
      ],
      "OwnableUpgradeable": [
        5321
      ],
      "PausableUpgradeable": [
        5617
      ],
      "PointerInterface": [
        4210
      ],
      "ProposableOwnableUpgradeable": [
        2087
      ],
      "RequestNFT": [
        11454
      ],
      "SafeMathChainlink": [
        15854
      ],
      "SignedMath": [
        62669
      ],
      "StdAssertions": [
        19845
      ],
      "StdChains": [
        20609
      ],
      "StdCheats": [
        23462
      ],
      "StdInvariant": [
        23787
      ],
      "StdStorage": [
        24553
      ],
      "StdStyle": [
        27403
      ],
      "StdUtils": [
        28251
      ],
      "Strings": [
        61568
      ],
      "Test": [
        13223
      ],
      "TestBase": [
        18418
      ],
      "TestSwap": [
        13349
      ],
      "TickMath": [
        15265
      ],
      "TokenInterface": [
        3141
      ],
      "TransferHelper": [
        11943
      ],
      "Vm": [
        29962
      ],
      "console": [
        38026
      ],
      "console2": [
        46151
      ],
      "safeconsole": [
        59226
      ],
      "stdError": [
        23528
      ],
      "stdJson": [
        24379
      ],
      "stdMath": [
        24521
      ],
      "stdStorage": [
        26192
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:16102:95",
    "nodes": [
      {
        "id": 8715,
        "nodeType": "PragmaDirective",
        "src": "40:23:95",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 8716,
        "nodeType": "ImportDirective",
        "src": "67:28:95",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 13224,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8717,
        "nodeType": "ImportDirective",
        "src": "97:46:95",
        "nodes": [],
        "absolutePath": "contracts/token/IndexToken.sol",
        "file": "../../contracts/token/IndexToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 2993,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8718,
        "nodeType": "ImportDirective",
        "src": "145:50:95",
        "nodes": [],
        "absolutePath": "contracts/factory/IndexFactory.sol",
        "file": "../../contracts/factory/IndexFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 2016,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8719,
        "nodeType": "ImportDirective",
        "src": "197:43:95",
        "nodes": [],
        "absolutePath": "contracts/test/TestSwap.sol",
        "file": "../../contracts/test/TestSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 13350,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8720,
        "nodeType": "ImportDirective",
        "src": "242:55:95",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 13937,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8721,
        "nodeType": "ImportDirective",
        "src": "299:55:95",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 13937,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8722,
        "nodeType": "ImportDirective",
        "src": "356:68:95",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 11773,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8723,
        "nodeType": "ImportDirective",
        "src": "426:70:95",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 11944,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8724,
        "nodeType": "ImportDirective",
        "src": "498:64:95",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 11673,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8725,
        "nodeType": "ImportDirective",
        "src": "564:51:95",
        "nodes": [],
        "absolutePath": "contracts/test/MockV3Aggregator.sol",
        "file": "../../contracts/test/MockV3Aggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 13173,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8726,
        "nodeType": "ImportDirective",
        "src": "617:48:95",
        "nodes": [],
        "absolutePath": "contracts/test/MockApiOracle.sol",
        "file": "../../contracts/test/MockApiOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 13170,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8727,
        "nodeType": "ImportDirective",
        "src": "667:44:95",
        "nodes": [],
        "absolutePath": "contracts/test/LinkToken.sol",
        "file": "../../contracts/test/LinkToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 12347,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8728,
        "nodeType": "ImportDirective",
        "src": "713:55:95",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IUniswapV3Pool.sol",
        "file": "../../contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10036,
        "sourceUnit": 13256,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10035,
        "nodeType": "ContractDefinition",
        "src": "772:15370:95",
        "nodes": [
          {
            "id": 8734,
            "nodeType": "UsingForDirective",
            "src": "810:32:95",
            "nodes": [],
            "libraryName": {
              "id": 8731,
              "name": "stdStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26192,
              "src": "816:10:95"
            },
            "typeName": {
              "id": 8733,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8732,
                "name": "StdStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24553,
                "src": "831:10:95"
              },
              "referencedDeclaration": 24553,
              "src": "831:10:95",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 8737,
            "nodeType": "VariableDeclaration",
            "src": "850:39:95",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SCALAR",
            "nameLocation": "876:6:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8735,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "850:7:95",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653230",
              "id": 8736,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "885:4:95",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "1e20"
            },
            "visibility": "internal"
          },
          {
            "id": 8740,
            "nodeType": "VariableDeclaration",
            "src": "898:28:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "e7d015f2",
            "mutability": "mutable",
            "name": "indexToken",
            "nameLocation": "916:10:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexToken_$2992",
              "typeString": "contract IndexToken"
            },
            "typeName": {
              "id": 8739,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8738,
                "name": "IndexToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2992,
                "src": "898:10:95"
              },
              "referencedDeclaration": 2992,
              "src": "898:10:95",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexToken_$2992",
                "typeString": "contract IndexToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8743,
            "nodeType": "VariableDeclaration",
            "src": "933:27:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "c45a0155",
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "953:7:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexFactory_$2015",
              "typeString": "contract IndexFactory"
            },
            "typeName": {
              "id": 8742,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8741,
                "name": "IndexFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2015,
                "src": "933:12:95"
              },
              "referencedDeclaration": 2015,
              "src": "933:12:95",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexFactory_$2015",
                "typeString": "contract IndexFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8746,
            "nodeType": "VariableDeclaration",
            "src": "967:24:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "6e008a03",
            "mutability": "mutable",
            "name": "testSwap",
            "nameLocation": "983:8:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestSwap_$13349",
              "typeString": "contract TestSwap"
            },
            "typeName": {
              "id": 8745,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8744,
                "name": "TestSwap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13349,
                "src": "967:8:95"
              },
              "referencedDeclaration": 13349,
              "src": "967:8:95",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestSwap_$13349",
                "typeString": "contract TestSwap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8748,
            "nodeType": "VariableDeclaration",
            "src": "1000:19:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mainnetFork",
            "nameLocation": "1008:11:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8747,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1000:7:95",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 8754,
            "nodeType": "VariableDeclaration",
            "src": "1028:32:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "feeReceiver",
            "nameLocation": "1036:11:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8749,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1028:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 8752,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1058:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "expression": {
                  "id": 8750,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18411,
                  "src": "1050:2:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$29962",
                    "typeString": "contract Vm"
                  }
                },
                "id": 8751,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 28322,
                "src": "1050:7:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 8753,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1050:10:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 8760,
            "nodeType": "VariableDeclaration",
            "src": "1067:35:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newFeeReceiver",
            "nameLocation": "1075:14:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8755,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1067:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "32",
                  "id": 8758,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1100:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  }
                ],
                "expression": {
                  "id": 8756,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18411,
                  "src": "1092:2:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$29962",
                    "typeString": "contract Vm"
                  }
                },
                "id": 8757,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 28322,
                "src": "1092:7:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 8759,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1092:10:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 8766,
            "nodeType": "VariableDeclaration",
            "src": "1109:27:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "1117:6:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8761,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1109:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "33",
                  "id": 8764,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1134:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  }
                ],
                "expression": {
                  "id": 8762,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18411,
                  "src": "1126:2:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$29962",
                    "typeString": "contract Vm"
                  }
                },
                "id": 8763,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 28322,
                "src": "1126:7:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 8765,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1126:10:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 8772,
            "nodeType": "VariableDeclaration",
            "src": "1143:30:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newMinter",
            "nameLocation": "1151:9:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8767,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1143:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "34",
                  "id": 8770,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1171:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  },
                  "value": "4"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  }
                ],
                "expression": {
                  "id": 8768,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18411,
                  "src": "1163:2:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$29962",
                    "typeString": "contract Vm"
                  }
                },
                "id": 8769,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 28322,
                "src": "1163:7:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 8771,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1163:10:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 8778,
            "nodeType": "VariableDeclaration",
            "src": "1180:34:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "methodologist",
            "nameLocation": "1188:13:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8773,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1180:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "35",
                  "id": 8776,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1212:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  },
                  "value": "5"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  }
                ],
                "expression": {
                  "id": 8774,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18411,
                  "src": "1204:2:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$29962",
                    "typeString": "contract Vm"
                  }
                },
                "id": 8775,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 28322,
                "src": "1204:7:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 8777,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1204:10:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 8784,
            "nodeType": "VariableDeclaration",
            "src": "1221:26:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1229:5:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8779,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1221:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "36",
                  "id": 8782,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1245:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  }
                ],
                "expression": {
                  "id": 8780,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18411,
                  "src": "1237:2:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$29962",
                    "typeString": "contract Vm"
                  }
                },
                "id": 8781,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 28322,
                "src": "1237:7:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 8783,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1237:10:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 8790,
            "nodeType": "VariableDeclaration",
            "src": "1254:25:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "add1",
            "nameLocation": "1262:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8785,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1254:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "37",
                  "id": 8788,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1277:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_7_by_1",
                    "typeString": "int_const 7"
                  },
                  "value": "7"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_7_by_1",
                    "typeString": "int_const 7"
                  }
                ],
                "expression": {
                  "id": 8786,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18411,
                  "src": "1269:2:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$29962",
                    "typeString": "contract Vm"
                  }
                },
                "id": 8787,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 28322,
                "src": "1269:7:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 8789,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1269:10:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 8793,
            "nodeType": "VariableDeclaration",
            "src": "1288:72:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "e0bab4c4",
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "1312:3:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8791,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1288:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 8792,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1318:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "id": 8799,
            "nodeType": "VariableDeclaration",
            "src": "1538:116:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "1d5f45f5",
            "mutability": "constant",
            "name": "factoryV3",
            "nameLocation": "1572:9:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Factory_$11615",
              "typeString": "contract IUniswapV3Factory"
            },
            "typeName": {
              "id": 8795,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8794,
                "name": "IUniswapV3Factory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11615,
                "src": "1538:17:95"
              },
              "referencedDeclaration": 11615,
              "src": "1538:17:95",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Factory_$11615",
                "typeString": "contract IUniswapV3Factory"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
                  "id": 8797,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1611:42:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 8796,
                "name": "IUniswapV3Factory",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 11615,
                "src": "1593:17:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$11615_$",
                  "typeString": "type(contract IUniswapV3Factory)"
                }
              },
              "id": 8798,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1593:61:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Factory_$11615",
                "typeString": "contract IUniswapV3Factory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8802,
            "nodeType": "VariableDeclaration",
            "src": "1667:64:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "e24b85e7",
            "mutability": "mutable",
            "name": "SHIB",
            "nameLocation": "1682:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8800,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1667:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839356144363162306131353064373932313964434636344531453643633031663042363443346345",
              "id": 8801,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1689:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE"
            },
            "visibility": "public"
          },
          {
            "id": 8805,
            "nodeType": "VariableDeclaration",
            "src": "1738:73:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "e4fbaecb",
            "mutability": "constant",
            "name": "PEPE",
            "nameLocation": "1762:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8803,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1738:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836393832353038313435343534436533323564446245343761323564346563336432333131393333",
              "id": 8804,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1769:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6982508145454Ce325dDbE47a25d4ec3d2311933"
            },
            "visibility": "public"
          },
          {
            "id": 8808,
            "nodeType": "VariableDeclaration",
            "src": "1818:74:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "2f9f8c13",
            "mutability": "constant",
            "name": "FLOKI",
            "nameLocation": "1842:5:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8806,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1818:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863663043313232633662373366663830394336393344423736316537426165426536326236613245",
              "id": 8807,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1850:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xcf0C122c6b73ff809C693DB761e7BaeBe62b6a2E"
            },
            "visibility": "public"
          },
          {
            "id": 8811,
            "nodeType": "VariableDeclaration",
            "src": "1899:73:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "2e7b0948",
            "mutability": "constant",
            "name": "MEME",
            "nameLocation": "1923:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8809,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1899:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862313331663441353539303742313064314630413530643861623846413039454333343263643734",
              "id": 8810,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1930:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb131f4A55907B10d1F0A50d8ab8FA09EC342cd74"
            },
            "visibility": "public"
          },
          {
            "id": 8814,
            "nodeType": "VariableDeclaration",
            "src": "1979:77:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "d1a72ed6",
            "mutability": "constant",
            "name": "BabyDoge",
            "nameLocation": "2003:8:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8812,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1979:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841433537446539433141303946654336343845393345423938383735423231324442306434363042",
              "id": 8813,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2014:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xAC57De9C1A09FeC648E93EB98875B212DB0d460B"
            },
            "visibility": "public"
          },
          {
            "id": 8817,
            "nodeType": "VariableDeclaration",
            "src": "2063:73:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "c36596a6",
            "mutability": "constant",
            "name": "BONE",
            "nameLocation": "2087:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8815,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2063:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839383133303337656532323138373939353937643833443461354236463362363737383231386439",
              "id": 8816,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2094:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x9813037ee2218799597d83D4a5B6F3b6778218d9"
            },
            "visibility": "public"
          },
          {
            "id": 8820,
            "nodeType": "VariableDeclaration",
            "src": "2143:95:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "0fb405b7",
            "mutability": "constant",
            "name": "HarryPotterObamaSonic10Inu",
            "nameLocation": "2167:26:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8818,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2143:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837326534663946383038433439413261363164453943353839363239383932304463344545456139",
              "id": 8819,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2196:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x72e4f9F808C49A2a61dE9C5896298920Dc4EEEa9"
            },
            "visibility": "public"
          },
          {
            "id": 8823,
            "nodeType": "VariableDeclaration",
            "src": "2245:73:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "2fab7aea",
            "mutability": "constant",
            "name": "ELON",
            "nameLocation": "2269:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8821,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2245:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837363144333865356464663663636636436637633535373539643532313037353042354436304633",
              "id": 8822,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2276:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x761D38e5ddf6ccf6Cf7c55759d5210750B5D60F3"
            },
            "visibility": "public"
          },
          {
            "id": 8826,
            "nodeType": "VariableDeclaration",
            "src": "2325:72:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "5725a977",
            "mutability": "constant",
            "name": "WSM",
            "nameLocation": "2349:3:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8824,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2325:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307842363245343563334466363131646345323336413644646337413439336437394639444661644566",
              "id": 8825,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2355:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xB62E45c3Df611dcE236A6Ddc7A493d79F9DFadEf"
            },
            "visibility": "public"
          },
          {
            "id": 8829,
            "nodeType": "VariableDeclaration",
            "src": "2404:74:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "ad39e5fd",
            "mutability": "constant",
            "name": "LEASH",
            "nameLocation": "2428:5:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8827,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2404:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832374337304364313934363739354236366265396439353434313835343639393862353436363334",
              "id": 8828,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2436:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x27C70Cd1946795B66be9d954418546998b546634"
            },
            "visibility": "public"
          },
          {
            "id": 8832,
            "nodeType": "VariableDeclaration",
            "src": "2487:73:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "4dede3de",
            "mutability": "constant",
            "name": "WBTC",
            "nameLocation": "2511:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8830,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2487:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307832323630464143354535353432613737334161343466424366654466374331393362633243353939",
              "id": 8831,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2518:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"
            },
            "visibility": "public"
          },
          {
            "id": 8835,
            "nodeType": "VariableDeclaration",
            "src": "2567:72:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "58f7f6d2",
            "mutability": "constant",
            "name": "BNB",
            "nameLocation": "2591:3:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8833,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2567:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834313844373566363561303262334435334232343138464238453166653439333735396337363035",
              "id": 8834,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2597:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x418D75f65a02b3D53B2418FB8E1fe493759c7605"
            },
            "visibility": "public"
          },
          {
            "id": 8838,
            "nodeType": "VariableDeclaration",
            "src": "2646:73:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "d8280a7e",
            "mutability": "constant",
            "name": "WXRP",
            "nameLocation": "2670:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8836,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2646:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831453032453265443133394635426166366266614430346330453631454262303131306441363533",
              "id": 8837,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2677:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1E02E2eD139F5Baf6bfaD04c0E61EBb0110dA653"
            },
            "visibility": "public"
          },
          {
            "id": 8841,
            "nodeType": "VariableDeclaration",
            "src": "2726:74:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "3a3c3b87",
            "mutability": "constant",
            "name": "CURVE",
            "nameLocation": "2750:5:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8839,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2726:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
              "id": 8840,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2758:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
            },
            "visibility": "public"
          },
          {
            "id": 8844,
            "nodeType": "VariableDeclaration",
            "src": "2807:73:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "1b6b6d23",
            "mutability": "constant",
            "name": "LINK",
            "nameLocation": "2831:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8842,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2807:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835313439313037373141463943613635366166383430646666383345383236344563463938364341",
              "id": 8843,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2838:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x514910771AF9Ca656af840dff83E8264EcF986CA"
            },
            "visibility": "public"
          },
          {
            "id": 8847,
            "nodeType": "VariableDeclaration",
            "src": "2887:72:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "541bcb76",
            "mutability": "constant",
            "name": "UNI",
            "nameLocation": "2911:3:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8845,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2887:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831663938343061383564356146356266314431373632463932354244414464433432303146393834",
              "id": 8846,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2917:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984"
            },
            "visibility": "public"
          },
          {
            "id": 8856,
            "nodeType": "VariableDeclaration",
            "src": "2968:312:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0b4b301",
            "mutability": "mutable",
            "name": "assetList",
            "nameLocation": "2985:9:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 8848,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2968:7:95",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 8849,
              "nodeType": "ArrayTypeName",
              "src": "2968:9:95",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": {
              "components": [
                {
                  "id": 8850,
                  "name": "WBTC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8832,
                  "src": "3008:4:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 8851,
                  "name": "BNB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8835,
                  "src": "3023:3:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 8852,
                  "name": "CURVE",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8841,
                  "src": "3037:5:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 8853,
                  "name": "LINK",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8844,
                  "src": "3053:4:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 8854,
                  "name": "UNI",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8847,
                  "src": "3068:3:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "id": 8855,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "2997:283:95",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                "typeString": "address[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8865,
            "nodeType": "VariableDeclaration",
            "src": "3289:209:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "3ae64e0c",
            "mutability": "mutable",
            "name": "tokenShares",
            "nameLocation": "3303:11:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 8857,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3289:4:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 8858,
              "nodeType": "ArrayTypeName",
              "src": "3289:6:95",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "3230653138",
                  "id": 8859,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3328:5:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 8860,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3344:5:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 8861,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3360:5:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 8862,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3376:5:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 8863,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3392:5:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                }
              ],
              "id": 8864,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "3317:181:95",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint72_$5_memory_ptr",
                "typeString": "uint72[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8874,
            "nodeType": "VariableDeclaration",
            "src": "3507:243:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "5b718560",
            "mutability": "mutable",
            "name": "swapVersions",
            "nameLocation": "3521:12:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 8866,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3507:4:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 8867,
              "nodeType": "ArrayTypeName",
              "src": "3507:6:95",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "33",
                  "id": 8868,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3547:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 8869,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3559:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 8870,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3571:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 8871,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3583:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 8872,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3595:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "id": 8873,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "3536:214:95",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
                "typeString": "uint8[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8880,
            "nodeType": "VariableDeclaration",
            "src": "3759:105:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "c31c9c07",
            "mutability": "constant",
            "name": "swapRouter",
            "nameLocation": "3787:10:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$11772",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 8876,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8875,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11772,
                "src": "3759:11:95"
              },
              "referencedDeclaration": 11772,
              "src": "3759:11:95",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$11772",
                "typeString": "contract ISwapRouter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                  "id": 8878,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3821:42:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 8877,
                "name": "ISwapRouter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 11772,
                "src": "3809:11:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$11772_$",
                  "typeString": "type(contract ISwapRouter)"
                }
              },
              "id": 8879,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3809:55:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$11772",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8883,
            "nodeType": "VariableDeclaration",
            "src": "3877:74:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "mutability": "constant",
            "name": "WETH9",
            "nameLocation": "3901:5:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8881,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3877:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 8882,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3909:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "id": 8886,
            "nodeType": "VariableDeclaration",
            "src": "3958:75:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "8dae88c2",
            "mutability": "constant",
            "name": "QUOTER",
            "nameLocation": "3982:6:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8884,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3958:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862323733303866394639304436303734363362623333654131426542623431433237434535414236",
              "id": 8885,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3991:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6"
            },
            "visibility": "public"
          },
          {
            "id": 8889,
            "nodeType": "VariableDeclaration",
            "src": "4040:81:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "d1a3925a",
            "mutability": "constant",
            "name": "SwapRouterV3",
            "nameLocation": "4064:12:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8887,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4040:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
              "id": 8888,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4079:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
            },
            "visibility": "public"
          },
          {
            "id": 8892,
            "nodeType": "VariableDeclaration",
            "src": "4128:78:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "c2867f20",
            "mutability": "constant",
            "name": "FactoryV3",
            "nameLocation": "4152:9:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8890,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4128:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831463938343331633861443938353233363331414534613539663236373334366561333146393834",
              "id": 8891,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4164:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1F98431c8aD98523631AE4a59f267346ea31F984"
            },
            "visibility": "public"
          },
          {
            "id": 8895,
            "nodeType": "VariableDeclaration",
            "src": "4213:81:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "ce2da055",
            "mutability": "constant",
            "name": "SwapRouterV2",
            "nameLocation": "4237:12:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8893,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4213:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
              "id": 8894,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4252:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
            },
            "visibility": "public"
          },
          {
            "id": 8898,
            "nodeType": "VariableDeclaration",
            "src": "4301:78:95",
            "nodes": [],
            "constant": true,
            "functionSelector": "d5bfbe4c",
            "mutability": "constant",
            "name": "FactoryV2",
            "nameLocation": "4325:9:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8896,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4301:7:95",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835433639624565373031656638313461324236613345444434423136353243423963633561413666",
              "id": 8897,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4337:42:95",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
            },
            "visibility": "public"
          },
          {
            "id": 8901,
            "nodeType": "VariableDeclaration",
            "src": "4400:16:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "f4b9fa75",
            "mutability": "mutable",
            "name": "dai",
            "nameLocation": "4413:3:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$13936",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 8900,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8899,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13936,
                "src": "4400:5:95"
              },
              "referencedDeclaration": 13936,
              "src": "4400:5:95",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$13936",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8904,
            "nodeType": "VariableDeclaration",
            "src": "4423:17:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "4436:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$10397",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 8903,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8902,
                "name": "IWETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10397,
                "src": "4423:5:95"
              },
              "referencedDeclaration": 10397,
              "src": "4423:5:95",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$10397",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8907,
            "nodeType": "VariableDeclaration",
            "src": "4475:21:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "c6bbd5a7",
            "mutability": "mutable",
            "name": "quoter",
            "nameLocation": "4490:6:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IQuoter_$11672",
              "typeString": "contract IQuoter"
            },
            "typeName": {
              "id": 8906,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8905,
                "name": "IQuoter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11672,
                "src": "4475:7:95"
              },
              "referencedDeclaration": 11672,
              "src": "4475:7:95",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IQuoter_$11672",
                "typeString": "contract IQuoter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8913,
            "nodeType": "VariableDeclaration",
            "src": "4505:56:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "MAINNET_RPC_URL",
            "nameLocation": "4512:15:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 8908,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "4505:6:95",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d41494e4e45545f5250435f55524c",
                  "id": 8911,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4543:17:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  },
                  "value": "MAINNET_RPC_URL"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  }
                ],
                "expression": {
                  "id": 8909,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 18411,
                  "src": "4530:2:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$29962",
                    "typeString": "contract Vm"
                  }
                },
                "id": 8910,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 28684,
                "src": "4530:12:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 8912,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4530:31:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 8916,
            "nodeType": "VariableDeclaration",
            "src": "4568:50:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "jobId",
            "nameLocation": "4576:5:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 8914,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4568:7:95",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "3662383865303430326535643431356562393436653532386238653063376261",
              "id": 8915,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4584:34:95",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_794b9054b63e56ef5e69b4c8fd259b3f748cccf060a2b76f00f589df40bd78fb",
                "typeString": "literal_string \"6b88e0402e5d415eb946e528b8e0c7ba\""
              },
              "value": "6b88e0402e5d415eb946e528b8e0c7ba"
            },
            "visibility": "internal"
          },
          {
            "id": 8919,
            "nodeType": "VariableDeclaration",
            "src": "4627:27:95",
            "nodes": [],
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "4648:6:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockApiOracle_$13169",
              "typeString": "contract MockApiOracle"
            },
            "typeName": {
              "id": 8918,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8917,
                "name": "MockApiOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13169,
                "src": "4627:13:95"
              },
              "referencedDeclaration": 13169,
              "src": "4627:13:95",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockApiOracle_$13169",
                "typeString": "contract MockApiOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8922,
            "nodeType": "VariableDeclaration",
            "src": "4661:14:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "link",
            "nameLocation": "4671:4:95",
            "scope": 10035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkToken_$12345",
              "typeString": "contract LinkToken"
            },
            "typeName": {
              "id": 8921,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8920,
                "name": "LinkToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12345,
                "src": "4661:9:95"
              },
              "referencedDeclaration": 12345,
              "src": "4661:9:95",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkToken_$12345",
                "typeString": "contract LinkToken"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 8926,
            "nodeType": "EventDefinition",
            "src": "4684:50:95",
            "nodes": [],
            "anonymous": false,
            "name": "FeeReceiverSet",
            "nameLocation": "4690:14:95",
            "parameters": {
              "id": 8925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8924,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "4721:11:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8926,
                  "src": "4705:27:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4705:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4704:29:95"
            }
          },
          {
            "id": 8930,
            "nodeType": "EventDefinition",
            "src": "4740:54:95",
            "nodes": [],
            "anonymous": false,
            "name": "FeeRateSet",
            "nameLocation": "4746:10:95",
            "parameters": {
              "id": 8929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8928,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeRatePerDayScaled",
                  "nameLocation": "4773:19:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8930,
                  "src": "4757:35:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4757:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4756:37:95"
            }
          },
          {
            "id": 8934,
            "nodeType": "EventDefinition",
            "src": "4800:54:95",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologistSet",
            "nameLocation": "4806:16:95",
            "parameters": {
              "id": 8933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8932,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "methodologist",
                  "nameLocation": "4839:13:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8934,
                  "src": "4823:29:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4823:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4822:31:95"
            }
          },
          {
            "id": 8938,
            "nodeType": "EventDefinition",
            "src": "4860:41:95",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologySet",
            "nameLocation": "4866:14:95",
            "parameters": {
              "id": 8937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8936,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "methodology",
                  "nameLocation": "4888:11:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8938,
                  "src": "4881:18:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8935,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4881:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4880:20:95"
            }
          },
          {
            "id": 8942,
            "nodeType": "EventDefinition",
            "src": "4907:40:95",
            "nodes": [],
            "anonymous": false,
            "name": "MinterSet",
            "nameLocation": "4913:9:95",
            "parameters": {
              "id": 8941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8940,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "4939:6:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8942,
                  "src": "4923:22:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4923:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4922:24:95"
            }
          },
          {
            "id": 8946,
            "nodeType": "EventDefinition",
            "src": "4953:46:95",
            "nodes": [],
            "anonymous": false,
            "name": "SupplyCeilingSet",
            "nameLocation": "4959:16:95",
            "parameters": {
              "id": 8945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8944,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supplyCeiling",
                  "nameLocation": "4984:13:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8946,
                  "src": "4976:21:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4976:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4975:23:95"
            }
          },
          {
            "id": 8956,
            "nodeType": "EventDefinition",
            "src": "5005:101:95",
            "nodes": [],
            "anonymous": false,
            "name": "MintFeeToReceiver",
            "nameLocation": "5011:17:95",
            "parameters": {
              "id": 8955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8948,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "5037:11:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8956,
                  "src": "5029:19:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8950,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "5058:9:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8956,
                  "src": "5050:17:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5050:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8952,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "5077:11:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8956,
                  "src": "5069:19:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5069:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8954,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5098:6:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8956,
                  "src": "5090:14:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5028:77:95"
            }
          },
          {
            "id": 8962,
            "nodeType": "EventDefinition",
            "src": "5112:68:95",
            "nodes": [],
            "anonymous": false,
            "name": "ToggledRestricted",
            "nameLocation": "5118:17:95",
            "parameters": {
              "id": 8961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8958,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5152:7:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8962,
                  "src": "5136:23:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5136:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8960,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isRestricted",
                  "nameLocation": "5166:12:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 8962,
                  "src": "5161:17:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8959,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5161:4:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5135:44:95"
            }
          },
          {
            "id": 9092,
            "nodeType": "FunctionDefinition",
            "src": "5190:1298:95",
            "nodes": [],
            "body": {
              "id": 9091,
              "nodeType": "Block",
              "src": "5214:1274:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 8970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8965,
                      "name": "mainnetFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8748,
                      "src": "5225:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8968,
                          "name": "MAINNET_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8913,
                          "src": "5253:15:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 8966,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18411,
                          "src": "5239:2:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$29962",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 8967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29688,
                        "src": "5239:13:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 8969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5239:30:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5225:44:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8971,
                  "nodeType": "ExpressionStatement",
                  "src": "5225:44:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8975,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8748,
                        "src": "5296:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8972,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18411,
                        "src": "5282:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$29962",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 8974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29751,
                      "src": "5282:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 8976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5282:26:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8977,
                  "nodeType": "ExpressionStatement",
                  "src": "5282:26:95"
                },
                {
                  "expression": {
                    "id": 8983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8978,
                      "name": "link",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8922,
                      "src": "5400:4:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkToken_$12345",
                        "typeString": "contract LinkToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 8981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5407:13:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LinkToken_$12345_$",
                          "typeString": "function () returns (contract LinkToken)"
                        },
                        "typeName": {
                          "id": 8980,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 8979,
                            "name": "LinkToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 12345,
                            "src": "5411:9:95"
                          },
                          "referencedDeclaration": 12345,
                          "src": "5411:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkToken_$12345",
                            "typeString": "contract LinkToken"
                          }
                        }
                      },
                      "id": 8982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5407:15:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkToken_$12345",
                        "typeString": "contract LinkToken"
                      }
                    },
                    "src": "5400:22:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkToken_$12345",
                      "typeString": "contract LinkToken"
                    }
                  },
                  "id": 8984,
                  "nodeType": "ExpressionStatement",
                  "src": "5400:22:95"
                },
                {
                  "expression": {
                    "id": 8994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8985,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8919,
                      "src": "5433:6:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockApiOracle_$13169",
                        "typeString": "contract MockApiOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 8991,
                              "name": "link",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8922,
                              "src": "5468:4:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkToken_$12345",
                                "typeString": "contract LinkToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LinkToken_$12345",
                                "typeString": "contract LinkToken"
                              }
                            ],
                            "id": 8990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5460:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8989,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5460:7:95",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5460:13:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5442:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_MockApiOracle_$13169_$",
                          "typeString": "function (address) returns (contract MockApiOracle)"
                        },
                        "typeName": {
                          "id": 8987,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 8986,
                            "name": "MockApiOracle",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 13169,
                            "src": "5446:13:95"
                          },
                          "referencedDeclaration": 13169,
                          "src": "5446:13:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockApiOracle_$13169",
                            "typeString": "contract MockApiOracle"
                          }
                        }
                      },
                      "id": 8993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5442:32:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockApiOracle_$13169",
                        "typeString": "contract MockApiOracle"
                      }
                    },
                    "src": "5433:41:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockApiOracle_$13169",
                      "typeString": "contract MockApiOracle"
                    }
                  },
                  "id": 8995,
                  "nodeType": "ExpressionStatement",
                  "src": "5433:41:95"
                },
                {
                  "expression": {
                    "id": 9001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8996,
                      "name": "indexToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8740,
                      "src": "5487:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$2992",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 8999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5500:14:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_IndexToken_$2992_$",
                          "typeString": "function () returns (contract IndexToken)"
                        },
                        "typeName": {
                          "id": 8998,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 8997,
                            "name": "IndexToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2992,
                            "src": "5504:10:95"
                          },
                          "referencedDeclaration": 2992,
                          "src": "5504:10:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexToken_$2992",
                            "typeString": "contract IndexToken"
                          }
                        }
                      },
                      "id": 9000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5500:16:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$2992",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "src": "5487:29:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IndexToken_$2992",
                      "typeString": "contract IndexToken"
                    }
                  },
                  "id": 9002,
                  "nodeType": "ExpressionStatement",
                  "src": "5487:29:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416e746920496e666c6174696f6e",
                        "id": 9006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5563:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc91b5e2c1c095e17fa21cce3bb4bf4e3f12c19c51ecd9f6cf3cf89a49c428f2",
                          "typeString": "literal_string \"Anti Inflation\""
                        },
                        "value": "Anti Inflation"
                      },
                      {
                        "hexValue": "414e4649",
                        "id": 9007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5594:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_784ef5cf3b103bdcbbdc385d5d143611309cf4293b5afd2549dfc4901f697bcc",
                          "typeString": "literal_string \"ANFI\""
                        },
                        "value": "ANFI"
                      },
                      {
                        "hexValue": "31653138",
                        "id": 9008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5615:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "id": 9009,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8754,
                        "src": "5634:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 9010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5660:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      },
                      {
                        "id": 9011,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8883,
                        "src": "5715:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9012,
                        "name": "QUOTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8886,
                        "src": "5735:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9013,
                        "name": "SwapRouterV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8889,
                        "src": "5756:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9014,
                        "name": "FactoryV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8892,
                        "src": "5783:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9015,
                        "name": "SwapRouterV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8895,
                        "src": "5807:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9016,
                        "name": "FactoryV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8898,
                        "src": "5834:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bc91b5e2c1c095e17fa21cce3bb4bf4e3f12c19c51ecd9f6cf3cf89a49c428f2",
                          "typeString": "literal_string \"Anti Inflation\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_784ef5cf3b103bdcbbdc385d5d143611309cf4293b5afd2549dfc4901f697bcc",
                          "typeString": "literal_string \"ANFI\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9003,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8740,
                        "src": "5527:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$2992",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 9005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2328,
                      "src": "5527:21:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256,address,uint256,address,address,address,address,address,address) external"
                      }
                    },
                    "id": 9017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5527:327:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9018,
                  "nodeType": "ExpressionStatement",
                  "src": "5527:327:95"
                },
                {
                  "expression": {
                    "id": 9024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9019,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8743,
                      "src": "5867:7:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexFactory_$2015",
                        "typeString": "contract IndexFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5877:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_IndexFactory_$2015_$",
                          "typeString": "function () returns (contract IndexFactory)"
                        },
                        "typeName": {
                          "id": 9021,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9020,
                            "name": "IndexFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2015,
                            "src": "5881:12:95"
                          },
                          "referencedDeclaration": 2015,
                          "src": "5881:12:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexFactory_$2015",
                            "typeString": "contract IndexFactory"
                          }
                        }
                      },
                      "id": 9023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5877:18:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexFactory_$2015",
                        "typeString": "contract IndexFactory"
                      }
                    },
                    "src": "5867:28:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IndexFactory_$2015",
                      "typeString": "contract IndexFactory"
                    }
                  },
                  "id": 9025,
                  "nodeType": "ExpressionStatement",
                  "src": "5867:28:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9033,
                                "name": "indexToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8740,
                                "src": "5955:10:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexToken_$2992",
                                  "typeString": "contract IndexToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexToken_$2992",
                                  "typeString": "contract IndexToken"
                                }
                              ],
                              "id": 9032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5947:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9031,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5947:7:95",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5947:19:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5939:8:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 9029,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5939:8:95",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5939:28:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 9038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5990:1:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5982:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9036,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5982:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5982:10:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9042,
                            "name": "link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8922,
                            "src": "6015:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkToken_$12345",
                              "typeString": "contract LinkToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkToken_$12345",
                              "typeString": "contract LinkToken"
                            }
                          ],
                          "id": 9041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6007:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9040,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6007:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6007:13:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9046,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8919,
                            "src": "6043:6:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockApiOracle_$13169",
                              "typeString": "contract MockApiOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockApiOracle_$13169",
                              "typeString": "contract MockApiOracle"
                            }
                          ],
                          "id": 9045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6035:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9044,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6035:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6035:15:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9048,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8916,
                        "src": "6065:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9049,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8883,
                        "src": "6115:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9050,
                        "name": "QUOTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8886,
                        "src": "6135:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9051,
                        "name": "SwapRouterV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8889,
                        "src": "6156:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9052,
                        "name": "FactoryV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8892,
                        "src": "6183:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9053,
                        "name": "SwapRouterV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8895,
                        "src": "6207:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9054,
                        "name": "FactoryV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8898,
                        "src": "6234:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9026,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8743,
                        "src": "5906:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2015",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 361,
                      "src": "5906:18:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address payable,address,address,address,bytes32,address,address,address,address,address,address) external"
                      }
                    },
                    "id": 9055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5906:348:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9056,
                  "nodeType": "ExpressionStatement",
                  "src": "5906:348:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9062,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "6296:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 9061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6288:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9060,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6288:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6288:16:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9057,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8740,
                        "src": "6267:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$2992",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 9059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2706,
                      "src": "6267:20:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6267:38:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9065,
                  "nodeType": "ExpressionStatement",
                  "src": "6267:38:95"
                },
                {
                  "expression": {
                    "id": 9070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9066,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8901,
                      "src": "6349:3:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$13936",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9068,
                          "name": "DAI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8793,
                          "src": "6361:3:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9067,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13936,
                        "src": "6355:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$13936_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 9069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6355:10:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$13936",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "6349:16:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$13936",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 9071,
                  "nodeType": "ExpressionStatement",
                  "src": "6349:16:95"
                },
                {
                  "expression": {
                    "id": 9076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9072,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8904,
                      "src": "6376:4:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$10397",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9074,
                          "name": "WETH9",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8883,
                          "src": "6389:5:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9073,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10397,
                        "src": "6383:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$10397_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 9075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6383:12:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$10397",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "6376:19:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$10397",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 9077,
                  "nodeType": "ExpressionStatement",
                  "src": "6376:19:95"
                },
                {
                  "expression": {
                    "id": 9082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9078,
                      "name": "quoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8907,
                      "src": "6406:6:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$11672",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9080,
                          "name": "QUOTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8886,
                          "src": "6423:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9079,
                        "name": "IQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11672,
                        "src": "6415:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IQuoter_$11672_$",
                          "typeString": "type(contract IQuoter)"
                        }
                      },
                      "id": 9081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6415:15:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$11672",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "src": "6406:24:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IQuoter_$11672",
                      "typeString": "contract IQuoter"
                    }
                  },
                  "id": 9083,
                  "nodeType": "ExpressionStatement",
                  "src": "6406:24:95"
                },
                {
                  "expression": {
                    "id": 9089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9084,
                      "name": "testSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8746,
                      "src": "6443:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestSwap_$13349",
                        "typeString": "contract TestSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6454:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestSwap_$13349_$",
                          "typeString": "function () returns (contract TestSwap)"
                        },
                        "typeName": {
                          "id": 9086,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9085,
                            "name": "TestSwap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 13349,
                            "src": "6458:8:95"
                          },
                          "referencedDeclaration": 13349,
                          "src": "6458:8:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestSwap_$13349",
                            "typeString": "contract TestSwap"
                          }
                        }
                      },
                      "id": 9088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6454:14:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestSwap_$13349",
                        "typeString": "contract TestSwap"
                      }
                    },
                    "src": "6443:25:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestSwap_$13349",
                      "typeString": "contract TestSwap"
                    }
                  },
                  "id": 9090,
                  "nodeType": "ExpressionStatement",
                  "src": "6443:25:95"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "5199:5:95",
            "parameters": {
              "id": 8963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5204:2:95"
            },
            "returnParameters": {
              "id": 8964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5214:0:95"
            },
            "scope": 10035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9152,
            "nodeType": "FunctionDefinition",
            "src": "6496:475:95",
            "nodes": [],
            "body": {
              "id": 9151,
              "nodeType": "Block",
              "src": "6530:441:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9096,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "6583:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5244,
                          "src": "6583:16:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 9098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6583:18:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9101,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6611:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$10035",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$10035",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 9100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6603:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9099,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6603:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6603:13:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9095,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16381,
                      "src": "6574:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6574:43:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9104,
                  "nodeType": "ExpressionStatement",
                  "src": "6574:43:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9106,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "6637:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRatePerDayScaled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2118,
                          "src": "6637:30:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 9108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6637:32:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 9109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6671:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 9105,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "6628:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6628:48:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9111,
                  "nodeType": "ExpressionStatement",
                  "src": "6628:48:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9113,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "6696:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2120,
                          "src": "6696:23:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 9115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6696:25:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9116,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6723:5:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 9117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6723:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9112,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "6687:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6687:52:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9119,
                  "nodeType": "ExpressionStatement",
                  "src": "6687:52:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9121,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "6759:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeReceiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2122,
                          "src": "6759:22:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 9123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6759:24:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9124,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8754,
                        "src": "6785:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9120,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16381,
                      "src": "6750:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6750:47:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9126,
                  "nodeType": "ExpressionStatement",
                  "src": "6750:47:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9128,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "6817:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "methodology",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2128,
                          "src": "6817:22:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 9130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6817:24:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 9131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6843:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 9127,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 18073,
                      "src": "6808:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 9132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6808:38:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9133,
                  "nodeType": "ExpressionStatement",
                  "src": "6808:38:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9135,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "6866:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supplyCeiling",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2130,
                          "src": "6866:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 9137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6866:26:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 9138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6894:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "id": 9134,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "6857:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6857:48:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9140,
                  "nodeType": "ExpressionStatement",
                  "src": "6857:48:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9142,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "6925:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2126,
                          "src": "6925:17:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 9144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6925:19:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9147,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "6954:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 9146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6946:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6946:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6946:16:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9141,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16381,
                      "src": "6916:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6916:47:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9150,
                  "nodeType": "ExpressionStatement",
                  "src": "6916:47:95"
                }
              ]
            },
            "functionSelector": "0e7628c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialized",
            "nameLocation": "6505:15:95",
            "parameters": {
              "id": 9093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6520:2:95"
            },
            "returnParameters": {
              "id": 9094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6530:0:95"
            },
            "scope": 10035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9155,
            "nodeType": "EnumDefinition",
            "src": "6979:64:95",
            "nodes": [],
            "canonicalName": "CounterTest.DexStatus",
            "members": [
              {
                "id": 9153,
                "name": "UNISWAP_V2",
                "nameLocation": "7005:10:95",
                "nodeType": "EnumValue",
                "src": "7005:10:95"
              },
              {
                "id": 9154,
                "name": "UNISWAP_V3",
                "nameLocation": "7026:10:95",
                "nodeType": "EnumValue",
                "src": "7026:10:95"
              }
            ],
            "name": "DexStatus",
            "nameLocation": "6984:9:95"
          },
          {
            "id": 9184,
            "nodeType": "FunctionDefinition",
            "src": "7051:410:95",
            "nodes": [],
            "body": {
              "id": 9183,
              "nodeType": "Block",
              "src": "7086:375:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9163,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "7282:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 9162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7274:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7274:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7274:16:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 9165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7292:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 9158,
                        "name": "link",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8922,
                        "src": "7260:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkToken_$12345",
                          "typeString": "contract LinkToken"
                        }
                      },
                      "id": 9160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13473,
                      "src": "7260:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7260:37:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9167,
                  "nodeType": "ExpressionStatement",
                  "src": "7260:37:95"
                },
                {
                  "assignments": [
                    9169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9169,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "7316:9:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9183,
                      "src": "7308:17:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 9168,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7308:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9173,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9170,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8743,
                        "src": "7328:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2015",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestAssetsData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 502,
                      "src": "7328:25:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () external returns (bytes32)"
                      }
                    },
                    "id": 9172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7328:27:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7308:47:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9177,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9169,
                        "src": "7405:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9178,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8856,
                        "src": "7416:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "id": 9179,
                        "name": "tokenShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8865,
                        "src": "7427:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "id": 9180,
                        "name": "swapVersions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8874,
                        "src": "7440:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 9174,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8919,
                        "src": "7366:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockApiOracle_$13169",
                          "typeString": "contract MockApiOracle"
                        }
                      },
                      "id": 9176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fulfillOracleFundingRateRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12610,
                      "src": "7366:38:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address[] memory,uint256[] memory,uint256[] memory) external returns (bool)"
                      }
                    },
                    "id": 9181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7366:87:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9182,
                  "nodeType": "ExpressionStatement",
                  "src": "7366:87:95"
                }
              ]
            },
            "functionSelector": "95d5772d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOracleList",
            "nameLocation": "7060:16:95",
            "parameters": {
              "id": 9156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7076:2:95"
            },
            "returnParameters": {
              "id": 9157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7086:0:95"
            },
            "scope": 10035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9361,
            "nodeType": "FunctionDefinition",
            "src": "7467:2258:95",
            "nodes": [],
            "body": {
              "id": 9360,
              "nodeType": "Block",
              "src": "7500:2225:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9187,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9184,
                      "src": "7511:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7511:18:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9189,
                  "nodeType": "ExpressionStatement",
                  "src": "7511:18:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 9193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7591:1:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 9191,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "7572:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 128,
                          "src": "7572:18:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 9194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7572:21:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9195,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8856,
                          "src": "7595:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9197,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7605:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7595:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9190,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16381,
                      "src": "7563:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7563:45:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9199,
                  "nodeType": "ExpressionStatement",
                  "src": "7563:45:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 9203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7647:1:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 9201,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "7628:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 128,
                          "src": "7628:18:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 9204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7628:21:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9205,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8856,
                          "src": "7651:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9207,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 9206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7661:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7651:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9200,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16381,
                      "src": "7619:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7619:45:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9209,
                  "nodeType": "ExpressionStatement",
                  "src": "7619:45:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 9213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7703:1:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 9211,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "7684:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 128,
                          "src": "7684:18:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 9214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7684:21:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9215,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8856,
                          "src": "7707:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9217,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 9216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7717:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7707:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9210,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16381,
                      "src": "7675:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7675:45:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9219,
                  "nodeType": "ExpressionStatement",
                  "src": "7675:45:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 9223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7759:1:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 9221,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "7740:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 128,
                          "src": "7740:18:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 9224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7740:21:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9225,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8856,
                          "src": "7763:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9227,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 9226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7773:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7763:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9220,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16381,
                      "src": "7731:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7731:45:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9229,
                  "nodeType": "ExpressionStatement",
                  "src": "7731:45:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 9233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7815:1:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 9231,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "7796:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 128,
                          "src": "7796:18:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 9234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7796:21:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9235,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8856,
                          "src": "7819:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 9237,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 9236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7829:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7819:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9230,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16381,
                      "src": "7787:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7787:45:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9239,
                  "nodeType": "ExpressionStatement",
                  "src": "7787:45:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9243,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8856,
                              "src": "8197:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9245,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 9244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8207:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8197:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9241,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "8172:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "8172:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8172:38:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9247,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8865,
                          "src": "8212:11:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9249,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8224:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8212:14:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9240,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "8163:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8163:64:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9251,
                  "nodeType": "ExpressionStatement",
                  "src": "8163:64:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9255,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8856,
                              "src": "8272:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9257,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 9256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8282:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8272:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9253,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "8247:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "8247:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8247:38:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9259,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8865,
                          "src": "8287:11:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9261,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 9260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8299:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8287:14:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9252,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "8238:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8238:64:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9263,
                  "nodeType": "ExpressionStatement",
                  "src": "8238:64:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9267,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8856,
                              "src": "8347:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9269,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 9268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8357:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8347:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9265,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "8322:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "8322:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8322:38:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9271,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8865,
                          "src": "8362:11:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9273,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 9272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8374:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8362:14:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9264,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "8313:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8313:64:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9275,
                  "nodeType": "ExpressionStatement",
                  "src": "8313:64:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9279,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8856,
                              "src": "8422:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9281,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 9280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8432:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8422:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9277,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "8397:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "8397:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8397:38:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9283,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8865,
                          "src": "8437:11:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9285,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 9284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8449:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8437:14:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9276,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "8388:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8388:64:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9287,
                  "nodeType": "ExpressionStatement",
                  "src": "8388:64:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9291,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8856,
                              "src": "8497:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9293,
                            "indexExpression": {
                              "hexValue": "34",
                              "id": 9292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8507:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8497:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9289,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "8472:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "8472:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8472:38:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9295,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8865,
                          "src": "8512:11:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9297,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 9296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8524:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8512:14:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9288,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "8463:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8463:64:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9299,
                  "nodeType": "ExpressionStatement",
                  "src": "8463:64:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9303,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8856,
                              "src": "8987:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9305,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 9304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8997:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8987:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9301,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "8962:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 148,
                          "src": "8962:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8962:38:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9307,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8874,
                          "src": "9002:12:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9309,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 9308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9015:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9002:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9300,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "8953:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8953:65:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9311,
                  "nodeType": "ExpressionStatement",
                  "src": "8953:65:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9315,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8856,
                              "src": "9063:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9317,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 9316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9073:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9063:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9313,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "9038:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 148,
                          "src": "9038:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9038:38:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9319,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8874,
                          "src": "9078:12:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9321,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 9320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9091:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9078:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9312,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "9029:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9029:65:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9323,
                  "nodeType": "ExpressionStatement",
                  "src": "9029:65:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9327,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8856,
                              "src": "9139:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9329,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 9328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9149:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9139:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9325,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "9114:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 148,
                          "src": "9114:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9114:38:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9331,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8874,
                          "src": "9154:12:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9333,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 9332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9167:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9154:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9324,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "9105:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9105:65:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9335,
                  "nodeType": "ExpressionStatement",
                  "src": "9105:65:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9339,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8856,
                              "src": "9215:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9341,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 9340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9225:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9215:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9337,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "9190:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 148,
                          "src": "9190:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9190:38:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9343,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8874,
                          "src": "9230:12:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9345,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 9344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9243:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9230:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9336,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "9181:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9181:65:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9347,
                  "nodeType": "ExpressionStatement",
                  "src": "9181:65:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 9351,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8856,
                              "src": "9291:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 9353,
                            "indexExpression": {
                              "hexValue": "34",
                              "id": 9352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9301:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9291:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9349,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "9266:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 148,
                          "src": "9266:24:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9266:38:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 9355,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8874,
                          "src": "9306:12:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 9357,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 9356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9319:1:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9306:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9348,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18546,
                        18571,
                        18584,
                        18600,
                        18642,
                        18684,
                        18726,
                        18763,
                        18800,
                        18837,
                        16381,
                        16406,
                        16436,
                        16461,
                        16520,
                        16545,
                        16575,
                        16600,
                        18073,
                        18108
                      ],
                      "referencedDeclaration": 16575,
                      "src": "9257:8:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9257:65:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9359,
                  "nodeType": "ExpressionStatement",
                  "src": "9257:65:95"
                }
              ]
            },
            "functionSelector": "39c66af1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOracleList",
            "nameLocation": "7476:14:95",
            "parameters": {
              "id": 9185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7490:2:95"
            },
            "returnParameters": {
              "id": 9186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7500:0:95"
            },
            "scope": 10035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9484,
            "nodeType": "FunctionDefinition",
            "src": "9739:799:95",
            "nodes": [],
            "body": {
              "id": 9483,
              "nodeType": "Block",
              "src": "9777:761:95",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    9365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9365,
                      "mutability": "mutable",
                      "name": "startAmount",
                      "nameLocation": "9793:11:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9483,
                      "src": "9788:16:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9364,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9788:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9367,
                  "initialValue": {
                    "hexValue": "31653134",
                    "id": 9366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9807:4:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000_by_1",
                      "typeString": "int_const 100000000000000"
                    },
                    "value": "1e14"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9788:23:95"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9368,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9184,
                      "src": "9834:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9834:18:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9370,
                  "nodeType": "ExpressionStatement",
                  "src": "9834:18:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9374,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8784,
                        "src": "9894:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9371,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8743,
                        "src": "9873:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2015",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2081,
                      "src": "9873:20:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9873:27:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9376,
                  "nodeType": "ExpressionStatement",
                  "src": "9873:27:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9380,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8784,
                        "src": "9925:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9377,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18411,
                        "src": "9911:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$29962",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29628,
                      "src": "9911:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9911:20:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9382,
                  "nodeType": "ExpressionStatement",
                  "src": "9911:20:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9386,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8784,
                        "src": "9968:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9383,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8743,
                        "src": "9942:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2015",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2059,
                      "src": "9942:25:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9942:32:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9388,
                  "nodeType": "ExpressionStatement",
                  "src": "9942:32:95"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9389,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18411,
                        "src": "9985:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$29962",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29645,
                      "src": "9985:12:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 9392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9985:14:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9393,
                  "nodeType": "ExpressionStatement",
                  "src": "9985:14:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3131653138",
                        "id": 9399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10033:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11000000000000000000_by_1",
                          "typeString": "int_const 11000000000000000000"
                        },
                        "value": "11e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_11000000000000000000_by_1",
                          "typeString": "int_const 11000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9396,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8790,
                            "src": "10018:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10010:8:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 9394,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10010:8:95",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10010:13:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 9398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "10010:22:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 9400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10010:29:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9401,
                  "nodeType": "ExpressionStatement",
                  "src": "10010:29:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9405,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8790,
                        "src": "10064:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9402,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18411,
                        "src": "10050:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$29962",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29628,
                      "src": "10050:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10050:19:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9407,
                  "nodeType": "ExpressionStatement",
                  "src": "10050:19:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "464c4f4b49",
                        "id": 9411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10092:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        "value": "FLOKI"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9418,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8743,
                                "src": "10133:7:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                  "typeString": "contract IndexFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                  "typeString": "contract IndexFactory"
                                }
                              ],
                              "id": 9417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10125:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9416,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10125:7:95",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10125:16:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9413,
                                "name": "FLOKI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8808,
                                "src": "10108:5:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9412,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11532,
                              "src": "10101:6:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$11532_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 9414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10101:13:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11532",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 9415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11489,
                          "src": "10101:23:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10101:41:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9408,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "10080:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30670,
                      "src": "10080:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10080:63:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9422,
                  "nodeType": "ExpressionStatement",
                  "src": "10080:63:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 9433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10225:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 9423,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8743,
                          "src": "10164:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexFactory_$2015",
                            "typeString": "contract IndexFactory"
                          }
                        },
                        "id": 9425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issuanceIndexTokensWithEth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1247,
                        "src": "10164:34:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 9432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_10010000000000000000_by_1",
                            "typeString": "int_const 10010000000000000000"
                          },
                          "id": 9431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_10010000000000000000000_by_1",
                                  "typeString": "int_const 10010000000000000000000"
                                },
                                "id": 9428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130653138",
                                  "id": 9426,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10207:5:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                    "typeString": "int_const 10000000000000000000"
                                  },
                                  "value": "10e18"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31303031",
                                  "id": 9427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10213:4:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1001_by_1",
                                    "typeString": "int_const 1001"
                                  },
                                  "value": "1001"
                                },
                                "src": "10207:10:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10010000000000000000000_by_1",
                                  "typeString": "int_const 10010000000000000000000"
                                }
                              }
                            ],
                            "id": 9429,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10206:12:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10010000000000000000000_by_1",
                              "typeString": "int_const 10010000000000000000000"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 9430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10219:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "10206:17:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10010000000000000000_by_1",
                            "typeString": "int_const 10010000000000000000"
                          }
                        }
                      ],
                      "src": "10164:60:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 9434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10164:67:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9435,
                  "nodeType": "ExpressionStatement",
                  "src": "10164:67:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "696e64657820746f6b656e2062616c616e6365",
                        "id": 9439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10254:21:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        "value": "index token balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9444,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8790,
                                "src": "10306:4:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10298:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9442,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10298:7:95",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10298:13:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9440,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "10277:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5736,
                          "src": "10277:20:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10277:35:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9436,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "10242:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30670,
                      "src": "10242:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10242:71:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9448,
                  "nodeType": "ExpressionStatement",
                  "src": "10242:71:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f7274666f6c696f2076616c7565",
                        "id": 9452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10336:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        "value": "portfolio value"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9453,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "10355:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1713,
                          "src": "10355:27:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 9455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10355:29:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9449,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "10324:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30670,
                      "src": "10324:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10324:61:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9457,
                  "nodeType": "ExpressionStatement",
                  "src": "10324:61:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9465,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8790,
                                "src": "10444:4:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10436:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9463,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10436:7:95",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10436:13:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9461,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "10415:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5736,
                          "src": "10415:20:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10415:35:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9470,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8904,
                            "src": "10460:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$10397",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$10397",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 9469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10452:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10452:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10452:13:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 9472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10467:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 9458,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8743,
                        "src": "10396:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2015",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1446,
                      "src": "10396:18:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256) external"
                      }
                    },
                    "id": 9473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10396:73:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9474,
                  "nodeType": "ExpressionStatement",
                  "src": "10396:73:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 9478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10492:23:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "expression": {
                          "id": 9479,
                          "name": "add1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8790,
                          "src": "10517:4:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 9480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10517:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9475,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "10480:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30670,
                      "src": "10480:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10480:50:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9482,
                  "nodeType": "ExpressionStatement",
                  "src": "10480:50:95"
                }
              ]
            },
            "functionSelector": "85f65a27",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIssuanceWithEth",
            "nameLocation": "9748:19:95",
            "parameters": {
              "id": 9362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9767:2:95"
            },
            "returnParameters": {
              "id": 9363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9777:0:95"
            },
            "scope": 10035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9677,
            "nodeType": "FunctionDefinition",
            "src": "10548:1741:95",
            "nodes": [],
            "body": {
              "id": 9676,
              "nodeType": "Block",
              "src": "10589:1700:95",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    9488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9488,
                      "mutability": "mutable",
                      "name": "startAmount",
                      "nameLocation": "10605:11:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9676,
                      "src": "10600:16:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9487,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10600:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9490,
                  "initialValue": {
                    "hexValue": "31653134",
                    "id": 9489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10619:4:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000_by_1",
                      "typeString": "int_const 100000000000000"
                    },
                    "value": "1e14"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10600:23:95"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 9491,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8904,
                          "src": "10644:4:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$10397",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 9493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10390,
                        "src": "10644:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 9495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130653138",
                          "id": 9494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10663:5:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10e18"
                        }
                      ],
                      "src": "10644:25:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 9496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10644:27:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9497,
                  "nodeType": "ExpressionStatement",
                  "src": "10644:27:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9504,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8880,
                            "src": "10712:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$11772",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$11772",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 9503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10704:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9502,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10704:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10704:19:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 9506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10725:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9499,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8883,
                            "src": "10689:5:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9498,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11532,
                          "src": "10682:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$11532_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 9500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10682:13:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11532",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 9501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11519,
                      "src": "10682:21:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10682:49:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9508,
                  "nodeType": "ExpressionStatement",
                  "src": "10682:49:95"
                },
                {
                  "assignments": [
                    9513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9513,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "10784:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9676,
                      "src": "10742:48:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$11696_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 9512,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9511,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11696,
                          "src": "10742:34:95"
                        },
                        "referencedDeclaration": 11696,
                        "src": "10742:34:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$11696_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9529,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9516,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8883,
                        "src": "10862:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9517,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8793,
                        "src": "10892:3:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 9518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10945:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 9521,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10983:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$10035",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$10035",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 9520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10975:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9519,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10975:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10975:13:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9523,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "11013:5:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 9524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "11013:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 9525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11053:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      },
                      {
                        "hexValue": "30",
                        "id": 9526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11091:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 9527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11325:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 9514,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11772,
                        "src": "10793:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$11772_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 9515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11696,
                      "src": "10793:44:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$11696_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 9528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10793:545:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$11696_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10742:596:95"
                },
                {
                  "assignments": [
                    9531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9531,
                      "mutability": "mutable",
                      "name": "finalAmountOut",
                      "nameLocation": "11354:14:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9676,
                      "src": "11349:19:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9530,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11349:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9536,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9534,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9513,
                        "src": "11399:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$11696_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$11696_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 9532,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8880,
                        "src": "11371:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$11772",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 9533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11705,
                      "src": "11371:27:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$11696_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 9535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11371:35:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11349:57:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6461692062616c616c6e6365",
                        "id": 9540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11429:14:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        "value": "dai balalnce"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9547,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11475:4:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$10035",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$10035",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 9546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11467:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9545,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11467:7:95",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11467:13:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9542,
                                "name": "DAI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8793,
                                "src": "11452:3:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9541,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11532,
                              "src": "11445:6:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$11532_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 9543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11445:11:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11532",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 9544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11489,
                          "src": "11445:21:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11445:36:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9537,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "11417:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30670,
                      "src": "11417:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11417:65:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9551,
                  "nodeType": "ExpressionStatement",
                  "src": "11417:65:95"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9552,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9184,
                      "src": "11493:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11493:18:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9554,
                  "nodeType": "ExpressionStatement",
                  "src": "11493:18:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9558,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8784,
                        "src": "11553:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9555,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8743,
                        "src": "11532:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2015",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2081,
                      "src": "11532:20:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11532:27:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9560,
                  "nodeType": "ExpressionStatement",
                  "src": "11532:27:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9564,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8784,
                        "src": "11584:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9561,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18411,
                        "src": "11570:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$29962",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29628,
                      "src": "11570:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11570:20:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9566,
                  "nodeType": "ExpressionStatement",
                  "src": "11570:20:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9570,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8784,
                        "src": "11627:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9567,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8743,
                        "src": "11601:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2015",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2059,
                      "src": "11601:25:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11601:32:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9572,
                  "nodeType": "ExpressionStatement",
                  "src": "11601:32:95"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9573,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18411,
                        "src": "11644:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$29962",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29645,
                      "src": "11644:12:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 9576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11644:14:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9577,
                  "nodeType": "ExpressionStatement",
                  "src": "11644:14:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9582,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8790,
                        "src": "11733:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 9583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11739:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9579,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8793,
                            "src": "11719:3:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9578,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11532,
                          "src": "11712:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$11532_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 9580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11712:11:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11532",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 9581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11499,
                      "src": "11712:20:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11712:35:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9585,
                  "nodeType": "ExpressionStatement",
                  "src": "11712:35:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9589,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8790,
                        "src": "11772:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9586,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18411,
                        "src": "11758:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$29962",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 9588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29628,
                      "src": "11758:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 9590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11758:19:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9591,
                  "nodeType": "ExpressionStatement",
                  "src": "11758:19:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "464c4f4b49",
                        "id": 9595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11800:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        "value": "FLOKI"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9602,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8743,
                                "src": "11841:7:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                  "typeString": "contract IndexFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                  "typeString": "contract IndexFactory"
                                }
                              ],
                              "id": 9601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11833:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9600,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11833:7:95",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11833:16:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9597,
                                "name": "FLOKI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8808,
                                "src": "11816:5:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9596,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11532,
                              "src": "11809:6:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$11532_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 9598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11809:13:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11532",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 9599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11489,
                          "src": "11809:23:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11809:41:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9592,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "11788:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30670,
                      "src": "11788:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11788:63:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9606,
                  "nodeType": "ExpressionStatement",
                  "src": "11788:63:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9613,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "11900:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 9612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11892:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9611,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11892:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11892:16:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 9615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11910:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9608,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8793,
                            "src": "11879:3:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9607,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11532,
                          "src": "11872:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$11532_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 9609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11872:11:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11532",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 9610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11519,
                      "src": "11872:19:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11872:46:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9617,
                  "nodeType": "ExpressionStatement",
                  "src": "11872:46:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9623,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8793,
                            "src": "11965:3:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11957:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9621,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11957:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11957:12:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030653138",
                        "id": 9625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11971:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      },
                      {
                        "hexValue": "33",
                        "id": 9626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11980:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 9618,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8743,
                        "src": "11929:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2015",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuanceIndexTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1090,
                      "src": "11929:27:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 9627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11929:53:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9628,
                  "nodeType": "ExpressionStatement",
                  "src": "11929:53:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "696e64657820746f6b656e2062616c616e6365",
                        "id": 9632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12005:21:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        "value": "index token balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9637,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8790,
                                "src": "12057:4:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12049:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9635,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12049:7:95",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12049:13:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9633,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "12028:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5736,
                          "src": "12028:20:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12028:35:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9629,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "11993:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30670,
                      "src": "11993:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11993:71:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9641,
                  "nodeType": "ExpressionStatement",
                  "src": "11993:71:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f7274666f6c696f2076616c7565",
                        "id": 9645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12087:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        "value": "portfolio value"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9646,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "12106:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1713,
                          "src": "12106:27:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 9648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12106:29:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9642,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "12075:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30670,
                      "src": "12075:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12075:61:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9650,
                  "nodeType": "ExpressionStatement",
                  "src": "12075:61:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9658,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8790,
                                "src": "12195:4:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12187:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9656,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12187:7:95",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12187:13:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9654,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "12166:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5736,
                          "src": "12166:20:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12166:35:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9663,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8904,
                            "src": "12211:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$10397",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$10397",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 9662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12203:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9661,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12203:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12203:13:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 9665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12218:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 9651,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8743,
                        "src": "12147:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2015",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1446,
                      "src": "12147:18:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256) external"
                      }
                    },
                    "id": 9666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12147:73:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9667,
                  "nodeType": "ExpressionStatement",
                  "src": "12147:73:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 9671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12243:23:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "expression": {
                          "id": 9672,
                          "name": "add1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8790,
                          "src": "12268:4:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 9673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "12268:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9668,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "12231:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30670,
                      "src": "12231:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 9674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12231:50:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9675,
                  "nodeType": "ExpressionStatement",
                  "src": "12231:50:95"
                }
              ]
            },
            "functionSelector": "5cc6f954",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIssuanceWithTokens",
            "nameLocation": "10557:22:95",
            "parameters": {
              "id": 9485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10579:2:95"
            },
            "returnParameters": {
              "id": 9486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10589:0:95"
            },
            "scope": 10035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9798,
            "nodeType": "FunctionDefinition",
            "src": "12303:1234:95",
            "nodes": [],
            "body": {
              "id": 9797,
              "nodeType": "Block",
              "src": "12331:1206:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9680,
                      "name": "initializeAssetList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10034,
                      "src": "12374:19:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12374:21:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9682,
                  "nodeType": "ExpressionStatement",
                  "src": "12374:21:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 9701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12599:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9697,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12564:4:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$10035",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$10035",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 9696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12556:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9695,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12556:7:95",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12556:13:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "62616c616e63654f66286164647265737329",
                                "id": 9692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12511:20:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                  "typeString": "literal_string \"balanceOf(address)\""
                                },
                                "value": "balanceOf(address)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                  "typeString": "literal_string \"balanceOf(address)\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 9688,
                                        "name": "indexToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8740,
                                        "src": "12480:10:95",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IndexToken_$2992",
                                          "typeString": "contract IndexToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IndexToken_$2992",
                                          "typeString": "contract IndexToken"
                                        }
                                      ],
                                      "id": 9687,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "12472:7:95",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 9686,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "12472:7:95",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 9689,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12472:19:95",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 9683,
                                    "name": "stdstore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18414,
                                    "src": "12442:8:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StdStorage_$24553_storage",
                                      "typeString": "struct StdStorage storage ref"
                                    }
                                  },
                                  "id": 9685,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "target",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25663,
                                  "src": "12442:29:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                    "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                  }
                                },
                                "id": 9690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12442:50:95",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                  "typeString": "struct StdStorage storage pointer"
                                }
                              },
                              "id": 9691,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25699,
                              "src": "12442:68:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 9693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12442:90:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 9694,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "with_key",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25717,
                          "src": "12442:113:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 9699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12442:128:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 9700,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25811,
                      "src": "12442:156:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 9702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12442:163:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9703,
                  "nodeType": "ExpressionStatement",
                  "src": "12442:163:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130653138",
                        "id": 9716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12771:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c537570706c792829",
                            "id": 9713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12685:15:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_18160ddd7f15c72528c2f94fd8dfe3c8d5aa26e2c50c7d81f4bc7bee8d4b7932",
                              "typeString": "literal_string \"totalSupply()\""
                            },
                            "value": "totalSupply()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_18160ddd7f15c72528c2f94fd8dfe3c8d5aa26e2c50c7d81f4bc7bee8d4b7932",
                              "typeString": "literal_string \"totalSupply()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 9709,
                                    "name": "indexToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8740,
                                    "src": "12654:10:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexToken_$2992",
                                      "typeString": "contract IndexToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexToken_$2992",
                                      "typeString": "contract IndexToken"
                                    }
                                  ],
                                  "id": 9708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12646:7:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 9707,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12646:7:95",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 9710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12646:19:95",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 9704,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18414,
                                "src": "12616:8:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$24553_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 9706,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25663,
                              "src": "12616:29:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 9711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12616:50:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 9712,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25699,
                          "src": "12616:68:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 9714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12616:85:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 9715,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25811,
                      "src": "12616:154:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 9717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12616:161:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9718,
                  "nodeType": "ExpressionStatement",
                  "src": "12616:161:95"
                },
                {
                  "body": {
                    "id": 9752,
                    "nodeType": "Block",
                    "src": "13017:192:95",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "323030653138",
                              "id": 9749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13190:6:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000000000000000_by_1",
                                "typeString": "int_const 200000000000000000000"
                              },
                              "value": "200e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_200000000000000000000_by_1",
                                "typeString": "int_const 200000000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 9745,
                                      "name": "factory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8743,
                                      "src": "13152:7:95",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                        "typeString": "contract IndexFactory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                        "typeString": "contract IndexFactory"
                                      }
                                    ],
                                    "id": 9744,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13144:7:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 9743,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13144:7:95",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 9746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13144:16:95",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "62616c616e63654f66286164647265737329",
                                      "id": 9740,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13099:20:95",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                        "typeString": "literal_string \"balanceOf(address)\""
                                      },
                                      "value": "balanceOf(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                        "typeString": "literal_string \"balanceOf(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 9734,
                                                "name": "assetList",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8856,
                                                "src": "13066:9:95",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                  "typeString": "address[] storage ref"
                                                }
                                              },
                                              "id": 9736,
                                              "indexExpression": {
                                                "id": 9735,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9720,
                                                "src": "13076:1:95",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "13066:12:95",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 9733,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "13058:7:95",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 9732,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "13058:7:95",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 9737,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13058:21:95",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 9729,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 18414,
                                          "src": "13028:8:95",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$24553_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 9731,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 25663,
                                        "src": "13028:29:95",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 9738,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13028:52:95",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 9739,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 25699,
                                    "src": "13028:70:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 9741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13028:92:95",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 9742,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25717,
                                "src": "13028:115:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 9747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13028:133:95",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 9748,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25811,
                            "src": "13028:161:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 9750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13028:169:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9751,
                        "nodeType": "ExpressionStatement",
                        "src": "13028:169:95"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9722,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9720,
                      "src": "12991:1:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 9723,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8856,
                        "src": "12995:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 9724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12995:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12991:20:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9753,
                  "initializationExpression": {
                    "assignments": [
                      9720
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9720,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12988:1:95",
                        "nodeType": "VariableDeclaration",
                        "scope": 9753,
                        "src": "12983:6:95",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9719,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12983:4:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9721,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12983:6:95"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13013:3:95",
                      "subExpression": {
                        "id": 9726,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9720,
                        "src": "13013:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9728,
                    "nodeType": "ExpressionStatement",
                    "src": "13013:3:95"
                  },
                  "nodeType": "ForStatement",
                  "src": "12979:230:95"
                },
                {
                  "body": {
                    "id": 9764,
                    "nodeType": "Block",
                    "src": "13257:87:95",
                    "statements": []
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9757,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9755,
                      "src": "13231:1:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 9758,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8856,
                        "src": "13235:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 9759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13235:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13231:20:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9765,
                  "initializationExpression": {
                    "assignments": [
                      9755
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9755,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13228:1:95",
                        "nodeType": "VariableDeclaration",
                        "scope": 9765,
                        "src": "13223:6:95",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9754,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13223:4:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9756,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13223:6:95"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13253:3:95",
                      "subExpression": {
                        "id": 9761,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9755,
                        "src": "13253:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9763,
                    "nodeType": "ExpressionStatement",
                    "src": "13253:3:95"
                  },
                  "nodeType": "ForStatement",
                  "src": "13219:125:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 9769,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "13366:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1713,
                          "src": "13366:27:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 9771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13366:29:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9766,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "13354:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30543,
                      "src": "13354:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 9772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13354:42:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9773,
                  "nodeType": "ExpressionStatement",
                  "src": "13354:42:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726564656d7074696f6e2068617070656e696e672e2e2e",
                        "id": 9777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13419:25:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea7960792d59f7a66f9f9ef77bf35564014a5245f985c11384dc22c8b22dfdf7",
                          "typeString": "literal_string \"redemption happening...\""
                        },
                        "value": "redemption happening..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea7960792d59f7a66f9f9ef77bf35564014a5245f985c11384dc22c8b22dfdf7",
                          "typeString": "literal_string \"redemption happening...\""
                        }
                      ],
                      "expression": {
                        "id": 9774,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "13407:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30557,
                      "src": "13407:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 9778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13407:38:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9779,
                  "nodeType": "ExpressionStatement",
                  "src": "13407:38:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 9787,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "13504:4:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$10035",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$10035",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 9786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13496:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9785,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13496:7:95",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13496:13:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9783,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8740,
                            "src": "13475:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$2992",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 9784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5736,
                          "src": "13475:20:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 9789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13475:35:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9792,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8904,
                            "src": "13520:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$10397",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$10397",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 9791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13512:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9790,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13512:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13512:13:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 9794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13527:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 9780,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8743,
                        "src": "13456:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$2015",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 9782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1446,
                      "src": "13456:18:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256) external"
                      }
                    },
                    "id": 9795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13456:73:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9796,
                  "nodeType": "ExpressionStatement",
                  "src": "13456:73:95"
                }
              ]
            },
            "functionSelector": "38d6c81c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBlock",
            "nameLocation": "12312:9:95",
            "parameters": {
              "id": 9678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12321:2:95"
            },
            "returnParameters": {
              "id": 9679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12331:0:95"
            },
            "scope": 10035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9901,
            "nodeType": "FunctionDefinition",
            "src": "13545:1384:95",
            "nodes": [],
            "body": {
              "id": 9900,
              "nodeType": "Block",
              "src": "13576:1353:95",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    9802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9802,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "13595:4:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9900,
                      "src": "13587:12:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9801,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13587:7:95",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9809,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9805,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8883,
                        "src": "13634:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9806,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8832,
                        "src": "13654:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 9807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13673:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        }
                      ],
                      "expression": {
                        "id": 9803,
                        "name": "factoryV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8799,
                        "src": "13602:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$11615",
                          "typeString": "contract IUniswapV3Factory"
                        }
                      },
                      "id": 9804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11588,
                      "src": "13602:17:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                        "typeString": "function (address,address,uint24) view external returns (address)"
                      }
                    },
                    "id": 9808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13602:86:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13587:101:95"
                },
                {
                  "assignments": [
                    9811,
                    9813,
                    9815,
                    9817,
                    9819,
                    9821,
                    9823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9811,
                      "mutability": "mutable",
                      "name": "sqrtPriceX96",
                      "nameLocation": "13721:12:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9900,
                      "src": "13713:20:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 9810,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "13713:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9813,
                      "mutability": "mutable",
                      "name": "tick",
                      "nameLocation": "13754:4:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9900,
                      "src": "13748:10:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 9812,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "13748:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9815,
                      "mutability": "mutable",
                      "name": "observationIndex",
                      "nameLocation": "13780:16:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9900,
                      "src": "13773:23:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 9814,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "13773:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9817,
                      "mutability": "mutable",
                      "name": "observationCardinality",
                      "nameLocation": "13818:22:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9900,
                      "src": "13811:29:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 9816,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "13811:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9819,
                      "mutability": "mutable",
                      "name": "observationCardinalityNext",
                      "nameLocation": "13862:26:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9900,
                      "src": "13855:33:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 9818,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "13855:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9821,
                      "mutability": "mutable",
                      "name": "feeProtocol",
                      "nameLocation": "13909:11:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9900,
                      "src": "13903:17:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 9820,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "13903:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9823,
                      "mutability": "mutable",
                      "name": "unlocked",
                      "nameLocation": "13940:8:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9900,
                      "src": "13935:13:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9822,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13935:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9829,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9825,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9802,
                            "src": "13977:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9824,
                          "name": "IUniswapV3Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13255,
                          "src": "13962:14:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$13255_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        },
                        "id": 9826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13962:20:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$13255",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 9827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59587,
                      "src": "13962:26:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 9828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13962:28:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13698:292:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9833,
                        "name": "sqrtPriceX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9811,
                        "src": "14013:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "expression": {
                        "id": 9830,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "14001:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30543,
                      "src": "14001:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 9834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14001:25:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9835,
                  "nodeType": "ExpressionStatement",
                  "src": "14001:25:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9841,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8883,
                            "src": "14070:5:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 9842,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8832,
                            "src": "14077:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31653138",
                            "id": 9843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14083:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          {
                            "hexValue": "33",
                            "id": 9844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14089:1:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 9839,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8743,
                            "src": "14049:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$2015",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 9840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAmountOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1658,
                          "src": "14049:20:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 9845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14049:42:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9836,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "14037:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30543,
                      "src": "14037:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 9846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14037:55:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9847,
                  "nodeType": "ExpressionStatement",
                  "src": "14037:55:95"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 9848,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8904,
                          "src": "14121:4:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$10397",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 9850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10390,
                        "src": "14121:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 9852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31653138",
                          "id": 9851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14140:4:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        }
                      ],
                      "src": "14121:24:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 9853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14121:26:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9854,
                  "nodeType": "ExpressionStatement",
                  "src": "14121:26:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9861,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8880,
                            "src": "14188:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$11772",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$11772",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 9860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14180:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9859,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14180:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14180:19:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 9863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14201:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9856,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8883,
                            "src": "14165:5:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9855,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11532,
                          "src": "14158:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$11532_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 9857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14158:13:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11532",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 9858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11519,
                      "src": "14158:21:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 9864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14158:48:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9865,
                  "nodeType": "ExpressionStatement",
                  "src": "14158:48:95"
                },
                {
                  "assignments": [
                    9870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9870,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "14259:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9900,
                      "src": "14217:48:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$11696_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 9869,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9868,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11696,
                          "src": "14217:34:95"
                        },
                        "referencedDeclaration": 11696,
                        "src": "14217:34:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$11696_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9886,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9873,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8883,
                        "src": "14337:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9874,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8832,
                        "src": "14367:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 9875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14421:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 9878,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14459:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$10035",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$10035",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 9877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14451:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9876,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14451:7:95",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14451:13:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9880,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "14489:5:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 9881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "14489:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 9882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14529:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "30",
                        "id": 9883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14566:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 9884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14800:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 9871,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11772,
                        "src": "14268:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$11772_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 9872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11696,
                      "src": "14268:44:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$11696_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 9885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "14268:545:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$11696_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14217:596:95"
                },
                {
                  "assignments": [
                    9888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9888,
                      "mutability": "mutable",
                      "name": "finalAmountOut",
                      "nameLocation": "14829:14:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 9900,
                      "src": "14824:19:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9887,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14824:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9893,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9891,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9870,
                        "src": "14874:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$11696_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$11696_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 9889,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8880,
                        "src": "14846:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$11772",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 9890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11705,
                      "src": "14846:27:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$11696_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 9892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14846:35:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14824:57:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9897,
                        "name": "finalAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9888,
                        "src": "14904:14:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9894,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38026,
                        "src": "14892:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$38026_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 9896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30543,
                      "src": "14892:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 9898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14892:27:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9899,
                  "nodeType": "ExpressionStatement",
                  "src": "14892:27:95"
                }
              ]
            },
            "functionSelector": "2a888735",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetPrice",
            "nameLocation": "13554:12:95",
            "parameters": {
              "id": 9799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13566:2:95"
            },
            "returnParameters": {
              "id": 9800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13576:0:95"
            },
            "scope": 10035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10034,
            "nodeType": "FunctionDefinition",
            "src": "14939:1184:95",
            "nodes": [],
            "body": {
              "id": 10033,
              "nodeType": "Block",
              "src": "14977:1146:95",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 9999,
                    "nodeType": "Block",
                    "src": "15031:730:95",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 9930,
                                "name": "assetList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8856,
                                "src": "15185:9:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 9932,
                              "indexExpression": {
                                "id": 9931,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9905,
                                "src": "15195:1:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15185:12:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 9927,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9905,
                                  "src": "15154:1:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "6f7261636c654c6973742875696e7432353629",
                                      "id": 9924,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15108:21:95",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_239aad0df7726bcd645ee02195770ea74ffd42d5dc84b1eb9279ea9cf39a39a1",
                                        "typeString": "literal_string \"oracleList(uint256)\""
                                      },
                                      "value": "oracleList(uint256)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_239aad0df7726bcd645ee02195770ea74ffd42d5dc84b1eb9279ea9cf39a39a1",
                                        "typeString": "literal_string \"oracleList(uint256)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 9920,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8743,
                                              "src": "15080:7:95",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 9919,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "15072:7:95",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 9918,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "15072:7:95",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 9921,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15072:16:95",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 9915,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 18414,
                                          "src": "15042:8:95",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$24553_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 9917,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 25663,
                                        "src": "15042:29:95",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 9922,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15042:47:95",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 9923,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 25699,
                                    "src": "15042:65:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 9925,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15042:88:95",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 9926,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25735,
                                "src": "15042:111:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_uint256_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,uint256) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 9928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15042:114:95",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 9929,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25794,
                            "src": "15042:142:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,address)"
                            }
                          },
                          "id": 9933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15042:156:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9934,
                        "nodeType": "ExpressionStatement",
                        "src": "15042:156:95"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 9950,
                                "name": "assetList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8856,
                                "src": "15353:9:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 9952,
                              "indexExpression": {
                                "id": 9951,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9905,
                                "src": "15363:1:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15353:12:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 9947,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9905,
                                  "src": "15322:1:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "63757272656e744c6973742875696e7432353629",
                                      "id": 9944,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15275:22:95",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_9932ba4c600b0d32a7f3471f2819be02d7a06b8a7a4a3c683d5e79d6635739d4",
                                        "typeString": "literal_string \"currentList(uint256)\""
                                      },
                                      "value": "currentList(uint256)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_9932ba4c600b0d32a7f3471f2819be02d7a06b8a7a4a3c683d5e79d6635739d4",
                                        "typeString": "literal_string \"currentList(uint256)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 9940,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8743,
                                              "src": "15247:7:95",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 9939,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "15239:7:95",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 9938,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "15239:7:95",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 9941,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15239:16:95",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 9935,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 18414,
                                          "src": "15209:8:95",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$24553_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 9937,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 25663,
                                        "src": "15209:29:95",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 9942,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15209:47:95",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 9943,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 25699,
                                    "src": "15209:65:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 9945,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15209:89:95",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 9946,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25735,
                                "src": "15209:112:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_uint256_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,uint256) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 9948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15209:115:95",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 9949,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25794,
                            "src": "15209:143:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,address)"
                            }
                          },
                          "id": 9953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15209:157:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9954,
                        "nodeType": "ExpressionStatement",
                        "src": "15209:157:95"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 9972,
                                "name": "tokenShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8865,
                                "src": "15537:11:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 9974,
                              "indexExpression": {
                                "id": 9973,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9905,
                                "src": "15549:1:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15537:14:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 9967,
                                    "name": "assetList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8856,
                                    "src": "15495:9:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 9969,
                                  "indexExpression": {
                                    "id": 9968,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9905,
                                    "src": "15505:1:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15495:12:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "746f6b656e4d61726b65745368617265286164647265737329",
                                      "id": 9964,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15443:27:95",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_fcaae87b56804c66b17f138a81029c896b0ec3952302a16dfb275660ea7f1540",
                                        "typeString": "literal_string \"tokenMarketShare(address)\""
                                      },
                                      "value": "tokenMarketShare(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_fcaae87b56804c66b17f138a81029c896b0ec3952302a16dfb275660ea7f1540",
                                        "typeString": "literal_string \"tokenMarketShare(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 9960,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8743,
                                              "src": "15415:7:95",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 9959,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "15407:7:95",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 9958,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "15407:7:95",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 9961,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15407:16:95",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 9955,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 18414,
                                          "src": "15377:8:95",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$24553_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 9957,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 25663,
                                        "src": "15377:29:95",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 9962,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15377:47:95",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 9963,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 25699,
                                    "src": "15377:65:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 9965,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15377:94:95",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 9966,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25717,
                                "src": "15377:117:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 9970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15377:131:95",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 9971,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25811,
                            "src": "15377:159:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 9975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15377:175:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9976,
                        "nodeType": "ExpressionStatement",
                        "src": "15377:175:95"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 9994,
                                "name": "swapVersions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8874,
                                "src": "15723:12:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 9996,
                              "indexExpression": {
                                "id": 9995,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9905,
                                "src": "15736:1:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15723:15:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 9989,
                                    "name": "assetList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8856,
                                    "src": "15681:9:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 9991,
                                  "indexExpression": {
                                    "id": 9990,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9905,
                                    "src": "15691:1:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15681:12:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "746f6b656e5377617056657273696f6e286164647265737329",
                                      "id": 9986,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15629:27:95",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_d90bc211448c02154e13cc66867cb2fa9b509ab0ca2b6f62443e8f6dc26d7274",
                                        "typeString": "literal_string \"tokenSwapVersion(address)\""
                                      },
                                      "value": "tokenSwapVersion(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_d90bc211448c02154e13cc66867cb2fa9b509ab0ca2b6f62443e8f6dc26d7274",
                                        "typeString": "literal_string \"tokenSwapVersion(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 9982,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 8743,
                                              "src": "15601:7:95",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 9981,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "15593:7:95",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 9980,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "15593:7:95",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 9983,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15593:16:95",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 9977,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 18414,
                                          "src": "15563:8:95",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$24553_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 9979,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 25663,
                                        "src": "15563:29:95",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 9984,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15563:47:95",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 9985,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 25699,
                                    "src": "15563:65:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 9987,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15563:94:95",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 9988,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25717,
                                "src": "15563:117:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 9992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15563:131:95",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 9993,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25811,
                            "src": "15563:159:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 9997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15563:176:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9998,
                        "nodeType": "ExpressionStatement",
                        "src": "15563:176:95"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9908,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9905,
                      "src": "15004:1:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 9909,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8856,
                        "src": "15008:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 9910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15008:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15004:20:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10000,
                  "initializationExpression": {
                    "assignments": [
                      9905
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9905,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14997:1:95",
                        "nodeType": "VariableDeclaration",
                        "scope": 10000,
                        "src": "14992:6:95",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9904,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14992:4:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9907,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 9906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15001:1:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14992:10:95"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15026:3:95",
                      "subExpression": {
                        "id": 9912,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9905,
                        "src": "15026:1:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9914,
                    "nodeType": "ExpressionStatement",
                    "src": "15026:3:95"
                  },
                  "nodeType": "ForStatement",
                  "src": "14988:773:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10013,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8856,
                          "src": "15915:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 10014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "15915:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c4f7261636c654c6973742829",
                            "id": 10010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15837:19:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c8599dedd2267d7ace54d927af92d01c1f424c72735cd282fed113a258ea6c35",
                              "typeString": "literal_string \"totalOracleList()\""
                            },
                            "value": "totalOracleList()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c8599dedd2267d7ace54d927af92d01c1f424c72735cd282fed113a258ea6c35",
                              "typeString": "literal_string \"totalOracleList()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10006,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8743,
                                    "src": "15809:7:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                      "typeString": "contract IndexFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                      "typeString": "contract IndexFactory"
                                    }
                                  ],
                                  "id": 10005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15801:7:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10004,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15801:7:95",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15801:16:95",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10001,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18414,
                                "src": "15771:8:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$24553_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 10003,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25663,
                              "src": "15771:29:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 10008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15771:47:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 10009,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25699,
                          "src": "15771:65:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 10011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15771:86:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 10012,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25811,
                      "src": "15771:143:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 10015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15771:161:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10016,
                  "nodeType": "ExpressionStatement",
                  "src": "15771:161:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10029,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8856,
                          "src": "16088:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 10030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "16088:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c43757272656e744c6973742829",
                            "id": 10026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16009:20:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_53fd4332f2a0b7090fb49c3aa55b2f1e0988040a339bc2dee556b3d3a622838d",
                              "typeString": "literal_string \"totalCurrentList()\""
                            },
                            "value": "totalCurrentList()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_53fd4332f2a0b7090fb49c3aa55b2f1e0988040a339bc2dee556b3d3a622838d",
                              "typeString": "literal_string \"totalCurrentList()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10022,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8743,
                                    "src": "15981:7:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                      "typeString": "contract IndexFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexFactory_$2015",
                                      "typeString": "contract IndexFactory"
                                    }
                                  ],
                                  "id": 10021,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15973:7:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10020,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15973:7:95",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15973:16:95",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10017,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18414,
                                "src": "15943:8:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$24553_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 10019,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25663,
                              "src": "15943:29:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 10024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15943:47:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 10025,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25699,
                          "src": "15943:65:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$24553_storage_ptr_$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 10027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15943:87:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$24553_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 10028,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25811,
                      "src": "15943:144:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$24553_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$24553_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 10031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15943:162:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10032,
                  "nodeType": "ExpressionStatement",
                  "src": "15943:162:95"
                }
              ]
            },
            "functionSelector": "e1497cff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeAssetList",
            "nameLocation": "14948:19:95",
            "parameters": {
              "id": 9902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14967:2:95"
            },
            "returnParameters": {
              "id": 9903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14977:0:95"
            },
            "scope": 10035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8729,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13223,
              "src": "796:4:95"
            },
            "id": 8730,
            "nodeType": "InheritanceSpecifier",
            "src": "796:4:95"
          }
        ],
        "contractDependencies": [
          2015,
          2992,
          12345,
          13169,
          13349
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10035,
          13223,
          28251,
          23787,
          23462,
          22669,
          20609,
          19845,
          18352,
          18418,
          18415
        ],
        "name": "CounterTest",
        "nameLocation": "781:11:95",
        "scope": 10036,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 95
}