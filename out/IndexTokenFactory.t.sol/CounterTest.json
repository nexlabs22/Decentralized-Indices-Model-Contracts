{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "feeRatePerDayScaled",
          "type": "uint256"
        }
      ],
      "name": "FeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "FeeReceiverSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "methodologist",
          "type": "address"
        }
      ],
      "name": "MethodologistSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "methodology",
          "type": "string"
        }
      ],
      "name": "MethodologySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintFeeToReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "SupplyCeilingSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRestricted",
          "type": "bool"
        }
      ],
      "name": "ToggledRestricted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexToken",
      "outputs": [
        {
          "internalType": "contract IndexToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoter",
      "outputs": [
        {
          "internalType": "contract IQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintWithSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwap",
      "outputs": [
        {
          "internalType": "contract TestSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "512:4037:41:-:0;;;;;1609:26:6;;;1631:4;-1:-1:-1;;1609:26:6;;;;;;;;3191:44:9;;;;;;;;;;-1:-1:-1;;;;;;718:10:41;;;;1555:25:43;-1:-1:-1;;;;;;;;;;;718:7:41;1528:18:43;718:10:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;696:32;;;-1:-1:-1;;;;;;696:32:41;-1:-1:-1;;;;;696:32:41;;;;;;;;;;760:10;;-1:-1:-1;;;;;;760:10:41;;768:1;760:10;;;1555:25:43;-1:-1:-1;;;;;;;;;;;760:7:41;;;1528:18:43;;760:10:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:35;;;-1:-1:-1;;;;;;735:35:41;-1:-1:-1;;;;;735:35:41;;;;;;;;;;794:10;;-1:-1:-1;;;;;;794:10:41;;802:1;794:10;;;1555:25:43;-1:-1:-1;;;;;;;;;;;794:7:41;;;1528:18:43;;794:10:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;777:27;;;-1:-1:-1;;;;;;777:27:41;-1:-1:-1;;;;;777:27:41;;;;;;;;;;831:10;;-1:-1:-1;;;;;;831:10:41;;839:1;831:10;;;1555:25:43;-1:-1:-1;;;;;;;;;;;831:7:41;;;1528:18:43;;831:10:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;811:30;;;-1:-1:-1;;;;;;811:30:41;-1:-1:-1;;;;;811:30:41;;;;;;;;;;872:10;;-1:-1:-1;;;;;;872:10:41;;880:1;872:10;;;1555:25:43;-1:-1:-1;;;;;;;;;;;872:7:41;;;1528:18:43;;872:10:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;848:34;;;-1:-1:-1;;;;;;848:34:41;-1:-1:-1;;;;;848:34:41;;;;;;;;;;904:10;;-1:-1:-1;;;;;;904:10:41;;912:1;904:10;;;1555:25:43;-1:-1:-1;;;;;;;;;;;904:7:41;;;1528:18:43;;904:10:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;889:25;;;-1:-1:-1;;;;;;889:25:41;-1:-1:-1;;;;;889:25:41;;;;;;;;;;1411:31;;-1:-1:-1;;;1411:31:41;;2743:2:43;1411:31:41;;;2725:21:43;2782:2;2762:18;;;2755:30;;;;-1:-1:-1;;;2801:18:43;;;2794:45;-1:-1:-1;;;;;;;;;;;1411:12:41;;;2856:18:43;;1411:31:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1411:31:41;;;;;;;;;;;;:::i;:::-;1386:56;;;;;;;;;;;;:::i;:::-;;512:4037;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;512:4037:41;;;-1:-1:-1;512:4037:41;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:43;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:43;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:43:o;309:1087::-;389:6;420:2;463;451:9;442:7;438:23;434:32;431:52;;;479:1;476;469:12;431:52;506:16;;-1:-1:-1;;;;;571:14:43;;;568:34;;;598:1;595;588:12;568:34;636:6;625:9;621:22;611:32;;681:7;674:4;670:2;666:13;662:27;652:55;;703:1;700;693:12;652:55;732:2;726:9;754:2;750;747:10;744:36;;;760:18;;:::i;:::-;835:2;829:9;803:2;889:13;;-1:-1:-1;;885:22:43;;;909:2;881:31;877:40;865:53;;;933:18;;;953:22;;;930:46;927:72;;;979:18;;:::i;:::-;1019:10;1015:2;1008:22;1054:2;1046:6;1039:18;1094:7;1089:2;1084;1080;1076:11;1072:20;1069:33;1066:53;;;1115:1;1112;1105:12;1066:53;1137:1;1128:10;;1147:129;1161:2;1158:1;1155:9;1147:129;;;1249:10;;;1245:19;;1239:26;1218:14;;;1214:23;;1207:59;1172:10;;;;1147:129;;;1294:2;1291:1;1288:9;1285:80;;;1353:1;1348:2;1343;1335:6;1331:15;1327:24;1320:35;1285:80;1384:6;309:1087;-1:-1:-1;;;;;;;;309:1087:43:o;2885:380::-;2964:1;2960:12;;;;3007;;;3028:61;;3082:4;3074:6;3070:17;3060:27;;3028:61;3135:2;3127:6;3124:14;3104:18;3101:38;3098:161;;;3181:10;3176:3;3172:20;3169:1;3162:31;3216:4;3213:1;3206:15;3244:4;3241:1;3234:15;3098:161;;2885:380;;;:::o;3270:127::-;3331:10;3326:3;3322:20;3319:1;3312:31;3362:4;3359:1;3352:15;3386:4;3383:1;3376:15;3270:127;512:4037:41;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c8063916a17c6116100c3578063e0bab4c41161007c578063e0bab4c4146102ae578063e20c9f71146102c9578063e7d015f2146102d1578063f4b9fa75146102e4578063f625c2b114610165578063fa7626d4146102f757600080fd5b8063916a17c61461025057806396c023e714610258578063b5508aa914610260578063ba414fa614610268578063c31c9c0714610280578063c6bbd5a71461029b57600080fd5b80633fc8cef3116101155780633fc8cef3146101b25780634aa4a4fc146101dd57806366d9a9a0146101f85780636e008a031461020d57806385226c81146102205780638dae88c21461023557600080fd5b80630a9254e41461015d5780630e7628c6146101675780631ed7831c1461016f5780632ade38801461018d5780633e5e3c23146101a25780633f7286f4146101aa575b600080fd5b610165610304565b005b610165610608565b6101776109e1565b6040516101849190611c61565b60405180910390f35b610195610a43565b6040516101849190611d10565b610177610b85565b610177610be5565b6026546101c5906001600160a01b031681565b6040516001600160a01b039091168152602001610184565b6101c573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b610200610c45565b6040516101849190611dd0565b601d546101c5906001600160a01b031681565b610228610d2b565b6040516101849190611cae565b6101c573b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b610200610dfb565b610165610ee1565b610228611439565b610270611509565b6040519015158152602001610184565b6101c573e592427a0aece92de3edee1f18e0157c0586156481565b6027546101c5906001600160a01b031681565b6101c5736b175474e89094c44da98b954eedeac495271d0f81565b610177611636565b601c546101c5906001600160a01b031681565b6025546101c5906001600160a01b031681565b6007546102709060ff1681565b604051630637469360e31b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba34989061033c90602890600401611e83565b602060405180830381600087803b15801561035657600080fd5b505af115801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e9190611bcf565b601e819055604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b1580156103e157600080fd5b505af11580156103f5573d6000803e3d6000fd5b5050505060405161040590611ab6565b604051809103906000f080158015610421573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b03928316908117909155601f54604051637f6f013b60e11b815260a0600480830191909152600e60a48301526d20b73a349024b7333630ba34b7b760911b60c483015260e0602483015260e482015263414e464960e01b610104820152670de0b6b3a764000060448201529216606483015269d3c21bcecceda100000060848301529063fede02769061012401600060405180830381600087803b1580156104de57600080fd5b505af11580156104f2573d6000803e3d6000fd5b5050601c54602154604051637e51dad560e11b81526001600160a01b0391821660048201529116925063fca3b5aa9150602401600060405180830381600087803b15801561053f57600080fd5b505af1158015610553573d6000803e3d6000fd5b5050602580546001600160a01b0319908116736b175474e89094c44da98b954eedeac495271d0f1790915560268054821673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21790556027805490911673b27308f9f90d607463bb33ea1bebb41c27ce5ab617905550506040516105c990611ac3565b604051809103906000f0801580156105e5573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b0392909216919091179055565b601c5460408051638da5cb5b60e01b8152905161068c926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561064e57600080fd5b505afa158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106869190611ad0565b30611696565b601c5460408051632fecd58960e01b81529051610718926001600160a01b031691632fecd589916004808301926020929190829003018186803b1580156106d257600080fd5b505afa1580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a9190611bcf565b670de0b6b3a764000061179e565b601c546040805163184a732f60e01b8152905161079c926001600160a01b03169163184a732f916004808301926020929190829003018186803b15801561075e57600080fd5b505afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107969190611bcf565b4261179e565b601c5460408051632cfc019d60e21b8152905161082b926001600160a01b03169163b3f00674916004808301926020929190829003018186803b1580156107e257600080fd5b505afa1580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190611ad0565b601f546001600160a01b0316611696565b601c54604080516309eeb1d560e41b815290516108c2926001600160a01b031691639eeb1d50916004808301926000929190829003018186803b15801561087157600080fd5b505afa158015610885573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108ad9190810190611b22565b6040518060200160405280600081525061187d565b601c5460408051632b52684d60e01b81529051610950926001600160a01b031691632b52684d916004808301926020929190829003018186803b15801561090857600080fd5b505afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190611bcf565b69d3c21bcecceda100000061179e565b601c54604080516303aa30b960e11b815290516109df926001600160a01b0316916307546172916004808301926020929190829003018186803b15801561099657600080fd5b505afa1580156109aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ce9190611ad0565b6021546001600160a01b0316611696565b565b60606014805480602002602001604051908101604052809291908181526020018280548015610a3957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a1b575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015610b7c57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015610b65578382906000526020600020018054610ad890612099565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0490612099565b8015610b515780601f10610b2657610100808354040283529160200191610b51565b820191906000526020600020905b815481529060010190602001808311610b3457829003601f168201915b505050505081526020019060010190610ab9565b505050508152505081526020019060010190610a67565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610a39576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1b575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610a39576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1b575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015610b7c5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610d1357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610cd55790505b50505050508152505081526020019060010190610c69565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015610b7c578382906000526020600020018054610d6e90612099565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9a90612099565b8015610de75780601f10610dbc57610100808354040283529160200191610de7565b820191906000526020600020905b815481529060010190602001808311610dca57829003601f168201915b505050505081526020019060010190610d4f565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015610b7c5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610ec957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610e8b5790505b50505050508152505081526020019060010190610e1f565b601e54604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b158015610f3257600080fd5b505af1158015610f46573d6000803e3d6000fd5b50505050602660009054906101000a90046001600160a01b03166001600160a01b031663d0e30db067016345785d8a00006040518263ffffffff1660e01b81526004016000604051808303818588803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b50506026546040516370a0823160e01b815230600482015261104894506001600160a01b0390911692506370a08231915060240160206040518083038186803b15801561100257600080fd5b505afa158015611016573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103a9190611bcf565b67016345785d8a000061179e565b60265460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c05861564600482015267016345785d8a000060248201526001600160a01b039091169063095ea7b390604401602060405180830381600087803b1580156110af57600080fd5b505af11580156110c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e79190611b00565b50604080516101008101825273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28152736b175474e89094c44da98b954eedeac495271d0f60208201908152610bb88284019081523060608401908152426080850190815267016345785d8a000060a08601908152600060c0870181815260e08801828152985163414bf38960e01b815288516001600160a01b039081166004830152975188166024820152955162ffffff166044870152935186166064860152915160848501525160a4840152905160c4830152935190911660e482015290919073e592427a0aece92de3edee1f18e0157c058615649063414bf3899061010401602060405180830381600087803b1580156111f657600080fd5b505af115801561120a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122e9190611bcf565b602554601c546040516370a0823160e01b81523060048201529293506001600160a01b039182169263095ea7b3929091169083906370a082319060240160206040518083038186803b15801561128357600080fd5b505afa158015611297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bb9190611bcf565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561130157600080fd5b505af1158015611315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113399190611b00565b50601c546025546040516370a0823160e01b81523060048201526001600160a01b0392831692638be7884792736b175474e89094c44da98b954eedeac495271d0f929116906370a082319060240160206040518083038186803b15801561139f57600080fd5b505afa1580156113b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d79190611bcf565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561141d57600080fd5b505af1158015611431573d6000803e3d6000fd5b505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015610b7c57838290600052602060002001805461147c90612099565b80601f01602080910402602001604051908101604052809291908181526020018280546114a890612099565b80156114f55780601f106114ca576101008083540402835291602001916114f5565b820191906000526020600020905b8154815290600101906020018083116114d857829003601f168201915b50505050508152602001906001019061145d565b600754600090610100900460ff161561152b5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156116315760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916115b9917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611c14565b60408051601f19818403018152908290526115d391611c45565b6000604051808303816000865af19150503d8060008114611610576040519150601f19603f3d011682016040523d82523d6000602084013e611615565b606091505b509150508080602001905181019061162d9190611b00565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610a39576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610a1b575050505050905090565b806001600160a01b0316826001600160a01b03161461179a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161171c9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516117539190611f2b565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405161178a9190611feb565b60405180910390a161179a6119aa565b5050565b80821461179a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161180f9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516118469190611fb3565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405161178a919061203f565b8060405160200161188e9190611c45565b60405160208183030381529060405280519060200120826040516020016118b59190611c45565b604051602081830303815290604052805190602001201461179a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161193c9060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826040516119739190611f6f565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405161178a9190612015565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611aa55760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611a449291602001611c14565b60408051601f1981840301815290829052611a5e91611c45565b6000604051808303816000865af19150503d8060008114611a9b576040519150601f19603f3d011682016040523d82523d6000602084013e611aa0565b606091505b505050505b6007805461ff001916610100179055565b612b8c806120eb83390190565b6104f980614c7783390190565b600060208284031215611ae257600080fd5b81516001600160a01b0381168114611af957600080fd5b9392505050565b600060208284031215611b1257600080fd5b81518015158114611af957600080fd5b600060208284031215611b3457600080fd5b815167ffffffffffffffff80821115611b4c57600080fd5b818401915084601f830112611b6057600080fd5b815181811115611b7257611b726120d4565b604051601f8201601f19908116603f01168101908382118183101715611b9a57611b9a6120d4565b81604052828152876020848701011115611bb357600080fd5b611bc4836020830160208801612069565b979650505050505050565b600060208284031215611be157600080fd5b5051919050565b60008151808452611c00816020860160208601612069565b601f01601f19169290920160200192915050565b6001600160e01b0319831681528151600090611c37816004850160208701612069565b919091016004019392505050565b60008251611c57818460208701612069565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611ca25783516001600160a01b031683529284019291840191600101611c7d565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d0357603f19888603018452611cf1858351611be8565b94509285019290850190600101611cd5565b5092979650505050505050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015611dc057603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015611daa57605f19898503018352611d98848651611be8565b948e01949350918d0191600101611d7c565b505050978a019794505091880191600101611d37565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611e7457898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611e5f5783516001600160e01b0319168252928b019260019290920191908b0190611e35565b50978a01979550505091870191600101611df8565b50919998505050505050505050565b600060208083526000845481600182811c915080831680611ea557607f831692505b858310811415611ec357634e487b7160e01b85526022600452602485fd5b878601838152602001818015611ee05760018114611ef157611f1c565b60ff19861682528782019650611f1c565b60008b81526020902060005b86811015611f1657815484820152908501908901611efd565b83019750505b50949998505050505050505050565b604081526000611f5560408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000611f9960408301600a8152690808080808081319599d60b21b602082015260400190565b8281036020840152611fab8185611be8565b949350505050565b604081526000611fdd60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b604081526000611f5560408301600a8152690808080808149a59da1d60b21b602082015260400190565b604081526000611f9960408301600a8152690808080808149a59da1d60b21b602082015260400190565b604081526000611fdd60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60005b8381101561208457818101518382015260200161206c565b83811115612093576000848401525b50505050565b600181811c908216806120ad57607f821691505b602082108114156120ce57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfe608060405261010480546001600160a01b03199081167395ad61b0a150d79219dcf64e1e6cc01f0b64c4ce179091556101058054821673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2179055610106805490911673b27308f9f90d607463bb33ea1bebb41c27ce5ab617905534801561007957600080fd5b50612b03806100896000396000f3fe6080604052600436106103545760003560e01c80638be78847116101c6578063c01bc982116100f7578063e24b85e711610095578063f2fde38b1161006f578063f2fde38b14610a1d578063f734e22a14610a3d578063fca3b5aa14610a52578063fede027614610a7257600080fd5b8063e24b85e7146109b4578063e4fbaecb146109d5578063efdcd974146109fd57600080fd5b8063c6bbd5a7116100d1578063c6bbd5a71461092b578063d153b60c1461094c578063d1a72ed61461096c578063dd62ed3e1461099457600080fd5b8063c01bc982146108aa578063c31c9c07146108db578063c36596a61461090357600080fd5b80639f8e67bf11610164578063aaa4a1841161013e578063aaa4a18414610822578063ad39e5fd14610842578063b3f006741461086a578063b5ed298a1461088a57600080fd5b80639f8e67bf146107c2578063a457c2d7146107e2578063a9059cbb1461080257600080fd5b806391fe1b92116101a057806391fe1b921461075857806395d89b41146107785780639dc29fac1461078d5780639eeb1d50146107ad57600080fd5b80638be78847146106f25780638da5cb5b146107125780638dae88c21461073057600080fd5b806339509351116102a05780635c975abb1161023e5780636e01a686116102185780636e01a6861461067257806370a0823114610692578063715018a6146106c85780638456cb59146106dd57600080fd5b80635c975abb1461061a578063616bcd2114610632578063660db4841461065257600080fd5b806340c10f191161027a57806340c10f191461058a57806345596e2e146105aa5780634aa4a4fc146105ca5780635725a977146105f257600080fd5b806339509351146105325780633f4ba83a146105525780633fc8cef31461056957600080fd5b806323b872dd1161030d5780632f9f8c13116102e75780632f9f8c13146104b05780632fab7aea146104d85780632fecd58914610500578063313ce5671461051657600080fd5b806323b872dd146104515780632b52684d146104715780632e7b09481461048857600080fd5b806306fdde0314610360578063075461721461038b578063095ea7b3146103c45780630fb405b7146103f457806318160ddd1461041c578063184a732f1461043b57600080fd5b3661035b57005b600080fd5b34801561036c57600080fd5b50610375610a92565b6040516103829190612861565b60405180910390f35b34801561039757600080fd5b50610100546103ac906001600160a01b031681565b6040516001600160a01b039091168152602001610382565b3480156103d057600080fd5b506103e46103df366004612720565b610b24565b6040519015158152602001610382565b34801561040057600080fd5b506103ac7372e4f9f808c49a2a61de9c5896298920dc4eeea981565b34801561042857600080fd5b506035545b604051908152602001610382565b34801561044757600080fd5b5061042d60fd5481565b34801561045d57600080fd5b506103e461046c3660046126e4565b610b3c565b34801561047d57600080fd5b5061042d6101025481565b34801561049457600080fd5b506103ac73b131f4a55907b10d1f0a50d8ab8fa09ec342cd7481565b3480156104bc57600080fd5b506103ac73cf0c122c6b73ff809c693db761e7baebe62b6a2e81565b3480156104e457600080fd5b506103ac73761d38e5ddf6ccf6cf7c55759d5210750b5d60f381565b34801561050c57600080fd5b5061042d60fc5481565b34801561052257600080fd5b5060405160128152602001610382565b34801561053e57600080fd5b506103e461054d366004612720565b610c2f565b34801561055e57600080fd5b50610567610c51565b005b34801561057557600080fd5b50610105546103ac906001600160a01b031681565b34801561059657600080fd5b506105676105a5366004612720565b610c63565b3480156105b657600080fd5b506105676105c536600461282f565b610d7d565b3480156105d657600080fd5b506103ac73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b3480156105fe57600080fd5b506103ac73b62e45c3df611dce236a6ddc7a493d79f9dfadef81565b34801561062657600080fd5b5060ca5460ff166103e4565b34801561063e57600080fd5b5061056761064d366004612720565b610dc0565b34801561065e57600080fd5b5061056761066d36600461268f565b610e83565b34801561067e57600080fd5b5061056761068d36600461282f565b610ee8565b34801561069e57600080fd5b5061042d6106ad36600461268f565b6001600160a01b031660009081526033602052604090205490565b3480156106d457600080fd5b50610567610f2d565b3480156106e957600080fd5b50610567610f3f565b3480156106fe57600080fd5b5061056761070d366004612720565b610f4f565b34801561071e57600080fd5b506065546001600160a01b03166103ac565b34801561073c57600080fd5b506103ac73b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b34801561076457600080fd5b5061056761077336600461276c565b6112f8565b34801561078457600080fd5b506103756113aa565b34801561079957600080fd5b506105676107a8366004612720565b6113b9565b3480156107b957600080fd5b5061037561148e565b3480156107ce57600080fd5b5060ff546103ac906001600160a01b031681565b3480156107ee57600080fd5b506103e46107fd366004612720565b61151d565b34801561080e57600080fd5b506103e461081d366004612720565b6115a3565b34801561082e57600080fd5b5061056761083d36600461268f565b61162c565b34801561084e57600080fd5b506103ac7327c70cd1946795b66be9d954418546998b54663481565b34801561087657600080fd5b5060fe546103ac906001600160a01b031681565b34801561089657600080fd5b506105676108a536600461268f565b6116a0565b3480156108b657600080fd5b506103e46108c536600461268f565b6101036020526000908152604090205460ff1681565b3480156108e757600080fd5b506103ac73e592427a0aece92de3edee1f18e0157c0586156481565b34801561090f57600080fd5b506103ac739813037ee2218799597d83d4a5b6f3b6778218d981565b34801561093757600080fd5b50610106546103ac906001600160a01b031681565b34801561095857600080fd5b506097546103ac906001600160a01b031681565b34801561097857600080fd5b506103ac73ac57de9c1a09fec648e93eb98875b212db0d460b81565b3480156109a057600080fd5b5061042d6109af3660046126b1565b6116f0565b3480156109c057600080fd5b50610104546103ac906001600160a01b031681565b3480156109e157600080fd5b506103ac736982508145454ce325ddbe47a25d4ec3d231193381565b348015610a0957600080fd5b50610567610a1836600461268f565b61171b565b348015610a2957600080fd5b50610567610a3836600461268f565b611780565b348015610a4957600080fd5b506105676118a8565b348015610a5e57600080fd5b50610567610a6d36600461268f565b6118b8565b348015610a7e57600080fd5b50610567610a8d3660046127a9565b61191e565b606060368054610aa190612a66565b80601f0160208091040260200160405190810160405280929190818152602001828054610acd90612a66565b8015610b1a5780601f10610aef57610100808354040283529160200191610b1a565b820191906000526020600020905b815481529060010190602001808311610afd57829003601f168201915b5050505050905090565b600033610b32818585611a8b565b5060019392505050565b6000610b46611baf565b336000908152610103602052604090205460ff1615610b805760405162461bcd60e51b8152600401610b77906128e0565b60405180910390fd5b6001600160a01b0383166000908152610103602052604090205460ff1615610bba5760405162461bcd60e51b8152600401610b77906128b6565b6001600160a01b0384166000908152610103602052604090205460ff1615610c195760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b6044820152606401610b77565b610c24843384611bf5565b610b32848484611c6f565b600033610b32818585610c4283836116f0565b610c4c91906129f6565b611a8b565b610c59611e1a565b610c61611e74565b565b610c6b611baf565b610100546001600160a01b03163314610c965760405162461bcd60e51b8152600401610b7790612917565b6101025481610ca460355490565b610cae91906129f6565b1115610cfc5760405162461bcd60e51b815260206004820152601a60248201527f77696c6c2065786365656420737570706c79206365696c696e670000000000006044820152606401610b77565b6001600160a01b0382166000908152610103602052604090205460ff1615610d365760405162461bcd60e51b8152600401610b77906128b6565b336000908152610103602052604090205460ff1615610d675760405162461bcd60e51b8152600401610b77906128e0565b610d6f611ec6565b610d798282611ff4565b5050565b610d85611e1a565b610d8d611ec6565b60fc81905560405181907f45398c451b1a31b88dbaed4e7b89a632f43cc4b50149d437db03a5300afe40d190600090a250565b610dca33826113b9565b60405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018290526001600160a01b0383169063095ea7b390604401602060405180830381600087803b158015610e2657600080fd5b505af1158015610e3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5e919061274a565b50610e7e73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc283836120b5565b505050565b610e8b611e1a565b6001600160a01b038116610e9e57600080fd5b60ff80546001600160a01b0319166001600160a01b0383169081179091556040517f164d8ef0d742b45087644f55c61abeb84557df70d06730591e451f0981e278ca90600090a250565b610ef0611e1a565b6101028190556040518181527fe35be406f69e9d11d6ac8e5b54bbc8b6c4baf2fa2359f84a56baa5ea5d07dc8f906020015b60405180910390a150565b610f35611e1a565b610c6160006121d6565b610f47611e1a565b610c61612228565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401602060405180830381600087803b158015610f9d57600080fd5b505af1158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd5919061274a565b5060405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018290526001600160a01b0383169063095ea7b390604401602060405180830381600087803b15801561103257600080fd5b505af1158015611046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106a919061274a565b50600061108c8373c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2846120b5565b6101055460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018390529192506001600160a01b03169063095ea7b390604401602060405180830381600087803b1580156110ee57600080fd5b505af1158015611102573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611126919061274a565b506101045461115e9073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2906001600160a01b0316611159600a85612a0e565b6120b5565b5061119773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2736982508145454ce325ddbe47a25d4ec3d2311933611159600a85612a0e565b506111d073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273b131f4a55907b10d1f0a50d8ab8fa09ec342cd74611159600a85612a0e565b5061120973c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2739813037ee2218799597d83d4a5b6f3b6778218d9611159600a85612a0e565b5061124273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc27372e4f9f808c49a2a61de9c5896298920dc4eeea9611159600a85612a0e565b5061127b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273761d38e5ddf6ccf6cf7c55759d5210750b5d60f3611159600a85612a0e565b506112b473c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273b62e45c3df611dce236a6ddc7a493d79f9dfadef611159600a85612a0e565b506112ed73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc27327c70cd1946795b66be9d954418546998b546634611159600a85612a0e565b50610e7e3382612265565b60ff546001600160a01b031633146113665760405162461bcd60e51b815260206004820152602b60248201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6560448201526a1d1a1bd91bdb1bd9da5cdd60aa1b6064820152608401610b77565b805161137a9061010190602084019061254d565b507fe6be68107100e39cb16d675c1086a4d5479fbd01108d721dabbccaa2249b995f81604051610f229190612861565b606060378054610aa190612a66565b6113c1611baf565b610100546001600160a01b031633146113ec5760405162461bcd60e51b8152600401610b7790612917565b6001600160a01b0382166000908152610103602052604090205460ff161561144b5760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b6044820152606401610b77565b336000908152610103602052604090205460ff161561147c5760405162461bcd60e51b8152600401610b77906128e0565b611484611ec6565b610d79828261226d565b610101805461149c90612a66565b80601f01602080910402602001604051908101604052809291908181526020018280546114c890612a66565b80156115155780601f106114ea57610100808354040283529160200191611515565b820191906000526020600020905b8154815290600101906020018083116114f857829003601f168201915b505050505081565b6000338161152b82866116f0565b90508381101561158b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610b77565b6115988286868403611a8b565b506001949350505050565b60006115ad611baf565b336000908152610103602052604090205460ff16156115de5760405162461bcd60e51b8152600401610b77906128e0565b6001600160a01b0383166000908152610103602052604090205460ff16156116185760405162461bcd60e51b8152600401610b77906128b6565b611623338484611c6f565b50600192915050565b611634611e1a565b6001600160a01b0381166000818152610103602052604090819020805460ff19811660ff9182161590811790925591517f14ddf324cc5d8b14a3c3b12c84b0a7d578d72c8d60655c06d6a457e71431d5ee9261169592161515815260200190565b60405180910390a250565b6116a8611e1a565b6001600160a01b0381166116ce5760405162461bcd60e51b8152600401610b779061295b565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b611723611e1a565b6001600160a01b03811661173657600080fd5b60fe80546001600160a01b0319166001600160a01b0383169081179091556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90600090a250565b6001600160a01b0381166117a65760405162461bcd60e51b8152600401610b779061295b565b6097546001600160a01b0382811691161461181e5760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b6064820152608401610b77565b6001600160a01b038116331461189c5760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e65720000000000006064820152608401610b77565b6118a5816121d6565b50565b6118b0611e1a565b610c61611ec6565b6118c0611e1a565b6001600160a01b0381166118d357600080fd5b61010080546001600160a01b0319166001600160a01b0383169081179091556040517f726b590ef91a8c76ad05bbe91a57ef84605276528f49cd47d787f558a4e755b690600090a250565b600054610100900460ff161580801561193e5750600054600160ff909116105b806119585750303b158015611958575060005460ff166001145b6119bb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b77565b6000805460ff1916600117905580156119de576000805461ff0019166101001790555b6001600160a01b0383166119f157600080fd5b6119f96123a1565b611a016123d0565b611a0b86866123ff565b611a13612430565b60fc84905560fe80546001600160a01b0319166001600160a01b0385161790556101028290554260fd558015611a83576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b038316611aed5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b77565b6001600160a01b038216611b4e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b77565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60ca5460ff1615610c615760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610b77565b6000611c0184846116f0565b90506000198114611c695781811015611c5c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610b77565b611c698484848403611a8b565b50505050565b6001600160a01b038316611cd35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b77565b6001600160a01b038216611d355760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b77565b6001600160a01b03831660009081526033602052604090205481811015611dad5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610b77565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611e0d9086815260200190565b60405180910390a3611c69565b6065546001600160a01b03163314610c615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b77565b611e7c612457565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006201518060fd5442611eda9190612a4f565b611ee49190612a0e565b9050600181106118a5576000611ef960355490565b60fc54909150819060005b84811015611f3e5768056bc75e2d63100000611f208385612a30565b611f2a9190612a0e565b611f3490846129f6565b9250600101611f04565b506000611f4b8484612a4f565b9050611f5a8562015180612a30565b60fd6000828254611f6b91906129f6565b909155505060fe54611f86906001600160a01b031682611ff4565b60fe547f07982395c678b2ffc23fcf59aaec243ca79418c285af0d0e10b4e65bc4189f4c906001600160a01b031642611fbe60355490565b604080516001600160a01b0390941684526020840192909252908201526060810183905260800160405180910390a15050505050565b6001600160a01b03821661204a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b77565b806035600082825461205c91906129f6565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60408051610100810182526001600160a01b03858116825284811660208301908152610bb88385019081523060608501908152426080860190815260a08601888152600060c0880181815260e08901828152995163414bf38960e01b8152895189166004820152965188166024880152945162ffffff166044870152925186166064860152905160848501525160a4840152905160c4830152935190911660e4820152829073e592427a0aece92de3edee1f18e0157c058615649063414bf3899061010401602060405180830381600087803b15801561219457600080fd5b505af11580156121a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121cc9190612848565b9695505050505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612230611baf565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611ea93390565b610c96611baf565b6001600160a01b0382166122cd5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610b77565b6001600160a01b038216600090815260336020526040902054818110156123415760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610b77565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff166123c85760405162461bcd60e51b8152600401610b77906129ab565b610c616124a0565b600054610100900460ff166123f75760405162461bcd60e51b8152600401610b77906129ab565b610c616124d0565b600054610100900460ff166124265760405162461bcd60e51b8152600401610b77906129ab565b610d798282612503565b600054610100900460ff16610c615760405162461bcd60e51b8152600401610b77906129ab565b60ca5460ff16610c615760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b77565b600054610100900460ff166124c75760405162461bcd60e51b8152600401610b77906129ab565b610c61336121d6565b600054610100900460ff166124f75760405162461bcd60e51b8152600401610b77906129ab565b60ca805460ff19169055565b600054610100900460ff1661252a5760405162461bcd60e51b8152600401610b77906129ab565b815161253d90603690602085019061254d565b508051610e7e9060379060208401905b82805461255990612a66565b90600052602060002090601f01602090048101928261257b57600085556125c1565b82601f1061259457805160ff19168380011785556125c1565b828001600101855582156125c1579182015b828111156125c15782518255916020019190600101906125a6565b506125cd9291506125d1565b5090565b5b808211156125cd57600081556001016125d2565b80356001600160a01b03811681146125fd57600080fd5b919050565b600082601f83011261261357600080fd5b813567ffffffffffffffff8082111561262e5761262e612ab7565b604051601f8301601f19908116603f0116810190828211818310171561265657612656612ab7565b8160405283815286602085880101111561266f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156126a157600080fd5b6126aa826125e6565b9392505050565b600080604083850312156126c457600080fd5b6126cd836125e6565b91506126db602084016125e6565b90509250929050565b6000806000606084860312156126f957600080fd5b612702846125e6565b9250612710602085016125e6565b9150604084013590509250925092565b6000806040838503121561273357600080fd5b61273c836125e6565b946020939093013593505050565b60006020828403121561275c57600080fd5b815180151581146126aa57600080fd5b60006020828403121561277e57600080fd5b813567ffffffffffffffff81111561279557600080fd5b6127a184828501612602565b949350505050565b600080600080600060a086880312156127c157600080fd5b853567ffffffffffffffff808211156127d957600080fd5b6127e589838a01612602565b965060208801359150808211156127fb57600080fd5b5061280888828901612602565b9450506040860135925061281e606087016125e6565b949793965091946080013592915050565b60006020828403121561284157600080fd5b5035919050565b60006020828403121561285a57600080fd5b5051919050565b600060208083528351808285015260005b8181101561288e57858101830151858201604001528201612872565b818111156128a0576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526010908201526f1d1bc81a5cc81c995cdd1c9a58dd195960821b604082015260600190565b60208082526018908201527f6d73672e73656e64657220697320726573747269637465640000000000000000604082015260600190565b60208082526024908201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d69604082015263373a32b960e11b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115612a0957612a09612aa1565b500190565b600082612a2b57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612a4a57612a4a612aa1565b500290565b600082821015612a6157612a61612aa1565b500390565b600181811c90821680612a7a57607f821691505b60208210811415612a9b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212201a4da83f6dc80d57616191b6627a9a3276548b4374e5073b59f509d3288c976c64736f6c634300080700336080604052600080546001600160a01b0319908116736b175474e89094c44da98b954eedeac495271d0f179091556001805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217905534801561005857600080fd5b50610491806100686000396000f3fe6080604052600436106100745760003560e01c8063b6b55f251161004e578063b6b55f251461010c578063c31c9c071461012e578063e0bab4c414610156578063f4b9fa751461017e57600080fd5b80633fc8cef3146100805780634aa4a4fc146100bc57806389a30271146100e457600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100a073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b3480156100f057600080fd5b506100a073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b34801561011857600080fd5b5061012c610127366004610429565b61019e565b005b34801561013a57600080fd5b506100a073e592427a0aece92de3edee1f18e0157c0586156481565b34801561016257600080fd5b506100a0736b175474e89094c44da98b954eedeac495271d0f81565b34801561018a57600080fd5b506000546100a0906001600160a01b031681565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156101f057600080fd5b505af1158015610204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102289190610400565b5060005460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018390526001600160a01b039091169063095ea7b390604401602060405180830381600087803b15801561028957600080fd5b505af115801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c19190610400565b506040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260208201908152610bb88284019081523060608401908152426080850190815260a08501878152600060c0870181815260e08801918252975163414bf38960e01b815287516001600160a01b039081166004830152965187166024820152945162ffffff166044860152925185166064850152905160848401525160a4830152935160c482015292511660e48301529073e592427a0aece92de3edee1f18e0157c058615649063414bf3899061010401602060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610442565b505050565b60006020828403121561041257600080fd5b8151801515811461042257600080fd5b9392505050565b60006020828403121561043b57600080fd5b5035919050565b60006020828403121561045457600080fd5b505191905056fea2646970667358221220cdfdbb85b0b5b2f99d71752f093bf76aa8fb6f8adfd64ed51dc864dcdd3e26a664736f6c63430008070033a2646970667358221220628eb01f4e39a06c30926d911cc849f593480e1ffa46268f221f959449d571df64736f6c63430008070033",
    "sourceMap": "512:4037:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:531;;;:::i;:::-;;2496:465;;;:::i;2531:136:12:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3463:153;;;:::i;:::-;;;;;;;:::i;3320:135::-;;;:::i;3013:143::-;;;:::i;1304:17:41:-;;;;;-1:-1:-1;;;;;1304:17:41;;;;;;-1:-1:-1;;;;;3360:32:43;;;3342:51;;3330:2;3315:18;1304:17:41;3196:203:43;1002:74:41;;1034:42;1002:74;;2825:180:12;;;:::i;:::-;;;;;;;:::i;635:24:41:-;;;;;-1:-1:-1;;;;;635:24:41;;;2675:142:12;;;:::i;:::-;;;;;;;:::i;1083:75:41:-;;1116:42;1083:75;;3164:148:12;;;:::i;2975:1464:41:-;;;:::i;2228:143:12:-;;;:::i;1865:600:6:-;;;:::i;:::-;;;9575:14:43;;9568:22;9550:41;;9538:2;9523:18;1865:600:6;9410:187:43;1167:105:41;;1229:42;1167:105;;1356:21;;;;;-1:-1:-1;;;;;1356:21:41;;;923:72;;953:42;923:72;;2379:144:12;;;:::i;600:28:41:-;;;;;-1:-1:-1;;;;;600:28:41;;;1281:16;;;;;-1:-1:-1;;;;;1281:16:41;;;1609:26:6;;;;;;;;;1957:531:41;2006:30;;-1:-1:-1;;;2006:30:41;;:13;;;;:30;;2020:15;;2006:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1992:11;:44;;;2047:26;;-1:-1:-1;;;2047:26:41;;;;;17552:25:43;;;;2047:13:41;;;;17525:18:43;;2047:26:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2084:10:41;:29;;-1:-1:-1;;;;;;2084:29:41;-1:-1:-1;;;;;2084:29:41;;;;;;;;;2231:11;;2124:154;;-1:-1:-1;;;2124:154:41;;15003:3:43;2124:154:41;;;;14985:22:43;;;;15044:2;15023:19;;;15016:31;-1:-1:-1;;;15063:19:43;;;15056:45;15139:3;15117:20;;;15110:33;15159:19;;;15152:30;-1:-1:-1;;;15198:19:43;;;15191:35;2212:4:41;15278:18:43;;;15271:34;2231:11:41;;15321:18:43;;;15314:60;2257:10:41;15390:19:43;;;15383:35;2084:29:41;2124:21;;15243:19:43;;2124:154:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2289:10:41;;2310:6;;2289:28;;-1:-1:-1;;;2289:28:41;;-1:-1:-1;;;;;2310:6:41;;;2289:28;;;3342:51:43;2289:10:41;;;-1:-1:-1;2289:20:41;;-1:-1:-1;3315:18:43;;2289:28:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2361:3:41;:16;;-1:-1:-1;;;;;;2361:16:41;;;953:42;2361:16;;;;2388:4;:19;;;;1034:42;2388:19;;;2418:6;:24;;;;;1116:42;2418:24;;;-1:-1:-1;;2466:14:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2455:8:41;:25;;-1:-1:-1;;;;;;2455:25:41;-1:-1:-1;;;;;2455:25:41;;;;;;;;;;1957:531::o;2496:465::-;2583:10;;:18;;;-1:-1:-1;;;2583:18:41;;;;2574:43;;-1:-1:-1;;;;;2583:10:41;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2611:4;2574:8;:43::i;:::-;2637:10;;:32;;;-1:-1:-1;;;2637:32:41;;;;2628:48;;-1:-1:-1;;;;;2637:10:41;;:30;;:32;;;;;;;;;;;;;;:10;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2671:4;2628:8;:48::i;:::-;2696:10;;:25;;;-1:-1:-1;;;2696:25:41;;;;2687:52;;-1:-1:-1;;;;;2696:10:41;;:23;;:25;;;;;;;;;;;;;;:10;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2723:15;2687:8;:52::i;:::-;2759:10;;:24;;;-1:-1:-1;;;2759:24:41;;;;2750:47;;-1:-1:-1;;;;;2759:10:41;;:22;;:24;;;;;;;;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2785:11;;-1:-1:-1;;;;;2785:11:41;2750:8;:47::i;:::-;2817:10;;:24;;;-1:-1:-1;;;2817:24:41;;;;2808:38;;-1:-1:-1;;;;;2817:10:41;;:22;;:24;;;;;:10;;:24;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2817:24:41;;;;;;;;;;;;:::i;:::-;2808:38;;;;;;;;;;;;:8;:38::i;:::-;2866:10;;:26;;;-1:-1:-1;;;2866:26:41;;;;2857:48;;-1:-1:-1;;;;;2866:10:41;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2894:10;2857:8;:48::i;:::-;2925:10;;:19;;;-1:-1:-1;;;2925:19:41;;;;2916:37;;-1:-1:-1;;;;;2925:10:41;;:17;;:19;;;;;;;;;;;;;;:10;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2946:6;;-1:-1:-1;;;;;2946:6:41;2916:8;:37::i;:::-;2496:465::o;2531:136:12:-;2578:33;2643:16;2624:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2624:35:12;;;;;;;;;;;;;;;;;;;;;;;2531:136;:::o;3463:153::-;3512:42;3589:19;3567:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3567:41:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3463:153;:::o;3320:135::-;3366:33;3431:16;3412:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3412:35:12;;;;;;;;;;;;;;;;;;;;;;3320:135;:::o;3013:143::-;3061:35;3130:18;3109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3109:39:12;;;;;;;;;;;;;;;;;;;;;;3013:143;:::o;2825:180::-;2881:48;2971:26;2942:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2675:142;2723:34;2791:18;2770:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3164:148;3212:40;3286:18;3265:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2975:1464:41;3035:11;;3021:26;;-1:-1:-1;;;3021:26:41;;;;;17552:25:43;;;;3021:13:41;;;;17525:18:43;;3021:26:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3058:4;;;;;;;;;-1:-1:-1;;;;;3058:4:41;-1:-1:-1;;;;;3058:12:41;;3078:4;3058:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3105:4:41;;:29;;-1:-1:-1;;;3105:29:41;;3128:4;3105:29;;;3342:51:43;3096:45:41;;-1:-1:-1;;;;;;3105:4:41;;;;-1:-1:-1;3105:14:41;;-1:-1:-1;3315:18:43;;3105:29:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3136:4;3096:8;:45::i;:::-;3152:4;;:39;;-1:-1:-1;;;3152:39:41;;1229:42;3152:39;;;3578:51:43;3186:4:41;3645:18:43;;;3638:34;-1:-1:-1;;;;;3152:4:41;;;;:12;;3551:18:43;;3152:39:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3265:544:41;;;;;;;;1034:42;3265:544;;953:42;3265:544;;;;;;3417:4;3265:544;;;;;;3455:4;3265:544;;;;;;3485:15;3265:544;;;;;;3525:4;3265:544;;;;;;-1:-1:-1;3265:544:41;;;;;;;;;;;;3839:35;;-1:-1:-1;;;3839:35:41;;16893:13:43;;-1:-1:-1;;;;;16889:22:43;;;3839:35:41;;;16871:41:43;16954:24;;16950:33;;16928:20;;;16921:63;17026:24;;17052:8;17022:39;17000:20;;;16993:69;17104:24;;17100:33;;17078:20;;;17071:63;17172:24;;17150:20;;;17143:54;17235:24;17213:20;;;17206:54;17298:24;;17276:20;;;17269:54;17365:24;;17361:33;;;17339:20;;;17332:63;3265:544:41;;-1:-1:-1;1229:42:41;;3839:27;;16805:19:43;;3839:35:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4040:3;;4060:10;;4073:28;;-1:-1:-1;;;4073:28:41;;4095:4;4073:28;;;3342:51:43;3822:52:41;;-1:-1:-1;;;;;;4040:3:41;;;;:11;;4060:10;;;;4040:3;;4073:13;;3315:18:43;;4073:28:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4040:62;;-1:-1:-1;;;;;;4040:62:41;;;;;;;-1:-1:-1;;;;;3596:32:43;;;4040:62:41;;;3578:51:43;3645:18;;;3638:34;3551:18;;4040:62:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4113:10:41;;4149:3;;:28;;-1:-1:-1;;;4149:28:41;;4171:4;4149:28;;;3342:51:43;-1:-1:-1;;;;;4113:10:41;;;;:30;;953:42;;4149:3;;;:13;;3315:18:43;;4149:28:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4113:65;;-1:-1:-1;;;;;;4113:65:41;;;;;;;-1:-1:-1;;;;;3596:32:43;;;4113:65:41;;;3578:51:43;3645:18;;;3638:34;3551:18;;4113:65:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3010:1429;;2975:1464::o;2228:143:12:-;2277:34;2345:18;2324:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:600:6;1920:7;;1899:4;;1920:7;;;;;1916:542;;;-1:-1:-1;1951:7:6;;;;;;;;1865:600::o;1916:542::-;1991:17;3077:42;3065:55;3148:16;2031:382;;2251:43;;;1712:64;2251:43;;;3578:51:43;;;-1:-1:-1;;;3645:18:43;;;3638:34;2251:43:6;;;;;;;;;3551:18:43;;;2251:43:6;;;-1:-1:-1;;1712:64:6;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:6;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:6:o;2379:144:12:-;2428:35;2497:18;2476:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2476:39:12;;;;;;;;;;;;;;;;;;;;;;2379:144;:::o;3728:284:6:-;3797:1;-1:-1:-1;;;;;3792:6:6;:1;-1:-1:-1;;;;;3792:6:6;;3788:217;;3820:44;;;;;13177:2:43;13159:21;;;13216:2;13196:18;;;13189:30;13255:34;13250:2;13235:18;;13228:62;-1:-1:-1;;;13321:2:43;13306:18;;13299:35;13366:3;13351:19;;12975:401;3820:44:6;;;;;;;;3884:34;3916:1;3884:34;;;;;;:::i;:::-;;;;;;;;3938;3970:1;3938:34;;;;;;:::i;:::-;;;;;;;;3987:6;:4;:6::i;:::-;3728:284;;:::o;5365:269::-;5428:1;5423;:6;5419:208;;5451:41;;;;;12369:2:43;12351:21;;;12408:2;12388:18;;;12381:30;12447:34;12442:2;12427:18;;12420:62;-1:-1:-1;;;12513:2:43;12498:18;;12491:32;12555:3;12540:19;;12167:398;5451:41:6;;;;;;;;5512:31;5541:1;5512:31;;;;;;:::i;:::-;;;;;;;;5563;5592:1;5563:31;;;;;;:::i;18422:351::-;18559:1;18542:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18532:30;;;;;;18525:1;18508:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18498:30;;;;;;:64;18494:272;;18584:43;;;;;12772:2:43;12754:21;;;12811:2;12791:18;;;12784:30;12850:34;12845:2;12830:18;;12823:62;-1:-1:-1;;;12916:2:43;12901:18;;12894:34;12960:3;12945:19;;12570:400;18584:43:6;;;;;;;;18647:33;18678:1;18647:33;;;;;;:::i;:::-;;;;;;;;18700;18731:1;18700:33;;;;;;:::i;2473:443::-;3077:42;3065:55;3148:16;2517:367;;2721:67;;;1712:64;2721:67;;;3885:51:43;;;-1:-1:-1;;;3952:18:43;;;3945:34;;;;2781:4:6;3995:18:43;;;3988:34;2555:11:6;;1712:64;2654:43;;3858:18:43;;2721:67:6;;;-1:-1:-1;;2721:67:6;;;;;;;;;;2608:199;;;2721:67;2608:199;;:::i;:::-;;;;-1:-1:-1;;2608:199:6;;;;;;;;;;2572:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2517:367:6;2894:7;:14;;-1:-1:-1;;2894:14:6;;;;;2473:443::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:290:43:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:43;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:43:o;309:277::-;376:6;429:2;417:9;408:7;404:23;400:32;397:52;;;445:1;442;435:12;397:52;477:9;471:16;530:5;523:13;516:21;509:5;506:32;496:60;;552:1;549;542:12;591:884;671:6;724:2;712:9;703:7;699:23;695:32;692:52;;;740:1;737;730:12;692:52;773:9;767:16;802:18;843:2;835:6;832:14;829:34;;;859:1;856;849:12;829:34;897:6;886:9;882:22;872:32;;942:7;935:4;931:2;927:13;923:27;913:55;;964:1;961;954:12;913:55;993:2;987:9;1015:2;1011;1008:10;1005:36;;;1021:18;;:::i;:::-;1096:2;1090:9;1064:2;1150:13;;-1:-1:-1;;1146:22:43;;;1170:2;1142:31;1138:40;1126:53;;;1194:18;;;1214:22;;;1191:46;1188:72;;;1240:18;;:::i;:::-;1280:10;1276:2;1269:22;1315:2;1307:6;1300:18;1355:7;1350:2;1345;1341;1337:11;1333:20;1330:33;1327:53;;;1376:1;1373;1366:12;1327:53;1389:55;1441:2;1436;1428:6;1424:15;1419:2;1415;1411:11;1389:55;:::i;:::-;1463:6;591:884;-1:-1:-1;;;;;;;591:884:43:o;1480:184::-;1550:6;1603:2;1591:9;1582:7;1578:23;1574:32;1571:52;;;1619:1;1616;1609:12;1571:52;-1:-1:-1;1642:16:43;;1480:184;-1:-1:-1;1480:184:43:o;1669:258::-;1711:3;1749:5;1743:12;1776:6;1771:3;1764:19;1792:63;1848:6;1841:4;1836:3;1832:14;1825:4;1818:5;1814:16;1792:63;:::i;:::-;1909:2;1888:15;-1:-1:-1;;1884:29:43;1875:39;;;;1916:4;1871:50;;1669:258;-1:-1:-1;;1669:258:43:o;2260:371::-;-1:-1:-1;;;;;;2445:33:43;;2433:46;;2502:13;;2415:3;;2524:61;2502:13;2574:1;2565:11;;2558:4;2546:17;;2524:61;:::i;:::-;2605:16;;;;2623:1;2601:24;;2260:371;-1:-1:-1;;;2260:371:43:o;2636:274::-;2765:3;2803:6;2797:13;2819:53;2865:6;2860:3;2853:4;2845:6;2841:17;2819:53;:::i;:::-;2888:16;;;;;2636:274;-1:-1:-1;;2636:274:43:o;4616:658::-;4787:2;4839:21;;;4909:13;;4812:18;;;4931:22;;;4758:4;;4787:2;5010:15;;;;4984:2;4969:18;;;4758:4;5053:195;5067:6;5064:1;5061:13;5053:195;;;5132:13;;-1:-1:-1;;;;;5128:39:43;5116:52;;5223:15;;;;5188:12;;;;5164:1;5082:9;5053:195;;;-1:-1:-1;5265:3:43;;4616:658;-1:-1:-1;;;;;;4616:658:43:o;5279:803::-;5441:4;5470:2;5510;5499:9;5495:18;5540:2;5529:9;5522:21;5563:6;5598;5592:13;5629:6;5621;5614:22;5667:2;5656:9;5652:18;5645:25;;5729:2;5719:6;5716:1;5712:14;5701:9;5697:30;5693:39;5679:53;;5767:2;5759:6;5755:15;5788:1;5798:255;5812:6;5809:1;5806:13;5798:255;;;5905:2;5901:7;5889:9;5881:6;5877:22;5873:36;5868:3;5861:49;5933:40;5966:6;5957;5951:13;5933:40;:::i;:::-;5923:50;-1:-1:-1;6031:12:43;;;;5996:15;;;;5834:1;5827:9;5798:255;;;-1:-1:-1;6070:6:43;;5279:803;-1:-1:-1;;;;;;;5279:803:43:o;6087:1744::-;6322:2;6374:21;;;6444:13;;6347:18;;;6466:22;;;6293:4;;6322:2;6507;;6525:18;;;;6562:1;6605:15;;;6590:31;;6586:40;;6649:15;;;6293:4;;6713:1089;6729:6;6724:3;6721:15;6713:1089;;;-1:-1:-1;;6798:22:43;;;6794:36;6782:49;;6854:13;;6941:9;;-1:-1:-1;;;;;6937:35:43;6922:51;;7012:11;;7006:18;7044:15;;;7037:27;;;7125:19;;6894:15;;;7157:24;;;7338:21;;;;7204:2;7286:17;;;7274:30;;7270:39;;;7228:15;;;;7383:1;7397:296;7413:8;7408:3;7405:17;7397:296;;;7519:2;7515:7;7506:6;7498;7494:19;7490:33;7483:5;7476:48;7551:42;7586:6;7575:8;7569:15;7551:42;:::i;:::-;7622:17;;;;7541:52;-1:-1:-1;7665:14:43;;;;7441:1;7432:11;7397:296;;;-1:-1:-1;;;7780:12:43;;;;7716:6;-1:-1:-1;;7745:15:43;;;;6755:1;6746:11;6713:1089;;;-1:-1:-1;7819:6:43;;6087:1744;-1:-1:-1;;;;;;;;;;6087:1744:43:o;7836:1569::-;8040:4;8069:2;8109;8098:9;8094:18;8139:2;8128:9;8121:21;8162:6;8197;8191:13;8228:6;8220;8213:22;8254:2;8244:12;;8287:2;8276:9;8272:18;8265:25;;8349:2;8339:6;8336:1;8332:14;8321:9;8317:30;8313:39;8387:2;8379:6;8375:15;8408:1;8429;8439:937;8455:6;8450:3;8447:15;8439:937;;;8524:22;;;-1:-1:-1;;8520:36:43;8508:49;;8580:13;;8667:9;;-1:-1:-1;;;;;8663:35:43;8648:51;;8738:11;;8732:18;8770:15;;;8763:27;;;8851:19;;8620:15;;;8883:24;;;8973:21;;;;9018:1;;8941:2;8929:15;;;9032:236;9048:8;9043:3;9040:17;9032:236;;;9129:15;;-1:-1:-1;;;;;;9125:42:43;9111:57;;9237:17;;;;9076:1;9067:11;;;;;9194:14;;;;9032:236;;;-1:-1:-1;9354:12:43;;;;9291:5;-1:-1:-1;;;9319:15:43;;;;8481:1;8472:11;8439:937;;;-1:-1:-1;9393:6:43;;7836:1569;-1:-1:-1;;;;;;;;;7836:1569:43:o;10965:1197::-;11074:4;11103:2;11132;11121:9;11114:21;11155:1;11188:6;11182:13;11218:3;11240:1;11268:9;11264:2;11260:18;11250:28;;11328:2;11317:9;11313:18;11350;11340:61;;11394:4;11386:6;11382:17;11372:27;;11340:61;11447:2;11439:6;11436:14;11416:18;11413:38;11410:165;;;-1:-1:-1;;;11474:33:43;;11530:4;11527:1;11520:15;11560:4;11481:3;11548:17;11410:165;11642:18;;;17812:19;;;17864:4;17855:14;11685:18;11712:100;;;;11826:1;11821:315;;;;11678:458;;11712:100;-1:-1:-1;;11745:24:43;;11733:37;;11790:12;;;;-1:-1:-1;11712:100:43;;11821:315;17661:1;17654:14;;;17698:4;17685:18;;11916:1;11930:165;11944:6;11941:1;11938:13;11930:165;;;12022:14;;12009:11;;;12002:35;12065:16;;;;11959:10;;11930:165;;;12115:11;;;-1:-1:-1;;11678:458:43;-1:-1:-1;12153:3:43;;10965:1197;-1:-1:-1;;;;;;;;;10965:1197:43:o;13381:374::-;13611:2;13600:9;13593:21;13574:4;13631:49;13676:2;13665:9;13661:18;2009:2;1997:15;;-1:-1:-1;;;2037:4:43;2028:14;;2021:36;2082:2;2073:12;;1932:159;13631:49;-1:-1:-1;;;;;13716:32:43;;;;13711:2;13696:18;;;;13689:60;;;;-1:-1:-1;13623:57:43;13381:374::o;13760:440::-;14010:2;13999:9;13992:21;13973:4;14036:49;14081:2;14070:9;14066:18;2009:2;1997:15;;-1:-1:-1;;;2037:4:43;2028:14;;2021:36;2082:2;2073:12;;1932:159;14036:49;14133:9;14125:6;14121:22;14116:2;14105:9;14101:18;14094:50;14161:33;14187:6;14179;14161:33;:::i;:::-;14153:41;13760:440;-1:-1:-1;;;;13760:440:43:o;14205:348::-;14435:2;14424:9;14417:21;14398:4;14455:49;14500:2;14489:9;14485:18;2009:2;1997:15;;-1:-1:-1;;;2037:4:43;2028:14;;2021:36;2082:2;2073:12;;1932:159;14455:49;14447:57;;14540:6;14535:2;14524:9;14520:18;14513:34;14205:348;;;;:::o;15429:374::-;15659:2;15648:9;15641:21;15622:4;15679:49;15724:2;15713:9;15709:18;2173:2;2161:15;;-1:-1:-1;;;2201:4:43;2192:14;;2185:36;2246:2;2237:12;;2096:159;15808:440;16058:2;16047:9;16040:21;16021:4;16084:49;16129:2;16118:9;16114:18;2173:2;2161:15;;-1:-1:-1;;;2201:4:43;2192:14;;2185:36;2246:2;2237:12;;2096:159;16253:348;16483:2;16472:9;16465:21;16446:4;16503:49;16548:2;16537:9;16533:18;2173:2;2161:15;;-1:-1:-1;;;2201:4:43;2192:14;;2185:36;2246:2;2237:12;;2096:159;17880:258;17952:1;17962:113;17976:6;17973:1;17970:13;17962:113;;;18052:11;;;18046:18;18033:11;;;18026:39;17998:2;17991:10;17962:113;;;18093:6;18090:1;18087:13;18084:48;;;18128:1;18119:6;18114:3;18110:16;18103:27;18084:48;;17880:258;;;:::o;18143:380::-;18222:1;18218:12;;;;18265;;;18286:61;;18340:4;18332:6;18328:17;18318:27;;18286:61;18393:2;18385:6;18382:14;18362:18;18359:38;18356:161;;;18439:10;18434:3;18430:20;18427:1;18420:31;18474:4;18471:1;18464:15;18502:4;18499:1;18492:15;18356:161;;18143:380;;;:::o;18528:127::-;18589:10;18584:3;18580:20;18577:1;18570:31;18620:4;18617:1;18610:15;18644:4;18641:1;18634:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DAI()": "e0bab4c4",
    "IS_TEST()": "fa7626d4",
    "QUOTER()": "8dae88c2",
    "WETH9()": "4aa4a4fc",
    "dai()": "f4b9fa75",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "indexToken()": "e7d015f2",
    "quoter()": "c6bbd5a7",
    "setUp()": "0a9254e4",
    "swapRouter()": "c31c9c07",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testInitialized()": "0e7628c6",
    "testMintWithSwap()": "96c023e7",
    "testSwap()": "6e008a03",
    "testTSwap()": "f625c2b1",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeRatePerDayScaled\",\"type\":\"uint256\"}],\"name\":\"FeeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"methodologist\",\"type\":\"address\"}],\"name\":\"MethodologistSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"methodology\",\"type\":\"string\"}],\"name\":\"MethodologySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintFeeToReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"SupplyCeilingSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRestricted\",\"type\":\"bool\"}],\"name\":\"ToggledRestricted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexToken\",\"outputs\":[{\"internalType\":\"contract IndexToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"contract IQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMintWithSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwap\",\"outputs\":[{\"internalType\":\"contract TestSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/IndexTokenFactory.t.sol\":\"CounterTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2\",\"dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro\"]},\"contracts/proposable/ProposableOwnableUpgradeable.sol\":{\"keccak256\":\"0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65\",\"dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72\"]},\"contracts/test/TestSwap.sol\":{\"keccak256\":\"0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b\",\"dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW\"]},\"contracts/token/IndexToken.sol\":{\"keccak256\":\"0xcd7c33aa30ef418b94729ea0cc6cc1bf835b8034120068958463fde6c4a71a07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fce810752be7795ef20371452848c34a7e17542819881eec0774687bdb0a5abf\",\"dweb:/ipfs/QmVFGNxXDKgxxNgKJDAkzV83Z9gXBsjvkXDJQav69Qd4XA\"]},\"contracts/token/TokenInterface.sol\":{\"keccak256\":\"0xd530600bcc7a81e3996517a2c6967dd448b2b9702eca4efe15f772de69c6d880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f61d2aab02ee0f4c376b1b41629632d894c52127cd15669e9ffca3fb21f1307\",\"dweb:/ipfs/Qmb47gpnWD7i6Va4nKcmg7kPyaYcpXb74QFCQePomaJjZj\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3\",\"dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731\",\"dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a\",\"dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f\",\"dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c\",\"dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a\",\"dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254\",\"dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f\",\"dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc\",\"dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1\",\"dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"test/foundry/IndexTokenFactory.t.sol\":{\"keccak256\":\"0x29cd37a980058ed18714bfdf59912c930bfb0608737d54044416a26fa3933f95\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://89f1f2abe998d8f03a924275af1ce9614671360dee04e0ead1603b3daa5166f2\",\"dweb:/ipfs/QmbRi4Z1Vs8NYY7xFCU9wBdri4Wrv5ndLNz6CoD22MSq7q\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "feeRatePerDayScaled",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeRateSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeReceiverSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "methodologist",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MethodologistSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "methodology",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MethodologySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintFeeToReceiver",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MinterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supplyCeiling",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupplyCeilingSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isRestricted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ToggledRestricted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dai",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "indexToken",
          "outputs": [
            {
              "internalType": "contract IndexToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quoter",
          "outputs": [
            {
              "internalType": "contract IQuoter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMintWithSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testSwap",
          "outputs": [
            {
              "internalType": "contract TestSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/IndexTokenFactory.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9",
        "urls": [
          "bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2",
          "dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/proposable/ProposableOwnableUpgradeable.sol": {
        "keccak256": "0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70",
        "urls": [
          "bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65",
          "dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72"
        ],
        "license": "MIT"
      },
      "contracts/test/TestSwap.sol": {
        "keccak256": "0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3",
        "urls": [
          "bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b",
          "dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/token/IndexToken.sol": {
        "keccak256": "0xcd7c33aa30ef418b94729ea0cc6cc1bf835b8034120068958463fde6c4a71a07",
        "urls": [
          "bzz-raw://fce810752be7795ef20371452848c34a7e17542819881eec0774687bdb0a5abf",
          "dweb:/ipfs/QmVFGNxXDKgxxNgKJDAkzV83Z9gXBsjvkXDJQav69Qd4XA"
        ],
        "license": "MIT"
      },
      "contracts/token/TokenInterface.sol": {
        "keccak256": "0xd530600bcc7a81e3996517a2c6967dd448b2b9702eca4efe15f772de69c6d880",
        "urls": [
          "bzz-raw://6f61d2aab02ee0f4c376b1b41629632d894c52127cd15669e9ffca3fb21f1307",
          "dweb:/ipfs/Qmb47gpnWD7i6Va4nKcmg7kPyaYcpXb74QFCQePomaJjZj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261",
        "urls": [
          "bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379",
          "dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e",
        "urls": [
          "bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3",
          "dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc",
        "urls": [
          "bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731",
          "dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52",
        "urls": [
          "bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a",
          "dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb",
        "urls": [
          "bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f",
          "dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04",
        "urls": [
          "bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c",
          "dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417",
        "urls": [
          "bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a",
          "dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357",
        "urls": [
          "bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254",
          "dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a",
        "urls": [
          "bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f",
          "dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a",
        "urls": [
          "bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc",
          "dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb",
        "urls": [
          "bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4",
          "dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb",
        "urls": [
          "bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1",
          "dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": {
        "keccak256": "0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff",
        "urls": [
          "bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417",
          "dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/IndexTokenFactory.t.sol": {
        "keccak256": "0x29cd37a980058ed18714bfdf59912c930bfb0608737d54044416a26fa3933f95",
        "urls": [
          "bzz-raw://89f1f2abe998d8f03a924275af1ce9614671360dee04e0ead1603b3daa5166f2",
          "dweb:/ipfs/QmbRi4Z1Vs8NYY7xFCU9wBdri4Wrv5ndLNz6CoD22MSq7q"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/IndexTokenFactory.t.sol",
    "id": 4900,
    "exportedSymbols": {
      "AddressUpgradeable": [
        2552
      ],
      "Context": [
        49788
      ],
      "ContextUpgradeable": [
        2594
      ],
      "CounterTest": [
        4899
      ],
      "DSTest": [
        8867
      ],
      "ERC20": [
        6263
      ],
      "ERC20Upgradeable": [
        2119
      ],
      "IERC20": [
        5203
      ],
      "IERC20Metadata": [
        49766
      ],
      "IERC20MetadataUpgradeable": [
        2222
      ],
      "IERC20Upgradeable": [
        2197
      ],
      "IQuoter": [
        5260
      ],
      "ISwapRouter": [
        5360
      ],
      "IUniswapV3SwapCallback": [
        6575
      ],
      "IWETH": [
        5125
      ],
      "IndexToken": [
        953
      ],
      "Initializable": [
        1380
      ],
      "OwnableUpgradeable": [
        1211
      ],
      "PausableUpgradeable": [
        1507
      ],
      "ProposableOwnableUpgradeable": [
        71
      ],
      "StdAssertions": [
        10360
      ],
      "StdChains": [
        11124
      ],
      "StdCheats": [
        13977
      ],
      "StdInvariant": [
        14302
      ],
      "StdStorage": [
        15068
      ],
      "StdStyle": [
        17918
      ],
      "StdUtils": [
        18766
      ],
      "Test": [
        5582
      ],
      "TestBase": [
        8933
      ],
      "TestSwap": [
        5676
      ],
      "TokenInterface": [
        1079
      ],
      "TransferHelper": [
        5531
      ],
      "Vm": [
        20477
      ],
      "console": [
        28541
      ],
      "console2": [
        36666
      ],
      "safeconsole": [
        49741
      ],
      "stdError": [
        14043
      ],
      "stdJson": [
        14894
      ],
      "stdMath": [
        15036
      ],
      "stdStorage": [
        16707
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:4509:41",
    "nodes": [
      {
        "id": 4550,
        "nodeType": "PragmaDirective",
        "src": "40:23:41",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 4551,
        "nodeType": "ImportDirective",
        "src": "67:28:41",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4900,
        "sourceUnit": 5583,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4552,
        "nodeType": "ImportDirective",
        "src": "97:46:41",
        "nodes": [],
        "absolutePath": "contracts/token/IndexToken.sol",
        "file": "../../contracts/token/IndexToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4900,
        "sourceUnit": 954,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4553,
        "nodeType": "ImportDirective",
        "src": "145:43:41",
        "nodes": [],
        "absolutePath": "contracts/test/TestSwap.sol",
        "file": "../../contracts/test/TestSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4900,
        "sourceUnit": 5677,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4554,
        "nodeType": "ImportDirective",
        "src": "190:55:41",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4900,
        "sourceUnit": 6264,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4555,
        "nodeType": "ImportDirective",
        "src": "247:55:41",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4900,
        "sourceUnit": 6264,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4556,
        "nodeType": "ImportDirective",
        "src": "304:68:41",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4900,
        "sourceUnit": 5361,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4557,
        "nodeType": "ImportDirective",
        "src": "374:70:41",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4900,
        "sourceUnit": 5532,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4558,
        "nodeType": "ImportDirective",
        "src": "446:64:41",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4900,
        "sourceUnit": 5261,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4899,
        "nodeType": "ContractDefinition",
        "src": "512:4037:41",
        "nodes": [
          {
            "id": 4563,
            "nodeType": "VariableDeclaration",
            "src": "552:39:41",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SCALAR",
            "nameLocation": "578:6:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4561,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "552:7:41",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653230",
              "id": 4562,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "587:4:41",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "1e20"
            },
            "visibility": "internal"
          },
          {
            "id": 4566,
            "nodeType": "VariableDeclaration",
            "src": "600:28:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "e7d015f2",
            "mutability": "mutable",
            "name": "indexToken",
            "nameLocation": "618:10:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexToken_$953",
              "typeString": "contract IndexToken"
            },
            "typeName": {
              "id": 4565,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4564,
                "name": "IndexToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 953,
                "src": "600:10:41"
              },
              "referencedDeclaration": 953,
              "src": "600:10:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexToken_$953",
                "typeString": "contract IndexToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4569,
            "nodeType": "VariableDeclaration",
            "src": "635:24:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "6e008a03",
            "mutability": "mutable",
            "name": "testSwap",
            "nameLocation": "651:8:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestSwap_$5676",
              "typeString": "contract TestSwap"
            },
            "typeName": {
              "id": 4568,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4567,
                "name": "TestSwap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5676,
                "src": "635:8:41"
              },
              "referencedDeclaration": 5676,
              "src": "635:8:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestSwap_$5676",
                "typeString": "contract TestSwap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4571,
            "nodeType": "VariableDeclaration",
            "src": "668:19:41",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mainnetFork",
            "nameLocation": "676:11:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4570,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:41",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4577,
            "nodeType": "VariableDeclaration",
            "src": "696:32:41",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "feeReceiver",
            "nameLocation": "704:11:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4572,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "696:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 4575,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "726:1:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "expression": {
                  "id": 4573,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8926,
                  "src": "718:2:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20477",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4574,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18837,
                "src": "718:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4576,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "718:10:41",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4583,
            "nodeType": "VariableDeclaration",
            "src": "735:35:41",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newFeeReceiver",
            "nameLocation": "743:14:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4578,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "735:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "32",
                  "id": 4581,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "768:1:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  }
                ],
                "expression": {
                  "id": 4579,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8926,
                  "src": "760:2:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20477",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4580,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18837,
                "src": "760:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4582,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "760:10:41",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4589,
            "nodeType": "VariableDeclaration",
            "src": "777:27:41",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "785:6:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4584,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "777:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "33",
                  "id": 4587,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "802:1:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  }
                ],
                "expression": {
                  "id": 4585,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8926,
                  "src": "794:2:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20477",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4586,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18837,
                "src": "794:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4588,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "794:10:41",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4595,
            "nodeType": "VariableDeclaration",
            "src": "811:30:41",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newMinter",
            "nameLocation": "819:9:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4590,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "811:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "34",
                  "id": 4593,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "839:1:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  },
                  "value": "4"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  }
                ],
                "expression": {
                  "id": 4591,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8926,
                  "src": "831:2:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20477",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4592,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18837,
                "src": "831:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4594,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "831:10:41",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4601,
            "nodeType": "VariableDeclaration",
            "src": "848:34:41",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "methodologist",
            "nameLocation": "856:13:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4596,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "848:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "35",
                  "id": 4599,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "880:1:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  },
                  "value": "5"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  }
                ],
                "expression": {
                  "id": 4597,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8926,
                  "src": "872:2:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20477",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4598,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18837,
                "src": "872:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4600,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "872:10:41",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4607,
            "nodeType": "VariableDeclaration",
            "src": "889:25:41",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "add1",
            "nameLocation": "897:4:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4602,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "889:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "36",
                  "id": 4605,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "912:1:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  }
                ],
                "expression": {
                  "id": 4603,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8926,
                  "src": "904:2:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20477",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4604,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 18837,
                "src": "904:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 4606,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "904:10:41",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4610,
            "nodeType": "VariableDeclaration",
            "src": "923:72:41",
            "nodes": [],
            "constant": true,
            "functionSelector": "e0bab4c4",
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "947:3:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4608,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "923:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 4609,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "953:42:41",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "id": 4613,
            "nodeType": "VariableDeclaration",
            "src": "1002:74:41",
            "nodes": [],
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "mutability": "constant",
            "name": "WETH9",
            "nameLocation": "1026:5:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4611,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1002:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 4612,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1034:42:41",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "id": 4616,
            "nodeType": "VariableDeclaration",
            "src": "1083:75:41",
            "nodes": [],
            "constant": true,
            "functionSelector": "8dae88c2",
            "mutability": "constant",
            "name": "QUOTER",
            "nameLocation": "1107:6:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4614,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1083:7:41",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862323733303866394639304436303734363362623333654131426542623431433237434535414236",
              "id": 4615,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1116:42:41",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6"
            },
            "visibility": "public"
          },
          {
            "id": 4622,
            "nodeType": "VariableDeclaration",
            "src": "1167:105:41",
            "nodes": [],
            "constant": true,
            "functionSelector": "c31c9c07",
            "mutability": "constant",
            "name": "swapRouter",
            "nameLocation": "1195:10:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$5360",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 4618,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4617,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5360,
                "src": "1167:11:41"
              },
              "referencedDeclaration": 5360,
              "src": "1167:11:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$5360",
                "typeString": "contract ISwapRouter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                  "id": 4620,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1229:42:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 4619,
                "name": "ISwapRouter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5360,
                "src": "1217:11:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$5360_$",
                  "typeString": "type(contract ISwapRouter)"
                }
              },
              "id": 4621,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1217:55:41",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$5360",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4625,
            "nodeType": "VariableDeclaration",
            "src": "1281:16:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "f4b9fa75",
            "mutability": "mutable",
            "name": "dai",
            "nameLocation": "1294:3:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$6263",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 4624,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4623,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6263,
                "src": "1281:5:41"
              },
              "referencedDeclaration": 6263,
              "src": "1281:5:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6263",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4628,
            "nodeType": "VariableDeclaration",
            "src": "1304:17:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "1317:4:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$5125",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 4627,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4626,
                "name": "IWETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5125,
                "src": "1304:5:41"
              },
              "referencedDeclaration": 5125,
              "src": "1304:5:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$5125",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4631,
            "nodeType": "VariableDeclaration",
            "src": "1356:21:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "c6bbd5a7",
            "mutability": "mutable",
            "name": "quoter",
            "nameLocation": "1371:6:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IQuoter_$5260",
              "typeString": "contract IQuoter"
            },
            "typeName": {
              "id": 4630,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4629,
                "name": "IQuoter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5260,
                "src": "1356:7:41"
              },
              "referencedDeclaration": 5260,
              "src": "1356:7:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IQuoter_$5260",
                "typeString": "contract IQuoter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4637,
            "nodeType": "VariableDeclaration",
            "src": "1386:56:41",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "MAINNET_RPC_URL",
            "nameLocation": "1393:15:41",
            "scope": 4899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4632,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1386:6:41",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d41494e4e45545f5250435f55524c",
                  "id": 4635,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1424:17:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  },
                  "value": "MAINNET_RPC_URL"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  }
                ],
                "expression": {
                  "id": 4633,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8926,
                  "src": "1411:2:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$20477",
                    "typeString": "contract Vm"
                  }
                },
                "id": 4634,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 19199,
                "src": "1411:12:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 4636,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1411:31:41",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4641,
            "nodeType": "EventDefinition",
            "src": "1451:50:41",
            "nodes": [],
            "anonymous": false,
            "name": "FeeReceiverSet",
            "nameLocation": "1457:14:41",
            "parameters": {
              "id": 4640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4639,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "1488:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4641,
                  "src": "1472:27:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1471:29:41"
            }
          },
          {
            "id": 4645,
            "nodeType": "EventDefinition",
            "src": "1507:54:41",
            "nodes": [],
            "anonymous": false,
            "name": "FeeRateSet",
            "nameLocation": "1513:10:41",
            "parameters": {
              "id": 4644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4643,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeRatePerDayScaled",
                  "nameLocation": "1540:19:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4645,
                  "src": "1524:35:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1524:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1523:37:41"
            }
          },
          {
            "id": 4649,
            "nodeType": "EventDefinition",
            "src": "1567:54:41",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologistSet",
            "nameLocation": "1573:16:41",
            "parameters": {
              "id": 4648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4647,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "methodologist",
                  "nameLocation": "1606:13:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4649,
                  "src": "1590:29:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1589:31:41"
            }
          },
          {
            "id": 4653,
            "nodeType": "EventDefinition",
            "src": "1627:41:41",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologySet",
            "nameLocation": "1633:14:41",
            "parameters": {
              "id": 4652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4651,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "methodology",
                  "nameLocation": "1655:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4653,
                  "src": "1648:18:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4650,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:20:41"
            }
          },
          {
            "id": 4657,
            "nodeType": "EventDefinition",
            "src": "1674:40:41",
            "nodes": [],
            "anonymous": false,
            "name": "MinterSet",
            "nameLocation": "1680:9:41",
            "parameters": {
              "id": 4656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4655,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "1706:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4657,
                  "src": "1690:22:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1689:24:41"
            }
          },
          {
            "id": 4661,
            "nodeType": "EventDefinition",
            "src": "1720:46:41",
            "nodes": [],
            "anonymous": false,
            "name": "SupplyCeilingSet",
            "nameLocation": "1726:16:41",
            "parameters": {
              "id": 4660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4659,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supplyCeiling",
                  "nameLocation": "1751:13:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4661,
                  "src": "1743:21:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1742:23:41"
            }
          },
          {
            "id": 4671,
            "nodeType": "EventDefinition",
            "src": "1772:101:41",
            "nodes": [],
            "anonymous": false,
            "name": "MintFeeToReceiver",
            "nameLocation": "1778:17:41",
            "parameters": {
              "id": 4670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4663,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "1804:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4671,
                  "src": "1796:19:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4665,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1825:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4671,
                  "src": "1817:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4667,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "1844:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4671,
                  "src": "1836:19:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1836:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4669,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1865:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4671,
                  "src": "1857:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1857:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1795:77:41"
            }
          },
          {
            "id": 4677,
            "nodeType": "EventDefinition",
            "src": "1879:68:41",
            "nodes": [],
            "anonymous": false,
            "name": "ToggledRestricted",
            "nameLocation": "1885:17:41",
            "parameters": {
              "id": 4676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4673,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1919:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4677,
                  "src": "1903:23:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4675,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isRestricted",
                  "nameLocation": "1933:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 4677,
                  "src": "1928:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4674,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1902:44:41"
            }
          },
          {
            "id": 4742,
            "nodeType": "FunctionDefinition",
            "src": "1957:531:41",
            "nodes": [],
            "body": {
              "id": 4741,
              "nodeType": "Block",
              "src": "1981:507:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4680,
                      "name": "mainnetFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4571,
                      "src": "1992:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4683,
                          "name": "MAINNET_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4637,
                          "src": "2020:15:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 4681,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8926,
                          "src": "2006:2:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$20477",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 4682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20203,
                        "src": "2006:13:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 4684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2006:30:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1992:44:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4686,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:44:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4690,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4571,
                        "src": "2061:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4687,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8926,
                        "src": "2047:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$20477",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 4689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20266,
                      "src": "2047:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2047:26:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4692,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:26:41"
                },
                {
                  "expression": {
                    "id": 4698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4693,
                      "name": "indexToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4566,
                      "src": "2084:10:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$953",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2097:14:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_IndexToken_$953_$",
                          "typeString": "function () returns (contract IndexToken)"
                        },
                        "typeName": {
                          "id": 4695,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4694,
                            "name": "IndexToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 953,
                            "src": "2101:10:41"
                          },
                          "referencedDeclaration": 953,
                          "src": "2101:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexToken_$953",
                            "typeString": "contract IndexToken"
                          }
                        }
                      },
                      "id": 4697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2097:16:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$953",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "src": "2084:29:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IndexToken_$953",
                      "typeString": "contract IndexToken"
                    }
                  },
                  "id": 4699,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:29:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416e746920496e666c6174696f6e",
                        "id": 4703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2160:16:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc91b5e2c1c095e17fa21cce3bb4bf4e3f12c19c51ecd9f6cf3cf89a49c428f2",
                          "typeString": "literal_string \"Anti Inflation\""
                        },
                        "value": "Anti Inflation"
                      },
                      {
                        "hexValue": "414e4649",
                        "id": 4704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2191:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_784ef5cf3b103bdcbbdc385d5d143611309cf4293b5afd2549dfc4901f697bcc",
                          "typeString": "literal_string \"ANFI\""
                        },
                        "value": "ANFI"
                      },
                      {
                        "hexValue": "31653138",
                        "id": 4705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2212:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "id": 4706,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4577,
                        "src": "2231:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 4707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2257:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bc91b5e2c1c095e17fa21cce3bb4bf4e3f12c19c51ecd9f6cf3cf89a49c428f2",
                          "typeString": "literal_string \"Anti Inflation\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_784ef5cf3b103bdcbbdc385d5d143611309cf4293b5afd2549dfc4901f697bcc",
                          "typeString": "literal_string \"ANFI\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4700,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4566,
                        "src": "2124:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$953",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 4702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 249,
                      "src": "2124:21:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256,address,uint256) external"
                      }
                    },
                    "id": 4708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2124:154:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4709,
                  "nodeType": "ExpressionStatement",
                  "src": "2124:154:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4713,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4589,
                        "src": "2310:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4710,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4566,
                        "src": "2289:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$953",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 4712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMinter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 599,
                      "src": "2289:20:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2289:28:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4715,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:28:41"
                },
                {
                  "expression": {
                    "id": 4720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4716,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4625,
                      "src": "2361:3:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$6263",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4718,
                          "name": "DAI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4610,
                          "src": "2373:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4717,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6263,
                        "src": "2367:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$6263_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 4719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2367:10:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$6263",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2361:16:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$6263",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 4721,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:16:41"
                },
                {
                  "expression": {
                    "id": 4726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4722,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4628,
                      "src": "2388:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$5125",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4724,
                          "name": "WETH9",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4613,
                          "src": "2401:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4723,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5125,
                        "src": "2395:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$5125_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 4725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2395:12:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$5125",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "2388:19:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$5125",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 4727,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:19:41"
                },
                {
                  "expression": {
                    "id": 4732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4728,
                      "name": "quoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4631,
                      "src": "2418:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$5260",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4730,
                          "name": "QUOTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4616,
                          "src": "2435:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4729,
                        "name": "IQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "2427:7:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IQuoter_$5260_$",
                          "typeString": "type(contract IQuoter)"
                        }
                      },
                      "id": 4731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2427:15:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$5260",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "src": "2418:24:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IQuoter_$5260",
                      "typeString": "contract IQuoter"
                    }
                  },
                  "id": 4733,
                  "nodeType": "ExpressionStatement",
                  "src": "2418:24:41"
                },
                {
                  "expression": {
                    "id": 4739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4734,
                      "name": "testSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4569,
                      "src": "2455:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestSwap_$5676",
                        "typeString": "contract TestSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2466:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestSwap_$5676_$",
                          "typeString": "function () returns (contract TestSwap)"
                        },
                        "typeName": {
                          "id": 4736,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4735,
                            "name": "TestSwap",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5676,
                            "src": "2470:8:41"
                          },
                          "referencedDeclaration": 5676,
                          "src": "2470:8:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestSwap_$5676",
                            "typeString": "contract TestSwap"
                          }
                        }
                      },
                      "id": 4738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2466:14:41",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestSwap_$5676",
                        "typeString": "contract TestSwap"
                      }
                    },
                    "src": "2455:25:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestSwap_$5676",
                      "typeString": "contract TestSwap"
                    }
                  },
                  "id": 4740,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:25:41"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1966:5:41",
            "parameters": {
              "id": 4678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1971:2:41"
            },
            "returnParameters": {
              "id": 4679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:41"
            },
            "scope": 4899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4799,
            "nodeType": "FunctionDefinition",
            "src": "2496:465:41",
            "nodes": [],
            "body": {
              "id": 4798,
              "nodeType": "Block",
              "src": "2530:431:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4746,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4566,
                            "src": "2583:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$953",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1134,
                          "src": "2583:16:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 4748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2583:18:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4751,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2611:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$4899",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$4899",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 4750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2603:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4749,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2603:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2603:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4745,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9061,
                        9086,
                        9099,
                        9115,
                        9157,
                        9199,
                        9241,
                        9278,
                        9315,
                        9352,
                        6896,
                        6921,
                        6951,
                        6976,
                        7035,
                        7060,
                        7090,
                        7115,
                        8588,
                        8623
                      ],
                      "referencedDeclaration": 6896,
                      "src": "2574:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2574:43:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4754,
                  "nodeType": "ExpressionStatement",
                  "src": "2574:43:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4756,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4566,
                            "src": "2637:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$953",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRatePerDayScaled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 98,
                          "src": "2637:30:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 4758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2637:32:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 4759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2671:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 4755,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9061,
                        9086,
                        9099,
                        9115,
                        9157,
                        9199,
                        9241,
                        9278,
                        9315,
                        9352,
                        6896,
                        6921,
                        6951,
                        6976,
                        7035,
                        7060,
                        7090,
                        7115,
                        8588,
                        8623
                      ],
                      "referencedDeclaration": 7090,
                      "src": "2628:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2628:48:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4761,
                  "nodeType": "ExpressionStatement",
                  "src": "2628:48:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4763,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4566,
                            "src": "2696:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$953",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 100,
                          "src": "2696:23:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 4765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2696:25:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4766,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2723:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2723:15:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4762,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9061,
                        9086,
                        9099,
                        9115,
                        9157,
                        9199,
                        9241,
                        9278,
                        9315,
                        9352,
                        6896,
                        6921,
                        6951,
                        6976,
                        7035,
                        7060,
                        7090,
                        7115,
                        8588,
                        8623
                      ],
                      "referencedDeclaration": 7090,
                      "src": "2687:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2687:52:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4769,
                  "nodeType": "ExpressionStatement",
                  "src": "2687:52:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4771,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4566,
                            "src": "2759:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$953",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeReceiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 102,
                          "src": "2759:22:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 4773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2759:24:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4774,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4577,
                        "src": "2785:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4770,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9061,
                        9086,
                        9099,
                        9115,
                        9157,
                        9199,
                        9241,
                        9278,
                        9315,
                        9352,
                        6896,
                        6921,
                        6951,
                        6976,
                        7035,
                        7060,
                        7090,
                        7115,
                        8588,
                        8623
                      ],
                      "referencedDeclaration": 6896,
                      "src": "2750:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:47:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4776,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:47:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4778,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4566,
                            "src": "2817:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$953",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "methodology",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 108,
                          "src": "2817:22:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 4780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2817:24:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 4781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2843:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 4777,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9061,
                        9086,
                        9099,
                        9115,
                        9157,
                        9199,
                        9241,
                        9278,
                        9315,
                        9352,
                        6896,
                        6921,
                        6951,
                        6976,
                        7035,
                        7060,
                        7090,
                        7115,
                        8588,
                        8623
                      ],
                      "referencedDeclaration": 8588,
                      "src": "2808:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 4782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2808:38:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4783,
                  "nodeType": "ExpressionStatement",
                  "src": "2808:38:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4785,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4566,
                            "src": "2866:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$953",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supplyCeiling",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 110,
                          "src": "2866:24:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 4787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2866:26:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 4788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2894:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "id": 4784,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9061,
                        9086,
                        9099,
                        9115,
                        9157,
                        9199,
                        9241,
                        9278,
                        9315,
                        9352,
                        6896,
                        6921,
                        6951,
                        6976,
                        7035,
                        7060,
                        7090,
                        7115,
                        8588,
                        8623
                      ],
                      "referencedDeclaration": 7090,
                      "src": "2857:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2857:48:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4790,
                  "nodeType": "ExpressionStatement",
                  "src": "2857:48:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4792,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4566,
                            "src": "2925:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$953",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 4793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106,
                          "src": "2925:17:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 4794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2925:19:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4795,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4589,
                        "src": "2946:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4791,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9061,
                        9086,
                        9099,
                        9115,
                        9157,
                        9199,
                        9241,
                        9278,
                        9315,
                        9352,
                        6896,
                        6921,
                        6951,
                        6976,
                        7035,
                        7060,
                        7090,
                        7115,
                        8588,
                        8623
                      ],
                      "referencedDeclaration": 6896,
                      "src": "2916:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2916:37:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4797,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:37:41"
                }
              ]
            },
            "functionSelector": "0e7628c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialized",
            "nameLocation": "2505:15:41",
            "parameters": {
              "id": 4743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2520:2:41"
            },
            "returnParameters": {
              "id": 4744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2530:0:41"
            },
            "scope": 4899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4894,
            "nodeType": "FunctionDefinition",
            "src": "2975:1464:41",
            "nodes": [],
            "body": {
              "id": 4893,
              "nodeType": "Block",
              "src": "3010:1429:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4805,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4571,
                        "src": "3035:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4802,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8926,
                        "src": "3021:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$20477",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 4804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20266,
                      "src": "3021:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3021:26:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4807,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:26:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 4808,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4628,
                          "src": "3058:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$5125",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 4810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5118,
                        "src": "3058:12:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 4812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31653137",
                          "id": 4811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3078:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "1e17"
                        }
                      ],
                      "src": "3058:25:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 4813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3058:27:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4814,
                  "nodeType": "ExpressionStatement",
                  "src": "3058:27:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4820,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3128:4:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$4899",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$4899",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 4819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3120:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4818,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3120:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3120:13:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4816,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4628,
                            "src": "3105:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$5125",
                              "typeString": "contract IWETH"
                            }
                          },
                          "id": 4817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5160,
                          "src": "3105:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3105:29:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 4823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3136:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "id": 4815,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9061,
                        9086,
                        9099,
                        9115,
                        9157,
                        9199,
                        9241,
                        9278,
                        9315,
                        9352,
                        6896,
                        6921,
                        6951,
                        6976,
                        7035,
                        7060,
                        7090,
                        7115,
                        8588,
                        8623
                      ],
                      "referencedDeclaration": 7090,
                      "src": "3096:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:45:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4825,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:45:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4831,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4622,
                            "src": "3173:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$5360",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$5360",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 4830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3165:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4829,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3165:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3165:19:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 4833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3186:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4826,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4628,
                        "src": "3152:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$5125",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 4828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5190,
                      "src": "3152:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3152:39:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4835,
                  "nodeType": "ExpressionStatement",
                  "src": "3152:39:41"
                },
                {
                  "assignments": [
                    4840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4840,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3256:6:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 4893,
                      "src": "3214:48:41",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$5284_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 4839,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4838,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5284,
                          "src": "3214:34:41"
                        },
                        "referencedDeclaration": 5284,
                        "src": "3214:34:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$5284_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4856,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4843,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4613,
                        "src": "3334:5:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4844,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4610,
                        "src": "3364:3:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 4845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3417:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 4848,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3455:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$4899",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$4899",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 4847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3447:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4846,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3447:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3447:13:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4850,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3485:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3485:15:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 4852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3525:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      },
                      {
                        "hexValue": "30",
                        "id": 4853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3562:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 4854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3796:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4841,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5360,
                        "src": "3265:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$5360_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 4842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5284,
                      "src": "3265:44:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$5284_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 4855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3265:544:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$5284_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3214:595:41"
                },
                {
                  "assignments": [
                    4858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4858,
                      "mutability": "mutable",
                      "name": "daiAmount",
                      "nameLocation": "3827:9:41",
                      "nodeType": "VariableDeclaration",
                      "scope": 4893,
                      "src": "3822:14:41",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4857,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3822:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4863,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4861,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4840,
                        "src": "3867:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$5284_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$5284_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 4859,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4622,
                        "src": "3839:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$5360",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 4860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5293,
                      "src": "3839:27:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$5284_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 4862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3839:35:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3822:52:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4869,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4566,
                            "src": "4060:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$953",
                              "typeString": "contract IndexToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexToken_$953",
                              "typeString": "contract IndexToken"
                            }
                          ],
                          "id": 4868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4052:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4867,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4052:7:41",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4052:19:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4875,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4095:4:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$4899",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$4899",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 4874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4087:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4873,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4087:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4087:13:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4871,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4625,
                            "src": "4073:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$6263",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5775,
                          "src": "4073:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4073:28:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4864,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4625,
                        "src": "4040:3:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$6263",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5843,
                      "src": "4040:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4040:62:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4879,
                  "nodeType": "ExpressionStatement",
                  "src": "4040:62:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4883,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4610,
                        "src": "4144:3:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4888,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4171:4:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$4899",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$4899",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 4887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4163:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4886,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4163:7:41",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4163:13:41",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4884,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4625,
                            "src": "4149:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$6263",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5775,
                          "src": "4149:13:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4149:28:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4880,
                        "name": "indexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4566,
                        "src": "4113:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$953",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 4882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuanceIndexTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 921,
                      "src": "4113:30:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4113:65:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4892,
                  "nodeType": "ExpressionStatement",
                  "src": "4113:65:41"
                }
              ]
            },
            "functionSelector": "96c023e7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintWithSwap",
            "nameLocation": "2984:16:41",
            "parameters": {
              "id": 4800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3000:2:41"
            },
            "returnParameters": {
              "id": 4801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3010:0:41"
            },
            "scope": 4899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4898,
            "nodeType": "FunctionDefinition",
            "src": "4449:81:41",
            "nodes": [],
            "body": {
              "id": 4897,
              "nodeType": "Block",
              "src": "4477:53:41",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "f625c2b1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTSwap",
            "nameLocation": "4458:9:41",
            "parameters": {
              "id": 4895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4467:2:41"
            },
            "returnParameters": {
              "id": 4896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4477:0:41"
            },
            "scope": 4899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4559,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5582,
              "src": "536:4:41"
            },
            "id": 4560,
            "nodeType": "InheritanceSpecifier",
            "src": "536:4:41"
          }
        ],
        "contractDependencies": [
          953,
          5676
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4899,
          5582,
          18766,
          14302,
          13977,
          13184,
          11124,
          10360,
          8867,
          8933,
          8930
        ],
        "name": "CounterTest",
        "nameLocation": "521:11:41",
        "scope": 4900,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 41
}