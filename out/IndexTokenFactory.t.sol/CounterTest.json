{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "feeRatePerDayScaled",
          "type": "uint256"
        }
      ],
      "name": "FeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "FeeReceiverSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "methodologist",
          "type": "address"
        }
      ],
      "name": "MethodologistSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "methodology",
          "type": "string"
        }
      ],
      "name": "MethodologySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintFeeToReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "SupplyCeilingSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRestricted",
          "type": "bool"
        }
      ],
      "name": "ToggledRestricted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BNB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BONE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BabyDoge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CURVE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ELON",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FLOKI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FactoryV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FactoryV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HarryPotterObamaSonic10Inu",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LEASH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LINK",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MEME",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PEPE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SHIB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SwapRouterV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SwapRouterV3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WSM",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WXRP",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assetList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        }
      ],
      "name": "deployByteCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployContracts",
      "outputs": [
        {
          "internalType": "contract LinkToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract MockApiOracle",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IndexToken",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract MockV3Aggregator",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IndexFactory",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract TestSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployUniswap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethPriceOracle",
      "outputs": [
        {
          "internalType": "contract MockV3Aggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IndexFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryByteCode",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryV3",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "indexToken",
      "outputs": [
        {
          "internalType": "contract IndexToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeAssetList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract MockApiOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoter",
      "outputs": [
        {
          "internalType": "contract IQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "swapVersions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIssuanceWithEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIssuanceWithTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIssuanceWithTokensOutput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOracleList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwap",
      "outputs": [
        {
          "internalType": "contract TestSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateOracleList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1609:26:29:-:0;;;1631:4;-1:-1:-1;;1609:26:29;;;;;;;;3191:44:32;;;;;;;;;;;109:49921:24;861:17534:80;109:49921:24;;861:17534:80;109:49921:24;;;861:17534:80;109:49921:24;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1191:50:78;;;2256:64;;;-1:-1:-1;;;;;;2256:64:78;2278:42;2256:64;;;3583:10;;-1:-1:-1;;;;;;3583:10:78;;-1:-1:-1;3583:10:78;;;1555:25:82;-1:-1:-1;;;;;;;;;;;3583:7:78;;;1528:18:82;;3583:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3561:32;;;-1:-1:-1;;;;;;3561:32:78;-1:-1:-1;;;;;3561:32:78;;;;;;;;;;3625:10;;-1:-1:-1;;;;;;3625:10:78;;3633:1;3625:10;;;1555:25:82;-1:-1:-1;;;;;;;;;;;3625:7:78;;;1528:18:82;;3625:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3600:35;;;-1:-1:-1;;;;;;3600:35:78;-1:-1:-1;;;;;3600:35:78;;;;;;;;;;3659:10;;-1:-1:-1;;;;;;3659:10:78;;3667:1;3659:10;;;1555:25:82;-1:-1:-1;;;;;;;;;;;3659:7:78;;;1528:18:82;;3659:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3642:27;;;-1:-1:-1;;;;;;3642:27:78;-1:-1:-1;;;;;3642:27:78;;;;;;;;;;3696:10;;-1:-1:-1;;;;;;3696:10:78;;3704:1;3696:10;;;1555:25:82;-1:-1:-1;;;;;;;;;;;3696:7:78;;;1528:18:82;;3696:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3676:30;;;-1:-1:-1;;;;;;3676:30:78;-1:-1:-1;;;;;3676:30:78;;;;;;;;;;3737:10;;-1:-1:-1;;;;;;3737:10:78;;3745:1;3737:10;;;1555:25:82;-1:-1:-1;;;;;;;;;;;3737:7:78;;;1528:18:82;;3737:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3713:34;;;-1:-1:-1;;;;;;3713:34:78;-1:-1:-1;;;;;3713:34:78;;;;;;;;;;3770:10;;-1:-1:-1;;;;;;3770:10:78;;3778:1;3770:10;;;1555:25:82;-1:-1:-1;;;;;;;;;;;3770:7:78;;;1528:18:82;;3770:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3754:26;;;-1:-1:-1;;;;;;3754:26:78;-1:-1:-1;;;;;3754:26:78;;;;;;;;;;3802:10;;-1:-1:-1;;;;;;3802:10:78;;3810:1;3802:10;;;1555:25:82;-1:-1:-1;;;;;;;;;;;3802:7:78;;;1528:18:82;3802:10:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3787:25;;;-1:-1:-1;;;;;;3787:25:78;-1:-1:-1;;;;;3787:25:78;;;;;;;;;;3027:110:80;;;;;;;;3107:42:78;3027:110:80;;3186:42:78;3027:110:80;;;;3347:42:78;3027:110:80;;;;;;;3427:42:78;3027:110:80;;;;3506:42:78;3027:110:80;;;;;;;;;;:::i;:::-;-1:-1:-1;3146:115:80;;;;;;;;3185:5;3146:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3270:96:80;;;;;;;;3310:1;3270:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4170:31:80;;-1:-1:-1;;;4170:31:80;;2933:2:82;4170:31:80;;;2915:21:82;2972:2;2952:18;;;2945:30;-1:-1:-1;;;2991:18:82;;;2984:45;-1:-1:-1;;;;;;;;;;;4170:12:80;;;3046:18:82;;4170:31:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4170:31:80;;;;;;;;;;;;:::i;:::-;4145:56;;;;;;;;;;;;:::i;:::-;;861:17534;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;861:17534:80;;;-1:-1:-1;861:17534:80;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;861:17534:80;-1:-1:-1;;;;;861:17534:80;;;;;;;;;;;-1:-1:-1;861:17534:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;861:17534:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:290:82;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:82;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:82:o;309:1087::-;389:6;420:2;463;451:9;442:7;438:23;434:32;431:52;;;479:1;476;469:12;431:52;506:16;;-1:-1:-1;;;;;571:14:82;;;568:34;;;598:1;595;588:12;568:34;636:6;625:9;621:22;611:32;;681:7;674:4;670:2;666:13;662:27;652:55;;703:1;700;693:12;652:55;732:2;726:9;754:2;750;747:10;744:36;;;760:18;;:::i;:::-;835:2;829:9;803:2;889:13;;-1:-1:-1;;885:22:82;;;909:2;881:31;877:40;865:53;;;933:18;;;953:22;;;930:46;927:72;;;979:18;;:::i;:::-;1019:10;1015:2;1008:22;1054:2;1046:6;1039:18;1094:7;1089:2;1084;1080;1076:11;1072:20;1069:33;1066:53;;;1115:1;1112;1105:12;1066:53;1137:1;1128:10;;1147:129;1161:2;1158:1;1155:9;1147:129;;;1249:10;;;1245:19;;1239:26;1218:14;;;1214:23;;1207:59;1172:10;;;;1147:129;;;1294:2;1291:1;1288:9;1285:80;;;1353:1;1348:2;1343;1335:6;1331:15;1327:24;1320:35;1285:80;1384:6;309:1087;-1:-1:-1;;;;;;;;309:1087:82:o;3075:380::-;3154:1;3150:12;;;;3197;;;3218:61;;3272:4;3264:6;3260:17;3250:27;;3218:61;3325:2;3317:6;3314:14;3294:18;3291:38;3288:161;;;3371:10;3366:3;3362:20;3359:1;3352:31;3406:4;3403:1;3396:15;3434:4;3431:1;3424:15;3288:161;;3075:380;;;:::o;3460:127::-;3521:10;3516:3;3512:20;3509:1;3502:31;3552:4;3549:1;3542:15;3576:4;3573:1;3566:15;3460:127;861:17534:80;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620003f15760003560e01c806375ece3e81162000211578063c45a01551162000125578063e0bab4c411620000bb578063e4fbaecb1162000086578063e4fbaecb14620008c9578063e7d015f214620008e5578063f4b9fa7514620008f9578063fa7626d4146200090d57600080fd5b8063e0bab4c4146200088a578063e1497cff14620008a1578063e20c9f7114620008ab578063e24b85e714620008b557600080fd5b8063d1a3925a11620000fc578063d1a3925a14620007ba578063d1a72ed61462000836578063d5bfbe4c1462000852578063d8280a7e146200086e57600080fd5b8063c45a015514620007f2578063c6bbd5a71462000806578063ce2da055146200081a57600080fd5b8063a0b4b30111620001a7578063ba414fa61162000172578063ba414fa6146200079f578063c2867f2014620004cf578063c31c9c0714620007ba578063c36596a614620007d657600080fd5b8063a0b4b301146200074e578063ac0e47f51462000765578063ad39e5fd1462000779578063b5508aa9146200079557600080fd5b806385f65a2711620001e857806385f65a2714620007145780638dae88c2146200071e578063916a17c6146200073a57806395d5772d146200074457600080fd5b806375ece3e814620006dd5780637dc0d1d014620006e757806385226c8114620006fb57600080fd5b80633a3c3b871162000309578063541bcb76116200029f5780635cc6f954116200026a5780635cc6f954146200068d57806366d9a9a014620006975780636e008a0314620006b057806370eb258a14620006c457600080fd5b8063541bcb7614620006225780635725a977146200063e57806358f7f6d2146200065a5780635b718560146200067657600080fd5b80633f7286f411620002e05780633f7286f414620005d15780633fc8cef314620005db5780634aa4a4fc14620005ef5780634dede3de146200060657600080fd5b80633a3c3b8714620005855780633ae64e0c14620005a15780633e5e3c2314620005c757600080fd5b80631d5f45f5116200038b5780632e7b094811620003565780632e7b094814620005275780632f9f8c1314620005435780632fab7aea146200055f57806339c66af1146200057b57600080fd5b80631d5f45f514620004cf5780631ed7831c14620004eb5780632a88873514620005045780632ade3880146200050e57600080fd5b80630fb405b711620003cc5780630fb405b714620004165780631081259e146200044f5780631b6b6d23146200049c5780631d2c8e1a14620004b857600080fd5b8063037e5f6814620003f65780630a9254e414620004025780630e7628c6146200040c575b600080fd5b620004006200091b565b005b620004006200157a565b620004006200173d565b620004327372e4f9f808c49a2a61de9c5896298920dc4eeea981565b6040516001600160a01b0390911681526020015b60405180910390f35b6200045962001b40565b604080516001600160a01b03978816815295871660208701529386169385019390935290841660608401528316608083015290911660a082015260c00162000446565b6200043273514910771af9ca656af840dff83e8264ecf986ca81565b62000432620004c9366004620065ae565b62001f1f565b62000432731f98431c8ad98523631ae4a59f267346ea31f98481565b620004f562001f38565b60405162000446919062006937565b6200040062001f9c565b62000518620023c2565b6040516200044691906200699b565b6200043273b131f4a55907b10d1f0a50d8ab8fa09ec342cd7481565b6200043273cf0c122c6b73ff809c693db761e7baebe62b6a2e81565b6200043273761d38e5ddf6ccf6cf7c55759d5210750b5d60f381565b6200040062002510565b6200043273d533a949740bb3306d119cc777fa900ba034cd5281565b620005b8620005b23660046200675d565b6200304f565b60405190815260200162000446565b620004f562003071565b620004f5620030d3565b602f5462000432906001600160a01b031681565b6200043260008051602062012a9e83398151915281565b62000432732260fac5e5542a773aa44fbcfedf7c193bc2c59981565b62000432731f9840a85d5af5bf1d1762f925bdaddc4201f98481565b6200043273b62e45c3df611dce236a6ddc7a493d79f9dfadef81565b6200043273418d75f65a02b3d53b2418fb8e1fe493759c760581565b620005b8620006873660046200675d565b62003135565b6200040062003146565b620006a162003a23565b60405162000446919062006a1c565b60285462000432906001600160a01b031681565b620006ce62003b0d565b60405162000446919062006b5d565b6200043262003ba3565b60325462000432906001600160a01b031681565b6200070562003c4f565b60405162000446919062006986565b6200040062003d29565b6200043273b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b620006a16200428c565b6200040062004376565b620004326200075f3660046200675d565b62004525565b60295462000432906001600160a01b031681565b620004327327c70cd1946795b66be9d954418546998b54663481565b6200070562004550565b620007a96200462a565b604051901515815260200162000446565b6200043273e592427a0aece92de3edee1f18e0157c0586156481565b62000432739813037ee2218799597d83d4a5b6f3b6778218d981565b60275462000432906001600160a01b031681565b60305462000432906001600160a01b031681565b62000432737a250d5630b4cf539739df2c5dacb4c659f2488d81565b6200043273ac57de9c1a09fec648e93eb98875b212db0d460b81565b62000432735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f81565b62000432731e02e2ed139f5baf6bfad04c0e61ebb0110da65381565b6200043260008051602062012abe83398151915281565b620004006200475d565b620004f562004a8c565b601e5462000432906001600160a01b031681565b62000432736982508145454ce325ddbe47a25d4ec3d231193381565b60265462000432906001600160a01b031681565b602e5462000432906001600160a01b031681565b600754620007a99060ff1681565b602f5460408051630d0e30db60e41b81529051655af3107a4000926001600160a01b03169163d0e30db091678ac7230489e800009160048082019260009290919082900301818588803b1580156200097257600080fd5b505af115801562000987573d6000803e3d6000fd5b505060405163095ea7b360e01b815260008051602062012a9e833981519152935063095ea7b39250620009de915073e592427a0aece92de3edee1f18e0157c0586156490678ac7230489e8000090600401620068cd565b602060405180830381600087803b158015620009f957600080fd5b505af115801562000a0e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a34919062006576565b5060275460405163156a5da160e01b815260008051602062012a9e833981519152600482015260008051602062012abe8339815191526024820152678ac7230489e8000060448201526003606482015262000af8916001600160a01b03169063156a5da190608401602060405180830381600087803b15801562000ab757600080fd5b505af115801562000acc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000af2919062006594565b62004aee565b604080516101008101825260008051602062012a9e833981519152815260008051602062012abe8339815191526020820152610bb881830152306060820152426080820152678ac7230489e8000060a0820152600060c0820181905260e08201819052915163414bf38960e01b815290919073e592427a0aece92de3edee1f18e0157c058615649063414bf3899062000b9690859060040162006efe565b602060405180830381600087803b15801562000bb157600080fd5b505af115801562000bc6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bec919062006594565b604080518082018252600c81526b6461692062616c616c6e636560a01b602082015290516370a0823160e01b815230600482015291925062000c9d9160008051602062012abe833981519152906370a08231906024015b60206040518083038186803b15801562000c5c57600080fd5b505afa15801562000c71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c97919062006594565b62004b36565b62000ca762004376565b60275460248054604051635af694c560e11b81526001600160a01b03918216600482015292169163b5ed298a9101600060405180830381600087803b15801562000cf057600080fd5b505af115801562000d05573d6000803e3d6000fd5b5050602480546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012a7e83398151915293506306447d56925001600060405180830381600087803b15801562000d5d57600080fd5b505af115801562000d72573d6000803e3d6000fd5b50506027546024805460405163f2fde38b60e01b81526001600160a01b0391821660048201529216935063f2fde38b925001600060405180830381600087803b15801562000dbf57600080fd5b505af115801562000dd4573d6000803e3d6000fd5b5050505060008051602062012ade83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000e2657600080fd5b505af115801562000e3b573d6000803e3d6000fd5b505060255460405163a9059cbb60e01b815260008051602062012abe833981519152935063a9059cbb925062000e89916001600160a01b031690683643aa64798604000090600401620068cd565b602060405180830381600087803b15801562000ea457600080fd5b505af115801562000eb9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000edf919062006576565b506025546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012a7e833981519152906306447d5690602401600060405180830381600087803b15801562000f3557600080fd5b505af115801562000f4a573d6000803e3d6000fd5b50506040805180820182526005815264464c4f4b4960d81b602082015260275491516370a0823160e01b81526001600160a01b03909216600483015262000fb39350915073cf0c122c6b73ff809c693db761e7baebe62b6a2e906370a082319060240162000c43565b60275460405163095ea7b360e01b815260008051602062012abe8339815191529163095ea7b39162000ffd916001600160a01b031690683643aa64798604000090600401620068cd565b602060405180830381600087803b1580156200101857600080fd5b505af11580156200102d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001053919062006576565b5060408051808201825260168152751a5cdcdd585b98d9481bdd5d1c1d5d08185b5bdd5b9d60521b60208201526027549151630c8b76e760e41b815262001101926001600160a01b03169063c8b76e7090620010d190683635c9adc5dea000009060008051602062012abe8339815191529060039060040162006b72565b602060405180830381600087803b158015620010ec57600080fd5b505af115801562000c71573d6000803e3d6000fd5b60275460405163abdd5f3f60e01b81526001600160a01b039091169063abdd5f3f90620011509060008051602062012abe83398151915290683635c9adc5dea0000090600390600401620068e6565b600060405180830381600087803b1580156200116b57600080fd5b505af115801562001180573d6000803e3d6000fd5b50506040805180820182526013815272696e64657820746f6b656e2062616c616e636560681b602082015260265460255492516370a0823160e01b81526001600160a01b039384166004820152620011ea955091935091909116906370a082319060240162000c43565b604080518082018252600f81526e706f7274666f6c696f2076616c756560881b602080830191909152602754835163150a13fb60e31b8152935162001257946001600160a01b039092169263a8509fd89260048082019391829003018186803b15801562000c5c57600080fd5b604080518082018252601881527f726564656d7074696f6e206f757470757420616d6f756e740000000000000000602082015260275460265460255493516370a0823160e01b81526001600160a01b0394851660048201526200134f9492831692631ff015639216906370a082319060240160206040518083038186803b158015620012e257600080fd5b505afa158015620012f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200131d919062006594565b60008051602062012abe83398151915260036040518463ffffffff1660e01b8152600401620010d19392919062006b72565b60408051808201825260158152743bb2ba341030b33a32b9103932b232b6b83a34b7b760591b602082015260255491516370a0823160e01b81526001600160a01b039092166004830152620013be9160008051602062012abe833981519152906370a082319060240162000c43565b6027546026546025546040516370a0823160e01b81526001600160a01b039182166004820152600093821692632b9522e09216906370a082319060240160206040518083038186803b1580156200141457600080fd5b505afa15801562001429573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200144f919062006594565b60008051602062012abe83398151915260036040518463ffffffff1660e01b8152600401620014819392919062006b72565b602060405180830381600087803b1580156200149c57600080fd5b505af1158015620014b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014d7919062006594565b905062001505604051806040016040528060088152602001671c99585b081bdd5d60c21b8152508262004b36565b60408051808201825260158152743bb2ba341030b33a32b9103932b232b6b83a34b7b760591b602082015260255491516370a0823160e01b81526001600160a01b039092166004830152620015749160008051602062012abe833981519152906370a082319060240162000c43565b50505050565b604051630637469360e31b815260008051602062012a7e833981519152906331ba349890620015af9060319060040162006bb5565b602060405180830381600087803b158015620015ca57600080fd5b505af1158015620015df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001605919062006594565b602a819055604051639ebf682760e01b8152600481019190915260008051602062012a7e83398151915290639ebf682790602401600060405180830381600087803b1580156200165457600080fd5b505af115801562001669573d6000803e3d6000fd5b505050506200167762001b40565b602880546001600160a01b03199081166001600160a01b03938416179091556027805482169383169390931790925560298054831693821693909317909255602680548216938316939093179092556032805483169382169390931790925560338054821693909216929092179055602e805460008051602062012abe833981519152908316179055602f805460008051602062012a9e8339815191529083161790556030805473b27308f9f90d607463bb33ea1bebb41c27ce5ab69216919091179055565b60265460408051638da5cb5b60e01b81529051620017c7926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156200178557600080fd5b505afa1580156200179a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017c09190620064eb565b3062004b7f565b60265460408051632fecd58960e01b8152905162001859926001600160a01b031691632fecd589916004808301926020929190829003018186803b1580156200180f57600080fd5b505afa15801562001824573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200184a919062006594565b670de0b6b3a764000062004c8b565b6026546040805163184a732f60e01b81529051620018e3926001600160a01b03169163184a732f916004808301926020929190829003018186803b158015620018a157600080fd5b505afa158015620018b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018dc919062006594565b4262004c8b565b60265460408051632cfc019d60e21b8152905162001978926001600160a01b03169163b3f00674916004808301926020929190829003018186803b1580156200192b57600080fd5b505afa15801562001940573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019669190620064eb565b601f546001600160a01b031662004b7f565b602654604080516309eeb1d560e41b8152905162001a15926001600160a01b031691639eeb1d50916004808301926000929190829003018186803b158015620019c057600080fd5b505afa158015620019d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620019ff919081019062006636565b6040518060200160405280600081525062004d70565b60265460408051632b52684d60e01b8152905162001aa9926001600160a01b031691632b52684d916004808301926020929190829003018186803b15801562001a5d57600080fd5b505afa15801562001a72573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a98919062006594565b69d3c21bcecceda100000062004c8b565b602654604080516303aa30b960e11b8152905162001b3e926001600160a01b0316916307546172916004808301926020929190829003018186803b15801562001af157600080fd5b505afa15801562001b06573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b2c9190620064eb565b6027546001600160a01b031662004b7f565b565b600080600080600080600060405162001b5990620063af565b604051809103906000f08015801562001b76573d6000803e3d6000fd5b50905060008160405162001b8a90620063bd565b6001600160a01b039091168152602001604051809103906000f08015801562001bb7573d6000803e3d6000fd5b50905060006012686c6b935b8bbd40000060405162001bd690620063cb565b60ff90921682526020820152604001604051809103906000f08015801562001c02573d6000803e3d6000fd5b509050600060405162001c1590620063d9565b604051809103906000f08015801562001c32573d6000803e3d6000fd5b50601f5460405163ed1c11cb60e01b81529192506001600160a01b038084169263ed1c11cb9262001cfe92670de0b6b3a76400009291169069d3c21bcecceda10000009060008051602062012a9e8339815191529073b27308f9f90d607463bb33ea1bebb41c27ce5ab69073e592427a0aece92de3edee1f18e0157c0586156490731f98431c8ad98523631ae4a59f267346ea31f98490737a250d5630b4cf539739df2c5dacb4c659f2488d90735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f9060040162006dc5565b600060405180830381600087803b15801562001d1957600080fd5b505af115801562001d2e573d6000803e3d6000fd5b50505050600060405162001d4290620063e7565b604051809103906000f08015801562001d5f573d6000803e3d6000fd5b50601d54604051631196932560e21b81526001600160a01b038581166004830152888116602483015287811660448301526064820192909252858216608482015260008051602062012a9e83398151915260a482015273b27308f9f90d607463bb33ea1bebb41c27ce5ab660c482015273e592427a0aece92de3edee1f18e0157c0586156460e4820152731f98431c8ad98523631ae4a59f267346ea31f984610104820152737a250d5630b4cf539739df2c5dacb4c659f2488d610124820152735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f61014482015291925082169063465a4c949061016401600060405180830381600087803b15801562001e6557600080fd5b505af115801562001e7a573d6000803e3d6000fd5b5050604051637e51dad560e11b81526001600160a01b0384811660048301528516925063fca3b5aa9150602401600060405180830381600087803b15801562001ec257600080fd5b505af115801562001ed7573d6000803e3d6000fd5b50505050600060405162001eeb90620063f5565b604051809103906000f08015801562001f08573d6000803e3d6000fd5b50959c949b50919950919750909550919350915050565b60008082905060008151602083016000f0949350505050565b6060601480548060200260200160405190810160405280929190818152602001828054801562001f9257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162001f73575b5050505050905090565b604051630b4c774160e11b815260008051602062012a9e8339815191526004820152732260fac5e5542a773aa44fbcfedf7c193bc2c5996024820152610bb86044820152600090731f98431c8ad98523631ae4a59f267346ea31f98490631698ee829060640160206040518083038186803b1580156200201b57600080fd5b505afa15801562002030573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020569190620064eb565b90506000806000806000806000876001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156200209d57600080fd5b505afa158015620020b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020d89190620066b6565b9650965096509650965096509650620020fa876001600160a01b031662004aee565b6027546040516313cb1f8360e01b815260008051602062012a9e8339815191526004820152732260fac5e5542a773aa44fbcfedf7c193bc2c5996024820152670de0b6b3a764000060448201526003606482015262002194916001600160a01b0316906313cb1f839060840160206040518083038186803b1580156200217f57600080fd5b505afa15801562000acc573d6000803e3d6000fd5b602f60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b158015620021ed57600080fd5b505af115801562002202573d6000803e3d6000fd5b505060405163095ea7b360e01b815260008051602062012a9e833981519152935063095ea7b3925062002259915073e592427a0aece92de3edee1f18e0157c0586156490670de0b6b3a764000090600401620068cd565b602060405180830381600087803b1580156200227457600080fd5b505af115801562002289573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022af919062006576565b50604080516101008101825260008051602062012a9e8339815191528152732260fac5e5542a773aa44fbcfedf7c193bc2c5996020820152610bb881830152306060820152426080820152670de0b6b3a764000060a0820152600060c0820181905260e08201819052915163414bf38960e01b815290919073e592427a0aece92de3edee1f18e0157c058615649063414bf389906200235390859060040162006efe565b602060405180830381600087803b1580156200236e57600080fd5b505af115801562002383573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023a9919062006594565b9050620023b68162004aee565b50505050505050505050565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200250757600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b82821015620024ef5783829060005260206000200180546200245b9062007032565b80601f0160208091040260200160405190810160405280929190818152602001828054620024899062007032565b8015620024da5780601f10620024ae57610100808354040283529160200191620024da565b820191906000526020600020905b815481529060010190602001808311620024bc57829003601f168201915b50505050508152602001906001019062002439565b505050508152505081526020019060010190620023e6565b50505050905090565b6200251a62004376565b60275460405163239aad0d60e01b815260006004820152620025cf916001600160a01b03169063239aad0d9060240160206040518083038186803b1580156200256257600080fd5b505afa15801562002577573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200259d9190620064eb565b602b600081548110620025b457620025b4620070a3565b6000918252602090912001546001600160a01b031662004b7f565b60275460405163239aad0d60e01b81526001600482015262002669916001600160a01b03169063239aad0d9060240160206040518083038186803b1580156200261757600080fd5b505afa1580156200262c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026529190620064eb565b602b600181548110620025b457620025b4620070a3565b60275460405163239aad0d60e01b81526002600482015262002703916001600160a01b03169063239aad0d9060240160206040518083038186803b158015620026b157600080fd5b505afa158015620026c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026ec9190620064eb565b602b600281548110620025b457620025b4620070a3565b60275460405163239aad0d60e01b8152600360048201526200279d916001600160a01b03169063239aad0d9060240160206040518083038186803b1580156200274b57600080fd5b505afa15801562002760573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027869190620064eb565b602b600381548110620025b457620025b4620070a3565b60275460405163239aad0d60e01b815260048082015262002836916001600160a01b03169063239aad0d9060240160206040518083038186803b158015620027e457600080fd5b505afa158015620027f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200281f9190620064eb565b602b600481548110620025b457620025b4620070a3565b602754602b805462002913926001600160a01b031691634b3e0b8091600090620028645762002864620070a3565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b158015620028b057600080fd5b505afa158015620028c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028eb919062006594565b602c600081548110620029025762002902620070a3565b906000526020600020015462004c8b565b602754602b8054620029e1926001600160a01b031691634b3e0b80916001908110620029435762002943620070a3565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b1580156200298f57600080fd5b505afa158015620029a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620029ca919062006594565b602c600181548110620029025762002902620070a3565b602754602b805462002aaf926001600160a01b031691634b3e0b8091600290811062002a115762002a11620070a3565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002a5d57600080fd5b505afa15801562002a72573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a98919062006594565b602c600281548110620029025762002902620070a3565b602754602b805462002b7d926001600160a01b031691634b3e0b8091600390811062002adf5762002adf620070a3565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002b2b57600080fd5b505afa15801562002b40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b66919062006594565b602c600381548110620029025762002902620070a3565b602754602b805462002c4b926001600160a01b031691634b3e0b8091600490811062002bad5762002bad620070a3565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002bf957600080fd5b505afa15801562002c0e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c34919062006594565b602c600481548110620029025762002902620070a3565b602754602b805462002d17926001600160a01b03169163d90bc2119160009062002c795762002c79620070a3565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002cc557600080fd5b505afa15801562002cda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d00919062006594565b602d600081548110620029025762002902620070a3565b602754602b805462002de5926001600160a01b03169163d90bc21191600190811062002d475762002d47620070a3565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002d9357600080fd5b505afa15801562002da8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002dce919062006594565b602d600181548110620029025762002902620070a3565b602754602b805462002eb3926001600160a01b03169163d90bc21191600290811062002e155762002e15620070a3565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002e6157600080fd5b505afa15801562002e76573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e9c919062006594565b602d600281548110620029025762002902620070a3565b602754602b805462002f81926001600160a01b03169163d90bc21191600390811062002ee35762002ee3620070a3565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002f2f57600080fd5b505afa15801562002f44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f6a919062006594565b602d600381548110620029025762002902620070a3565b602754602b805462001b3e926001600160a01b03169163d90bc21191600490811062002fb15762002fb1620070a3565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801562002ffd57600080fd5b505afa15801562003012573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003038919062006594565b602d600481548110620029025762002902620070a3565b602c81815481106200306057600080fd5b600091825260209091200154905081565b6060601680548060200260200160405190810160405280929190818152602001828054801562001f92576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001f73575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562001f92576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001f73575050505050905090565b602d81815481106200306057600080fd5b602f5460408051630d0e30db60e41b81529051655af3107a4000926001600160a01b03169163d0e30db091678ac7230489e800009160048082019260009290919082900301818588803b1580156200319d57600080fd5b505af1158015620031b2573d6000803e3d6000fd5b505060405163095ea7b360e01b815260008051602062012a9e833981519152935063095ea7b3925062003209915073e592427a0aece92de3edee1f18e0157c0586156490678ac7230489e8000090600401620068cd565b602060405180830381600087803b1580156200322457600080fd5b505af115801562003239573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200325f919062006576565b50604080516101008101825260008051602062012a9e833981519152815260008051602062012abe8339815191526020820152610bb881830152306060820152426080820152678ac7230489e8000060a0820152600060c0820181905260e08201819052915163414bf38960e01b815290919073e592427a0aece92de3edee1f18e0157c058615649063414bf38990620032fe90859060040162006efe565b602060405180830381600087803b1580156200331957600080fd5b505af11580156200332e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003354919062006594565b604080518082018252600c81526b6461692062616c616c6e636560a01b602082015290516370a0823160e01b8152306004820152919250620033b09160008051602062012abe833981519152906370a082319060240162000c43565b620033ba62004376565b60275460248054604051635af694c560e11b81526001600160a01b03918216600482015292169163b5ed298a9101600060405180830381600087803b1580156200340357600080fd5b505af115801562003418573d6000803e3d6000fd5b5050602480546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012a7e83398151915293506306447d56925001600060405180830381600087803b1580156200347057600080fd5b505af115801562003485573d6000803e3d6000fd5b50506027546024805460405163f2fde38b60e01b81526001600160a01b0391821660048201529216935063f2fde38b925001600060405180830381600087803b158015620034d257600080fd5b505af1158015620034e7573d6000803e3d6000fd5b5050505060008051602062012ade83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200353957600080fd5b505af11580156200354e573d6000803e3d6000fd5b505060255460405163a9059cbb60e01b815260008051602062012abe833981519152935063a9059cbb92506200359c916001600160a01b031690683643aa64798604000090600401620068cd565b602060405180830381600087803b158015620035b757600080fd5b505af1158015620035cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035f2919062006576565b506025546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012a7e833981519152906306447d5690602401600060405180830381600087803b1580156200364857600080fd5b505af11580156200365d573d6000803e3d6000fd5b50506040805180820182526005815264464c4f4b4960d81b602082015260275491516370a0823160e01b81526001600160a01b039092166004830152620036c69350915073cf0c122c6b73ff809c693db761e7baebe62b6a2e906370a082319060240162000c43565b60275460405163095ea7b360e01b815260008051602062012abe8339815191529163095ea7b39162003710916001600160a01b031690683643aa64798604000090600401620068cd565b602060405180830381600087803b1580156200372b57600080fd5b505af115801562003740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003766919062006576565b5060275460405163abdd5f3f60e01b81526001600160a01b039091169063abdd5f3f90620037b69060008051602062012abe83398151915290683635c9adc5dea0000090600390600401620068e6565b600060405180830381600087803b158015620037d157600080fd5b505af1158015620037e6573d6000803e3d6000fd5b50506040805180820182526013815272696e64657820746f6b656e2062616c616e636560681b602082015260265460255492516370a0823160e01b81526001600160a01b03938416600482015262003850955091935091909116906370a082319060240162000c43565b604080518082018252600f81526e706f7274666f6c696f2076616c756560881b602080830191909152602754835163150a13fb60e31b81529351620038bd946001600160a01b039092169263a8509fd89260048082019391829003018186803b15801562000c5c57600080fd5b6027546026546025546040516370a0823160e01b81526001600160a01b03918216600482015292811692632b9522e09291909116906370a082319060240160206040518083038186803b1580156200391457600080fd5b505afa15801562003929573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200394f919062006594565b602f546040516001600160e01b031960e085901b1681526200398292916001600160a01b03169060039060040162006b72565b602060405180830381600087803b1580156200399d57600080fd5b505af1158015620039b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620039d8919062006594565b506040805180820190915260158152743bb2ba341030b33a32b9103932b232b6b83a34b7b760591b602082015260255462003a1e91906001600160a01b03163162004b36565b505050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620025075760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562003af457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162003ab55790505b5050505050815250508152602001906001019062003a47565b601c805462003b1c9062007032565b80601f016020809104026020016040519081016040528092919081815260200182805462003b4a9062007032565b801562003b9b5780601f1062003b6f5761010080835404028352916020019162003b9b565b820191906000526020600020905b81548152906001019060200180831162003b7d57829003601f168201915b505050505081565b600080601c805462003bb59062007032565b80601f016020809104026020016040519081016040528092919081815260200182805462003be39062007032565b801562003c345780601f1062003c085761010080835404028352916020019162003c34565b820191906000526020600020905b81548152906001019060200180831162003c1657829003601f168201915b50505050509050600062003c488262001f1f565b9392505050565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200250757838290600052602060002001805462003c959062007032565b80601f016020809104026020016040519081016040528092919081815260200182805462003cc39062007032565b801562003d145780601f1062003ce85761010080835404028352916020019162003d14565b820191906000526020600020905b81548152906001019060200180831162003cf657829003601f168201915b50505050508152602001906001019062003c73565b655af3107a400062003d3a62004376565b60275460248054604051635af694c560e11b81526001600160a01b03918216600482015292169163b5ed298a9101600060405180830381600087803b15801562003d8357600080fd5b505af115801562003d98573d6000803e3d6000fd5b5050602480546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012a7e83398151915293506306447d56925001600060405180830381600087803b15801562003df057600080fd5b505af115801562003e05573d6000803e3d6000fd5b50506027546024805460405163f2fde38b60e01b81526001600160a01b0391821660048201529216935063f2fde38b925001600060405180830381600087803b15801562003e5257600080fd5b505af115801562003e67573d6000803e3d6000fd5b5050505060008051602062012ade83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003eb957600080fd5b505af115801562003ece573d6000803e3d6000fd5b50506025546040516001600160a01b039091169250600091506798a7d9b8314c00009082818181858883f1935050505015801562003f10573d6000803e3d6000fd5b506025546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062012a7e833981519152906306447d5690602401600060405180830381600087803b15801562003f6657600080fd5b505af115801562003f7b573d6000803e3d6000fd5b50506040805180820182526005815264464c4f4b4960d81b602082015260275491516370a0823160e01b81526001600160a01b03909216600483015262003fe49350915073cf0c122c6b73ff809c693db761e7baebe62b6a2e906370a082319060240162000c43565b60275460405163372d4c5560e01b8152670de0b6b3a764000060048201526001600160a01b039091169063372d4c5590670de444324c2a8000906024016000604051808303818588803b1580156200403b57600080fd5b505af115801562004050573d6000803e3d6000fd5b50506040805180820182526013815272696e64657820746f6b656e2062616c616e636560681b602082015260265460255492516370a0823160e01b81526001600160a01b039384166004820152620040bb96509194509190911691506370a082319060240162000c43565b604080518082018252600f81526e706f7274666f6c696f2076616c756560881b602080830191909152602754835163150a13fb60e31b8152935162004128946001600160a01b039092169263a8509fd89260048082019391829003018186803b15801562000c5c57600080fd5b6027546026546025546040516370a0823160e01b81526001600160a01b03918216600482015292811692632b9522e09291909116906370a082319060240160206040518083038186803b1580156200417f57600080fd5b505afa15801562004194573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620041ba919062006594565b602f546040516001600160e01b031960e085901b168152620041ed92916001600160a01b03169060039060040162006b72565b602060405180830381600087803b1580156200420857600080fd5b505af11580156200421d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004243919062006594565b506040805180820190915260158152743bb2ba341030b33a32b9103932b232b6b83a34b7b760591b60208201526025546200428991906001600160a01b03163162004b36565b50565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620025075760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200435d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200431e5790505b50505050508152505081526020019060010190620042b0565b60335460275460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620043b69291169067016345785d8a000090600401620068cd565b602060405180830381600087803b158015620043d157600080fd5b505af1158015620043e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200440c919062006576565b5060275460408051637ca58c5560e01b815290516000926001600160a01b031691637ca58c5591600480830192602092919082900301818787803b1580156200445457600080fd5b505af115801562004469573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200448f919062006594565b603254604051630e15036760e21b81529192506001600160a01b0316906338540d9c90620044cb908490602b90602c90602d9060040162006ad3565b602060405180830381600087803b158015620044e657600080fd5b505af1158015620044fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004521919062006576565b5050565b602b81815481106200453657600080fd5b6000918252602090912001546001600160a01b0316905081565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562002507578382906000526020600020018054620045969062007032565b80601f0160208091040260200160405190810160405280929190818152602001828054620045c49062007032565b8015620046155780601f10620045e95761010080835404028352916020019162004615565b820191906000526020600020905b815481529060010190602001808311620045f757829003601f168201915b50505050508152602001906001019062004574565b600754600090610100900460ff16156200464d5750600754610100900460ff1690565b600060008051602062012a7e8339815191523b15620047585760405160009060008051602062012a7e833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620046ba9083906519985a5b195960d21b90602001620068cd565b60408051601f1981840301815290829052620046da92916020016200687c565b60408051601f1981840301815290829052620046f691620068af565b6000604051808303816000865af19150503d806000811462004735576040519150601f19603f3d011682016040523d82523d6000602084013e6200473a565b606091505b509150508080602001905181019062004754919062006576565b9150505b919050565b60005b602b54811015620049ea57620047ff602b8281548110620047855762004785620070a3565b60009182526020808320909101546040805180820190915260138152726f7261636c654c6973742875696e743235362960681b928101929092526027546001600160a01b0391821693620047f8938793620047f1939192620047ea9290911662004ea7565b9062004ecd565b9062004ef6565b9062004f16565b6200487f602b8281548110620048195762004819620070a3565b600091825260208083209091015460408051808201909152601481527363757272656e744c6973742875696e743235362960601b928101929092526027546001600160a01b0391821693620047f8938793620047f1939192620047ea9290911662004ea7565b62004931602c8281548110620048995762004899620070a3565b90600052602060002001546200492a602b8481548110620048be57620048be620070a3565b600091825260208083209091015460408051808201909152601981527f746f6b656e4d61726b6574536861726528616464726573732900000000000000928101929092526027546001600160a01b0391821693620049239392620047ea921662004ea7565b9062004f2b565b9062004f54565b620049d5602d82815481106200494b576200494b620070a3565b90600052602060002001546200492a602b8481548110620049705762004970620070a3565b600091825260208083209091015460408051808201909152601981527f746f6b656e5377617056657273696f6e28616464726573732900000000000000928101929092526027546001600160a01b0391821693620049239392620047ea921662004ea7565b80620049e1816200706f565b91505062004760565b50602b54604080518082019091526011815270746f74616c4f7261636c654c697374282960781b602082015260275462004a3b92916200492a91620047ea906000906001600160a01b031662004ea7565b602b54604080518082019091526012815271746f74616c43757272656e744c697374282960701b602082015260275462001b3e92916200492a91620047ea906000906001600160a01b031662004ea7565b6060601380548060200260200160405190810160405280929190818152602001828054801562001f92576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001f73575050505050905090565b620042898160405160240162004b0691815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b17905262004f60565b62004521828260405160240162004b4f92919062006b91565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905262004f60565b806001600160a01b0316826001600160a01b03161462004521577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162004c079060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162004c40919062006d00565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162004c79919062006e7d565b60405180910390a16200452162004f81565b80821462004521577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162004cfe9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162004d37919062006d8c565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162004c79919062006ed3565b8060405160200162004d839190620068af565b604051602081830303815290604052805190602001208260405160200162004dac9190620068af565b604051602081830303815290604052805190602001201462004521577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162004e359060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162004e6e919062006d45565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162004c79919062006ea8565b6005820180546001600160a01b0319166001600160a01b03831617905560008262003c48565b8051602082012060038301805463ffffffff191660e09290921c91909117905560008262003c48565b600282018054600181018255600091825260208220018290558262003c48565b62004521826001600160a01b03831662005085565b6002820180546001810182556000918252602082206001600160a01b0384169101558262003c48565b62004521828262005085565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008051602062012a7e8339815191523b15620050745760405160009060008051602062012a7e833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49062004fef9083906519985a5b195960d21b90600190602001620068e6565b60408051601f19818403018152908290526200500f92916020016200687c565b60408051601f19818403018152908290526200502b91620068af565b6000604051808303816000865af19150503d80600081146200506a576040519150601f19603f3d011682016040523d82523d6000602084013e6200506f565b606091505b505050505b6007805461ff001916610100179055565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015620050f857602002820191906000526020600020905b815481526020019060010190808311620050e3575b505050505090506000836200510d8362005405565b604051602001620051209291906200687c565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200517491869188910162006840565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620051af57620051ad87620054b9565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620051f091879189910162006840565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620052379190620068af565b600060405180830381855afa9150503d806000811462005274576040519150601f19603f3d011682016040523d82523d6000602084013e62005279565b606091505b509150620052969050816200529088602062006fe1565b620054cc565b604051630667f9d760e41b81529092506000915060008051602062012a7e8339815191529063667f9d7090620052d3908b908790600401620068cd565b60206040518083038186803b158015620052ec57600080fd5b505afa15801562005301573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005327919062006594565b9050808214620053545760405162461bcd60e51b81526004016200534b9062006c65565b60405180910390fd5b6040516370ca10bb60e01b815260008051602062012a7e833981519152906370ca10bb906200538c908b9087908e90600401620068e6565b600060405180830381600087803b158015620053a757600080fd5b505af1158015620053bc573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620053f160028b01600062006403565b896004016000905550505050505050505050565b606060008251602062005419919062006fe1565b67ffffffffffffffff811115620054345762005434620070b9565b6040519080825280601f01601f1916602001820160405280156200545f576020820181803683370190505b50905060005b8351811015620054b2576000848281518110620054865762005486620070a3565b602002602001015190508082602002602001840152508080620054a9906200706f565b91505062005465565b5092915050565b6000620054c68262005556565b92915050565b60008060006020855111620054e3578451620054e6565b60205b905060005b818110156200554c576200550181600862006fe1565b866200550e838862006fc6565b81518110620055215762005521620070a3565b01602001516001600160f81b031916901c92909217918062005543816200706f565b915050620054eb565b5090949350505050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015620055c857602002820191906000526020600020905b815481526020019060010190808311620055b3575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620056149250859187910162006840565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615620056b3576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200568391859187910162006840565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620056c18362006282565b604051602001620056d49291906200687c565b604051602081830303815290604052905060008051602062012ade83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200573357600080fd5b505af115801562005748573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620057699190620068af565b600060405180830381855afa9150503d8060008114620057a6576040519150601f19603f3d011682016040523d82523d6000602084013e620057ab565b606091505b509150620057c8905081620057c287602062006fe1565b6200632f565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062012a7e833981519152906365bc948190602401600060405180830381600087803b1580156200582057600080fd5b505af115801562005835573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200585f91908101906200650b565b50905080516001141562005b3757600060008051602062012ade83398151915260001c6001600160a01b031663667f9d708984600081518110620058a757620058a7620070a3565b60200260200101516040518363ffffffff1660e01b8152600401620058ce929190620068cd565b60206040518083038186803b158015620058e757600080fd5b505afa158015620058fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005922919062006594565b90508062005986577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58883600081518110620059625762005962620070a3565b602002602001015160001c6040516200597d929190620068cd565b60405180910390a15b808314620059a85760405162461bcd60e51b81526004016200534b9062006c65565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001620059e092919062006840565b604051602081830303815290604052805190602001208560008151811062005a0c5762005a0c620070a3565b602002602001015160001c60405162005a29949392919062006907565b60405180910390a18160008151811062005a475762005a47620070a3565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262005a92918a918c910162006840565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162005afc918a918c910162006840565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062006105565b600181511115620060945760005b81518110156200608d57600060008051602062012ade83398151915260001c6001600160a01b031663667f9d708a85858151811062005b885762005b88620070a3565b60200260200101516040518363ffffffff1660e01b815260040162005baf929190620068cd565b60206040518083038186803b15801562005bc857600080fd5b505afa15801562005bdd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c03919062006594565b90508062005c66577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062005c425762005c42620070a3565b602002602001015160001c60405162005c5d929190620068cd565b60405180910390a15b83811462005c75575062006078565b825181199060008051602062012a7e833981519152906370ca10bb908c9087908790811062005ca85762005ca8620070a3565b6020026020010151846040518463ffffffff1660e01b815260040162005cd193929190620068e6565b600060405180830381600087803b15801562005cec57600080fd5b505af115801562005d01573d6000803e3d6000fd5b50505050600060608b6001600160a01b03168860405162005d239190620068af565b600060405180830381855afa9150503d806000811462005d60576040519150601f19603f3d011682016040523d82523d6000602084013e62005d65565b606091505b50909250905062005d7d81620057c28c602062006fe1565b96505080801562005d8d57508186145b1562005fe0577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162005dcb92919062006840565b6040516020818303038152906040528051906020012088888151811062005df65762005df6620070a3565b602002602001015160001c60405162005e13949392919062006907565b60405180910390a184848151811062005e305762005e30620070a3565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262005e7b918d918f910162006840565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162005f0892919062006840565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602062012ade83398151915260001c6001600160a01b03166370ca10bb8c87878151811062005f7a5762005f7a620070a3565b6020026020010151866040518463ffffffff1660e01b815260040162005fa393929190620068e6565b600060405180830381600087803b15801562005fbe57600080fd5b505af115801562005fd3573d6000803e3d6000fd5b505050505050506200608d565b60008051602062012ade83398151915260001c6001600160a01b03166370ca10bb8c878781518110620060175762006017620070a3565b6020026020010151866040518463ffffffff1660e01b81526004016200604093929190620068e6565b600060405180830381600087803b1580156200605b57600080fd5b505af115801562006070573d6000803e3d6000fd5b505050505050505b8062006084816200706f565b91505062005b45565b5062006105565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016200534b565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620061499188918a910162006840565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620061d85760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b60648201526084016200534b565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200620960028a01600062006403565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916200624f9188918a910162006840565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b606060008251602062006296919062006fe1565b67ffffffffffffffff811115620062b157620062b1620070b9565b6040519080825280601f01601f191660200182016040528015620062dc576020820181803683370190505b50905060005b8351811015620054b2576000848281518110620063035762006303620070a3565b60200260200101519050808260200260200184015250808062006326906200706f565b915050620062e2565b600080600060208551116200634657845162006349565b60205b905060005b818110156200554c576200636481600862006fe1565b8662006371838862006fc6565b81518110620063845762006384620070a3565b01602001516001600160f81b031916901c929092179180620063a6816200706f565b9150506200634e565b610e4980620070e683390190565b611c528062007f2f83390190565b6105538062009b8183390190565b612980806200a0d483390190565b615b31806200ca5483390190565b6104f9806201258583390190565b50805460008255906000526020600020908101906200428991905b808211156200643457600081556001016200641e565b5090565b600082601f8301126200644a57600080fd5b8151602067ffffffffffffffff821115620064695762006469620070b9565b8160051b6200647a82820162006f67565b8381528281019086840183880185018910156200649657600080fd5b600093505b85841015620064bb5780518352600193909301929184019184016200649b565b50979650505050505050565b805180151581146200475857600080fd5b805161ffff811681146200475857600080fd5b600060208284031215620064fe57600080fd5b815162003c4881620070cf565b600080604083850312156200651f57600080fd5b825167ffffffffffffffff808211156200653857600080fd5b620065468683870162006438565b935060208501519150808211156200655d57600080fd5b506200656c8582860162006438565b9150509250929050565b6000602082840312156200658957600080fd5b62003c4882620064c7565b600060208284031215620065a757600080fd5b5051919050565b600060208284031215620065c157600080fd5b813567ffffffffffffffff811115620065d957600080fd5b8201601f81018413620065eb57600080fd5b803562006602620065fc8262006f9b565b62006f67565b8181528560208385010111156200661857600080fd5b81602084016020830137600091810160200191909152949350505050565b6000602082840312156200664957600080fd5b815167ffffffffffffffff8111156200666157600080fd5b8201601f810184136200667357600080fd5b805162006684620065fc8262006f9b565b8181528560208385010111156200669a57600080fd5b620066ad82602083016020860162007003565b95945050505050565b600080600080600080600060e0888a031215620066d257600080fd5b8751620066df81620070cf565b8097505060208801518060020b8114620066f857600080fd5b95506200670860408901620064d8565b94506200671860608901620064d8565b93506200672860808901620064d8565b925060a088015160ff811681146200673f57600080fd5b91506200674f60c08901620064c7565b905092959891949750929550565b6000602082840312156200677057600080fd5b5035919050565b600081518084526020808501808196508360051b8101915082860160005b85811015620067c3578284038952620067b084835162006812565b9885019893509084019060010162006795565b5091979650505050505050565b6000815480845260208085019450836000528060002060005b838110156200680757815487529582019560019182019101620067e9565b509495945050505050565b600081518084526200682c81602086016020860162007003565b601f01601f19169290920160200192915050565b825160009082906020808701845b838110156200686c578151855293820193908201906001016200684e565b5050948252509092019392505050565b6001600160e01b0319831681528151600090620068a181600485016020870162007003565b919091016004019392505050565b60008251620068c381846020870162007003565b9190910192915050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039490941684526001600160e01b03199290921660208401526040830152606082015260800190565b6020808252825182820181905260009190848201906040850190845b818110156200697a5783516001600160a01b03168352928401929184019160010162006953565b50909695505050505050565b60208152600062003c48602083018462006777565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562006a0e57888303603f19018552815180516001600160a01b03168452870151878401879052620069fa8785018262006777565b9588019593505090860190600101620069c2565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562006ac457898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562006aae5783516001600160e01b0319168252928b019260019290920191908b019062006a82565b50978a0197955050509187019160010162006a44565b50919998505050505050505050565b600060808201868352602060808185015281875480845260a0860191508860005282600020935060005b8181101562006b245784546001600160a01b03168352600194850194928401920162006afd565b5050848103604086015262006b3a8188620067d0565b92505050828103606084015262006b528185620067d0565b979650505050505050565b60208152600062003c48602083018462006812565b9283526001600160a01b03919091166020830152604082015260600190565b60408152600062006ba6604083018562006812565b90508260208301529392505050565b600060208083526000845481600182811c91508083168062006bd857607f831692505b85831081141562006bf757634e487b7160e01b85526022600452602485fd5b87860183815260200181801562006c17576001811462006c295762006c56565b60ff1986168252878201965062006c56565b60008b81526020902060005b8681101562006c505781548482015290850190890162006c35565b83019750505b50949998505050505050505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b60408152600062006d2b60408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062006d7060408301600a8152690808080808081319599d60b21b602082015260400190565b828103602084015262006d84818562006812565b949350505050565b60408152600062006db760408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b610160808252600e908201526d20b73a349024b7333630ba34b7b760911b6101808201526101a06020820181905260049082015263414e464960e01b6101c0820152604081018a90526001600160a01b03891660608201526101e0810188608083015262006e3e60a08301896001600160a01b03169052565b6001600160a01b0396871660c083015294861660e082015292851661010084015290841661012083015290921661014090920191909152949350505050565b60408152600062006d2b60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600062006d7060408301600a8152690808080808149a59da1d60b21b602082015260400190565b60408152600062006db760408301600a8152690808080808149a59da1d60b21b602082015260400190565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b604051601f8201601f1916810167ffffffffffffffff8111828210171562006f935762006f93620070b9565b604052919050565b600067ffffffffffffffff82111562006fb85762006fb8620070b9565b50601f01601f191660200190565b6000821982111562006fdc5762006fdc6200708d565b500190565b600081600019048311821515161562006ffe5762006ffe6200708d565b500290565b60005b838110156200702057818101518382015260200162007006565b83811115620015745750506000910152565b600181811c908216806200704757607f821691505b602082108114156200706957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156200708657620070866200708d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200428957600080fdfe60806040523480156200001157600080fd5b50604080518082018252600f81526e21b430b4b72634b735902a37b5b2b760891b6020808301918252835180850190945260048452634c494e4b60e01b90840152815191929162000065916003916200016f565b5080516200007b9060049060208401906200016f565b50620000899150506200008f565b62000279565b620000a7336b033b2e3c9fd0803ce8000000620000a9565b565b6001600160a01b038216620001045760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000118919062000215565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b8280546200017d906200023c565b90600052602060002090601f016020900481019282620001a15760008555620001ec565b82601f10620001bc57805160ff1916838001178555620001ec565b82800160010185558215620001ec579182015b82811115620001ec578251825591602001919060010190620001cf565b50620001fa929150620001fe565b5090565b5b80821115620001fa5760008155600101620001ff565b600082198211156200023757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200025157607f821691505b602082108114156200027357634e487b7160e01b600052602260045260246000fd5b50919050565b610bc080620002896000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063661884631161008c578063a457c2d711610066578063a457c2d7146101ce578063a9059cbb146101e1578063d73dd623146101f4578063dd62ed3e1461020757600080fd5b8063661884631461018a57806370a082311461019d57806395d89b41146101c657600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce5671461015557806339509351146101645780634000aea01461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761021a565b6040516101049190610a8b565b60405180910390f35b61012061011b366004610919565b6102ac565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046108dd565b6102c4565b60405160128152602001610104565b610120610172366004610919565b6102e8565b610120610185366004610943565b61030a565b610120610198366004610919565b610376565b6101346101ab36600461088f565b6001600160a01b031660009081526020819052604090205490565b6100f7610389565b6101206101dc366004610919565b610398565b6101206101ef366004610919565b610418565b610120610202366004610919565b610426565b6101346102153660046108aa565b610432565b60606003805461022990610b39565b80601f016020809104026020016040519081016040528092919081815260200182805461025590610b39565b80156102a25780601f10610277576101008083540402835291602001916102a2565b820191906000526020600020905b81548152906001019060200180831161028557829003601f168201915b5050505050905090565b6000336102ba81858561045d565b5060019392505050565b6000336102d2858285610498565b6102dd85858561050c565b506001949350505050565b6000336102ba8185856102fb8383610432565b6103059190610b13565b61045d565b60006103168484610418565b50836001600160a01b0316336001600160a01b03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405161035c929190610af2565b60405180910390a3833b156102ba576102ba848484610541565b60006103828383610398565b9392505050565b60606004805461022990610b39565b600033816103a68286610432565b90508381101561040b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102dd828686840361045d565b6000336102ba81858561050c565b600061038283836102e8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b816001600160a01b0381163014156104875760405162461bcd60e51b815260040161040290610a9e565b6104928484846105ab565b50505050565b60006104a48484610432565b9050600019811461049257818110156104ff5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610402565b610492848484840361045d565b816001600160a01b0381163014156105365760405162461bcd60e51b815260040161040290610a9e565b6104928484846106cf565b604051635260769b60e11b815283906001600160a01b0382169063a4c0ed369061057390339087908790600401610a5b565b600060405180830381600087803b15801561058d57600080fd5b505af11580156105a1573d6000803e3d6000fd5b5050505050505050565b6001600160a01b03831661060d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610402565b6001600160a01b03821661066e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610402565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107335760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610402565b6001600160a01b0382166107955760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610402565b6001600160a01b0383166000908152602081905260409020548181101561080d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610402565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610492565b80356001600160a01b038116811461088a57600080fd5b919050565b6000602082840312156108a157600080fd5b61038282610873565b600080604083850312156108bd57600080fd5b6108c683610873565b91506108d460208401610873565b90509250929050565b6000806000606084860312156108f257600080fd5b6108fb84610873565b925061090960208501610873565b9150604084013590509250925092565b6000806040838503121561092c57600080fd5b61093583610873565b946020939093013593505050565b60008060006060848603121561095857600080fd5b61096184610873565b925060208401359150604084013567ffffffffffffffff8082111561098557600080fd5b818601915086601f83011261099957600080fd5b8135818111156109ab576109ab610b74565b604051601f8201601f19908116603f011681019083821181831017156109d3576109d3610b74565b816040528281528960208487010111156109ec57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b81811015610a3457602081850181015186830182015201610a18565b81811115610a46576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000610a826060830184610a0e565b95945050505050565b6020815260006103826020830184610a0e565b60208082526034908201527f4c696e6b546f6b656e3a207472616e736665722f617070726f766520746f207460408201527368697320636f6e7472616374206164647265737360601b606082015260800190565b828152604060208201526000610b0b6040830184610a0e565b949350505050565b60008219821115610b3457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610b4d57607f821691505b60208210811415610b6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212203ab4465420698688c9522dc144ded06ba4f11b996b701553eddfd7ab2db9983364736f6c63430008070033608060405234801561001057600080fd5b50604051611c52380380611c5283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b611bbf806100936000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635fdb23ca1161008c578063886d3db911610066578063886d3db9146101bc578063a4c0ed36146101cd578063c5e639ca146101e0578063e030ba66146101f357600080fd5b80635fdb23ca146101835780636ee4d55314610196578063715d342f146101a957600080fd5b8063165d35e1146100d457806338540d9c146100f45780633be2c1d8146101175780634042994614610137578063466703c51461014c5780634b6022821461016c575b600080fd5b6000546040516001600160a01b0390911681526020015b60405180910390f35b610107610102366004611585565b610206565b60405190151581526020016100eb565b61012a610125366004611527565b61045c565b6040516100eb919061185e565b61014a6101453660046112be565b61060d565b005b61015f61015a366004611725565b610850565b6040516100eb9190611944565b61017561012c81565b6040519081526020016100eb565b61012a61019136600461145d565b61087e565b61014a6101a43660046116e8565b61094c565b61012a6101b73660046113c6565b610ac9565b6101756101ca366004611725565b90565b61014a6101db36600461135c565b610beb565b6101076101ee36600461169d565b610dc3565b61010761020136600461167b565b610f29565b60008481526001602052604081205485906001600160a01b03166102455760405162461bcd60e51b815260040161023c90611977565b60405180910390fd5b6000868152600160208181526040808420815180830190925280546001600160a01b03811683526001600160e01b0319600160a01b820460e01b1683850152948b9052929091526001600160c01b0319909216905562061a805a10156102bd5760405162461bcd60e51b815260040161023c906119d6565b604080516001808252818301909252600091602080830190803683370190505090506000816000815181106102f4576102f4611b5d565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905068056bc75e2d631000008160008151811061034e5761034e611b5d565b602090810291909101015260408051600180825281830190925260009181602001602082028036833701905050905060038160008151811061039257610392611b5d565b602002602001018181525050600084600001516001600160a01b031685602001518c8c8c8c6040516024016103ca94939291906118a2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161040891906117d8565b6000604051808303816000865af19150503d8060008114610445576040519150601f19603f3d011682016040523d82523d6000602084013e61044a565b606091505b50909c9b505050505050505050505050565b80516060908061047e5760405162461bcd60e51b815260040161023c906119ae565b6000602061048d83601f611a5e565b6104979190611a76565b90506000816001600160401b038111156104b3576104b3611b73565b6040519080825280602002602001820160405280156104dc578160200160208202803683370190505b50905060005b828110156106045760006104f7826020611a8a565b90506000610506826020611a5e565b9050858111156105135750845b600061051f8383611aa9565b6001600160401b0381111561053657610536611b73565b60405190808252806020026020018201604052801561055f578160200160208202803683370190505b509050825b828110156105c05789818151811061057e5761057e611b5d565b60200260200101518285836105939190611aa9565b815181106105a3576105a3611b5d565b6020908102919091010152806105b881611aec565b915050610564565b5060006105cc8261108d565b9050808686815181106105e1576105e1611b5d565b6020026020010181815250505050505080806105fc90611aec565b9150506104e2565b50949350505050565b6000546001600160a01b0316331461065d5760405162461bcd60e51b815260206004820152601360248201527226bab9ba103ab9b2902624a725903a37b5b2b760691b604482015260640161023c565b60005486906001600160a01b03808316911614156106bd5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f742063616c6c6261636b20746f204c494e4b000000000000000000604482015260640161023c565b6040516bffffffffffffffffffffffff1960608c901b1660208201526034810186905260009060540160408051601f198184030181529181528151602092830120600081815260019093529120549091506001600160a01b03161561075b5760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081d5cd94818481d5b9a5c5d5948125160621b604482015260640161023c565b60006107694261012c611120565b905060405180604001604052808a6001600160a01b03168152602001896001600160e01b0319168152506001600084815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548163ffffffff021916908360e01c0217905550905050897fd8d7ecc4800d25fa53ce0372f13a416d98907a7ef3d8d3bdd79cf4fe75529c658d848e8d8d878d8d8d60405161083a999897969594939291906117f4565b60405180910390a2505050505050505050505050565b606060008260405160200161086791815260200190565b60408051601f198184030181529190529392505050565b8051606090806108a05760405162461bcd60e51b815260040161023c906119ae565b6000816001600160401b038111156108ba576108ba611b73565b6040519080825280602002602001820160405280156108e3578160200160208202803683370190505b50905060005b828110156109445761091585828151811061090657610906611b5d565b60200260200101516020015190565b82828151811061092757610927611b5d565b60209081029190910101528061093c81611aec565b9150506108e9565b509392505050565b6000848152600160205260409020546001600160a01b03166109a75760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081d5cd94818481d5b9a5c5d5948125160621b604482015260640161023c565b428111156109f05760405162461bcd60e51b815260206004820152601660248201527514995c5d595cdd081a5cc81b9bdd08195e1c1a5c995960521b604482015260640161023c565b60008481526001602052604080822080546001600160c01b03191690555185917fa7842b9ec549398102c0d91b1b9919b2f20558aefdadf57528a95c6cd3292e9391a260005460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610a7f57600080fd5b505af1158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab79190611563565b610ac357610ac3611b1b565b50505050565b6060600082604051602001610ade91906117a2565b60408051601f19818403018152919052835190915080610b105760405162461bcd60e51b815260040161023c906119ae565b60208251610b1e9190611b07565b15610b625760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840c2e4e4c2f240d8cadccee8d60631b604482015260640161023c565b6000816001600160401b03811115610b7c57610b7c611b73565b604051908082528060200260200182016040528015610ba5578160200160208202803683370190505b50905060005b8281101561060457602080820285010151828281518110610bce57610bce611b5d565b602090810291909101015280610be381611aec565b915050610bab565b6000546001600160a01b03163314610c3b5760405162461bcd60e51b815260206004820152601360248201527226bab9ba103ab9b2902624a725903a37b5b2b760691b604482015260640161023c565b80610c4860026020611a8a565b610c53906004611a5e565b81511015610c9c5760405162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840e4cae2eacae6e840d8cadccee8d60531b604482015260640161023c565b602082015182906001600160e01b031981166320214ca360e11b14610d035760405162461bcd60e51b815260206004820152601e60248201527f4d757374207573652077686974656c69737465642066756e6374696f6e730000604482015260640161023c565b8560248501528460448501526000306001600160a01b031685604051610d2991906117d8565b600060405180830381855af49150503d8060008114610d64576040519150601f19603f3d011682016040523d82523d6000602084013e610d69565b606091505b5050905080610dba5760405162461bcd60e51b815260206004820152601860248201527f556e61626c6520746f2063726561746520726571756573740000000000000000604482015260640161023c565b50505050505050565b60008381526001602052604081205484906001600160a01b0316610df95760405162461bcd60e51b815260040161023c90611977565b6000858152600160208181526040808420815180830190925280546001600160a01b03811683526001600160e01b0319600160a01b820460e01b1683850152948a9052929091526001600160c01b0319909216905562061a805a1015610e715760405162461bcd60e51b815260040161023c906119d6565b600081600001516001600160a01b03168260200151888888604051602401610e9b93929190611921565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610ed991906117d8565b6000604051808303816000865af19150503d8060008114610f16576040519150601f19603f3d011682016040523d82523d6000602084013e610f1b565b606091505b509098975050505050505050565b60008281526001602052604081205483906001600160a01b0316610f5f5760405162461bcd60e51b815260040161023c90611977565b6000848152600160208181526040808420815180830190925280546001600160a01b03811683526001600160e01b0319600160a01b820460e01b168385015294899052929091526001600160c01b0319909216905562061a805a1015610fd75760405162461bcd60e51b815260040161023c906119d6565b8051602082015160405160248101889052604481018790526000926001600160a01b0316919060640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161103e91906117d8565b6000604051808303816000865af19150503d806000811461107b576040519150601f19603f3d011682016040523d82523d6000602084013e611080565b606091505b5090979650505050505050565b6000808251602061109e9190611a8a565b6001600160401b038111156110b5576110b5611b73565b6040519080825280601f01601f1916602001820160405280156110df576020820181803683370190505b50905060005b8351811015611115576020810260200184015160208202602001830152808061110d90611aec565b9150506110e5565b506020015192915050565b60008061112d8385611a5e565b90508381101561117f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161023c565b9392505050565b60006001600160401b0383111561119f5761119f611b73565b6111b2601f8401601f1916602001611a0b565b90508281528383830111156111c657600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146111f457600080fd5b919050565b600082601f83011261120a57600080fd5b8135602061121f61121a83611a3b565b611a0b565b80838252828201915082860187848660051b890101111561123f57600080fd5b60005b8581101561108057813584529284019290840190600101611242565b80356001600160e01b0319811681146111f457600080fd5b60008083601f84011261128857600080fd5b5081356001600160401b0381111561129f57600080fd5b6020830191508360208285010111156112b757600080fd5b9250929050565b60008060008060008060008060006101008a8c0312156112dd57600080fd5b6112e68a6111dd565b985060208a0135975060408a0135965061130260608b016111dd565b955061131060808b0161125e565b945060a08a0135935060c08a0135925060e08a01356001600160401b0381111561133957600080fd5b6113458c828d01611276565b915080935050809150509295985092959850929598565b60008060006060848603121561137157600080fd5b61137a846111dd565b92506020840135915060408401356001600160401b0381111561139c57600080fd5b8401601f810186136113ad57600080fd5b6113bc86823560208401611186565b9150509250925092565b600060208083850312156113d957600080fd5b82356001600160401b038111156113ef57600080fd5b8301601f8101851361140057600080fd5b803561140e61121a82611a3b565b80828252848201915084840188868560051b870101111561142e57600080fd5b600094505b83851015611451578035835260019490940193918501918501611433565b50979650505050505050565b6000602080838503121561147057600080fd5b82356001600160401b038082111561148757600080fd5b818501915085601f83011261149b57600080fd5b81356114a961121a82611a3b565b80828252858201915085850189878560051b88010111156114c957600080fd5b60005b84811015611518578135868111156114e357600080fd5b8701603f81018c136114f457600080fd5b6115058c8a83013560408401611186565b85525092870192908701906001016114cc565b50909998505050505050505050565b60006020828403121561153957600080fd5b81356001600160401b0381111561154f57600080fd5b61155b848285016111f9565b949350505050565b60006020828403121561157557600080fd5b8151801515811461117f57600080fd5b6000806000806080858703121561159b57600080fd5b843593506020808601356001600160401b03808211156115ba57600080fd5b818801915088601f8301126115ce57600080fd5b81356115dc61121a82611a3b565b8082825285820191508585018c878560051b88010111156115fc57600080fd5b600095505b8386101561162657611612816111dd565b835260019590950194918601918601611601565b5097505050604088013592508083111561163f57600080fd5b61164b89848a016111f9565b9450606088013592508083111561166157600080fd5b505061166f878288016111f9565b91505092959194509250565b6000806040838503121561168e57600080fd5b50508035926020909101359150565b6000806000604084860312156116b257600080fd5b8335925060208401356001600160401b038111156116cf57600080fd5b6116db86828701611276565b9497909650939450505050565b600080600080608085870312156116fe57600080fd5b84359350602085013592506117156040860161125e565b9396929550929360600135925050565b60006020828403121561173757600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561176e57815187529582019590820190600101611752565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b815160009082906020808601845b838110156117cc578151855293820193908201906001016117b0565b50929695505050505050565b600082516117ea818460208701611ac0565b9190910192915050565b6001600160a01b038a81168252602082018a905260408201899052871660608201526001600160e01b03198616608082015260a0810185905260c0810184905261010060e0820181905260009061184e8382018587611779565b9c9b505050505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156118965783518352928401929184019160010161187a565b50909695505050505050565b600060808201868352602060808185015281875180845260a086019150828901935060005b818110156118ec5784516001600160a01b0316835293830193918301916001016118c7565b50508481036040860152611900818861173e565b925050508281036060840152611916818561173e565b979650505050505050565b83815260406020820152600061193b604083018486611779565b95945050505050565b6020815260008251806020840152611963816040850160208701611ac0565b601f01601f19169190910160400192915050565b6020808252601b908201527f4d757374206861766520612076616c6964207265717565737449640000000000604082015260600190565b6020808252600e908201526d417272617920697320656d70747960901b604082015260600190565b6020808252818101527f4d7573742070726f7669646520636f6e73756d657220656e6f75676820676173604082015260600190565b604051601f8201601f191681016001600160401b0381118282101715611a3357611a33611b73565b604052919050565b60006001600160401b03821115611a5457611a54611b73565b5060051b60200190565b60008219821115611a7157611a71611b31565b500190565b600082611a8557611a85611b47565b500490565b6000816000190483118215151615611aa457611aa4611b31565b500290565b600082821015611abb57611abb611b31565b500390565b60005b83811015611adb578181015183820152602001611ac3565b83811115610ac35750506000910152565b6000600019821415611b0057611b00611b31565b5060010190565b600082611b1657611b16611b47565b500690565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220449b15ee745fce7cc794825f9bf781cc002f7a6d13752dc1015351f7621507cc64736f6c63430008070033608060405234801561001057600080fd5b5060405161055338038061055383398101604081905261002f916100a4565b6000805460ff191660ff84161790556100478161004e565b5050610101565b60018190554260025560038054906000610067836100d8565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b600080604083850312156100b757600080fd5b825160ff811681146100c857600080fd5b6020939093015192949293505050565b60006000198214156100fa57634e487b7160e01b600052601160045260246000fd5b5060010190565b610443806101106000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638205bf6a116100715780638205bf6a146101a15780639a6fc8f5146101aa578063a87a20ce14610228578063b5ab58dc1461023b578063b633620c1461025b578063feaf968c1461027b57600080fd5b8063313ce567146100b95780634aa2011f146100dd57806350d25bcd1461013a57806354fd4d5014610151578063668a0f02146101595780637284e41614610162575b600080fd5b6000546100c69060ff1681565b60405160ff90911681526020015b60405180910390f35b6101386100eb366004610356565b69ffffffffffffffffffff90931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b005b61014360015481565b6040519081526020016100d4565b610143600081565b61014360035481565b604080518082018252601f81527f76302e382f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290516100d4919061038f565b61014360025481565b6101f16101b8366004610334565b69ffffffffffffffffffff8116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100d4565b61013861023636600461031b565b6102a6565b61014361024936600461031b565b60046020526000908152604090205481565b61014361026936600461031b565b60056020526000908152604090205481565b60035460008181526004602090815260408083205460068352818420546005909352922054836101f1565b600181905542600255600380549060006102bf836103e4565b9091555050600380546000908152600460209081526040808320949094558254825260058152838220429081905592548252600690529190912055565b803569ffffffffffffffffffff8116811461031657600080fd5b919050565b60006020828403121561032d57600080fd5b5035919050565b60006020828403121561034657600080fd5b61034f826102fc565b9392505050565b6000806000806080858703121561036c57600080fd5b610375856102fc565b966020860135965060408601359560600135945092505050565b600060208083528351808285015260005b818110156103bc578581018301518582016040015282016103a0565b818111156103ce576000604083870101525b50601f01601f1916929092016040019392505050565b600060001982141561040657634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220e874894999ad0b5a637e99222919fcf57a8d2b567fcd5fa20f8190fa1c7eb07364736f6c63430008070033608060405234801561001057600080fd5b50612960806100206000396000f3fe6080604052600436106102b25760003560e01c80638456cb5911610175578063b631e80b116100dc578063ddca3f4311610095578063f2fde38b1161006f578063f2fde38b14610863578063f734e22a14610883578063fca3b5aa14610898578063fcaae87b146108b857600080fd5b8063ddca3f431461080d578063ed1c11cb14610823578063efdcd9741461084357600080fd5b8063b631e80b1461072c578063c01bc9821461074d578063c6bbd5a71461077e578063d153b60c1461079f578063d90bc211146107bf578063dd62ed3e146107ed57600080fd5b80639f8e67bf1161012e5780639f8e67bf1461066b578063a457c2d71461068c578063a9059cbb146106ac578063aaa4a184146106cc578063b3f00674146106ec578063b5ed298a1461070c57600080fd5b80638456cb59146105ce5780638da5cb5b146105e357806391fe1b921461060157806395d89b41146106215780639dc29fac146106365780639eeb1d501461065657600080fd5b80633fc8cef31161021957806368e0d4e1116101d257806368e0d4e1146105015780636e01a6861461052257806370a0823114610542578063715018a614610578578063744fbc7a1461058d57806379e34b4d146105ae57600080fd5b80633fc8cef31461044857806340c10f191461046957806345596e2e146104895780635c975abb146104a95780635f370ed0146104c1578063660db484146104e157600080fd5b806323b872dd1161026b57806323b872dd146103a85780632b52684d146103c85780632fecd589146103df578063313ce567146103f557806339509351146104115780633f4ba83a1461043157600080fd5b806306fdde03146102be57806307546172146102e9578063095ea7b31461032257806318160ddd14610352578063184a732f146103715780631d5f45f51461038757600080fd5b366102b957005b600080fd5b3480156102ca57600080fd5b506102d36108e6565b6040516102e09190612637565b60405180910390f35b3480156102f557600080fd5b506101015461030a906001600160a01b031681565b6040516001600160a01b0390911681526020016102e0565b34801561032e57600080fd5b5061034261033d36600461248d565b610978565b60405190151581526020016102e0565b34801561035e57600080fd5b506035545b6040519081526020016102e0565b34801561037d57600080fd5b5061036360fe5481565b34801561039357600080fd5b506101085461030a906001600160a01b031681565b3480156103b457600080fd5b506103426103c33660046123fc565b610990565b3480156103d457600080fd5b506103636101035481565b3480156103eb57600080fd5b5061036360fd5481565b34801561040157600080fd5b50604051601281526020016102e0565b34801561041d57600080fd5b5061034261042c36600461248d565b610a83565b34801561043d57600080fd5b50610446610aa5565b005b34801561045457600080fd5b5061010b5461030a906001600160a01b031681565b34801561047557600080fd5b5061044661048436600461248d565b610ab7565b34801561049557600080fd5b506104466104a4366004612605565b610bd1565b3480156104b557600080fd5b5060ca5460ff16610342565b3480156104cd57600080fd5b506103636104dc366004612438565b610c14565b3480156104ed57600080fd5b506104466104fc3660046123a7565b610f61565b34801561050d57600080fd5b5061010a5461030a906001600160a01b031681565b34801561052e57600080fd5b5061044661053d366004612605565b610fc7565b34801561054e57600080fd5b5061036361055d3660046123a7565b6001600160a01b031660009081526033602052604090205490565b34801561058457600080fd5b5061044661100c565b34801561059957600080fd5b506101095461030a906001600160a01b031681565b3480156105ba57600080fd5b506104466105c93660046123fc565b61101e565b3480156105da57600080fd5b506104466110d1565b3480156105ef57600080fd5b506065546001600160a01b031661030a565b34801561060d57600080fd5b5061044661061c3660046124d9565b6110e1565b34801561062d57600080fd5b506102d3611194565b34801561064257600080fd5b5061044661065136600461248d565b6111a3565b34801561066257600080fd5b506102d3611278565b34801561067757600080fd5b506101005461030a906001600160a01b031681565b34801561069857600080fd5b506103426106a736600461248d565b611307565b3480156106b857600080fd5b506103426106c736600461248d565b61138d565b3480156106d857600080fd5b506104466106e73660046123a7565b611416565b3480156106f857600080fd5b5060ff5461030a906001600160a01b031681565b34801561071857600080fd5b506104466107273660046123a7565b61148a565b34801561073857600080fd5b506101075461030a906001600160a01b031681565b34801561075957600080fd5b506103426107683660046123a7565b6101046020526000908152604090205460ff1681565b34801561078a57600080fd5b5061010c5461030a906001600160a01b031681565b3480156107ab57600080fd5b5060975461030a906001600160a01b031681565b3480156107cb57600080fd5b506103636107da3660046123a7565b6101066020526000908152604090205481565b3480156107f957600080fd5b506103636108083660046123c9565b6114da565b34801561081957600080fd5b5061036360fc5481565b34801561082f57600080fd5b5061044661083e366004612516565b611505565b34801561084f57600080fd5b5061044661085e3660046123a7565b6116d1565b34801561086f57600080fd5b5061044661087e3660046123a7565b611736565b34801561088f57600080fd5b5061044661185e565b3480156108a457600080fd5b506104466108b33660046123a7565b61186e565b3480156108c457600080fd5b506103636108d33660046123a7565b6101056020526000908152604090205481565b6060603680546108f5906128ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610921906128ad565b801561096e5780601f106109435761010080835404028352916020019161096e565b820191906000526020600020905b81548152906001019060200180831161095157829003601f168201915b5050505050905090565b6000336109868185856118d4565b5060019392505050565b600061099a6119f9565b336000908152610104602052604090205460ff16156109d45760405162461bcd60e51b81526004016109cb906126b6565b60405180910390fd5b6001600160a01b0383166000908152610104602052604090205460ff1615610a0e5760405162461bcd60e51b81526004016109cb9061268c565b6001600160a01b0384166000908152610104602052604090205460ff1615610a6d5760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016109cb565b610a78843384611a3f565b610986848484611ab3565b600033610986818585610a9683836114da565b610aa0919061283d565b6118d4565b610aad611c5e565b610ab5611cb8565b565b610abf6119f9565b610101546001600160a01b03163314610aea5760405162461bcd60e51b81526004016109cb906126ed565b6101035481610af860355490565b610b02919061283d565b1115610b505760405162461bcd60e51b815260206004820152601a60248201527f77696c6c2065786365656420737570706c79206365696c696e6700000000000060448201526064016109cb565b6001600160a01b0382166000908152610104602052604090205460ff1615610b8a5760405162461bcd60e51b81526004016109cb9061268c565b336000908152610104602052604090205460ff1615610bbb5760405162461bcd60e51b81526004016109cb906126b6565b610bc3611d0a565b610bcd8282611e38565b5050565b610bd9611c5e565b610be1611d0a565b60fd81905560405181907f45398c451b1a31b88dbaed4e7b89a632f43cc4b50149d437db03a5300afe40d190600090a250565b610101546000906001600160a01b03163314610c425760405162461bcd60e51b81526004016109cb906126ed565b8160031415610de7576101075460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529087169063095ea7b390604401602060405180830381600087803b158015610c9a57600080fd5b505af1158015610cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd291906124b7565b5060408051610100810182526001600160a01b03888116825287811660208301908152610bb883850190815287831660608501908152426080860190815260a086018b8152600060c0880181815260e08901828152610107549a5163414bf38960e01b81528a518a166004820152975189166024890152955162ffffff166044880152935187166064870152915160848601525160a4850152905160c48401529051831660e483015292939091169063414bf3899061010401602060405180830381600087803b158015610da557600080fd5b505af1158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddd919061261e565b9250610f58915050565b6040805160028082526060820183526000926020830190803683370190505090508681600081518110610e1c57610e1c6128fe565b60200260200101906001600160a01b031690816001600160a01b0316815250508581600181518110610e5057610e506128fe565b6001600160a01b0392831660209182029290920101526101095460405163095ea7b360e01b81529082166004820152602481018790529088169063095ea7b390604401602060405180830381600087803b158015610ead57600080fd5b505af1158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee591906124b7565b5061010954604051635c11d79560e01b81526001600160a01b0390911690635c11d79590610f2090889060009086908a9042906004016127cc565b600060405180830381600087803b158015610f3a57600080fd5b505af1158015610f4e573d6000803e3d6000fd5b5050505060009150505b95945050505050565b610f69611c5e565b6001600160a01b038116610f7c57600080fd5b61010080546001600160a01b0319166001600160a01b0383169081179091556040517f164d8ef0d742b45087644f55c61abeb84557df70d06730591e451f0981e278ca90600090a250565b610fcf611c5e565b6101038190556040518181527fe35be406f69e9d11d6ac8e5b54bbc8b6c4baf2fa2359f84a56baa5ea5d07dc8f906020015b60405180910390a150565b611014611c5e565b610ab56000611ef9565b610101546001600160a01b031633146110495760405162461bcd60e51b81526004016109cb906126ed565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401602060405180830381600087803b15801561109357600080fd5b505af11580156110a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cb91906124b7565b50505050565b6110d9611c5e565b610ab5611f4b565b610100546001600160a01b031633146111505760405162461bcd60e51b815260206004820152602b60248201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6560448201526a1d1a1bd91bdb1bd9da5cdd60aa1b60648201526084016109cb565b805161116490610102906020840190612265565b507fe6be68107100e39cb16d675c1086a4d5479fbd01108d721dabbccaa2249b995f816040516110019190612637565b6060603780546108f5906128ad565b6111ab6119f9565b610101546001600160a01b031633146111d65760405162461bcd60e51b81526004016109cb906126ed565b6001600160a01b0382166000908152610104602052604090205460ff16156112355760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016109cb565b336000908152610104602052604090205460ff16156112665760405162461bcd60e51b81526004016109cb906126b6565b61126e611d0a565b610bcd8282611f88565b6101028054611286906128ad565b80601f01602080910402602001604051908101604052809291908181526020018280546112b2906128ad565b80156112ff5780601f106112d4576101008083540402835291602001916112ff565b820191906000526020600020905b8154815290600101906020018083116112e257829003601f168201915b505050505081565b6000338161131582866114da565b9050838110156113755760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016109cb565b61138282868684036118d4565b506001949350505050565b60006113976119f9565b336000908152610104602052604090205460ff16156113c85760405162461bcd60e51b81526004016109cb906126b6565b6001600160a01b0383166000908152610104602052604090205460ff16156114025760405162461bcd60e51b81526004016109cb9061268c565b61140d338484611ab3565b50600192915050565b61141e611c5e565b6001600160a01b0381166000818152610104602052604090819020805460ff19811660ff9182161590811790925591517f14ddf324cc5d8b14a3c3b12c84b0a7d578d72c8d60655c06d6a457e71431d5ee9261147f92161515815260200190565b60405180910390a250565b611492611c5e565b6001600160a01b0381166114b85760405162461bcd60e51b81526004016109cb90612731565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b600054610100900460ff16158080156115255750600054600160ff909116105b8061153f5750303b15801561153f575060005460ff166001145b6115a25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109cb565b6000805460ff1916600117905580156115c5576000805461ff0019166101001790555b6001600160a01b0389166115d857600080fd5b6115e06120b9565b6115e86120e8565b6115f28c8c612117565b6115fa612148565b60fd8a905560ff80546001600160a01b03199081166001600160a01b038c8116919091179092556101038a90554260fe5561010b805482168a841617905561010c8054821689841617905561010780548216888416179055610108805482168784161790556101098054821686841617905561010a805490911691841691909117905580156116c3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050505050565b6116d9611c5e565b6001600160a01b0381166116ec57600080fd5b60ff80546001600160a01b0319166001600160a01b0383169081179091556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90600090a250565b6001600160a01b03811661175c5760405162461bcd60e51b81526004016109cb90612731565b6097546001600160a01b038281169116146117d45760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b60648201526084016109cb565b6001600160a01b03811633146118525760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e657200000000000060648201526084016109cb565b61185b81611ef9565b50565b611866611c5e565b610ab5611d0a565b611876611c5e565b6001600160a01b03811661188957600080fd5b61010180546001600160a01b0319166001600160a01b0383169081179091556040517f726b590ef91a8c76ad05bbe91a57ef84605276528f49cd47d787f558a4e755b690600090a250565b6001600160a01b0383166119365760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016109cb565b6001600160a01b0382166119975760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016109cb565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60ca5460ff1615610ab55760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109cb565b6000611a4b84846114da565b905060001981146110cb5781811015611aa65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016109cb565b6110cb84848484036118d4565b6001600160a01b038316611b175760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016109cb565b6001600160a01b038216611b795760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016109cb565b6001600160a01b03831660009081526033602052604090205481811015611bf15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016109cb565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c519086815260200190565b60405180910390a36110cb565b6065546001600160a01b03163314610ab55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109cb565b611cc061216f565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006201518060fe5442611d1e9190612896565b611d289190612855565b90506001811061185b576000611d3d60355490565b60fd54909150819060005b84811015611d825768056bc75e2d63100000611d648385612877565b611d6e9190612855565b611d78908461283d565b9250600101611d48565b506000611d8f8484612896565b9050611d9e8562015180612877565b60fe6000828254611daf919061283d565b909155505060ff54611dca906001600160a01b031682611e38565b60ff547f07982395c678b2ffc23fcf59aaec243ca79418c285af0d0e10b4e65bc4189f4c906001600160a01b031642611e0260355490565b604080516001600160a01b0390941684526020840192909252908201526060810183905260800160405180910390a15050505050565b6001600160a01b038216611e8e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016109cb565b8060356000828254611ea0919061283d565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611f536119f9565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611ced3390565b6001600160a01b038216611fe85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016109cb565b6001600160a01b0382166000908152603360205260409020548181101561205c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016109cb565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016119ec565b505050565b600054610100900460ff166120e05760405162461bcd60e51b81526004016109cb90612781565b610ab56121b8565b600054610100900460ff1661210f5760405162461bcd60e51b81526004016109cb90612781565b610ab56121e8565b600054610100900460ff1661213e5760405162461bcd60e51b81526004016109cb90612781565b610bcd828261221b565b600054610100900460ff16610ab55760405162461bcd60e51b81526004016109cb90612781565b60ca5460ff16610ab55760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109cb565b600054610100900460ff166121df5760405162461bcd60e51b81526004016109cb90612781565b610ab533611ef9565b600054610100900460ff1661220f5760405162461bcd60e51b81526004016109cb90612781565b60ca805460ff19169055565b600054610100900460ff166122425760405162461bcd60e51b81526004016109cb90612781565b8151612255906036906020850190612265565b5080516120b49060379060208401905b828054612271906128ad565b90600052602060002090601f01602090048101928261229357600085556122d9565b82601f106122ac57805160ff19168380011785556122d9565b828001600101855582156122d9579182015b828111156122d95782518255916020019190600101906122be565b506122e59291506122e9565b5090565b5b808211156122e557600081556001016122ea565b80356001600160a01b038116811461231557600080fd5b919050565b600082601f83011261232b57600080fd5b813567ffffffffffffffff8082111561234657612346612914565b604051601f8301601f19908116603f0116810190828211818310171561236e5761236e612914565b8160405283815286602085880101111561238757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156123b957600080fd5b6123c2826122fe565b9392505050565b600080604083850312156123dc57600080fd5b6123e5836122fe565b91506123f3602084016122fe565b90509250929050565b60008060006060848603121561241157600080fd5b61241a846122fe565b9250612428602085016122fe565b9150604084013590509250925092565b600080600080600060a0868803121561245057600080fd5b612459866122fe565b9450612467602087016122fe565b93506040860135925061247c606087016122fe565b949793965091946080013592915050565b600080604083850312156124a057600080fd5b6124a9836122fe565b946020939093013593505050565b6000602082840312156124c957600080fd5b815180151581146123c257600080fd5b6000602082840312156124eb57600080fd5b813567ffffffffffffffff81111561250257600080fd5b61250e8482850161231a565b949350505050565b60008060008060008060008060008060006101608c8e03121561253857600080fd5b67ffffffffffffffff808d35111561254f57600080fd5b61255c8e8e358f0161231a565b9b508060208e0135111561256f57600080fd5b506125808d60208e01358e0161231a565b995060408c0135985061259560608d016122fe565b975060808c013596506125aa60a08d016122fe565b95506125b860c08d016122fe565b94506125c660e08d016122fe565b93506125d56101008d016122fe565b92506125e46101208d016122fe565b91506125f36101408d016122fe565b90509295989b509295989b9093969950565b60006020828403121561261757600080fd5b5035919050565b60006020828403121561263057600080fd5b5051919050565b600060208083528351808285015260005b8181101561266457858101830151858201604001528201612648565b81811115612676576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526010908201526f1d1bc81a5cc81c995cdd1c9a58dd195960821b604082015260600190565b60208082526018908201527f6d73672e73656e64657220697320726573747269637465640000000000000000604082015260600190565b60208082526024908201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d69604082015263373a32b960e11b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561281c5784516001600160a01b0316835293830193918301916001016127f7565b50506001600160a01b03969096166060850152505050608001529392505050565b60008219821115612850576128506128e8565b500190565b60008261287257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612891576128916128e8565b500290565b6000828210156128a8576128a86128e8565b500390565b600181811c908216806128c157607f821691505b602082108114156128e257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212206e947f41efe2d8e433a2f1b01865ab81a7bed686014e1969b7f971d1ea38dc7264736f6c63430008070033608060405234801561001057600080fd5b50615b1080620000216000396000f3fe6080604052600436106103a65760003560e01c8063744fbc7a116101e7578063b3951b671161010d578063c8b76e70116100a0578063ddca3f431161006f578063ddca3f4314610ad8578063e267078a14610aee578063e7d015f214610b0e578063f2fde38b14610b2e57600080fd5b8063c8b76e7014610a55578063c8f33c9114610a75578063d153b60c14610a8b578063d90bc21114610aab57600080fd5b8063bf938db8116100dc578063bf938db8146109cf578063c01bc982146109ef578063c6bbd5a714610a1f578063c8599ded14610a3f57600080fd5b8063b3951b671461094f578063b3f006741461096f578063b5ed298a1461098f578063b631e80b146109af57600080fd5b80639932ba4c11610185578063a73e1cbf11610154578063a73e1cbf146108e4578063a8509fd814610904578063a8b54bd414610919578063abdd5f3f1461092f57600080fd5b80639932ba4c146108645780639eeb1d501461089a5780639f8e67bf146108af578063a2ab905d146108cf57600080fd5b80638c88c10c116101c15780638c88c10c146107c05780638da5cb5b146107ed578063914f0cc61461080b578063978bbdb91461083857600080fd5b8063744fbc7a146107765780637ca58c55146107965780638456cb59146107ab57600080fd5b806336aab86c116102cc5780635177942a1161026a578063686f917511610239578063686f91751461070157806368e0d4e114610721578063715018a614610741578063724e78da1461075657600080fd5b80635177942a1461068757806353fd4332146106a75780635c975abb146106bd57806363973fda146106e157600080fd5b80633f4ba83a116102a65780633f4ba83a146106055780633fc8cef31461061a578063465a4c941461063a5780634b3e0b801461065a57600080fd5b806336aab86c146105bb578063372d4c55146105dd5780633c8da588146105f057600080fd5b8063156a5da111610344578063239aad0d11610313578063239aad0d146105395780632b52684d1461056f5780632b9522e0146105855780632fecd589146105a557600080fd5b8063156a5da1146104c3578063184a732f146104e35780631d5f45f5146104f95780631ff015631461051957600080fd5b80630be52713116103805780630be52713146104335780630c02e130146104605780630e3293571461047657806313cb1f83146104a357600080fd5b8063011ced5f146103b257806302e04015146103db57806307546172146103fb57600080fd5b366103ad57005b600080fd5b3480156103be57600080fd5b506103c860d35481565b6040519081526020015b60405180910390f35b3480156103e757600080fd5b506103c86103f6366004615403565b610b4e565b34801561040757600080fd5b5060d85461041b906001600160a01b031681565b6040516001600160a01b0390911681526020016103d2565b34801561043f57600080fd5b506103c861044e366004614ed2565b60e86020526000908152604090205481565b34801561046c57600080fd5b506103c860df5481565b34801561048257600080fd5b506104966104913660046152da565b610c71565b6040516103d291906155d7565b3480156104af57600080fd5b506103c86104be366004615095565b610c9e565b3480156104cf57600080fd5b506103c86104de366004615095565b610df2565b3480156104ef57600080fd5b506103c860d55481565b34801561050557600080fd5b5060ec5461041b906001600160a01b031681565b34801561052557600080fd5b506103c8610534366004615403565b610fd7565b34801561054557600080fd5b5061041b6105543660046153d1565b60e4602052600090815260409020546001600160a01b031681565b34801561057b57600080fd5b506103c860da5481565b34801561059157600080fd5b506103c86105a0366004615403565b611205565b3480156105b157600080fd5b506103c860d45481565b3480156105c757600080fd5b506105db6105d6366004615249565b6117ce565b005b6105db6105eb3660046153d1565b611b14565b3480156105fc57600080fd5b506103c8611fde565b34801561061157600080fd5b506105db612103565b34801561062657600080fd5b5060ef5461041b906001600160a01b031681565b34801561064657600080fd5b506105db610655366004614f0c565b612115565b34801561066657600080fd5b506103c8610675366004614ed2565b60e96020526000908152604090205481565b34801561069357600080fd5b506105db6106a236600461542a565b61239b565b3480156106b357600080fd5b506103c860e35481565b3480156106c957600080fd5b50609e5460ff165b60405190151581526020016103d2565b3480156106ed57600080fd5b5060e05461041b906001600160a01b031681565b34801561070d57600080fd5b506103c861071c366004615054565b6124db565b34801561072d57600080fd5b5060ee5461041b906001600160a01b031681565b34801561074d57600080fd5b506105db6126b3565b34801561076257600080fd5b506105db610771366004614ed2565b6126c5565b34801561078257600080fd5b5060ed5461041b906001600160a01b031681565b3480156107a257600080fd5b506103c861275c565b3480156107b757600080fd5b506105db6129f7565b3480156107cc57600080fd5b506103c86107db366004614ed2565b60e66020526000908152604090205481565b3480156107f957600080fd5b506039546001600160a01b031661041b565b34801561081757600080fd5b506103c8610826366004614ed2565b60e76020526000908152604090205481565b34801561084457600080fd5b5060d2546108529060ff1681565b60405160ff90911681526020016103d2565b34801561087057600080fd5b5061041b61087f3660046153d1565b60e5602052600090815260409020546001600160a01b031681565b3480156108a657600080fd5b50610496612a07565b3480156108bb57600080fd5b5060d75461041b906001600160a01b031681565b3480156108db57600080fd5b506105db612a95565b3480156108f057600080fd5b506105db6108ff3660046152da565b612cee565b34801561091057600080fd5b506103c8612d22565b34801561092557600080fd5b506103c860de5481565b34801561093b57600080fd5b506105db61094a3660046150db565b612e1d565b34801561095b57600080fd5b506103c861096a366004615403565b613239565b34801561097b57600080fd5b5060d65461041b906001600160a01b031681565b34801561099b57600080fd5b506105db6109aa366004614ed2565b613428565b3480156109bb57600080fd5b5060eb5461041b906001600160a01b031681565b3480156109db57600080fd5b506103c86109ea366004614fe3565b613478565b3480156109fb57600080fd5b506106d1610a0a366004614ed2565b60db6020526000908152604090205460ff1681565b348015610a2b57600080fd5b5060f05461041b906001600160a01b031681565b348015610a4b57600080fd5b506103c860e25481565b348015610a6157600080fd5b506103c8610a70366004615403565b61352f565b348015610a8157600080fd5b506103c860e15481565b348015610a9757600080fd5b50606b5461041b906001600160a01b031681565b348015610ab757600080fd5b506103c8610ac6366004614ed2565b60ea6020526000908152604090205481565b348015610ae457600080fd5b506103c860d15481565b348015610afa57600080fd5b506105db610b09366004615110565b613635565b348015610b1a57600080fd5b5060d05461041b906001600160a01b031681565b348015610b3a57600080fd5b506105db610b49366004614ed2565b6138c5565b600080610b59612d22565b9050600060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bab57600080fd5b505afa158015610bbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be391906153ea565b610bf587670de0b6b3a764000061591d565b610bff9190615789565b90506000670de0b6b3a7640000610c16848461591d565b610c209190615789565b60ef549091506001600160a01b0387811691161415610c43579250610c6a915050565b60ef54600090610c5e906001600160a01b0316888489610c9e565b9450610c6a9350505050565b9392505050565b60608282604051602001610c86929190615519565b60405160208183030381529060405290505b92915050565b6000808315610de7578260031415610cc457610cbd8686866001613478565b9050610de7565b6040805160028082526060820183526000926020830190803683370190505090508681600081518110610cf957610cf9615a32565b60200260200101906001600160a01b031690816001600160a01b0316815250508581600181518110610d2d57610d2d615a32565b6001600160a01b03928316602091820292909201015260ed5460405163d06ca61f60e01b8152600092919091169063d06ca61f90610d7190899086906004016156c9565b60006040518083038186803b158015610d8957600080fd5b505afa158015610d9d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dc59190810190615197565b905080600181518110610dda57610dda615a32565b6020026020010151925050505b90505b949350505050565b60008160031415610ea95760f05460405163f7729d4360e01b81526001600160a01b0387811660048301528681166024830152610bb860448301526064820186905260006084830181905292169063f7729d439060a401602060405180830381600087803b158015610e6357600080fd5b505af1925050508015610e93575060408051601f3d908101601f19168201909252610e90918101906153ea565b60015b610e9f57506000610ea2565b90505b9050610dea565b6040805160028082526060820183526000926020830190803683370190505090508581600081518110610ede57610ede615a32565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110610f1257610f12615a32565b6001600160a01b03928316602091820292909201015260ed5460405163d06ca61f60e01b8152600092919091169063d06ca61f90610f5690889086906004016156c9565b60006040518083038186803b158015610f6e57600080fd5b505afa925050508015610fa357506040513d6000823e601f3d908101601f19168201604052610fa09190810190615197565b60015b610faf57506000610fce565b80600181518110610fc257610fc2615a32565b60200260200101519150505b9150610dea9050565b60008060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561102857600080fd5b505afa15801561103c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106091906153ea565b61107286670de0b6b3a764000061591d565b61107c9190615789565b90506000805b60e35481101561119957600081815260e560205260408082205460d05491516370a0823160e01b81526001600160a01b039283166004820152670de0b6b3a764000092909116906370a082319060240160206040518083038186803b1580156110ea57600080fd5b505afa1580156110fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112291906153ea565b61112c908661591d565b6111369190615789565b600083815260e5602090815260408083205460ef546001600160a01b0391821680865260ea90945291842054949550929361117693909116908590610df2565b90506111828185615771565b935050508080611191906159d7565b915050611082565b5060d254600090612710906111b19060ff168461591d565b6111bb9190615789565b90506111c7818361593c565b60ef549092506001600160a01b03878116911614156111ea57509150610c6a9050565b60ef54600090610c5e906001600160a01b0316888589610df2565b60008060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561125657600080fd5b505afa15801561126a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128e91906153ea565b6112a086670de0b6b3a764000061591d565b6112aa9190615789565b60d054604051632770a7eb60e21b8152336004820152602481018890529192506001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156112f757600080fd5b505af115801561130b573d6000803e3d6000fd5b5060009250829150505b60e35481101561142e57600081815260e560205260408082205460d05491516370a0823160e01b81526001600160a01b039283166004820152670de0b6b3a764000092909116906370a082319060240160206040518083038186803b15801561137d57600080fd5b505afa158015611391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b591906153ea565b6113bf908661591d565b6113c99190615789565b600083815260e5602090815260408083205460ef546001600160a01b0391821680865260ea90945291842054949550929361140b9390911690859030906139ed565b90506114178185615771565b935050508080611426906159d7565b915050611315565b5060d254600090612710906114469060ff168461591d565b6114509190615789565b60ef549091506001600160a01b038781169116141561166b5760ef54604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b1580156114af57600080fd5b505af11580156114c3573d6000803e3d6000fd5b5050505060006114db6039546001600160a01b031690565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114611525576040519150601f19603f3d011682016040523d82523d6000602084013e61152a565b606091505b50509050806115545760405162461bcd60e51b815260040161154b906155ea565b60405180910390fd5b600033611561848661593c565b604051600081818185875af1925050503d806000811461159d576040519150601f19603f3d011682016040523d82523d6000602084013e6115a2565b606091505b50509050806115ff5760405162461bcd60e51b815260206004820152602360248201527f7472616e73666572206574682066656520746f207468652075736572206661696044820152621b195960ea1b606482015260840161154b565b6001600160a01b038816337f4f808f68134f8b72b842a276c2b37b03415d4992c65a94fcee50d33201915b998b611636878961593c565b604080519283526020830191909152429082015260600160405180910390a361165f838561593c565b95505050505050610c6a565b60ef54604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b1580156116b157600080fd5b505af11580156116c5573d6000803e3d6000fd5b5050505060006116dd6039546001600160a01b031690565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114611727576040519150601f19603f3d011682016040523d82523d6000602084013e61172c565b606091505b505090508061174d5760405162461bcd60e51b815260040161154b906155ea565b60ef54600090611772906001600160a01b03168961176b868861593c565b338b613ac5565b604080518b815260208101839052428183015290519192506001600160a01b038a169133917f4f808f68134f8b72b842a276c2b37b03415d4992c65a94fcee50d33201915b99919081900360600190a39450610c6a9350505050565b60008481526005602052604090205484906001600160a01b031633146118475760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f6620746865604482015267081c995c5d595cdd60c21b606482015260840161154b565b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a283838360005b8351811015611af3578381815181106118ab576118ab615a32565b602002602001015160e4600083815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060e6600086848151811061190157611901615a32565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555082818151811061193f5761193f615a32565b602002602001015160e9600086848151811061195d5761195d615a32565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555081818151811061199b5761199b615a32565b602002602001015160ea60008684815181106119b9576119b9615a32565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555060e35460001415611ae157838181518110611a0257611a02615a32565b602002602001015160e5600083815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550828181518110611a5357611a53615a32565b602002602001015160e86000868481518110611a7157611a71615a32565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508060e76000868481518110611ab457611ab4615a32565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055505b80611aeb816159d7565b915050611890565b50825160e25560e354611b0657825160e3555b50504260e155505050505050565b60d25460009061271090611b2b9060ff168461591d565b611b359190615789565b90506000611b438284615771565b905080341015611b955760405162461bcd60e51b815260206004820152601a60248201527f6c6f776572207468616e20726571756972656420616d6f756e74000000000000604482015260640161154b565b6000611ba96039546001600160a01b031690565b6001600160a01b031660d15460405160006040518083038185875af1925050503d8060008114611bf5576040519150601f19603f3d011682016040523d82523d6000602084013e611bfa565b606091505b5050905080611c1b5760405162461bcd60e51b815260040161154b906155ea565b60ef60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c6b57600080fd5b505af1158015611c7f573d6000803e3d6000fd5b505060ef5460d05460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018a90529116935063a9059cbb92506044019050602060405180830381600087803b158015611cd557600080fd5b505af1158015611ce9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0d919061522e565b506000611d18612d22565b90508460005b60e354811015611dc15760ef54600082815260e560209081526040808320546001600160a01b0390811680855260e8909352922054611dae93929092169168056bc75e2d6310000090611d71908761591d565b611d7b9190615789565b60d054600086815260e560209081526040808320546001600160a01b03908116845260ea909252909120549116906139ed565b5080611db9816159d7565b915050611d1e565b5060008060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e1357600080fd5b505afa158015611e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4b91906153ea565b1115611ef457828260d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ea157600080fd5b505afa158015611eb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed991906153ea565b611ee3919061591d565b611eed9190615789565b9050611f20565b6000611efe611fde565b9050662386f26fc10000611f12828561591d565b611f1c9190615789565b9150505b60d0546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015611f6c57600080fd5b505af1158015611f80573d6000803e3d6000fd5b505060ef54604080518b815260208101869052428183015290516001600160a01b0390921693503392507f4fee1c514ee0e252e3a0babfa8b5030fb89be7ea2b38df9a7fbbf788e54f3d91919081900360600190a350505050505050565b60008060e060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561202f57600080fd5b505afa158015612043573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120679190615447565b505050915050600060e060009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156120bd57600080fd5b505afa1580156120d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f59190615497565b9050610c6a82826012613ddd565b61210b613e1d565b612113613e77565b565b600654610100900460ff16158080156121355750600654600160ff909116105b8061214f5750303b15801561214f575060065460ff166001145b6121b25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161154b565b6006805460ff1916600117905580156121d5576006805461ff0019166101001790555b6121dd613ec9565b6121e5613ef8565b60d080546001600160a01b038e166001600160a01b03199091161790556122298b600280546001600160a01b039092166001600160a01b0319909216919091179055565b600380546001600160a01b0319166001600160a01b038c1617905560de899055600a61225e670de0b6b3a7640000600161591d565b6122689190615789565b60df5560e080546001600160a01b03199081166001600160a01b038b81169190911790925560ef805482168a841617905560f08054821689841617905560eb8054821688841617905560ec8054821687841617905560ed8054821686841617905560ee805490911691841691909117905560d28054600a60ff199091161790554260d3556040805160608101909152602a808252615a83602083013980516123189160dc91602090910190614c68565b506040518060600160405280602e8152602001615aad602e913980516123469160dd91602090910190614c68565b50801561238d576006805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050505050565b6123a3613e1d565b600060d354426123b3919061593c565b9050600c603c6123c38184615789565b6123cd9190615789565b116124405760405162461bcd60e51b815260206004820152603960248201527f596f752073686f756c642077616974206174206c6561737420313220686f757260448201527f7320616674657220746865206c61746573742075706461746500000000000000606482015260840161154b565b60648260ff1611158015612458575060018260ff1610155b6124c05760405162461bcd60e51b815260206004820152603360248201527f546865206e65774665652073686f756c64206265206265747765656e203120616044820152726e64203130302028302e303125202d2031252960681b606482015260840161154b565b5060d2805460ff191660ff929092169190911790554260d355565b60f05460405163f7729d4360e01b81526001600160a01b0385811660048301528481166024830152610bb860448301526064820184905260006084830181905292839291169063f7729d439060a401602060405180830381600087803b15801561254457600080fd5b505af1925050508015612574575060408051601f3d908101601f19168201909252612571918101906153ea565b60015b61258057506000612583565b90505b60408051600280825260608201835260009260208301908036833701905050905085816000815181106125b8576125b8615a32565b60200260200101906001600160a01b031690816001600160a01b03168152505084816001815181106125ec576125ec615a32565b6001600160a01b03928316602091820292909201015260ed5460405163d06ca61f60e01b8152600092919091169063d06ca61f9061263090889086906004016156c9565b60006040518083038186803b15801561264857600080fd5b505afa92505050801561267d57506040513d6000823e601f3d908101601f1916820160405261267a9190810190615197565b60015b612689575060006126a8565b8060018151811061269c5761269c615a32565b60200260200101519150505b509095945050505050565b6126bb613e1d565b6121136000613f27565b6126cd613e1d565b6001600160a01b03811661273a5760405162461bcd60e51b815260206004820152602e60248201527f49434f3a205072696365206665656420616464726573732063616e6e6f74206260448201526d65207a65726f206164647265737360901b606482015260840161154b565b60e080546001600160a01b0319166001600160a01b0392909216919091179055565b60008061287d60dc805461276f906159a2565b80601f016020809104026020016040519081016040528092919081815260200182805461279b906159a2565b80156127e85780601f106127bd576101008083540402835291602001916127e8565b820191906000526020600020905b8154815290600101906020018083116127cb57829003601f168201915b505050505060dd80546127fa906159a2565b80601f0160208091040260200160405190810160405280929190818152602001828054612826906159a2565b80156128735780601f1061284857610100808354040283529160200191612873565b820191906000526020600020905b81548152906001019060200180831161285657829003601f168201915b5050505050610c71565b9050600061289560de54306336aab86c60e01b613f79565b60408051808201909152600381526219d95d60ea1b60208201529091506128be90829084613f95565b61291660405180604001604052806005815260200164706174683160d81b8152506040518060400160405280600e81526020016d726573756c74732c746f6b656e7360901b81525083613f959092919063ffffffff16565b612974604051806040016040528060058152602001643830ba341960d91b81525060405180604001604052806014815260200173726573756c74732c6d61726b657453686172657360601b81525083613f959092919063ffffffff16565b6129d260405180604001604052806005815260200164706174683360d81b81525060405180604001604052806014815260200173726573756c74732c7377617056657273696f6e7360601b81525083613f959092919063ffffffff16565b6129f06129e76003546001600160a01b031690565b8260df54613fb3565b9250505090565b6129ff613e1d565b612113614046565b60d98054612a14906159a2565b80601f0160208091040260200160405190810160405280929190818152602001828054612a40906159a2565b8015612a8d5780601f10612a6257610100808354040283529160200191612a8d565b820191906000526020600020905b815481529060010190602001808311612a7057829003601f168201915b505050505081565b612a9d613e1d565b60005b60e354811015612b5757600081815260e56020526040908190205460ef5460d05492516370a0823160e01b81526001600160a01b039384166004820152612b4493928316929091169082906370a082319060240160206040518083038186803b158015612b0c57600080fd5b505afa158015612b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7b91906153ea565b5080612b4f816159d7565b915050612aa0565b5060ef5460d0546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a082319060240160206040518083038186803b158015612ba457600080fd5b505afa158015612bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bdc91906153ea565b905060005b60e254811015612ce45760ef54600082815260e460209081526040808320546001600160a01b0390811680855260e9909352922054612c7193929092169168056bc75e2d6310000090612c34908761591d565b612c3e9190615789565b60d054600086815260e460209081526040808320546001600160a01b03908116845260ea909252909120549116906139ed565b50600081815260e460209081526040808320805460e5845282852080546001600160a01b0319166001600160a01b0392831617905581548116855260e984528285205460e8855283862055905416835260e682528083205460e79092529091205580612cdc816159d7565b915050612be1565b505060e25460e355565b612cf6613e1d565b8151612d099060dc906020850190614c68565b508051612d1d9060dd906020840190614c68565b505050565b60008060005b60e354811015612e1757600081815260e560205260408082205460ef5460d05492516370a0823160e01b81526001600160a01b039384166004820152612df593928316929091169082906370a082319060240160206040518083038186803b158015612d9357600080fd5b505afa158015612da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dcb91906153ea565b600086815260e560209081526040808320546001600160a01b0316835260ea909152902054610c9e565b9050612e018184615771565b9250508080612e0f906159d7565b915050612d28565b50919050565b60d25460009061271090612e349060ff168561591d565b612e3e9190615789565b90506000612e4c8285615771565b90506000612e58612d22565b60d0546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018890529192508716906323b872dd90606401602060405180830381600087803b158015612eae57600080fd5b505af1158015612ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ee6919061522e565b50856001600160a01b03166323b872dd33612f096039546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101869052606401602060405180830381600087803b158015612f5857600080fd5b505af1158015612f6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f90919061522e565b5060ef5460d054600091612fb59189916001600160a01b03908116918a9116896139ed565b905060005b60e3548110156130205760ef54600082815260e560209081526040808320546001600160a01b0390811680855260e890935292205461300d93929092169168056bc75e2d6310000090611d71908761591d565b5080613018816159d7565b915050612fba565b5060008060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561307257600080fd5b505afa158015613086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130aa91906153ea565b111561315357828260d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561310057600080fd5b505afa158015613114573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061313891906153ea565b613142919061591d565b61314c9190615789565b905061317f565b600061315d611fde565b9050662386f26fc10000613171828561591d565b61317b9190615789565b9150505b60d0546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156131cb57600080fd5b505af11580156131df573d6000803e3d6000fd5b5050604080518a815260208101859052428183015290516001600160a01b038c1693503392507f4fee1c514ee0e252e3a0babfa8b5030fb89be7ea2b38df9a7fbbf788e54f3d919181900360600190a35050505050505050565b60ef546000906001600160a01b038481169116141561331957600061325c612d22565b9050600060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156132ae57600080fd5b505afa1580156132c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132e691906153ea565b90506000811561330c57826132fb888461591d565b6133059190615789565b905061330f565b50855b9250610c6a915050565b60ef546000906133359085906001600160a01b03168786610c9e565b90506000613341612d22565b9050600060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561339357600080fd5b505afa1580156133a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133cb91906153ea565b9050600081156133f157826133e0858461591d565b6133ea9190615789565b905061341d565b60006133fb611fde565b9050662386f26fc1000061340f828761591d565b6134199190615789565b9150505b9350610c6a92505050565b613430613e1d565b6001600160a01b0381166134565760405162461bcd60e51b815260040161154b9061562e565b606b80546001600160a01b0319166001600160a01b0392909216919091179055565b60ec54604051630b4c774160e11b81526001600160a01b0386811660048301528581166024830152610bb860448301526000928392911690631698ee829060640160206040518083038186803b1580156134d157600080fd5b505afa1580156134e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135099190614eef565b9050600061351682614083565b905061352481868989614105565b979650505050505050565b60ef546000906001600160a01b0384811691161415613619576000613552612d22565b9050600060d060009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156135a457600080fd5b505afa1580156135b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135dc91906153ea565b9050600081156135f157826132fb888461591d565b60006135fb611fde565b9050662386f26fc1000061360f828a61591d565b610c5e9190615789565b60ef546000906133359085906001600160a01b03168786610df2565b61363d613e1d565b82828260005b83518110156138a65783818151811061365e5761365e615a32565b602002602001015160e4600083815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060e660008684815181106136b4576136b4615a32565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508281815181106136f2576136f2615a32565b602002602001015160e9600086848151811061371057613710615a32565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555081818151811061374e5761374e615a32565b602002602001015160ea600086848151811061376c5761376c615a32565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555060e35460001415613894578381815181106137b5576137b5615a32565b602002602001015160e5600083815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082818151811061380657613806615a32565b602002602001015160e8600086848151811061382457613824615a32565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055508060e7600086848151811061386757613867615a32565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055505b8061389e816159d7565b915050613643565b50825160e25560e3546138b957825160e3555b50504260e15550505050565b6001600160a01b0381166138eb5760405162461bcd60e51b815260040161154b9061562e565b606b546001600160a01b038281169116146139635760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b606482015260840161154b565b6001600160a01b03811633146139e15760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e6572000000000000606482015260840161154b565b6139ea81613f27565b50565b6000806139fc87878786610c9e565b905060008115613aa65760d0546040516305f370ed60e41b81526001600160a01b038a8116600483015289811660248301526044820189905287811660648301526084820187905290911690635f370ed09060a401602060405180830381600087803b158015613a6b57600080fd5b505af1158015613a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aa391906153ea565b90505b8360031415613ab8579150613abc9050565b5090505b95945050505050565b60008160031415613c6a5760eb5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529087169063095ea7b390604401602060405180830381600087803b158015613b1e57600080fd5b505af1158015613b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b56919061522e565b5060408051610100810182526001600160a01b03888116825287811660208301908152610bb883850190815287831660608501908152426080860190815260a086018b8152600060c0880181815260e0890182815260eb549a5163414bf38960e01b81528a518a166004820152975189166024890152955162ffffff166044880152935187166064870152915160848601525160a4850152905160c48401529051831660e483015292939091169063414bf3899061010401602060405180830381600087803b158015613c2857600080fd5b505af1158015613c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c6091906153ea565b9250613abc915050565b6040805160028082526060820183526000926020830190803683370190505090508681600081518110613c9f57613c9f615a32565b60200260200101906001600160a01b031690816001600160a01b0316815250508581600181518110613cd357613cd3615a32565b6001600160a01b03928316602091820292909201015260ed5460405163095ea7b360e01b81529082166004820152602481018790529088169063095ea7b390604401602060405180830381600087803b158015613d2f57600080fd5b505af1158015613d43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d67919061522e565b5060ed54604051635c11d79560e01b81526001600160a01b0390911690635c11d79590613da190889060009086908a9042906004016156e2565b600060405180830381600087803b158015613dbb57600080fd5b505af1158015613dcf573d6000803e3d6000fd5b505050506000915050613abc565b60008260ff168260ff161115613e1357613df78383615953565b613e0290600a6157ec565b613e0c9085615898565b9050610c6a565b613df78284615953565b6039546001600160a01b031633146121135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161154b565b613e7f61420f565b609e805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600654610100900460ff16613ef05760405162461bcd60e51b815260040161154b9061567e565b612113614258565b600654610100900460ff16613f1f5760405162461bcd60e51b815260040161154b9061567e565b612113614288565b603980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b613f81614cec565b613f89614cec565b613abc818686866142bb565b6080830151613fa490836142f8565b6080830151612d1d90826142f8565b600454600090613fc4816001615771565b600455835160408086015160808701515191516000936320214ca360e11b93613ffc9386938493923092918a91600191602401615548565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905061403c8683868461430f565b9695505050505050565b61404e61447c565b609e805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613eac3390565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156140bf57600080fd5b505afa1580156140d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140f7919061533d565b509398975050505050505050565b600080614111866144c2565b90506001600160801b036001600160a01b0382161161419757600061413f6001600160a01b0383168061591d565b9050836001600160a01b0316856001600160a01b03161061417757614172600160c01b876001600160801b0316836147e2565b61418f565b61418f81876001600160801b0316600160c01b6147e2565b925050614206565b60006141b66001600160a01b03831680680100000000000000006147e2565b9050836001600160a01b0316856001600160a01b0316106141ee576141e9600160801b876001600160801b0316836147e2565b613524565b61352481876001600160801b0316600160801b6147e2565b50949350505050565b609e5460ff166121135760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161154b565b600654610100900460ff1661427f5760405162461bcd60e51b815260040161154b9061567e565b61211333613f27565b600654610100900460ff166142af5760405162461bcd60e51b815260040161154b9061567e565b609e805460ff19169055565b6142c3614cec565b6142d38560800151610100614895565b50509183526001600160a01b031660208301526001600160e01b031916604082015290565b61430582600383516148fa565b612d1d8282614a07565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f1901815282825280516020918201206000818152600590925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a2600254604051630200057560e51b81526001600160a01b0390911690634000aea0906143d2908890879087906004016155b0565b602060405180830381600087803b1580156143ec57600080fd5b505af1158015614400573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614424919061522e565b610dea5760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b606482015260840161154b565b609e5460ff16156121135760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161154b565b60008060008360020b126144d9578260020b6144e1565b8260020b6000035b9050620d89e8811115614507576040516315e4079d60e11b815260040160405180910390fd5b60006001821661451b57600160801b61452d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615614561576ffff97272373d413259a46990580e213a0260801c5b6004821615614580576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561459f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156145be576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156145dd576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156145fc576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561461b576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561463b576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561465b576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561467b576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561469b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156146bb576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156146db576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156146fb576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561471b576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561473c576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561475c576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561477b576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615614798576b048a170391f7dc42444e8fa20260801c5b60008460020b13156147b95780600019816147b5576147b5615a1c565b0490505b6401000000008106156147cd5760016147d0565b60005b60ff16602082901c0192505050919050565b60008080600019858709858702925082811083820303915050806000141561481c576000841161481157600080fd5b508290049050610c6a565b80841161482857600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6040805180820190915260608152600060208201526148b56020836159f2565b156148dd576148c56020836159f2565b6148d090602061593c565b6148da9083615771565b91505b506020828101829052604080518085526000815290920101905290565b6017816001600160401b0316116149245761491e8360e0600585901b168317614a2e565b50505050565b60ff816001600160401b0316116149605761494a836018611fe0600586901b1617614a2e565b5061491e836001600160401b0383166001614a53565b61ffff816001600160401b03161161499d57614987836019611fe0600586901b1617614a2e565b5061491e836001600160401b0383166002614a53565b63ffffffff816001600160401b0316116149dc576149c683601a611fe0600586901b1617614a2e565b5061491e836001600160401b0383166004614a53565b6149f183601b611fe0600586901b1617614a2e565b5061491e836001600160401b0383166008614a53565b604080518082019091526060815260006020820152610c6a83846000015151848551614a79565b604080518082019091526060815260006020820152610c6a8384600001515184614b63565b604080518082019091526060815260006020820152610dea848560000151518585614bbf565b6040805180820190915260608152600060208201528251821115614a9c57600080fd5b6020850151614aab8386615771565b1115614ade57614ade85614ace87602001518786614ac99190615771565b614c40565b614ad990600261591d565b614c51565b600080865180518760208301019350808887011115614afd5787860182525b505050602084015b60208410614b3d5780518252614b1c602083615771565b9150614b29602082615771565b9050614b3660208561593c565b9350614b05565b51815160001960208690036101000a019081169019919091161790525083949350505050565b60408051808201909152606081526000602082015283602001518310614b9857614b988485602001516002614ad9919061591d565b835180516020858301018481535080851415614bb5576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151614be38584615771565b1115614bf757614bf785614ace8685615771565b60006001614c07846101006157e0565b614c11919061593c565b9050855183868201018583198251161781525080518487011115614c355783860181525b509495945050505050565b600081831115612e17575081610c98565b8151614c5d8383614895565b5061491e8382614a07565b828054614c74906159a2565b90600052602060002090601f016020900481019282614c965760008555614cdc565b82601f10614caf57805160ff1916838001178555614cdc565b82800160010185558215614cdc579182015b82811115614cdc578251825591602001919060010190614cc1565b50614ce8929150614d27565b5090565b6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b5b80821115614ce85760008155600101614d28565b8035614d4781615a5e565b919050565b600082601f830112614d5d57600080fd5b81356020614d72614d6d8361574e565b61571e565b80838252828201915082860187848660051b8901011115614d9257600080fd5b60005b85811015614dba578135614da881615a5e565b84529284019290840190600101614d95565b5090979650505050505050565b600082601f830112614dd857600080fd5b81356020614de8614d6d8361574e565b80838252828201915082860187848660051b8901011115614e0857600080fd5b60005b85811015614dba57813584529284019290840190600101614e0b565b80518015158114614d4757600080fd5b600082601f830112614e4857600080fd5b81356001600160401b03811115614e6157614e61615a48565b614e74601f8201601f191660200161571e565b818152846020838601011115614e8957600080fd5b816020850160208301376000918101602001919091529392505050565b805161ffff81168114614d4757600080fd5b805169ffffffffffffffffffff81168114614d4757600080fd5b600060208284031215614ee457600080fd5b8135610c6a81615a5e565b600060208284031215614f0157600080fd5b8151610c6a81615a5e565b60008060008060008060008060008060006101608c8e031215614f2e57600080fd5b8b35614f3981615a5e565b9a5060208c0135614f4981615a5e565b995060408c0135614f5981615a5e565b985060608c0135975060808c0135614f7081615a5e565b965060a08c0135614f8081615a5e565b955060c08c0135614f9081615a5e565b945060e08c0135614fa081615a5e565b93506101008c0135614fb181615a5e565b92506101208c0135614fc281615a5e565b9150614fd16101408d01614d3c565b90509295989b509295989b9093969950565b60008060008060808587031215614ff957600080fd5b843561500481615a5e565b9350602085013561501481615a5e565b925060408501356001600160801b038116811461503057600080fd5b9150606085013563ffffffff8116811461504957600080fd5b939692955090935050565b60008060006060848603121561506957600080fd5b833561507481615a5e565b9250602084013561508481615a5e565b929592945050506040919091013590565b600080600080608085870312156150ab57600080fd5b84356150b681615a5e565b935060208501356150c681615a5e565b93969395505050506040820135916060013590565b6000806000606084860312156150f057600080fd5b83356150fb81615a5e565b95602085013595506040909401359392505050565b60008060006060848603121561512557600080fd5b83356001600160401b038082111561513c57600080fd5b61514887838801614d4c565b9450602086013591508082111561515e57600080fd5b61516a87838801614dc7565b9350604086013591508082111561518057600080fd5b5061518d86828701614dc7565b9150509250925092565b600060208083850312156151aa57600080fd5b82516001600160401b038111156151c057600080fd5b8301601f810185136151d157600080fd5b80516151df614d6d8261574e565b80828252848201915084840188868560051b87010111156151ff57600080fd5b600094505b83851015615222578051835260019490940193918501918501615204565b50979650505050505050565b60006020828403121561524057600080fd5b610c6a82614e27565b6000806000806080858703121561525f57600080fd5b8435935060208501356001600160401b038082111561527d57600080fd5b61528988838901614d4c565b9450604087013591508082111561529f57600080fd5b6152ab88838901614dc7565b935060608701359150808211156152c157600080fd5b506152ce87828801614dc7565b91505092959194509250565b600080604083850312156152ed57600080fd5b82356001600160401b038082111561530457600080fd5b61531086838701614e37565b9350602085013591508082111561532657600080fd5b5061533385828601614e37565b9150509250929050565b600080600080600080600060e0888a03121561535857600080fd5b875161536381615a5e565b8097505060208801518060020b811461537b57600080fd5b955061538960408901614ea6565b945061539760608901614ea6565b93506153a560808901614ea6565b925060a08801516153b581615a73565b91506153c360c08901614e27565b905092959891949750929550565b6000602082840312156153e357600080fd5b5035919050565b6000602082840312156153fc57600080fd5b5051919050565b60008060006060848603121561541857600080fd5b83359250602084013561508481615a5e565b60006020828403121561543c57600080fd5b8135610c6a81615a73565b600080600080600060a0868803121561545f57600080fd5b61546886614eb8565b945060208601519350604086015192506060860151915061548b60808701614eb8565b90509295509295909350565b6000602082840312156154a957600080fd5b8151610c6a81615a73565b600081518084526020808501945080840160005b83811015614c355781516001600160a01b0316875295820195908201906001016154c8565b60008151808452615505816020860160208601615976565b601f01601f19169290920160200192915050565b6000835161552b818460208801615976565b83519083019061553f818360208801615976565b01949350505050565b6001600160a01b0389811682526020820189905260408201889052861660608201526001600160e01b03198516608082015260a0810184905260c0810183905261010060e082018190526000906155a1838201856154ed565b9b9a5050505050505050505050565b60018060a01b0384168152826020820152606060408201526000613abc60608301846154ed565b602081526000610c6a60208301846154ed565b60208082526024908201527f7472616e73666572206574682066656520746f20746865206f776e65722066616040820152631a5b195960e21b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b828152604060208201526000610dea60408301846154b4565b85815284602082015260a06040820152600061570160a08301866154b4565b6001600160a01b0394909416606083015250608001529392505050565b604051601f8201601f191681016001600160401b038111828210171561574657615746615a48565b604052919050565b60006001600160401b0382111561576757615767615a48565b5060051b60200190565b6000821982111561578457615784615a06565b500190565b60008261579857615798615a1c565b500490565b600181815b808511156157d85781600019048211156157be576157be615a06565b808516156157cb57918102915b93841c93908002906157a2565b509250929050565b6000610c6a83836157f7565b6000610c6a60ff8416835b60008261580657506001610c98565b8161581357506000610c98565b816001811461582957600281146158335761584f565b6001915050610c98565b60ff84111561584457615844615a06565b50506001821b610c98565b5060208310610133831016604e8410600b8410161715615872575081810a610c98565b61587c838361579d565b806000190482111561589057615890615a06565b029392505050565b60006001600160ff1b03818413828413808216868404861116156158be576158be615a06565b600160ff1b60008712828116878305891216156158dd576158dd615a06565b600087129250878205871284841616156158f9576158f9615a06565b8785058712818416161561590f5761590f615a06565b505050929093029392505050565b600081600019048311821515161561593757615937615a06565b500290565b60008282101561594e5761594e615a06565b500390565b600060ff821660ff84168082101561596d5761596d615a06565b90039392505050565b60005b83811015615991578181015183820152602001615979565b8381111561491e5750506000910152565b600181811c908216806159b657607f821691505b60208210811415612e1757634e487b7160e01b600052602260045260246000fd5b60006000198214156159eb576159eb615a06565b5060010190565b600082615a0157615a01615a1c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146139ea57600080fd5b60ff811681146139ea57600080fdfe68747470733a2f2f6170702e6e65786c6162732e696f2f6170692f616c6c46756e64696e6752617465733f6d756c7469706c7946756e633d31382674696d65734e656746756e643d74727565266172726179733d74727565a2646970667358221220bbb2d9073d9da94496d7a0fff0b97de5556d2105acbc0faa3b71f1c9a92bc7af64736f6c634300080700336080604052600080546001600160a01b0319908116736b175474e89094c44da98b954eedeac495271d0f179091556001805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217905534801561005857600080fd5b50610491806100686000396000f3fe6080604052600436106100745760003560e01c8063b6b55f251161004e578063b6b55f251461010c578063c31c9c071461012e578063e0bab4c414610156578063f4b9fa751461017e57600080fd5b80633fc8cef3146100805780634aa4a4fc146100bc57806389a30271146100e457600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100a073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b3480156100f057600080fd5b506100a073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b34801561011857600080fd5b5061012c610127366004610429565b61019e565b005b34801561013a57600080fd5b506100a073e592427a0aece92de3edee1f18e0157c0586156481565b34801561016257600080fd5b506100a0736b175474e89094c44da98b954eedeac495271d0f81565b34801561018a57600080fd5b506000546100a0906001600160a01b031681565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156101f057600080fd5b505af1158015610204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102289190610400565b5060005460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018390526001600160a01b039091169063095ea7b390604401602060405180830381600087803b15801561028957600080fd5b505af115801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c19190610400565b506040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260208201908152610bb88284019081523060608401908152426080850190815260a08501878152600060c0870181815260e08801918252975163414bf38960e01b815287516001600160a01b039081166004830152965187166024820152945162ffffff166044860152925185166064850152905160848401525160a4830152935160c482015292511660e48301529073e592427a0aece92de3edee1f18e0157c058615649063414bf3899061010401602060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610442565b505050565b60006020828403121561041257600080fd5b8151801515811461042257600080fd5b9392505050565b60006020828403121561043b57600080fd5b5035919050565b60006020828403121561045457600080fd5b505191905056fea2646970667358221220cdfdbb85b0b5b2f99d71752f093bf76aa8fb6f8adfd64ed51dc864dcdd3e26a664736f6c634300080700330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000006b175474e89094c44da98b954eedeac495271d0f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122076f6d108ac4d22c47cc85dba89bd0d4527d717cc2c134b31ed7dcb1d8c54cf5e64736f6c63430008070033",
    "sourceMap": "861:17534:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12257:2192;;;:::i;:::-;;4833:1585;;;:::i;6426:475::-;;;:::i;2732:95:78:-;;2785:42;2732:95;;;;;-1:-1:-1;;;;;8461:32:82;;;8443:51;;8431:2;8416:18;2732:95:78;;;;;;;;3823:1871;;;:::i;:::-;;;;-1:-1:-1;;;;;21154:15:82;;;21136:34;;21206:15;;;21201:2;21186:18;;21179:43;21258:15;;;21238:18;;;21231:43;;;;21310:15;;;21305:2;21290:18;;21283:43;21363:15;;21357:3;21342:19;;21335:44;21416:15;;;21116:3;21395:19;;21388:44;21085:3;21070:19;3823:1871:78;20664:774:82;3396:73:78;;3427:42;3396:73;;6003:1687;;;;;;:::i;:::-;;:::i;2015:116::-;;2088:42;2015:116;;2531:136:35;;;:::i;:::-;;;;;;;:::i;15798:1384:80:-;;;:::i;3463:153:35:-;;;:::i;:::-;;;;;;;:::i;2488:73:78:-;;2519:42;2488:73;;2407:74;;2439:42;2407:74;;2834:73;;2865:42;2834:73;;7397:2288:80;;;:::i;3315:74:78:-;;3347:42;3315:74;;3146:115:80;;;;;;:::i;:::-;;:::i;:::-;;;22294:25:82;;;22282:2;22267:18;3146:115:80;22140:185:82;3320:135:35;;;:::i;3013:143::-;;;:::i;4063:17:80:-;;;;;-1:-1:-1;;;;;4063:17:80;;;1254:74:78;;-1:-1:-1;;;;;;;;;;;1254:74:78;;3076:73;;3107:42;3076:73;;3476:72;;3506:42;3476:72;;2914;;2944:42;2914:72;;3156;;3186:42;3156:72;;3270:96:80;;;;;;:::i;:::-;;:::i;10506:1741::-;;;:::i;2825:180:35:-;;;:::i;:::-;;;;;;;:::i;1074:24:80:-;;;;;-1:-1:-1;;;;;1074:24:80;;;109:49921:24;;;:::i;:::-;;;;;;;:::i;5702:293:78:-;;;:::i;4270:27:80:-;;;;;-1:-1:-1;;;;;4270:27:80;;;2675:142:35;;;:::i;:::-;;;;;;;:::i;9699:797:80:-;;;:::i;1335:75:78:-;;1368:42;1335:75;;3164:148:35;;;:::i;6981:410:80:-;;;:::i;3027:110::-;;;;;;:::i;:::-;;:::i;1105:38::-;;;;;-1:-1:-1;;;;;1105:38:80;;;2993:74:78;;3025:42;2993:74;;2228:143:35;;;:::i;1865:600:29:-;;;:::i;:::-;;;17663:14:82;;17656:22;17638:41;;17626:2;17611:18;1865:600:29;17498:187:82;2138:105:78;;2200:42;2138:105;;2652:73;;2683:42;2652:73;;1040:27:80;;;;;-1:-1:-1;;;;;1040:27:80;;;4115:21;;;;;-1:-1:-1;;;;;4115:21:80;;;1590:81:78;;1629:42;1590:81;;2568:77;;2603:42;2568:77;;1678:78;;1714:42;1678:78;;3235:73;;3266:42;3235:73;;1765:72;;-1:-1:-1;;;;;;;;;;;1765:72:78;;17192:1184:80;;;:::i;2379:144:35:-;;;:::i;2256:64:78:-;;;;;-1:-1:-1;;;;;2256:64:78;;;2327:73;;2358:42;2327:73;;1005:28:80;;;;;-1:-1:-1;;;;;1005:28:80;;;4040:16;;;;;-1:-1:-1;;;;;4040:16:80;;;1609:26:29;;;;;;;;;12257:2192:80;12359:4;;:27;;;-1:-1:-1;;;12359:27:80;;;;12334:4;;-1:-1:-1;;;;;12359:4:80;;:12;;12378:5;;12359:27;;;;;12315:16;;12359:27;;;;;;;;12378:5;12359:4;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12397:49:80;;-1:-1:-1;;;12397:49:80;;-1:-1:-1;;;;;;;;;;;1286:42:78;-1:-1:-1;12397:21:80;;-1:-1:-1;12397:49:80;;-1:-1:-1;2200:42:78;;12440:5:80;;12397:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12469:7:80;;:47;;-1:-1:-1;;;12469:47:80;;-1:-1:-1;;;;;;;;;;;12469:47:80;;;9855:34:82;-1:-1:-1;;;;;;;;;;;9905:18:82;;;9898:43;12507:5:80;9957:18:82;;;9950:34;12514:1:80;10000:18:82;;;9993:34;12457:60:80;;-1:-1:-1;;;;;12469:7:80;;:25;;9789:19:82;;12469:47:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12457:11;:60::i;:::-;12579:545;;;;;;;;-1:-1:-1;;;;;;;;;;;12579:545:80;;-1:-1:-1;;;;;;;;;;;12579:545:80;;;;12731:4;12579:545;;;;12769:4;12579:545;;;;12799:15;12579:545;;;;12839:5;12579:545;;;;12528:48;12579:545;;;;;;;;;;;;13157:35;;-1:-1:-1;;;13157:35:80;;12579:545;;12528:48;2200:42:78;;13157:27:80;;:35;;12579:545;;13157:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:65;;;;;;;;;;;-1:-1:-1;;;13203:65:80;;;;13231:36;;-1:-1:-1;;;13231:36:80;;13261:4;13231:36;;;8443:51:82;13135:57:80;;-1:-1:-1;13203:65:80;;-1:-1:-1;;;;;;;;;;;1795:42:78;13231:21:80;;8416:18:82;;13231:36:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:11;:65::i;:::-;13279:18;:16;:18::i;:::-;13318:7;;13339:5;;;13318:27;;-1:-1:-1;;;13318:27:80;;-1:-1:-1;;;;;13339:5:80;;;13318:27;;;8443:51:82;13318:7:80;;;:20;;8416:18:82;13318:27:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13370:5:80;;;13356:20;;-1:-1:-1;;;13356:20:80;;-1:-1:-1;;;;;13370:5:80;;;13356:20;;;8443:51:82;-1:-1:-1;;;;;;;;;;;13356:13:80;-1:-1:-1;13356:13:80;;-1:-1:-1;8416:18:82;13356:20:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13387:7:80;;13413:5;;;13387:32;;-1:-1:-1;;;13387:32:80;;-1:-1:-1;;;;;13413:5:80;;;13387:32;;;8443:51:82;13387:7:80;;;-1:-1:-1;13387:25:80;;-1:-1:-1;8416:18:82;13387:32:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;317:37:30;;-1:-1:-1;;;;;13430:12:80;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13519:4:80;;13498:35;;-1:-1:-1;;;13498:35:80;;-1:-1:-1;;;;;;;;;;;1795:42:78;-1:-1:-1;13498:20:80;;-1:-1:-1;13498:35:80;;-1:-1:-1;;;;;13519:4:80;;13525:7;;13498:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13558:4:80;;13544:19;;-1:-1:-1;;;13544:19:80;;-1:-1:-1;;;;;13558:4:80;;;13544:19;;;8443:51:82;-1:-1:-1;;;;;;;;;;;13544:13:80;;;8416:18:82;;13544:19:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13574:63:80;;;;;;;;;;;-1:-1:-1;;;13574:63:80;;;;13627:7;;13595:41;;-1:-1:-1;;;13595:41:80;;-1:-1:-1;;;;;13627:7:80;;;13595:41;;;8443:51:82;13574:63:80;;-1:-1:-1;13574:63:80;-1:-1:-1;2439:42:78;;13595:23:80;;8416:18:82;;13595:41:80;8297:203:82;13574:63:80;13686:7;;13658:46;;-1:-1:-1;;;13658:46:80;;-1:-1:-1;;;;;;;;;;;1795:42:78;13658:19:80;;:46;;-1:-1:-1;;;;;13686:7:80;;13696;;13658:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13715:85:80;;;;;;;;;;;-1:-1:-1;;;13715:85:80;;;;13753:7;;:46;;-1:-1:-1;;;13753:46:80;;13715:85;;-1:-1:-1;;;;;13753:7:80;;:29;;:46;;13783:7;;-1:-1:-1;;;;;;;;;;;1795:42:78;13797:1:80;;13753:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13715:85;13811:7;;:53;;-1:-1:-1;;;13811:53:80;;-1:-1:-1;;;;;13811:7:80;;;;:27;;:53;;-1:-1:-1;;;;;;;;;;;1795:42:78;13853:7:80;;13862:1;;13811:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13875:71:80;;;;;;;;;;;-1:-1:-1;;;13875:71:80;;;;13910:10;;13939:4;;13910:35;;-1:-1:-1;;;13910:35:80;;-1:-1:-1;;;;;13939:4:80;;;13910:35;;;8443:51:82;13875:71:80;;-1:-1:-1;13875:71:80;;-1:-1:-1;13910:10:80;;;;;:20;;8416:18:82;;13910:35:80;8297:203:82;13875:71:80;13957:61;;;;;;;;;;;-1:-1:-1;;;13957:61:80;;;;;;;;13988:7;;:29;;-1:-1:-1;;;13988:29:80;;;;13957:61;;-1:-1:-1;;;;;13988:7:80;;;;:27;;:29;;;;;;;;;;;:7;:29;;;;;;;;;;13957:61;14029:117;;;;;;;;;;;;;;;;14069:7;;14101:10;;14130:4;;14101:35;;-1:-1:-1;;;14101:35:80;;-1:-1:-1;;;;;14130:4:80;;;14101:35;;;8443:51:82;14029:117:80;;14069:7;;;;:31;;14101:10;;:20;;8416:18:82;;14101:35:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;14143:1:80;14069:76;;;;;;;;;;;;;;;;;:::i;14029:117::-;14157:65;;;;;;;;;;;-1:-1:-1;;;14157:65:80;;;;14216:4;;14194:27;;-1:-1:-1;;;14194:27:80;;-1:-1:-1;;;;;14216:4:80;;;14194:27;;;8443:51:82;14157:65:80;;-1:-1:-1;;;;;;;;;;;1795:42:78;14194:21:80;;8416:18:82;;14194:27:80;8297:203:82;14157:65:80;14249:7;;14268:10;;14297:4;;14268:35;;-1:-1:-1;;;14268:35:80;;-1:-1:-1;;;;;14297:4:80;;;14268:35;;;8443:51:82;14233:13:80;;14249:7;;;:18;;14268:10;;:20;;8416:18:82;;14268:35:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;14319:1:80;14249:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14233:88;;14332:33;;;;;;;;;;;;;;-1:-1:-1;;;14332:33:80;;;14356:8;14332:11;:33::i;:::-;14376:65;;;;;;;;;;;-1:-1:-1;;;14376:65:80;;;;14435:4;;14413:27;;-1:-1:-1;;;14413:27:80;;-1:-1:-1;;;;;14435:4:80;;;14413:27;;;8443:51:82;14376:65:80;;-1:-1:-1;;;;;;;;;;;1795:42:78;14413:21:80;;8416:18:82;;14413:27:80;8297:203:82;14376:65:80;12304:2145;;;;12257:2192::o;4833:1585::-;4882:30;;-1:-1:-1;;;4882:30:80;;-1:-1:-1;;;;;;;;;;;4882:13:80;;;:30;;4896:15;;4882:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4868:11;:44;;;4923:26;;-1:-1:-1;;;4923:26:80;;;;;22294:25:82;;;;-1:-1:-1;;;;;;;;;;;4923:13:80;;;22267:18:82;;4923:26:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5024:17;:15;:17::i;:::-;5012:8;4960:81;;-1:-1:-1;;;;;;4960:81:80;;;-1:-1:-1;;;;;4960:81:80;;;;;;;5003:7;4960:81;;;;;;;;;;;;;;4987:14;4960:81;;;;;;;;;;;;;;4975:10;4960:81;;;;;;;;;;;;;;4967:6;4960:81;;;;;;;;;;;;;;4961:4;4960:81;;;;;;;;;;;;;;5052:3;:16;;-1:-1:-1;;;;;;;;;;;5052:16:80;;;;;;5079:4;:19;;-1:-1:-1;;;;;;;;;;;5079:19:80;;;;;;5109:6;:24;;1368:42:78;5109:24:80;;;;;;;;4833:1585::o;6426:475::-;6513:10;;:18;;;-1:-1:-1;;;6513:18:80;;;;6504:43;;-1:-1:-1;;;;;6513:10:80;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6541:4;6504:8;:43::i;:::-;6567:10;;:32;;;-1:-1:-1;;;6567:32:80;;;;6558:48;;-1:-1:-1;;;;;6567:10:80;;:30;;:32;;;;;;;;;;;;;;:10;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6601:4;6558:8;:48::i;:::-;6626:10;;:25;;;-1:-1:-1;;;6626:25:80;;;;6617:52;;-1:-1:-1;;;;;6626:10:80;;:23;;:25;;;;;;;;;;;;;;:10;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6653:15;6617:8;:52::i;:::-;6689:10;;:24;;;-1:-1:-1;;;6689:24:80;;;;6680:47;;-1:-1:-1;;;;;6689:10:80;;:22;;:24;;;;;;;;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6715:11;;-1:-1:-1;;;;;6715:11:80;6680:8;:47::i;:::-;6747:10;;:24;;;-1:-1:-1;;;6747:24:80;;;;6738:38;;-1:-1:-1;;;;;6747:10:80;;:22;;:24;;;;;:10;;:24;;;;;;;:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6747:24:80;;;;;;;;;;;;:::i;:::-;6738:38;;;;;;;;;;;;:8;:38::i;:::-;6796:10;;:26;;;-1:-1:-1;;;6796:26:80;;;;6787:48;;-1:-1:-1;;;;;6796:10:80;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6824:10;6787:8;:48::i;:::-;6855:10;;:19;;;-1:-1:-1;;;6855:19:80;;;;6846:47;;-1:-1:-1;;;;;6855:10:80;;:17;;:19;;;;;;;;;;;;;;:10;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6884:7;;-1:-1:-1;;;;;6884:7:80;6846:8;:47::i;:::-;6426:475::o;3823:1871:78:-;3875:9;3895:13;3919:10;3940:16;3967:12;3990:8;4017:14;4034:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4017:32;;4060:20;4109:4;4083:32;;;;;:::i;:::-;-1:-1:-1;;;;;8461:32:82;;;8443:51;;8431:2;8416:18;4083:32:78;;;;;;;;;;;;;;;;;;;;;;;4060:55;;4128:31;4197:2;4225:7;4162:98;;;;;:::i;:::-;23164:4:82;23152:17;;;23134:36;;23201:2;23186:18;;23179:34;23122:2;23107:18;4162:98:78;;;;;;;;;;;;;;;;;;;;;;;4128:132;;4273:21;4297:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4431:11:78;;4324:327;;-1:-1:-1;;;4324:327:78;;4273:40;;-1:-1:-1;;;;;;4324:21:78;;;;;;:327;;4412:4;;4431:11;;;4457:10;;-1:-1:-1;;;;;;;;;;;1286:42:78;1368;;1456;;1541;;1629;;1714;;4324:327;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4706:20;4729:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4920:5:78;;4758:389;;-1:-1:-1;;;4758:389:78;;-1:-1:-1;;;;;9005:15:82;;;4758:389:78;;;8987:34:82;9057:15;;;9037:18;;;9030:43;9109:15;;;9089:18;;;9082:43;9141:18;;;9134:34;;;;9205:15;;;9184:19;;;9177:44;-1:-1:-1;;;;;;;;;;;9237:19:82;;;9230:44;1368:42:78;9290:19:82;;;9283:44;1456:42:78;9343:19:82;;;9336:44;1541:42:78;9396:19:82;;;9389:44;1629:42:78;9449:19:82;;;9442:44;1714:42:78;9502:19:82;;;9495:45;4706:41:78;;-1:-1:-1;4758:18:78;;;;;8921:19:82;;4758:389:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5160:38:78;;-1:-1:-1;;;5160:38:78;;-1:-1:-1;;;;;8461:32:82;;;5160:38:78;;;8443:51:82;5160:20:78;;;-1:-1:-1;5160:20:78;;-1:-1:-1;8416:18:82;;5160:38:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5345:17;5365:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5549:4:78;;5568:6;;-1:-1:-1;5589:10:78;;-1:-1:-1;5614:14:78;;-1:-1:-1;5589:10:78;;-1:-1:-1;5549:4:78;;-1:-1:-1;3823:1871:78;-1:-1:-1;;3823:1871:78:o;6003:1687::-;6065:7;7316:29;7348:8;7316:40;;7367:24;7491:16;7485:23;7478:4;7460:16;7456:27;7453:1;7446:63;7426:83;6003:1687;-1:-1:-1;;;;6003:1687:78:o;2531:136:35:-;2578:33;2643:16;2624:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2624:35:35;;;;;;;;;;;;;;;;;;;;;;;2531:136;:::o;15798:1384:80:-;15855:86;;-1:-1:-1;;;15855:86:80;;-1:-1:-1;;;;;;;;;;;15855:86:80;;;10774:34:82;3107:42:78;10824:18:82;;;10817:43;15926:4:80;10876:18:82;;;10869:49;15840:12:80;;2088:42:78;;15855:17:80;;10709:18:82;;15855:86:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15840:101;;15966:20;16001:10;16026:23;16064:29;16108:33;16156:17;16188:13;16230:4;-1:-1:-1;;;;;16215:26:80;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15951:292;;;;;;;;;;;;;;16254:25;16266:12;-1:-1:-1;;;;;16254:25:80;:11;:25::i;:::-;16302:7;;:42;;-1:-1:-1;;;16302:42:80;;-1:-1:-1;;;;;;;;;;;16302:42:80;;;9855:34:82;3107:42:78;9905:18:82;;;9898:43;16336:4:80;9957:18:82;;;9950:34;16342:1:80;10000:18:82;;;9993:34;16290:55:80;;-1:-1:-1;;;;;16302:7:80;;:20;;9789:19:82;;16302:42:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16290:55;16374:4;;;;;;;;;-1:-1:-1;;;;;16374:4:80;-1:-1:-1;;;;;16374:12:80;;16393:4;16374:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16411:48:80;;-1:-1:-1;;;16411:48:80;;-1:-1:-1;;;;;;;;;;;1286:42:78;-1:-1:-1;16411:21:80;;-1:-1:-1;16411:48:80;;-1:-1:-1;2200:42:78;;16454:4:80;;16411:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16521:545:80;;;;;;;;-1:-1:-1;;;;;;;;;;;16521:545:80;;3107:42:78;16521:545:80;;;;16674:4;16521:545;;;;16712:4;16521:545;;;;16742:15;16521:545;;;;16782:4;16521:545;;;;16470:48;16521:545;;;;;;;;;;;;17099:35;;-1:-1:-1;;;17099:35:80;;16521:545;;16470:48;2200:42:78;;17099:27:80;;:35;;16521:545;;17099:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17077:57;;17145:27;17157:14;17145:11;:27::i;:::-;15829:1353;;;;;;;;;;15798:1384::o;3463:153:35:-;3512:42;3589:19;3567:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3567:41:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3463:153;:::o;7397:2288:80:-;7441:18;:16;:18::i;:::-;7502:7;;:21;;-1:-1:-1;;;7502:21:80;;:7;:21;;;22294:25:82;7493:45:80;;-1:-1:-1;;;;;7502:7:80;;:18;;22267::82;;7502:21:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7525:9;7535:1;7525:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7525:12:80;7493:8;:45::i;:::-;7558:7;;:21;;-1:-1:-1;;;7558:21:80;;:7;:21;;;22294:25:82;7549:45:80;;-1:-1:-1;;;;;7558:7:80;;:18;;22267::82;;7558:21:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7581:9;7591:1;7581:12;;;;;;;;:::i;7549:45::-;7614:7;;:21;;-1:-1:-1;;;7614:21:80;;7633:1;7614:21;;;22294:25:82;7605:45:80;;-1:-1:-1;;;;;7614:7:80;;:18;;22267::82;;7614:21:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7637:9;7647:1;7637:12;;;;;;;;:::i;7605:45::-;7670:7;;:21;;-1:-1:-1;;;7670:21:80;;7689:1;7670:21;;;22294:25:82;7661:45:80;;-1:-1:-1;;;;;7670:7:80;;:18;;22267::82;;7670:21:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7693:9;7703:1;7693:12;;;;;;;;:::i;7661:45::-;7726:7;;:21;;-1:-1:-1;;;7726:21:80;;7745:1;7726:21;;;22294:25:82;7717:45:80;;-1:-1:-1;;;;;7726:7:80;;:18;;22267::82;;7726:21:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7749:9;7759:1;7749:12;;;;;;;;:::i;7717:45::-;8102:7;;8133:9;:12;;8093:70;;-1:-1:-1;;;;;8102:7:80;;:30;;:7;;8133:12;;;;:::i;:::-;;;;;;;;;;;8102:44;;;;;;-1:-1:-1;;;;;;8102:44:80;;;-1:-1:-1;;;;;8133:12:80;;;8102:44;;;8443:51:82;8416:18;;8102:44:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8148:11;8160:1;8148:14;;;;;;;;:::i;:::-;;;;;;;;;8093:8;:70::i;:::-;8183:7;;8214:9;:12;;8174:70;;-1:-1:-1;;;;;8183:7:80;;:30;;:7;;8214:12;;;;;;:::i;:::-;;;;;;;;;;;8183:44;;;;;;-1:-1:-1;;;;;;8183:44:80;;;-1:-1:-1;;;;;8214:12:80;;;8183:44;;;8443:51:82;8416:18;;8183:44:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8229:11;8241:1;8229:14;;;;;;;;:::i;8174:70::-;8264:7;;8295:9;:12;;8255:70;;-1:-1:-1;;;;;8264:7:80;;:30;;8305:1;;8295:12;;;;;;:::i;:::-;;;;;;;;;;;8264:44;;;;;;-1:-1:-1;;;;;;8264:44:80;;;-1:-1:-1;;;;;8295:12:80;;;8264:44;;;8443:51:82;8416:18;;8264:44:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8310:11;8322:1;8310:14;;;;;;;;:::i;8255:70::-;8345:7;;8376:9;:12;;8336:70;;-1:-1:-1;;;;;8345:7:80;;:30;;8386:1;;8376:12;;;;;;:::i;:::-;;;;;;;;;;;8345:44;;;;;;-1:-1:-1;;;;;;8345:44:80;;;-1:-1:-1;;;;;8376:12:80;;;8345:44;;;8443:51:82;8416:18;;8345:44:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8391:11;8403:1;8391:14;;;;;;;;:::i;8336:70::-;8426:7;;8457:9;:12;;8417:70;;-1:-1:-1;;;;;8426:7:80;;:30;;8467:1;;8457:12;;;;;;:::i;:::-;;;;;;;;;;;8426:44;;;;;;-1:-1:-1;;;;;;8426:44:80;;;-1:-1:-1;;;;;8457:12:80;;;8426:44;;;8443:51:82;8416:18;;8426:44:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8472:11;8484:1;8472:14;;;;;;;;:::i;8417:70::-;8922:7;;8947:9;:12;;8913:65;;-1:-1:-1;;;;;8922:7:80;;:24;;:7;;8947:12;;;;:::i;:::-;;;;;;;;;;;8922:38;;;;;;-1:-1:-1;;;;;;8922:38:80;;;-1:-1:-1;;;;;8947:12:80;;;8922:38;;;8443:51:82;8416:18;;8922:38:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8962:12;8975:1;8962:15;;;;;;;;:::i;8913:65::-;8998:7;;9023:9;:12;;8989:65;;-1:-1:-1;;;;;8998:7:80;;:24;;:7;;9023:12;;;;;;:::i;:::-;;;;;;;;;;;8998:38;;;;;;-1:-1:-1;;;;;;8998:38:80;;;-1:-1:-1;;;;;9023:12:80;;;8998:38;;;8443:51:82;8416:18;;8998:38:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9038:12;9051:1;9038:15;;;;;;;;:::i;8989:65::-;9074:7;;9099:9;:12;;9065:65;;-1:-1:-1;;;;;9074:7:80;;:24;;9109:1;;9099:12;;;;;;:::i;:::-;;;;;;;;;;;9074:38;;;;;;-1:-1:-1;;;;;;9074:38:80;;;-1:-1:-1;;;;;9099:12:80;;;9074:38;;;8443:51:82;8416:18;;9074:38:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9114:12;9127:1;9114:15;;;;;;;;:::i;9065:65::-;9150:7;;9175:9;:12;;9141:65;;-1:-1:-1;;;;;9150:7:80;;:24;;9185:1;;9175:12;;;;;;:::i;:::-;;;;;;;;;;;9150:38;;;;;;-1:-1:-1;;;;;;9150:38:80;;;-1:-1:-1;;;;;9175:12:80;;;9150:38;;;8443:51:82;8416:18;;9150:38:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9190:12;9203:1;9190:15;;;;;;;;:::i;9141:65::-;9226:7;;9251:9;:12;;9217:65;;-1:-1:-1;;;;;9226:7:80;;:24;;9261:1;;9251:12;;;;;;:::i;:::-;;;;;;;;;;;9226:38;;;;;;-1:-1:-1;;;;;;9226:38:80;;;-1:-1:-1;;;;;9251:12:80;;;9226:38;;;8443:51:82;8416:18;;9226:38:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9266:12;9279:1;9266:15;;;;;;;;:::i;3146:115::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3146:115:80;:::o;3320:135:35:-;3366:33;3431:16;3412:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3412:35:35;;;;;;;;;;;;;;;;;;;;;;3320:135;:::o;3013:143::-;3061:35;3130:18;3109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3109:39:35;;;;;;;;;;;;;;;;;;;;;;3013:143;:::o;3270:96:80:-;;;;;;;;;;;;10506:1741;10602:4;;:27;;;-1:-1:-1;;;10602:27:80;;;;10577:4;;-1:-1:-1;;;;;10602:4:80;;:12;;10621:5;;10602:27;;;;;10558:16;;10602:27;;;;;;;;10621:5;10602:4;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10640:49:80;;-1:-1:-1;;;10640:49:80;;-1:-1:-1;;;;;;;;;;;1286:42:78;-1:-1:-1;10640:21:80;;-1:-1:-1;10640:49:80;;-1:-1:-1;2200:42:78;;10683:5:80;;10640:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10751:545:80;;;;;;;;-1:-1:-1;;;;;;;;;;;10751:545:80;;-1:-1:-1;;;;;;;;;;;10751:545:80;;;;10903:4;10751:545;;;;10941:4;10751:545;;;;10971:15;10751:545;;;;11011:5;10751:545;;;;10700:48;10751:545;;;;;;;;;;;;11329:35;;-1:-1:-1;;;11329:35:80;;10751:545;;10700:48;2200:42:78;;11329:27:80;;:35;;10751:545;;11329:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11375:65;;;;;;;;;;;-1:-1:-1;;;11375:65:80;;;;11403:36;;-1:-1:-1;;;11403:36:80;;11433:4;11403:36;;;8443:51:82;11307:57:80;;-1:-1:-1;11375:65:80;;-1:-1:-1;;;;;;;;;;;1795:42:78;11403:21:80;;8416:18:82;;11403:36:80;8297:203:82;11375:65:80;11451:18;:16;:18::i;:::-;11490:7;;11511:5;;;11490:27;;-1:-1:-1;;;11490:27:80;;-1:-1:-1;;;;;11511:5:80;;;11490:27;;;8443:51:82;11490:7:80;;;:20;;8416:18:82;11490:27:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11542:5:80;;;11528:20;;-1:-1:-1;;;11528:20:80;;-1:-1:-1;;;;;11542:5:80;;;11528:20;;;8443:51:82;-1:-1:-1;;;;;;;;;;;11528:13:80;-1:-1:-1;11528:13:80;;-1:-1:-1;8416:18:82;11528:20:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11559:7:80;;11585:5;;;11559:32;;-1:-1:-1;;;11559:32:80;;-1:-1:-1;;;;;11585:5:80;;;11559:32;;;8443:51:82;11559:7:80;;;-1:-1:-1;11559:25:80;;-1:-1:-1;8416:18:82;11559:32:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;317:37:30;;-1:-1:-1;;;;;11602:12:80;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11691:4:80;;11670:35;;-1:-1:-1;;;11670:35:80;;-1:-1:-1;;;;;;;;;;;1795:42:78;-1:-1:-1;11670:20:80;;-1:-1:-1;11670:35:80;;-1:-1:-1;;;;;11691:4:80;;11697:7;;11670:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11730:4:80;;11716:19;;-1:-1:-1;;;11716:19:80;;-1:-1:-1;;;;;11730:4:80;;;11716:19;;;8443:51:82;-1:-1:-1;;;;;;;;;;;11716:13:80;;;8416:18:82;;11716:19:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11746:63:80;;;;;;;;;;;-1:-1:-1;;;11746:63:80;;;;11799:7;;11767:41;;-1:-1:-1;;;11767:41:80;;-1:-1:-1;;;;;11799:7:80;;;11767:41;;;8443:51:82;11746:63:80;;-1:-1:-1;11746:63:80;-1:-1:-1;2439:42:78;;11767:23:80;;8416:18:82;;11767:41:80;8297:203:82;11746:63:80;11858:7;;11830:46;;-1:-1:-1;;;11830:46:80;;-1:-1:-1;;;;;;;;;;;1795:42:78;11830:19:80;;:46;;-1:-1:-1;;;;;11858:7:80;;11868;;11830:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11887:7:80;;:53;;-1:-1:-1;;;11887:53:80;;-1:-1:-1;;;;;11887:7:80;;;;:27;;:53;;-1:-1:-1;;;;;;;;;;;1795:42:78;11929:7:80;;11938:1;;11887:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11951:71:80;;;;;;;;;;;-1:-1:-1;;;11951:71:80;;;;11986:10;;12015:4;;11986:35;;-1:-1:-1;;;11986:35:80;;-1:-1:-1;;;;;12015:4:80;;;11986:35;;;8443:51:82;11951:71:80;;-1:-1:-1;11951:71:80;;-1:-1:-1;11986:10:80;;;;;:20;;8416:18:82;;11986:35:80;8297:203:82;11951:71:80;12033:61;;;;;;;;;;;-1:-1:-1;;;12033:61:80;;;;;;;;12064:7;;:29;;-1:-1:-1;;;12064:29:80;;;;12033:61;;-1:-1:-1;;;;;12064:7:80;;;;:27;;:29;;;;;;;;;;;:7;:29;;;;;;;;;;12033:61;12105:7;;12124:10;;12153:4;;12124:35;;-1:-1:-1;;;12124:35:80;;-1:-1:-1;;;;;12153:4:80;;;12124:35;;;8443:51:82;12105:7:80;;;;:18;;12124:10;;;;;:20;;8416:18:82;;12124:35:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12169:4;;12105:73;;-1:-1:-1;;;;;;12105:73:80;;;;;;;;;;-1:-1:-1;;;;;12169:4:80;;12176:1;;12105:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12189:50:80;;;;;;;;;;;;-1:-1:-1;;;12189:50:80;;;;12226:4;;12189:50;;;-1:-1:-1;;;;;12226:4:80;:12;12189:11;:50::i;:::-;10547:1700;;;10506:1741::o;2825:180:35:-;2881:48;2971:26;2942:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;109:49921:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5702:293:78:-;5742:7;5761:21;5785:15;5761:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5811:22;5836:24;5851:8;5836:14;:24::i;:::-;5811:49;5702:293;-1:-1:-1;;;5702:293:78:o;2675:142:35:-;2723:34;2791:18;2770:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9699:797:80;9767:4;9794:18;:16;:18::i;:::-;9833:7;;9854:5;;;9833:27;;-1:-1:-1;;;9833:27:80;;-1:-1:-1;;;;;9854:5:80;;;9833:27;;;8443:51:82;9833:7:80;;;:20;;8416:18:82;9833:27:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9885:5:80;;;9871:20;;-1:-1:-1;;;9871:20:80;;-1:-1:-1;;;;;9885:5:80;;;9871:20;;;8443:51:82;-1:-1:-1;;;;;;;;;;;9871:13:80;-1:-1:-1;9871:13:80;;-1:-1:-1;8416:18:82;9871:20:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9902:7:80;;9928:5;;;9902:32;;-1:-1:-1;;;9902:32:80;;-1:-1:-1;;;;;9928:5:80;;;9902:32;;;8443:51:82;9902:7:80;;;-1:-1:-1;9902:25:80;;-1:-1:-1;8416:18:82;9902:32:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;317:37:30;;-1:-1:-1;;;;;9945:12:80;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9978:4:80;;9970:29;;-1:-1:-1;;;;;9978:4:80;;;;-1:-1:-1;9978:4:80;;-1:-1:-1;9993:5:80;;9978:4;9970:29;9978:4;9970:29;9993:5;9978:4;;9970:29;;;;;;;;;;;;;;;;;;;-1:-1:-1;10024:4:80;;10010:19;;-1:-1:-1;;;10010:19:80;;-1:-1:-1;;;;;10024:4:80;;;10010:19;;;8443:51:82;-1:-1:-1;;;;;;;;;;;10010:13:80;;;8416:18:82;;10010:19:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10040:63:80;;;;;;;;;;;-1:-1:-1;;;10040:63:80;;;;10093:7;;10061:41;;-1:-1:-1;;;10061:41:80;;-1:-1:-1;;;;;10093:7:80;;;10061:41;;;8443:51:82;10040:63:80;;-1:-1:-1;10040:63:80;-1:-1:-1;2439:42:78;;10061:23:80;;8416:18:82;;10061:41:80;8297:203:82;10040:63:80;10124:7;;:65;;-1:-1:-1;;;10124:65:80;;10184:4;10124:65;;;22294:25:82;-1:-1:-1;;;;;10124:7:80;;;;:34;;10166:16;;22267:18:82;;10124:65:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10200:71:80;;;;;;;;;;;-1:-1:-1;;;10200:71:80;;;;10235:10;;10264:4;;10235:35;;-1:-1:-1;;;10235:35:80;;-1:-1:-1;;;;;10264:4:80;;;10235:35;;;8443:51:82;10200:71:80;;-1:-1:-1;10200:71:80;;-1:-1:-1;10235:10:80;;;;;-1:-1:-1;10235:20:80;;8416:18:82;;10235:35:80;8297:203:82;10200:71:80;10282:61;;;;;;;;;;;-1:-1:-1;;;10282:61:80;;;;;;;;10313:7;;:29;;-1:-1:-1;;;10313:29:80;;;;10282:61;;-1:-1:-1;;;;;10313:7:80;;;;:27;;:29;;;;;;;;;;;:7;:29;;;;;;;;;;10282:61;10354:7;;10373:10;;10402:4;;10373:35;;-1:-1:-1;;;10373:35:80;;-1:-1:-1;;;;;10402:4:80;;;10373:35;;;8443:51:82;10354:7:80;;;;:18;;10373:10;;;;;:20;;8416:18:82;;10373:35:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10418:4;;10354:73;;-1:-1:-1;;;;;;10354:73:80;;;;;;;;;;-1:-1:-1;;;;;10418:4:80;;10425:1;;10354:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10438:50:80;;;;;;;;;;;;-1:-1:-1;;;10438:50:80;;;;10475:4;;10438:50;;;-1:-1:-1;;;;;10475:4:80;:12;10438:11;:50::i;:::-;9737:759;9699:797::o;3164:148:35:-;3212:40;3286:18;3265:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6981:410:80;7190:4;;7212:7;;7190:37;;-1:-1:-1;;;7190:37:80;;-1:-1:-1;;;;;7190:4:80;;;;:13;;:37;;7212:7;;;7222:4;;7190:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7258:7:80;;:27;;;-1:-1:-1;;;7258:27:80;;;;7238:17;;-1:-1:-1;;;;;7258:7:80;;:25;;:27;;;;;;;;;;;;;;7238:17;7258:7;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7296:6;;:87;;-1:-1:-1;;;7296:87:80;;7238:47;;-1:-1:-1;;;;;;7296:6:80;;:38;;:87;;7238:47;;7346:9;;7357:11;;7370:12;;7296:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7016:375;6981:410::o;3027:110::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3027:110:80;;-1:-1:-1;3027:110:80;:::o;2228:143:35:-;2277:34;2345:18;2324:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:600:29;1920:7;;1899:4;;1920:7;;;;;1916:542;;;-1:-1:-1;1951:7:29;;;;;;;;1865:600::o;1916:542::-;1991:17;-1:-1:-1;;;;;;;;;;;3065:55:29;3148:16;2031:382;;2251:43;;2075:20;;-1:-1:-1;;;;;;;;;;;1712:64:29;2189:34;;2251:43;;1712:64;;-1:-1:-1;;;2276:17:29;2251:43;;;:::i;:::-;;;;-1:-1:-1;;2251:43:29;;;;;;;;;;2139:178;;;2251:43;2139:178;;:::i;:::-;;;;-1:-1:-1;;2139:178:29;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:29:o;17192:1184:80:-;17245:6;17241:773;17261:9;:16;17257:20;;17241:773;;;17295:156;17438:9;17448:1;17438:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;17295:88;;;;;;;;;;;;-1:-1:-1;;;17295:88:80;;;;;;;17333:7;;-1:-1:-1;;;;;17438:12:80;;;;17295:114;;17407:1;;17295:88;;;;:47;;17438:12;;17333:7;17295:29;:47::i;:::-;:65;;:88::i;:::-;:111;;:114::i;:::-;:142;;:156::i;:::-;17462:157;17606:9;17616:1;17606:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;17462:89;;;;;;;;;;;;-1:-1:-1;;;17462:89:80;;;;;;;17500:7;;-1:-1:-1;;;;;17606:12:80;;;;17462:115;;17575:1;;17462:89;;;;:47;;17606:12;;17500:7;17462:29;:47::i;:157::-;17630:175;17790:11;17802:1;17790:14;;;;;;;;:::i;:::-;;;;;;;;;17630:131;17748:9;17758:1;17748:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;17630:94;;;;;;;;;;;;;;;;;;;;17668:7;;-1:-1:-1;;;;;17748:12:80;;;;17630:94;;;:47;;17668:7;17630:29;:47::i;:94::-;:117;;:131::i;:::-;:159;;:175::i;:::-;17816:176;17976:12;17989:1;17976:15;;;;;;;;:::i;:::-;;;;;;;;;17816:131;17934:9;17944:1;17934:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;17816:94;;;;;;;;;;;;;;;;;;;;17854:7;;-1:-1:-1;;;;;17934:12:80;;;;17816:94;;;:47;;17854:7;17816:29;:47::i;:176::-;17279:3;;;;:::i;:::-;;;;17241:773;;;-1:-1:-1;18168:9:80;:16;18024:86;;;;;;;;;;;;-1:-1:-1;;;18024:86:80;;;;18062:7;;18024:161;;18168:16;18024:86;;:47;;-1:-1:-1;;;;;;;18062:7:80;18024:29;:47::i;:161::-;18341:9;:16;18196:87;;;;;;;;;;;;-1:-1:-1;;;18196:87:80;;;;18234:7;;18196:162;;18341:16;18196:87;;:47;;-1:-1:-1;;;;;;;18234:7:80;18196:29;:47::i;2379:144:35:-;2428:35;2497:18;2476:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2476:39:35;;;;;;;;;;;;;;;;;;;;;;2379:144;:::o;5686:112:43:-;5733:57;5786:2;5749:40;;;;;;22294:25:82;;22282:2;22267:18;;22140:185;5749:40:43;;;;-1:-1:-1;;5749:40:43;;;;;;;;;;;;;;-1:-1:-1;;;;;5749:40:43;-1:-1:-1;;;5749:40:43;;;5733:15;:57::i;6752:141::-;6817:68;6877:2;6881;6833:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6833:51:43;;;;;;;;;;;;;;-1:-1:-1;;;;;6833:51:43;-1:-1:-1;;;6833:51:43;;;6817:15;:68::i;3728:284:29:-;3797:1;-1:-1:-1;;;;;3792:6:29;:1;-1:-1:-1;;;;;3792:6:29;;3788:217;;3820:44;;;;;27912:2:82;27894:21;;;27951:2;27931:18;;;27924:30;27990:34;27985:2;27970:18;;27963:62;-1:-1:-1;;;28056:2:82;28041:18;;28034:35;28101:3;28086:19;;27710:401;3820:44:29;;;;;;;;3884:34;3916:1;3884:34;;;;;;:::i;:::-;;;;;;;;3938;3970:1;3938:34;;;;;;:::i;:::-;;;;;;;;3987:6;:4;:6::i;5365:269::-;5428:1;5423;:6;5419:208;;5451:41;;;;;26127:2:82;26109:21;;;26166:2;26146:18;;;26139:30;26205:34;26200:2;26185:18;;26178:62;-1:-1:-1;;;26271:2:82;26256:18;;26249:32;26313:3;26298:19;;25925:398;5451:41:29;;;;;;;;5512:31;5541:1;5512:31;;;;;;:::i;:::-;;;;;;;;5563;5592:1;5563:31;;;;;;:::i;18422:351::-;18559:1;18542:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18532:30;;;;;;18525:1;18508:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18498:30;;;;;;:64;18494:272;;18584:43;;;;;27507:2:82;27489:21;;;27546:2;27526:18;;;27519:30;27585:34;27580:2;27565:18;;27558:62;-1:-1:-1;;;27651:2:82;27636:18;;27629:34;27695:3;27680:19;;27305:400;18584:43:29;;;;;;;;18647:33;18678:1;18647:33;;;;;;:::i;:::-;;;;;;;;18700;18731:1;18700:33;;;;;;:::i;9475:158:38:-;4791:12;;;:22;;-1:-1:-1;;;;;;4791:22:38;-1:-1:-1;;;;;4791:22:38;;;;;-1:-1:-1;4791:12:38;9589:36;4684:159;9794:152;740:24;;;;;;5112:9;;;:22;;-1:-1:-1;;5112:22:38;;;;;;;;;;;;9870:18;9927:4;9908:30;5005:159;10116:154;5467:10;;;:29;;;;;;;10190:18;5467:29;;;;;;;;;;10252:4;10228:34;5362:164;10602:140;10683:51;10697:4;-1:-1:-1;;;;;10711:21:38;;10683:13;:51::i;9954:154::-;5277:10;;;:47;;;;;;;10028:18;5277:47;;;;;;-1:-1:-1;;;;;5301:21:38;;5277:47;;;10090:4;10066:34;5172:182;10750:122;10831:33;10845:4;10859:3;10831:13;:33::i;187:384:43:-;282:14;;135:42;459:2;446:16;;258:21;;282:14;446:16;135:42;496:5;485:68;476:77;;411:153;;187:384;:::o;2473:443:29:-;-1:-1:-1;;;;;;;;;;;3065:55:29;3148:16;2517:367;;2721:67;;2555:11;;-1:-1:-1;;;;;;;;;;;1712:64:29;2654:43;;2721:67;;1712:64;;-1:-1:-1;;;2746:17:29;2781:4;;2721:67;;;:::i;:::-;;;;-1:-1:-1;;2721:67:29;;;;;;;;;;2608:199;;;2721:67;2608:199;;:::i;:::-;;;;-1:-1:-1;;2608:199:29;;;;;;;;;;2572:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2517:367:29;2894:7;:14;;-1:-1:-1;;2894:14:29;;;;;2473:443::o;11259:1125:38:-;11354:12;;;;11391:9;;;;11433:11;;;;11478:10;;;11455:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11354:12:38;;;;11391:9;;;;;;11340:11;;11455:33;;11478:10;;11455:33;;11478:10;11455:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11501:17;11538:4;11544:12;11552:3;11544:7;:12::i;:::-;11521:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11521:36:38;;;;;;;;;-1:-1:-1;;;;;11573:15:38;;;;;;:10;;;11521:36;11573:15;;;;;;-1:-1:-1;;;;;;11573:21:38;;;;;;;;;11521:36;;-1:-1:-1;11573:21:38;;:15;;11605:34;;11622:3;;11627:11;;11605:34;;:::i;:::-;;;;-1:-1:-1;;11605:34:38;;;;;;;;;11595:45;;11605:34;11595:45;;;;11573:68;;;;;;;;;;-1:-1:-1;11573:68:38;;;;11568:112;;11658:10;11663:4;11658;:10::i;:::-;;11568:112;-1:-1:-1;;;;;11713:15:38;;11690:12;11713:15;;;;;;;;;;;-1:-1:-1;;;;;;11713:21:38;;;;;;;;;11745:34;;11713:21;;11690:12;;11745:34;;11762:3;;11767:11;;11745:34;;:::i;:::-;;;;;;;;;;;;;11735:45;;;;;;11713:68;;;;;;;;;;;;11705:77;;11690:92;;11795:12;11836:17;11857:3;-1:-1:-1;;;;;11857:14:38;11872:4;11857:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11833:44:38;-1:-1:-1;11899:38:38;;-1:-1:-1;11833:44:38;11920:16;11925:11;11920:2;:16;:::i;:::-;11899:14;:38::i;:::-;11974:18;;-1:-1:-1;;;11974:18:38;;11892:45;;-1:-1:-1;11959:12:38;;-1:-1:-1;;;;;;;;;;;;11974:7:38;;;:18;;11982:3;;11987:4;;11974:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11959:33;;12017:4;12009;:12;12005:223;;12038:178;;-1:-1:-1;;;12038:178:38;;;;;;;:::i;:::-;;;;;;;;;12238:24;;-1:-1:-1;;;12238:24:38;;-1:-1:-1;;;;;;;;;;;12238:8:38;;;:24;;12247:3;;12252:4;;12258:3;;12238:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12280:12:38;;;12273:19;;-1:-1:-1;;;;;;12273:19:38;;;-1:-1:-1;12310:9:38;;;12303:16;;-1:-1:-1;;12303:16:38;;;12330:17;-1:-1:-1;12337:10:38;;12280:12;12330:17;:::i;:::-;12365:4;:11;;12358:18;;;11329:1055;;;;;;;;11259:1125;;:::o;13760:404::-;13819:12;13844:19;13876:1;:8;13887:2;13876:13;;;;:::i;:::-;13866:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13866:24:38;;13844:46;;13906:9;13901:230;13925:1;:8;13921:1;:12;13901:230;;;13955:9;13967:1;13969;13967:4;;;;;;;;:::i;:::-;;;;;;;13955:16;;14103:1;14097;14093:2;14089:10;14085:2;14081:19;14073:6;14069:32;14062:43;14043:77;13935:3;;;;;:::i;:::-;;;;13901:230;;;-1:-1:-1;14150:6:38;13760:404;-1:-1:-1;;13760:404:38:o;9350:117::-;9407:7;9434:25;9454:4;9434:19;:25::i;:::-;9427:32;9350:117;-1:-1:-1;;9350:117:38:o;13388:312::-;13466:7;13486:11;13510;13535:2;13524:1;:8;:13;:29;;13545:1;:8;13524:29;;;13540:2;13524:29;13510:43;;13569:9;13564:108;13588:3;13584:1;:7;13564:108;;;13654:5;:1;13658;13654:5;:::i;:::-;13628:1;13630:10;13639:1;13630:6;:10;:::i;:::-;13628:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;13628:13:38;13620:40;;13613:47;;;;;13593:3;;;;:::i;:::-;;;;13564:108;;;-1:-1:-1;13689:3:38;;13388:312;-1:-1:-1;;;;13388:312:38:o;1295:3381::-;1386:12;;;;1423:9;;;;1465:11;;;;1510:10;;;1487:33;;;;;;;;;;;;;;;;;;;1352:7;;-1:-1:-1;;;;;1386:12:38;;1423:9;;;1465:11;1352:7;;1487:33;;1510:10;;1487:33;;;1510:10;1487:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1574:15:38;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1574:21:38;;;;;;;;;1606:34;;1487:33;;-1:-1:-1;1574:21:38;:15;;-1:-1:-1;1606:34:38;;-1:-1:-1;1487:33:38;;1628:11;;1606:34;;:::i;:::-;;;;-1:-1:-1;;1606:34:38;;;;;;;;;1596:45;;1606:34;1596:45;;;;1574:68;;;;;;;;;;-1:-1:-1;1574:68:38;;;;1570:176;;;-1:-1:-1;;;;;1666:15:38;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1666:21:38;;;;;;;;;1698:34;;1666:21;;:10;1698:34;;1715:3;;1720:11;;1698:34;;:::i;:::-;;;;;;;;;;;;;1688:45;;;;;;1666:68;;;;;;;;;;;;1659:75;;;;;;1295:3381;;;:::o;1570:176::-;1756:17;1793:4;1799:12;1807:3;1799:7;:12::i;:::-;1776:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1756:56;;-1:-1:-1;;;;;;;;;;;599:37:38;;-1:-1:-1;;;;;1823:9:38;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1845:12;1886:17;1907:3;-1:-1:-1;;;;;1907:14:38;1922:4;1907:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1883:44:38;-1:-1:-1;1949:38:38;;-1:-1:-1;1883:44:38;1970:16;1975:11;1970:2;:16;:::i;:::-;1949:14;:38::i;:::-;2039:25;;-1:-1:-1;;;2039:25:38;;-1:-1:-1;;;;;8461:32:82;;2039:25:38;;;8443:51:82;1942:45:38;;-1:-1:-1;2012:22:38;;-1:-1:-1;;;;;;;;;;;;2039:11:38;;;8416:18:82;;2039:25:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2039:25:38;;;;;;;;;;;;:::i;:::-;2011:53;;;2079:5;:12;2095:1;2079:17;2075:2212;;;2113:12;-1:-1:-1;;;;;;;;;;;599:37:38;;-1:-1:-1;;;;;2128:7:38;;2136:3;2141:5;2147:1;2141:8;;;;;;;;:::i;:::-;;;;;;;2128:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2113:37;-1:-1:-1;2169:18:38;2165:108;;2213:44;2234:3;2247:5;2253:1;2247:8;;;;;;;;:::i;:::-;;;;;;;2239:17;;2213:44;;;;;;;:::i;:::-;;;;;;;;2165:108;2299:4;2291;:12;2287:243;;2324:190;;-1:-1:-1;;;2324:190:38;;;;;;;:::i;:::-;2549:86;2559:3;2564:4;2597:3;2602:11;2580:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2570:45;;;;;;2625:5;2631:1;2625:8;;;;;;;;:::i;:::-;;;;;;;2617:17;;2549:86;;;;;;;;;:::i;:::-;;;;;;;;2729:5;2735:1;2729:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2650:15:38;;2721:17;2650:15;;;;;;;;;;-1:-1:-1;;;;;;2650:21:38;;;;;;;;;2682:34;;2729:8;;2650:21;;2682:34;;2699:3;;2704:11;;2682:34;;:::i;:::-;;;;-1:-1:-1;;2682:34:38;;;;;;;;;2672:45;;2682:34;2672:45;;;;2650:68;;;;;;;;;;;;-1:-1:-1;2650:68:38;;;:88;;;;-1:-1:-1;;;;;2753:15:38;;;;2824:4;2753:10;;;:15;;;;;-1:-1:-1;;;;;;2753:21:38;;;;;;;;;2785:34;;2824:4;;-1:-1:-1;2785:34:38;;2802:3;;2807:11;;2785:34;;:::i;:::-;;;;;;;-1:-1:-1;;2785:34:38;;;;;;2775:45;;2785:34;2775:45;;;;2753:68;;;;;;;;;;-1:-1:-1;2753:68:38;:75;;-1:-1:-1;;2753:75:38;;;;;;;;;;-1:-1:-1;2075:2212:38;;;2865:1;2850:5;:12;:16;2846:1441;;;2888:9;2883:1286;2907:5;:12;2903:1;:16;2883:1286;;;2945:12;-1:-1:-1;;;;;;;;;;;599:37:38;;-1:-1:-1;;;;;2960:7:38;;2968:3;2973:5;2979:1;2973:8;;;;;;;;:::i;:::-;;;;;;;2960:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2945:37;-1:-1:-1;3005:18:38;3001:116;;3053:44;3074:3;3087:5;3093:1;3087:8;;;;;;;;:::i;:::-;;;;;;;3079:17;;3053:44;;;;;;;:::i;:::-;;;;;;;;3001:116;3147:4;3139;:12;3135:69;;3176:8;;;3135:69;3304:8;;3240:5;;;-1:-1:-1;;;;;;;;;;;3290:8:38;;;3299:3;;3304:5;;3310:1;;3304:8;;;;;;:::i;:::-;;;;;;;3314:7;3290:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:12;3395:17;3453:3;-1:-1:-1;;;;;3453:14:38;3468:4;3453:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3435:38:38;;-1:-1:-1;3435:38:38;-1:-1:-1;3503:38:38;3435;3524:16;3529:11;3524:2;:16;:::i;3503:38::-;3496:45;;3372:189;3585:7;:26;;;;;3604:7;3596:4;:15;3585:26;3581:525;;;3711:86;3721:3;3726:4;3759:3;3764:11;3742:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3732:45;;;;;;3787:5;3793:1;3787:8;;;;;;;;:::i;:::-;;;;;;;3779:17;;3711:86;;;;;;;;;:::i;:::-;;;;;;;;3899:5;3905:1;3899:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3820:15:38;;3891:17;3820:15;;;;;;;;;;-1:-1:-1;;;;;;3820:21:38;;;;;;;;;3852:34;;3899:8;;3820:21;;3852:34;;3869:3;;3874:11;;3852:34;;:::i;:::-;;;;;;;;;;;;;3842:45;;;;;;3820:68;;;;;;;;;;;:88;;;;4002:4;3931;:10;;:15;3942:3;-1:-1:-1;;;;;3931:15:38;-1:-1:-1;;;;;3931:15:38;;;;;;;;;;;;:21;3947:4;-1:-1:-1;;;;;3931:21:38;;-1:-1:-1;;;;;3931:21:38;;;;;;;;;;;;;:68;3980:3;3985:11;3963:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3953:45;;;;;;3931:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;599:37:38;;-1:-1:-1;;;;;4029:8:38;;4038:3;4043:5;4049:1;4043:8;;;;;;;;:::i;:::-;;;;;;;4053:4;4029:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4081:5;;;;;3581:525;-1:-1:-1;;;;;;;;;;;599:37:38;;-1:-1:-1;;;;;4124:8:38;;4133:3;4138:5;4144:1;4138:8;;;;;;;;:::i;:::-;;;;;;;4148:4;4124:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:1243;;;2883:1286;2921:3;;;;:::i;:::-;;;;2883:1286;;;;2846:1441;;;4201:74;;;-1:-1:-1;;;4201:74:38;;25694:2:82;4201:74:38;;;25676:21:82;25713:18;;;25706:30;;;;25772:34;25752:18;;;25745:62;25843:34;25823:18;;;25816:62;25895:19;;4201:74:38;25492:428:82;2846:1441:38;-1:-1:-1;;;;;4321:15:38;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4321:21:38;;;;;;;;;4353:34;;4321:21;;:15;4353:34;;4370:3;;4375:11;;4353:34;;:::i;:::-;;;;-1:-1:-1;;4353:34:38;;;;;;;;;4343:45;;4353:34;4343:45;;;;4321:68;;;;;;;;;;-1:-1:-1;4321:68:38;;;;4299:165;;;;-1:-1:-1;;;4299:165:38;;26530:2:82;4299:165:38;;;26512:21:82;26569:2;26549:18;;;26542:30;26608:34;26588:18;;;26581:62;-1:-1:-1;;;26659:18:82;;;26652:45;26714:19;;4299:165:38;26328:411:82;4299:165:38;4484:12;;;4477:19;;-1:-1:-1;;;;;;4477:19:38;;;4514:9;;;4507:16;;-1:-1:-1;;4507:16:38;;;4534:17;-1:-1:-1;4541:10:38;;4484:12;4534:17;:::i;:::-;4562:18;4569:11;;;4562:18;;;-1:-1:-1;;;;;4600:15:38;;;;;;;;;;;;-1:-1:-1;;;;;;4600:21:38;;;;;;;;;4632:34;;4600:21;;4562:18;4632:34;;4649:3;;4654:11;;4632:34;;:::i;:::-;;;;;;;;;;;;;4622:45;;;;;;4600:68;;;;;;;;;;;;4593:75;;;;;;;;;1295:3381;;;:::o;8692:404::-;8751:12;8776:19;8808:1;:8;8819:2;8808:13;;;;:::i;:::-;8798:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8798:24:38;;8776:46;;8838:9;8833:230;8857:1;:8;8853:1;:12;8833:230;;;8887:9;8899:1;8901;8899:4;;;;;;;;:::i;:::-;;;;;;;8887:16;;9035:1;9029;9025:2;9021:10;9017:2;9013:19;9005:6;9001:32;8994:43;8975:77;8867:3;;;;;:::i;:::-;;;;8833:230;;8372:312;8450:7;8470:11;8494;8519:2;8508:1;:8;:13;:29;;8529:1;:8;8508:29;;;8524:2;8508:29;8494:43;;8553:9;8548:108;8572:3;8568:1;:7;8548:108;;;8638:5;:1;8642;8638:5;:::i;:::-;8612:1;8614:10;8623:1;8614:6;:10;:::i;:::-;8612:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;8612:13:38;8604:40;;8597:47;;;;;8577:3;;;;:::i;:::-;;;;8548:108;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:720:82:-;79:5;132:3;125:4;117:6;113:17;109:27;99:55;;150:1;147;140:12;99:55;179:6;173:13;205:4;228:18;224:2;221:26;218:52;;;250:18;;:::i;:::-;296:2;293:1;289:10;319:28;343:2;339;335:11;319:28;:::i;:::-;381:15;;;412:12;;;;444:15;;;478;;;474:24;;471:33;-1:-1:-1;468:53:82;;;517:1;514;507:12;468:53;539:1;530:10;;549:156;563:2;560:1;557:9;549:156;;;620:10;;608:23;;581:1;574:9;;;;;651:12;;;;683;;549:156;;;-1:-1:-1;723:5:82;14:720;-1:-1:-1;;;;;;;14:720:82:o;739:164::-;815:13;;864;;857:21;847:32;;837:60;;893:1;890;883:12;908:163;986:13;;1039:6;1028:18;;1018:29;;1008:57;;1061:1;1058;1051:12;1076:251;1146:6;1199:2;1187:9;1178:7;1174:23;1170:32;1167:52;;;1215:1;1212;1205:12;1167:52;1247:9;1241:16;1266:31;1291:5;1266:31;:::i;1332:614::-;1461:6;1469;1522:2;1510:9;1501:7;1497:23;1493:32;1490:52;;;1538:1;1535;1528:12;1490:52;1571:9;1565:16;1600:18;1641:2;1633:6;1630:14;1627:34;;;1657:1;1654;1647:12;1627:34;1680:72;1744:7;1735:6;1724:9;1720:22;1680:72;:::i;:::-;1670:82;;1798:2;1787:9;1783:18;1777:25;1761:41;;1827:2;1817:8;1814:16;1811:36;;;1843:1;1840;1833:12;1811:36;;1866:74;1932:7;1921:8;1910:9;1906:24;1866:74;:::i;:::-;1856:84;;;1332:614;;;;;:::o;1951:202::-;2018:6;2071:2;2059:9;2050:7;2046:23;2042:32;2039:52;;;2087:1;2084;2077:12;2039:52;2110:37;2137:9;2110:37;:::i;2158:184::-;2228:6;2281:2;2269:9;2260:7;2256:23;2252:32;2249:52;;;2297:1;2294;2287:12;2249:52;-1:-1:-1;2320:16:82;;2158:184;-1:-1:-1;2158:184:82:o;2347:671::-;2415:6;2468:2;2456:9;2447:7;2443:23;2439:32;2436:52;;;2484:1;2481;2474:12;2436:52;2524:9;2511:23;2557:18;2549:6;2546:30;2543:50;;;2589:1;2586;2579:12;2543:50;2612:22;;2665:4;2657:13;;2653:27;-1:-1:-1;2643:55:82;;2694:1;2691;2684:12;2643:55;2730:2;2717:16;2755:48;2771:31;2799:2;2771:31;:::i;:::-;2755:48;:::i;:::-;2826:2;2819:5;2812:17;2866:7;2861:2;2856;2852;2848:11;2844:20;2841:33;2838:53;;;2887:1;2884;2877:12;2838:53;2942:2;2937;2933;2929:11;2924:2;2917:5;2913:14;2900:45;2986:1;2965:14;;;2981:2;2961:23;2954:34;;;;2969:5;2347:671;-1:-1:-1;;;;2347:671:82:o;3023:635::-;3103:6;3156:2;3144:9;3135:7;3131:23;3127:32;3124:52;;;3172:1;3169;3162:12;3124:52;3205:9;3199:16;3238:18;3230:6;3227:30;3224:50;;;3270:1;3267;3260:12;3224:50;3293:22;;3346:4;3338:13;;3334:27;-1:-1:-1;3324:55:82;;3375:1;3372;3365:12;3324:55;3404:2;3398:9;3429:48;3445:31;3473:2;3445:31;:::i;3429:48::-;3500:2;3493:5;3486:17;3540:7;3535:2;3530;3526;3522:11;3518:20;3515:33;3512:53;;;3561:1;3558;3551:12;3512:53;3574:54;3625:2;3620;3613:5;3609:14;3604:2;3600;3596:11;3574:54;:::i;:::-;3647:5;3023:635;-1:-1:-1;;;;;3023:635:82:o;3663:903::-;3777:6;3785;3793;3801;3809;3817;3825;3878:3;3866:9;3857:7;3853:23;3849:33;3846:53;;;3895:1;3892;3885:12;3846:53;3927:9;3921:16;3946:31;3971:5;3946:31;:::i;:::-;3996:5;3986:15;;;4046:2;4035:9;4031:18;4025:25;4095:7;4092:1;4081:22;4072:7;4069:35;4059:63;;4118:1;4115;4108:12;4059:63;4141:7;-1:-1:-1;4167:48:82;4211:2;4196:18;;4167:48;:::i;:::-;4157:58;;4234:48;4278:2;4267:9;4263:18;4234:48;:::i;:::-;4224:58;;4301:49;4345:3;4334:9;4330:19;4301:49;:::i;:::-;4291:59;;4395:3;4384:9;4380:19;4374:26;4444:4;4435:7;4431:18;4422:7;4419:31;4409:59;;4464:1;4461;4454:12;4409:59;4487:7;-1:-1:-1;4513:47:82;4555:3;4540:19;;4513:47;:::i;:::-;4503:57;;3663:903;;;;;;;;;;:::o;4571:180::-;4630:6;4683:2;4671:9;4662:7;4658:23;4654:32;4651:52;;;4699:1;4696;4689:12;4651:52;-1:-1:-1;4722:23:82;;4571:180;-1:-1:-1;4571:180:82:o;5062:615::-;5114:3;5152:5;5146:12;5179:6;5174:3;5167:19;5205:4;5246:2;5241:3;5237:12;5271:11;5298;5291:18;;5348:6;5345:1;5341:14;5334:5;5330:26;5318:38;;5390:2;5383:5;5379:14;5411:1;5421:230;5435:6;5432:1;5429:13;5421:230;;;5506:5;5500:4;5496:16;5491:3;5484:29;5534:37;5566:4;5557:6;5551:13;5534:37;:::i;:::-;5629:12;;;;5526:45;-1:-1:-1;5594:15:82;;;;5457:1;5450:9;5421:230;;;-1:-1:-1;5667:4:82;;5062:615;-1:-1:-1;;;;;;;5062:615:82:o;5682:469::-;5743:3;5781:5;5775:12;5808:6;5803:3;5796:19;5834:4;5863:2;5858:3;5854:12;5847:19;;5885:5;5882:1;5875:16;5927:2;5924:1;5914:16;5948:1;5958:168;5972:6;5969:1;5966:13;5958:168;;;6033:13;;6021:26;;6067:12;;;;6114:1;6102:14;;;;5987:9;5958:168;;;-1:-1:-1;6142:3:82;;5682:469;-1:-1:-1;;;;;5682:469:82:o;6156:257::-;6197:3;6235:5;6229:12;6262:6;6257:3;6250:19;6278:63;6334:6;6327:4;6322:3;6318:14;6311:4;6304:5;6300:16;6278:63;:::i;:::-;6395:2;6374:15;-1:-1:-1;;6370:29:82;6361:39;;;;6402:4;6357:50;;6156:257;-1:-1:-1;;6156:257:82:o;6746:610::-;6992:13;;6935:3;;6966;;7045:4;7072:15;;;6935:3;7115:175;7129:6;7126:1;7123:13;7115:175;;;7192:13;;7178:28;;7228:14;;;;7265:15;;;;7151:1;7144:9;7115:175;;;-1:-1:-1;;7299:21:82;;;-1:-1:-1;7336:14:82;;;;;-1:-1:-1;;;6746:610:82:o;7361:371::-;-1:-1:-1;;;;;;7546:33:82;;7534:46;;7603:13;;7516:3;;7625:61;7603:13;7675:1;7666:11;;7659:4;7647:17;;7625:61;:::i;:::-;7706:16;;;;7724:1;7702:24;;7361:371;-1:-1:-1;;;7361:371:82:o;7737:274::-;7866:3;7904:6;7898:13;7920:53;7966:6;7961:3;7954:4;7946:6;7942:17;7920:53;:::i;:::-;7989:16;;;;;7737:274;-1:-1:-1;;7737:274:82:o;10929:::-;-1:-1:-1;;;;;11121:32:82;;;;11103:51;;11185:2;11170:18;;11163:34;11091:2;11076:18;;10929:274::o;11208:345::-;-1:-1:-1;;;;;11428:32:82;;;;11410:51;;11492:2;11477:18;;11470:34;;;;11535:2;11520:18;;11513:34;11398:2;11383:18;;11208:345::o;11558:442::-;-1:-1:-1;;;;;11805:32:82;;;;11787:51;;-1:-1:-1;;;;;;11874:33:82;;;;11869:2;11854:18;;11847:61;11939:2;11924:18;;11917:34;11982:2;11967:18;;11960:34;11774:3;11759:19;;11558:442::o;13894:658::-;14065:2;14117:21;;;14187:13;;14090:18;;;14209:22;;;14036:4;;14065:2;14288:15;;;;14262:2;14247:18;;;14036:4;14331:195;14345:6;14342:1;14339:13;14331:195;;;14410:13;;-1:-1:-1;;;;;14406:39:82;14394:52;;14501:15;;;;14466:12;;;;14442:1;14360:9;14331:195;;;-1:-1:-1;14543:3:82;;13894:658;-1:-1:-1;;;;;;13894:658:82:o;14557:280::-;14756:2;14745:9;14738:21;14719:4;14776:55;14827:2;14816:9;14812:18;14804:6;14776:55;:::i;14842:1077::-;15048:4;15077:2;15117;15106:9;15102:18;15147:2;15136:9;15129:21;15170:6;15205;15199:13;15236:6;15228;15221:22;15262:2;15252:12;;15295:2;15284:9;15280:18;15273:25;;15357:2;15347:6;15344:1;15340:14;15329:9;15325:30;15321:39;15395:2;15387:6;15383:15;15416:1;15426:464;15440:6;15437:1;15434:13;15426:464;;;15505:22;;;-1:-1:-1;;15501:36:82;15489:49;;15561:13;;15606:9;;-1:-1:-1;;;;;15602:35:82;15587:51;;15677:11;;15671:18;15709:15;;;15702:27;;;15752:58;15794:15;;;15671:18;15752:58;:::i;:::-;15868:12;;;;15742:68;-1:-1:-1;;15833:15:82;;;;15462:1;15455:9;15426:464;;;-1:-1:-1;15907:6:82;;14842:1077;-1:-1:-1;;;;;;;;14842:1077:82:o;15924:1569::-;16128:4;16157:2;16197;16186:9;16182:18;16227:2;16216:9;16209:21;16250:6;16285;16279:13;16316:6;16308;16301:22;16342:2;16332:12;;16375:2;16364:9;16360:18;16353:25;;16437:2;16427:6;16424:1;16420:14;16409:9;16405:30;16401:39;16475:2;16467:6;16463:15;16496:1;16517;16527:937;16543:6;16538:3;16535:15;16527:937;;;16612:22;;;-1:-1:-1;;16608:36:82;16596:49;;16668:13;;16755:9;;-1:-1:-1;;;;;16751:35:82;16736:51;;16826:11;;16820:18;16858:15;;;16851:27;;;16939:19;;16708:15;;;16971:24;;;17061:21;;;;17106:1;;17029:2;17017:15;;;17120:236;17136:8;17131:3;17128:17;17120:236;;;17217:15;;-1:-1:-1;;;;;;17213:42:82;17199:57;;17325:17;;;;17164:1;17155:11;;;;;17282:14;;;;17120:236;;;-1:-1:-1;17442:12:82;;;;17379:5;-1:-1:-1;;;17407:15:82;;;;16569:1;16560:11;16527:937;;;-1:-1:-1;17481:6:82;;15924:1569;-1:-1:-1;;;;;;;;;15924:1569:82:o;17690:1141::-;18007:4;18055:3;18044:9;18040:19;18086:6;18075:9;18068:25;18112:2;18150:3;18145:2;18134:9;18130:18;18123:31;18174:6;18209;18203:13;18240:6;18232;18225:22;18278:3;18267:9;18263:19;18256:26;;18301:6;18298:1;18291:17;18344:2;18341:1;18331:16;18317:30;;18365:1;18375:194;18389:6;18386:1;18383:13;18375:194;;;18454:13;;-1:-1:-1;;;;;18450:39:82;18438:52;;18486:1;18545:14;;;;18510:12;;;;18404:9;18375:194;;;18379:3;;18614:9;18609:3;18605:19;18600:2;18589:9;18585:18;18578:47;18648:49;18693:3;18685:6;18648:49;:::i;:::-;18634:63;;;;18745:9;18737:6;18733:22;18728:2;18717:9;18713:18;18706:50;18773:52;18818:6;18810;18773:52;:::i;:::-;18765:60;17690:1141;-1:-1:-1;;;;;;;17690:1141:82:o;18836:217::-;18983:2;18972:9;18965:21;18946:4;19003:44;19043:2;19032:9;19028:18;19020:6;19003:44;:::i;22330:382::-;22569:25;;;-1:-1:-1;;;;;22630:32:82;;;;22625:2;22610:18;;22603:60;22694:2;22679:18;;22672:34;22557:2;22542:18;;22330:382::o;23984:290::-;24161:2;24150:9;24143:21;24124:4;24181:44;24221:2;24210:9;24206:18;24198:6;24181:44;:::i;:::-;24173:52;;24261:6;24256:2;24245:9;24241:18;24234:34;23984:290;;;;;:::o;24279:1208::-;24388:4;24417:2;24446;24435:9;24428:21;24469:1;24502:6;24496:13;24532:3;24554:1;24582:9;24578:2;24574:18;24564:28;;24642:2;24631:9;24627:18;24664;24654:61;;24708:4;24700:6;24696:17;24686:27;;24654:61;24761:2;24753:6;24750:14;24730:18;24727:38;24724:165;;;-1:-1:-1;;;24788:33:82;;24844:4;24841:1;24834:15;24874:4;24795:3;24862:17;24724:165;24956:18;;;33973:19;;;34025:4;34016:14;24999:18;25026:100;;;;25140:1;25135:326;;;;24992:469;;25026:100;-1:-1:-1;;25059:24:82;;25047:37;;25104:12;;;;-1:-1:-1;25026:100:82;;25135:326;33822:1;33815:14;;;33859:4;33846:18;;25241:1;25255:165;25269:6;25266:1;25263:13;25255:165;;;25347:14;;25334:11;;;25327:35;25390:16;;;;25284:10;;25255:165;;;25440:11;;;-1:-1:-1;;24992:469:82;-1:-1:-1;25478:3:82;;24279:1208;-1:-1:-1;;;;;;;;;24279:1208:82:o;26744:556::-;26946:2;26928:21;;;26985:3;26965:18;;;26958:31;27025:34;27020:2;27005:18;;26998:62;27096:34;27091:2;27076:18;;27069:62;27168:34;27162:3;27147:19;;27140:63;-1:-1:-1;;;27234:3:82;27219:19;;27212:46;27290:3;27275:19;;26744:556::o;28116:374::-;28346:2;28335:9;28328:21;28309:4;28366:49;28411:2;28400:9;28396:18;6495:2;6483:15;;-1:-1:-1;;;6523:4:82;6514:14;;6507:36;6568:2;6559:12;;6418:159;28366:49;-1:-1:-1;;;;;28451:32:82;;;;28446:2;28431:18;;;;28424:60;;;;-1:-1:-1;28358:57:82;28116:374::o;28495:439::-;28745:2;28734:9;28727:21;28708:4;28771:49;28816:2;28805:9;28801:18;6495:2;6483:15;;-1:-1:-1;;;6523:4:82;6514:14;;6507:36;6568:2;6559:12;;6418:159;28771:49;28868:9;28860:6;28856:22;28851:2;28840:9;28836:18;28829:50;28896:32;28921:6;28913;28896:32;:::i;:::-;28888:40;28495:439;-1:-1:-1;;;;28495:439:82:o;28939:348::-;29169:2;29158:9;29151:21;29132:4;29189:49;29234:2;29223:9;29219:18;6495:2;6483:15;;-1:-1:-1;;;6523:4:82;6514:14;;6507:36;6568:2;6559:12;;6418:159;29189:49;29181:57;;29274:6;29269:2;29258:9;29254:18;29247:34;28939:348;;;;:::o;29292:1452::-;29897:3;29909:21;;;29966:2;29946:18;;;29939:30;-1:-1:-1;;;30000:3:82;29985:19;;29978:45;30042:3;30076:4;30061:20;;30054:32;;;30122:1;30102:18;;;30095:29;-1:-1:-1;;;30155:3:82;30140:19;;30133:35;30235:2;30220:18;;30213:34;;;-1:-1:-1;;;;;5019:31:82;;30306:2;30291:18;;5007:44;30200:3;30185:19;;30347:6;30341:3;30330:9;30326:19;30319:35;30363:55;30413:3;30402:9;30398:19;30390:6;-1:-1:-1;;;;;5019:31:82;5007:44;;4945:112;30363:55;-1:-1:-1;;;;;5019:31:82;;;30477:3;30462:19;;5007:44;5019:31;;;30541:3;30526:19;;5007:44;5019:31;;;30605:3;30590:19;;5007:44;5019:31;;;30669:3;30654:19;;5007:44;5019:31;;;30733:3;30718:19;;;5007:44;;;;29292:1452;;-1:-1:-1;;;;29292:1452:82:o;30749:374::-;30979:2;30968:9;30961:21;30942:4;30999:49;31044:2;31033:9;31029:18;6659:2;6647:15;;-1:-1:-1;;;6687:4:82;6678:14;;6671:36;6732:2;6723:12;;6582:159;31128:439;31378:2;31367:9;31360:21;31341:4;31404:49;31449:2;31438:9;31434:18;6659:2;6647:15;;-1:-1:-1;;;6687:4:82;6678:14;;6671:36;6732:2;6723:12;;6582:159;31572:348;31802:2;31791:9;31784:21;31765:4;31822:49;31867:2;31856:9;31852:18;6659:2;6647:15;;-1:-1:-1;;;6687:4:82;6678:14;;6671:36;6732:2;6723:12;;6582:159;31925:797;32214:13;;-1:-1:-1;;;;;32210:22:82;;;32192:41;;32293:4;32281:17;;;32275:24;32271:33;;32249:20;;;32242:63;32365:4;32353:17;;;32347:24;32373:8;32343:39;32321:20;;;32314:69;32443:4;32431:17;;;32425:24;32421:33;;32399:20;;;32392:63;32511:4;32499:17;;;32493:24;32471:20;;;32464:54;32172:3;32562:17;;;32556:24;32534:20;;;32527:54;32637:4;32625:17;;;32619:24;32597:20;;;32590:54;32704:4;32692:17;;;32686:24;32682:33;32660:20;;;32653:63;;;;32141:3;32126:19;;31925:797::o;33267:275::-;33338:2;33332:9;33403:2;33384:13;;-1:-1:-1;;33380:27:82;33368:40;;33438:18;33423:34;;33459:22;;;33420:62;33417:88;;;33485:18;;:::i;:::-;33521:2;33514:22;33267:275;;-1:-1:-1;33267:275:82:o;33547:186::-;33595:4;33628:18;33620:6;33617:30;33614:56;;;33650:18;;:::i;:::-;-1:-1:-1;33716:2:82;33695:15;-1:-1:-1;;33691:29:82;33722:4;33687:40;;33547:186::o;34041:128::-;34081:3;34112:1;34108:6;34105:1;34102:13;34099:39;;;34118:18;;:::i;:::-;-1:-1:-1;34154:9:82;;34041:128::o;34174:168::-;34214:7;34280:1;34276;34272:6;34268:14;34265:1;34262:21;34257:1;34250:9;34243:17;34239:45;34236:71;;;34287:18;;:::i;:::-;-1:-1:-1;34327:9:82;;34174:168::o;34347:258::-;34419:1;34429:113;34443:6;34440:1;34437:13;34429:113;;;34519:11;;;34513:18;34500:11;;;34493:39;34465:2;34458:10;34429:113;;;34560:6;34557:1;34554:13;34551:48;;;-1:-1:-1;;34595:1:82;34577:16;;34570:27;34347:258::o;34610:380::-;34689:1;34685:12;;;;34732;;;34753:61;;34807:4;34799:6;34795:17;34785:27;;34753:61;34860:2;34852:6;34849:14;34829:18;34826:38;34823:161;;;34906:10;34901:3;34897:20;34894:1;34887:31;34941:4;34938:1;34931:15;34969:4;34966:1;34959:15;34823:161;;34610:380;;;:::o;34995:135::-;35034:3;-1:-1:-1;;35055:17:82;;35052:43;;;35075:18;;:::i;:::-;-1:-1:-1;35122:1:82;35111:13;;34995:135::o;35135:127::-;35196:10;35191:3;35187:20;35184:1;35177:31;35227:4;35224:1;35217:15;35251:4;35248:1;35241:15;35267:127;35328:10;35323:3;35319:20;35316:1;35309:31;35359:4;35356:1;35349:15;35383:4;35380:1;35373:15;35399:127;35460:10;35455:3;35451:20;35448:1;35441:31;35491:4;35488:1;35481:15;35515:4;35512:1;35505:15;35531:131;-1:-1:-1;;;;;35606:31:82;;35596:42;;35586:70;;35652:1;35649;35642:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BNB()": "58f7f6d2",
    "BONE()": "c36596a6",
    "BabyDoge()": "d1a72ed6",
    "CURVE()": "3a3c3b87",
    "DAI()": "e0bab4c4",
    "ELON()": "2fab7aea",
    "FLOKI()": "2f9f8c13",
    "FactoryV2()": "d5bfbe4c",
    "FactoryV3()": "c2867f20",
    "HarryPotterObamaSonic10Inu()": "0fb405b7",
    "IS_TEST()": "fa7626d4",
    "LEASH()": "ad39e5fd",
    "LINK()": "1b6b6d23",
    "MEME()": "2e7b0948",
    "PEPE()": "e4fbaecb",
    "QUOTER()": "8dae88c2",
    "SHIB()": "e24b85e7",
    "SwapRouterV2()": "ce2da055",
    "SwapRouterV3()": "d1a3925a",
    "UNI()": "541bcb76",
    "WBTC()": "4dede3de",
    "WETH9()": "4aa4a4fc",
    "WSM()": "5725a977",
    "WXRP()": "d8280a7e",
    "assetList(uint256)": "a0b4b301",
    "dai()": "f4b9fa75",
    "deployByteCode(bytes)": "1d2c8e1a",
    "deployContracts()": "1081259e",
    "deployUniswap()": "75ece3e8",
    "ethPriceOracle()": "ac0e47f5",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "factory()": "c45a0155",
    "factoryByteCode()": "70eb258a",
    "factoryV3()": "1d5f45f5",
    "failed()": "ba414fa6",
    "indexToken()": "e7d015f2",
    "initializeAssetList()": "e1497cff",
    "oracle()": "7dc0d1d0",
    "quoter()": "c6bbd5a7",
    "setUp()": "0a9254e4",
    "swapRouter()": "c31c9c07",
    "swapVersions(uint256)": "5b718560",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testGetPrice()": "2a888735",
    "testInitialized()": "0e7628c6",
    "testIssuanceWithEth()": "85f65a27",
    "testIssuanceWithTokens()": "5cc6f954",
    "testIssuanceWithTokensOutput()": "037e5f68",
    "testOracleList()": "39c66af1",
    "testSwap()": "6e008a03",
    "tokenShares(uint256)": "3ae64e0c",
    "updateOracleList()": "95d5772d",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeRatePerDayScaled\",\"type\":\"uint256\"}],\"name\":\"FeeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"methodologist\",\"type\":\"address\"}],\"name\":\"MethodologistSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"methodology\",\"type\":\"string\"}],\"name\":\"MethodologySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintFeeToReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"SupplyCeilingSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRestricted\",\"type\":\"bool\"}],\"name\":\"ToggledRestricted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BONE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BabyDoge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CURVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ELON\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLOKI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FactoryV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FactoryV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HarryPotterObamaSonic10Inu\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEASH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MEME\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PEPE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHIB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SwapRouterV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SwapRouterV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WSM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WXRP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"name\":\"deployByteCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployContracts\",\"outputs\":[{\"internalType\":\"contract LinkToken\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract MockApiOracle\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IndexToken\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract MockV3Aggregator\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IndexFactory\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract TestSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployUniswap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPriceOracle\",\"outputs\":[{\"internalType\":\"contract MockV3Aggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IndexFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryByteCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryV3\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexToken\",\"outputs\":[{\"internalType\":\"contract IndexToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeAssetList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract MockApiOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"contract IQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"swapVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIssuanceWithEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIssuanceWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIssuanceWithTokensOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOracleList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwap\",\"outputs\":[{\"internalType\":\"contract TestSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateOracleList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/IndexTokenFactory.t.sol\":\"CounterTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/chainlink/ChainlinkClient.sol\":{\"keccak256\":\"0x459b2ff354049bb0d7c0b5c76441a150f528904c598d9787ef97229fc18f5caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://195b51d95794bb7a129c8ae3d98e6825d9c68043125cf2a364aa49eae3345599\",\"dweb:/ipfs/QmQGw4VDEbx8ZK6vCosRoVFxPrDHsrbAjkZFqMYQeDgUeh\"]},\"contracts/factory/IndexFactory.sol\":{\"keccak256\":\"0xaf07d067fe369ff5f4f657b93c51e1e49da954b3d29f94e9e111e44a2c17bc79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20c650402fe31e859261b727c818beb519c817c2b6c2f914fb50a9483d56bc55\",\"dweb:/ipfs/QmVxsxfoqDK1B536BbuY5HhbZR9mpLpgTfWko3AXMrJVio\"]},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xb039ad91b6085aa9b1339072f5aab0d4c5b66c7cca2b80053f21307feab7e498\",\"urls\":[\"bzz-raw://06e4d0d4f480a233ad0362458c845afc3b3e8e153b6f58161caaa5fc13324e7c\",\"dweb:/ipfs/QmXvm8goJsdoLjWCDNgcFPieSoJm4hvTKmoKtTcbQYHbex\"]},\"contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x90b99057688a80fe2344dc12047db39490b0d3672f32512f308d75e5539e9b22\",\"urls\":[\"bzz-raw://98345e471311762dcd4c8ce954ca448ce798815ad3492746726650acf64eba25\",\"dweb:/ipfs/QmUGPBBvhSgbZCq5Cawt7P5AX38WoYX7f3jKw1SSdsuMhV\"]},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0xf0cf73251d12bc74c7fa4a92fec66bd6e77a0f9c5c76e7dabf4f7145bc9d9ec4\",\"urls\":[\"bzz-raw://71f01e841269fae77e51e1cd725c3a8b514cf0ab8ab77624c48d299db8609ccc\",\"dweb:/ipfs/QmTrabnQ7HpuiBEYxAJZWQE6iHoSf89Ad545SPcHb2CA2W\"]},\"contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x849b51880895815bcfc84b4b660fedae95612f814084860c855d905b3a78830b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://196befeddd2f3fbba1a2f9c84fbb7387180f61ba5c3640d465abfa90be64515e\",\"dweb:/ipfs/QmZkSW6eNZeD9NVTTKeCiPpxY3C4Mf1HHH5BrypaR2Tsif\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2\",\"dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro\"]},\"contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x2a1203a982f477fc8c9e6bf3b9189cd9fcbf75a86a0ceb133b5ade3ff6d464db\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3a45ba66a916cce5f2c897829201cec76cd4670c17d11388d6e7457d641e5981\",\"dweb:/ipfs/QmYJgYx2y98A9TTtkUJ8A66Hu7tcXbRDk7Ng25TWSBW7Yy\"]},\"contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0x77b10716cd03e543440af3d92a68fd0316dc857b232b2fb34f8fea378e6e1f96\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a3663072ea331f7c375c08895045afcd9a847e6e69ee8b5a06c1eed64111baee\",\"dweb:/ipfs/QmQHaLiJSLUqr4ikQUZ9edmbXsLCRo6X881RFxzkpJXMkD\"]},\"contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0x4f65f1f9e253311980d031d85338742939beaeea20d10834b58d397483b6bf01\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4c704da7cec1464a94afd20426bbfcd028f98b49d6337e412db9a29e04159e8\",\"dweb:/ipfs/QmdYWeGzeLuab75RaHLLxy9Lwwy5RjTX76zcEXgCBgsgMr\"]},\"contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x35ad671af6dc4e1826e4cfc95eeee7d05b41222c91ff0f930f14f90d6b67bad3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9437fe522a4c239b74577e7c1c124d1dda2fc5876c9ff2d3447d38de7aec00ce\",\"dweb:/ipfs/QmaDhDyuo1uANPDwUDsfQtW2pFqeFic7ujaSStbG1fMJPc\"]},\"contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0x3987c968f344c38ffe2c6722a96fa813829850b75dee91ac3ca840d19778f08b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d46c695389a8354d6ae853575d111b146e2ad4462dd9547b51951dfdb926fe37\",\"dweb:/ipfs/QmVLPideqDGYxf8jTEhSMGg5R6HZW3pApE5t9wQHJwADw8\"]},\"contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x6cbc7997317eeeb1556f3eb2dfc3687c6e59a8b50a9603d755501fd9eccdada4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e52777a66fedc4c3448cbabe8885ae8daeeac42ce4705cdec9bd667f7804306\",\"dweb:/ipfs/QmVZ9dRCj56rK9ZgesKAQap6bDRKdEsVeRv64Si42LV5Pk\"]},\"contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x9e87b8eb3ac1e7ab4eca0054217e265cc67d13d583e2645d4dfcd35b91889c79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea51e01a588bfb14c1377e430382ceca2926961e4e9d20f8d0eb8f4c423bb20c\",\"dweb:/ipfs/QmcvQ4bt7xuMFoKXKLs5jQPt6Z1nru4k1sBX5eA4A1G67T\"]},\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x98f8df4eeddbeffac13b91aee976d9bccb7a866be8073f55b13f95b214ba5afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1987e919bd75258c05cbaa691545a7555f09c664d1f657749ce19309ec2ab4d4\",\"dweb:/ipfs/Qmdx9e4wVAR94Ej9qM1FRHDZ6WBgXHRpJBwozwZAuVpnUF\"]},\"contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0x87412a5a0576f72ac01c7fbf2c3b356de66b590563472276fea94942783e8930\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9d115acdd69b3d8ff0a53eec87338a67c9b2dc3f052be371ed39add8022ebcb1\",\"dweb:/ipfs/QmQnz3yGz37kQ84N5r7oYHnaiuZ4agFtoo4zg9De4N1AfF\"]},\"contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x37d79844cca46b38abf4c0969567c731c2c6ac2d98f65ea44bfcd6e32f3a7f0f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c76e3fdae638dc2b08fc53eddf614a679660f16d5b544c9c2f31420741c773c3\",\"dweb:/ipfs/Qmcwd8jd2yhEjr6tDPAcWdZcUKSKx4BXnksGgcNc2xLjkm\"]},\"contracts/proposable/ProposableOwnableUpgradeable.sol\":{\"keccak256\":\"0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65\",\"dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72\"]},\"contracts/test/LinkToken.sol\":{\"keccak256\":\"0xac1b483b01db9f5f20d76d1deb5a75e1f454ef9048d04817576236468b0e3884\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9417c186bfb06c004f421ae5efec185063076c0bb729a7e00a9fab9839d33010\",\"dweb:/ipfs/QmRw6aekTLJjscgM79JcyY5hjv4LH8o2Ng8cErMAdeDbMV\"]},\"contracts/test/MockApiOracle.sol\":{\"keccak256\":\"0x41773ec7b1ff0a7e132034d1eb1eacd8c9494e9e90ddeb2cc8d6ea0174e1c278\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38e65e87565ed9aa3cad5a66981993fc1c2671a89a7c9f39dd113b6c715849a2\",\"dweb:/ipfs/Qmbq7oc6awYvrFJxGx754xe1ttAeoVp2yntQ8SKaLhAN3G\"]},\"contracts/test/MockV3Aggregator.sol\":{\"keccak256\":\"0x7fc96b521298f9ad72fec0208a98435da1f02d821626f54313ca50fd544a55db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07a0f2e7c5c51605c298bfdf9487740566a9686b304362d6c73c6dd5396d67fc\",\"dweb:/ipfs/QmPg2GY3xjCZtZHqGWsdTEpHTB9o73CLRhz8XM48Pjqfj9\"]},\"contracts/test/TestSwap.sol\":{\"keccak256\":\"0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b\",\"dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW\"]},\"contracts/test/UniswapFactoryByteCode.sol\":{\"keccak256\":\"0x12186dcf71527bfc0e687e0ebb31022bfe51f60e9c6ab5e66f3c4f18007d3a07\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://935dc2f17f01efc061b7f8260fef0c43170d8a8da461f51c5d7297e9be5c5d4f\",\"dweb:/ipfs/QmaDgyw27N6DDWkEoPTZnLtk7sjv1ZofHWVvpTRgB9FBwa\"]},\"contracts/test/libs/LinkTokenReceiver.sol\":{\"keccak256\":\"0x221baf5efeb32e9f0eceebb7556d1e94f0677e0432da0beac17c1bdec6aa04c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb5d72ba9a4472100ef3755a64e7516726344f1b499b934994c96df0d3d0001\",\"dweb:/ipfs/QmVGYdMSyi3oKx5QkU8q9ELUyv9Y7QE8erandAVSf9PG6L\"]},\"contracts/test/libs/SafeMathChainlink.sol\":{\"keccak256\":\"0x60cb79389647fba9e6aac2be7a4995c78839546e5dd9b73b5c4c9b0beb30f882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c83d59e05254c95818f00663ae174fd084697613477a83925f750165d8983d3a\",\"dweb:/ipfs/QmetcPnpPG4WUT397ggx6fXJLMNp8pKb24jagPXKUDvUhW\"]},\"contracts/token/IndexToken.sol\":{\"keccak256\":\"0xa4a770d03c8d38588b118f33f4a9e4bd145c97362a0e54c3c5e2756ccf0dbc50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21aa9ce1ff3c34f4ee4af1c5282fca9669569b5255ed023287579794032738cd\",\"dweb:/ipfs/QmfJ9W5jUx3CKEiNy7aRL4Wa56dBHSzS2KZPW6KKN5U1mT\"]},\"contracts/token/TokenInterface.sol\":{\"keccak256\":\"0xf928abf1e7c62da780bd92fcfe85320afa6be336e3cd9c83a5da901dc2ecd710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://512f00a70ce82640a62c6a7684e21cc43f09f2d6b7ca0251225fc54128e7d41c\",\"dweb:/ipfs/QmQGr9drQxgSb1LXyB6LGJGB3HagthFoUZzXP5y2DruX71\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3\",\"dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731\",\"dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a\",\"dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f\",\"dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c\",\"dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a\",\"dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254\",\"dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f\",\"dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc\",\"dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1\",\"dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh\"]},\"node_modules/@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fbfa4cee3ce9fe3f5be6eda7e3304263d77b514be0bf5fadffa24d3f654ad2d\",\"dweb:/ipfs/QmTQmA4AJ9NookAyTg9DP6Mem6X8WSHJ5WjQJvqhE8K9qV\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a\",\"dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40958fa820d41025822fe423111c74d5b8d0dfe1a30ae4fba4f6896a55fc2868\",\"dweb:/ipfs/QmbwYCM5k6h43T6qQV8DEpUxv5uErVSTCD6Fqm5DMLDgNi\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ed9275abc614a37a13f86c148f3a4341d955a6b52a1a655357505e0926caab\",\"dweb:/ipfs/Qmaqgq3HiakdSBAe9NtGXYMxVFBjTkLbzyiiyjJUJ1g1M3\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8fbc2ccf2b3dfc8249306b7dc63624a4ec6f6ee43649d631f7363710c763b6\",\"dweb:/ipfs/QmePqh8R8EZMygYkawshsWArTrVA8VCdamLGV6ZZsVJgTz\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ec80973bbc95f59ce3a46aadd7761df6e4131bda14a01a265d76a8e007dd5d\",\"dweb:/ipfs/QmXwhsxjbkuXSHu6SX6tZxrQCXrdnJ4o2M7b3yFSgcWR1f\"]},\"node_modules/@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol\":{\"keccak256\":\"0x7a5ac06d48ad507a441c8de5f813765f3beed7fb47aa88b26ad34c020ea0c644\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecae51d09e8cb28f7d12203a3fdf44254a73ad9e95074d763a4803bd7a1c3f43\",\"dweb:/ipfs/QmayV4kJPUg5eVUw9N3HyJCzuS2SR5N6299j8Krc2RJH38\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88cb96caa94128821daec5478c0f3646902007b81a0604b2e3ab79ea2f40b056\",\"dweb:/ipfs/Qmd1nu9CpgouPmukNQpZThxKgPZAayXxqBfwbDVHfMrCrF\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d47a793b314afe9cd82fcf05ffe4ebbfa5504c2decc83004edbb3b2069d4f0c3\",\"dweb:/ipfs/Qmd2YLSiS8xeeXqireh6qJgTTwVY2VscZpv2cQBU8gkEJT\"]},\"node_modules/@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63b50d13ca97c4dd62738398bb2e423a36563b827b0af94c0e7a47cf0d4a2e6b\",\"dweb:/ipfs/QmXjy7BmtnPeCLMaMnGGnsxDPGxohfDpYzP8PnUoh6gBGa\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"test/foundry/ContractDeployer.sol\":{\"keccak256\":\"0xdca64558ab666fdad188b1f71695640002f51ae784547ae7c530f89a731cf27b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://254c4abeb931cc5b0693f520abf5e584c75df360937ad5b45e30cd1fd45f0b61\",\"dweb:/ipfs/QmauU3AwAGu24hKXPi9MuuKQjQCTBpL2sncMkoxVi6KrVU\"]},\"test/foundry/IndexTokenFactory.t.sol\":{\"keccak256\":\"0x6bf65415389f786c55f15ccbf1b16a72c8112029451ed454a09a67097a12f9cf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5126d8ff2c0e4331c4a420533b8295d9dfdaadc8abb5ca7ce802e3129e57508b\",\"dweb:/ipfs/QmW95RRng2osKqWfHitkBASXCA3dqv64KusDWce5yEaBBu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "feeRatePerDayScaled",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeRateSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeReceiverSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "methodologist",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MethodologistSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "methodology",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MethodologySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintFeeToReceiver",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MinterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supplyCeiling",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupplyCeilingSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isRestricted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ToggledRestricted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BNB",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BONE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BabyDoge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CURVE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ELON",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FLOKI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FactoryV2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FactoryV3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HarryPotterObamaSonic10Inu",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LEASH",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LINK",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MEME",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PEPE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SHIB",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SwapRouterV2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SwapRouterV3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UNI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WBTC",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WSM",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WXRP",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetList",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dai",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployByteCode",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployContracts",
          "outputs": [
            {
              "internalType": "contract LinkToken",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract MockApiOracle",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IndexToken",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract MockV3Aggregator",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IndexFactory",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract TestSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployUniswap",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ethPriceOracle",
          "outputs": [
            {
              "internalType": "contract MockV3Aggregator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "contract IndexFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryByteCode",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryV3",
          "outputs": [
            {
              "internalType": "contract IUniswapV3Factory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "indexToken",
          "outputs": [
            {
              "internalType": "contract IndexToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeAssetList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "contract MockApiOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quoter",
          "outputs": [
            {
              "internalType": "contract IQuoter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "swapVersions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetPrice"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialized"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIssuanceWithEth"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIssuanceWithTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIssuanceWithTokensOutput"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOracleList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testSwap",
          "outputs": [
            {
              "internalType": "contract TestSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateOracleList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/IndexTokenFactory.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/chainlink/ChainlinkClient.sol": {
        "keccak256": "0x459b2ff354049bb0d7c0b5c76441a150f528904c598d9787ef97229fc18f5caf",
        "urls": [
          "bzz-raw://195b51d95794bb7a129c8ae3d98e6825d9c68043125cf2a364aa49eae3345599",
          "dweb:/ipfs/QmQGw4VDEbx8ZK6vCosRoVFxPrDHsrbAjkZFqMYQeDgUeh"
        ],
        "license": "MIT"
      },
      "contracts/factory/IndexFactory.sol": {
        "keccak256": "0xaf07d067fe369ff5f4f657b93c51e1e49da954b3d29f94e9e111e44a2c17bc79",
        "urls": [
          "bzz-raw://20c650402fe31e859261b727c818beb519c817c2b6c2f914fb50a9483d56bc55",
          "dweb:/ipfs/QmVxsxfoqDK1B536BbuY5HhbZR9mpLpgTfWko3AXMrJVio"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IUniswapV2Factory.sol": {
        "keccak256": "0xb039ad91b6085aa9b1339072f5aab0d4c5b66c7cca2b80053f21307feab7e498",
        "urls": [
          "bzz-raw://06e4d0d4f480a233ad0362458c845afc3b3e8e153b6f58161caaa5fc13324e7c",
          "dweb:/ipfs/QmXvm8goJsdoLjWCDNgcFPieSoJm4hvTKmoKtTcbQYHbex"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV2Router01.sol": {
        "keccak256": "0x90b99057688a80fe2344dc12047db39490b0d3672f32512f308d75e5539e9b22",
        "urls": [
          "bzz-raw://98345e471311762dcd4c8ce954ca448ce798815ad3492746726650acf64eba25",
          "dweb:/ipfs/QmUGPBBvhSgbZCq5Cawt7P5AX38WoYX7f3jKw1SSdsuMhV"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV2Router02.sol": {
        "keccak256": "0xf0cf73251d12bc74c7fa4a92fec66bd6e77a0f9c5c76e7dabf4f7145bc9d9ec4",
        "urls": [
          "bzz-raw://71f01e841269fae77e51e1cd725c3a8b514cf0ab8ab77624c48d299db8609ccc",
          "dweb:/ipfs/QmTrabnQ7HpuiBEYxAJZWQE6iHoSf89Ad545SPcHb2CA2W"
        ],
        "license": null
      },
      "contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x849b51880895815bcfc84b4b660fedae95612f814084860c855d905b3a78830b",
        "urls": [
          "bzz-raw://196befeddd2f3fbba1a2f9c84fbb7387180f61ba5c3640d465abfa90be64515e",
          "dweb:/ipfs/QmZkSW6eNZeD9NVTTKeCiPpxY3C4Mf1HHH5BrypaR2Tsif"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9",
        "urls": [
          "bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2",
          "dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x2a1203a982f477fc8c9e6bf3b9189cd9fcbf75a86a0ceb133b5ade3ff6d464db",
        "urls": [
          "bzz-raw://3a45ba66a916cce5f2c897829201cec76cd4670c17d11388d6e7457d641e5981",
          "dweb:/ipfs/QmYJgYx2y98A9TTtkUJ8A66Hu7tcXbRDk7Ng25TWSBW7Yy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0x77b10716cd03e543440af3d92a68fd0316dc857b232b2fb34f8fea378e6e1f96",
        "urls": [
          "bzz-raw://a3663072ea331f7c375c08895045afcd9a847e6e69ee8b5a06c1eed64111baee",
          "dweb:/ipfs/QmQHaLiJSLUqr4ikQUZ9edmbXsLCRo6X881RFxzkpJXMkD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0x4f65f1f9e253311980d031d85338742939beaeea20d10834b58d397483b6bf01",
        "urls": [
          "bzz-raw://c4c704da7cec1464a94afd20426bbfcd028f98b49d6337e412db9a29e04159e8",
          "dweb:/ipfs/QmdYWeGzeLuab75RaHLLxy9Lwwy5RjTX76zcEXgCBgsgMr"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x35ad671af6dc4e1826e4cfc95eeee7d05b41222c91ff0f930f14f90d6b67bad3",
        "urls": [
          "bzz-raw://9437fe522a4c239b74577e7c1c124d1dda2fc5876c9ff2d3447d38de7aec00ce",
          "dweb:/ipfs/QmaDhDyuo1uANPDwUDsfQtW2pFqeFic7ujaSStbG1fMJPc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0x3987c968f344c38ffe2c6722a96fa813829850b75dee91ac3ca840d19778f08b",
        "urls": [
          "bzz-raw://d46c695389a8354d6ae853575d111b146e2ad4462dd9547b51951dfdb926fe37",
          "dweb:/ipfs/QmVLPideqDGYxf8jTEhSMGg5R6HZW3pApE5t9wQHJwADw8"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x6cbc7997317eeeb1556f3eb2dfc3687c6e59a8b50a9603d755501fd9eccdada4",
        "urls": [
          "bzz-raw://6e52777a66fedc4c3448cbabe8885ae8daeeac42ce4705cdec9bd667f7804306",
          "dweb:/ipfs/QmVZ9dRCj56rK9ZgesKAQap6bDRKdEsVeRv64Si42LV5Pk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x9e87b8eb3ac1e7ab4eca0054217e265cc67d13d583e2645d4dfcd35b91889c79",
        "urls": [
          "bzz-raw://ea51e01a588bfb14c1377e430382ceca2926961e4e9d20f8d0eb8f4c423bb20c",
          "dweb:/ipfs/QmcvQ4bt7xuMFoKXKLs5jQPt6Z1nru4k1sBX5eA4A1G67T"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/FullMath.sol": {
        "keccak256": "0x98f8df4eeddbeffac13b91aee976d9bccb7a866be8073f55b13f95b214ba5afb",
        "urls": [
          "bzz-raw://1987e919bd75258c05cbaa691545a7555f09c664d1f657749ce19309ec2ab4d4",
          "dweb:/ipfs/Qmdx9e4wVAR94Ej9qM1FRHDZ6WBgXHRpJBwozwZAuVpnUF"
        ],
        "license": "MIT"
      },
      "contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0x87412a5a0576f72ac01c7fbf2c3b356de66b590563472276fea94942783e8930",
        "urls": [
          "bzz-raw://9d115acdd69b3d8ff0a53eec87338a67c9b2dc3f052be371ed39add8022ebcb1",
          "dweb:/ipfs/QmQnz3yGz37kQ84N5r7oYHnaiuZ4agFtoo4zg9De4N1AfF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/libraries/TickMath.sol": {
        "keccak256": "0x37d79844cca46b38abf4c0969567c731c2c6ac2d98f65ea44bfcd6e32f3a7f0f",
        "urls": [
          "bzz-raw://c76e3fdae638dc2b08fc53eddf614a679660f16d5b544c9c2f31420741c773c3",
          "dweb:/ipfs/Qmcwd8jd2yhEjr6tDPAcWdZcUKSKx4BXnksGgcNc2xLjkm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/proposable/ProposableOwnableUpgradeable.sol": {
        "keccak256": "0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70",
        "urls": [
          "bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65",
          "dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72"
        ],
        "license": "MIT"
      },
      "contracts/test/LinkToken.sol": {
        "keccak256": "0xac1b483b01db9f5f20d76d1deb5a75e1f454ef9048d04817576236468b0e3884",
        "urls": [
          "bzz-raw://9417c186bfb06c004f421ae5efec185063076c0bb729a7e00a9fab9839d33010",
          "dweb:/ipfs/QmRw6aekTLJjscgM79JcyY5hjv4LH8o2Ng8cErMAdeDbMV"
        ],
        "license": "MIT"
      },
      "contracts/test/MockApiOracle.sol": {
        "keccak256": "0x41773ec7b1ff0a7e132034d1eb1eacd8c9494e9e90ddeb2cc8d6ea0174e1c278",
        "urls": [
          "bzz-raw://38e65e87565ed9aa3cad5a66981993fc1c2671a89a7c9f39dd113b6c715849a2",
          "dweb:/ipfs/Qmbq7oc6awYvrFJxGx754xe1ttAeoVp2yntQ8SKaLhAN3G"
        ],
        "license": "MIT"
      },
      "contracts/test/MockV3Aggregator.sol": {
        "keccak256": "0x7fc96b521298f9ad72fec0208a98435da1f02d821626f54313ca50fd544a55db",
        "urls": [
          "bzz-raw://07a0f2e7c5c51605c298bfdf9487740566a9686b304362d6c73c6dd5396d67fc",
          "dweb:/ipfs/QmPg2GY3xjCZtZHqGWsdTEpHTB9o73CLRhz8XM48Pjqfj9"
        ],
        "license": "MIT"
      },
      "contracts/test/TestSwap.sol": {
        "keccak256": "0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3",
        "urls": [
          "bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b",
          "dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/UniswapFactoryByteCode.sol": {
        "keccak256": "0x12186dcf71527bfc0e687e0ebb31022bfe51f60e9c6ab5e66f3c4f18007d3a07",
        "urls": [
          "bzz-raw://935dc2f17f01efc061b7f8260fef0c43170d8a8da461f51c5d7297e9be5c5d4f",
          "dweb:/ipfs/QmaDgyw27N6DDWkEoPTZnLtk7sjv1ZofHWVvpTRgB9FBwa"
        ],
        "license": "UNLICENSED"
      },
      "contracts/test/libs/LinkTokenReceiver.sol": {
        "keccak256": "0x221baf5efeb32e9f0eceebb7556d1e94f0677e0432da0beac17c1bdec6aa04c0",
        "urls": [
          "bzz-raw://dfb5d72ba9a4472100ef3755a64e7516726344f1b499b934994c96df0d3d0001",
          "dweb:/ipfs/QmVGYdMSyi3oKx5QkU8q9ELUyv9Y7QE8erandAVSf9PG6L"
        ],
        "license": "MIT"
      },
      "contracts/test/libs/SafeMathChainlink.sol": {
        "keccak256": "0x60cb79389647fba9e6aac2be7a4995c78839546e5dd9b73b5c4c9b0beb30f882",
        "urls": [
          "bzz-raw://c83d59e05254c95818f00663ae174fd084697613477a83925f750165d8983d3a",
          "dweb:/ipfs/QmetcPnpPG4WUT397ggx6fXJLMNp8pKb24jagPXKUDvUhW"
        ],
        "license": "MIT"
      },
      "contracts/token/IndexToken.sol": {
        "keccak256": "0xa4a770d03c8d38588b118f33f4a9e4bd145c97362a0e54c3c5e2756ccf0dbc50",
        "urls": [
          "bzz-raw://21aa9ce1ff3c34f4ee4af1c5282fca9669569b5255ed023287579794032738cd",
          "dweb:/ipfs/QmfJ9W5jUx3CKEiNy7aRL4Wa56dBHSzS2KZPW6KKN5U1mT"
        ],
        "license": "MIT"
      },
      "contracts/token/TokenInterface.sol": {
        "keccak256": "0xf928abf1e7c62da780bd92fcfe85320afa6be336e3cd9c83a5da901dc2ecd710",
        "urls": [
          "bzz-raw://512f00a70ce82640a62c6a7684e21cc43f09f2d6b7ca0251225fc54128e7d41c",
          "dweb:/ipfs/QmQGr9drQxgSb1LXyB6LGJGB3HagthFoUZzXP5y2DruX71"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261",
        "urls": [
          "bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379",
          "dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e",
        "urls": [
          "bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3",
          "dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc",
        "urls": [
          "bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731",
          "dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52",
        "urls": [
          "bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a",
          "dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb",
        "urls": [
          "bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f",
          "dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04",
        "urls": [
          "bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c",
          "dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417",
        "urls": [
          "bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a",
          "dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357",
        "urls": [
          "bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254",
          "dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a",
        "urls": [
          "bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f",
          "dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a",
        "urls": [
          "bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc",
          "dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb",
        "urls": [
          "bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4",
          "dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb",
        "urls": [
          "bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1",
          "dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/Chainlink.sol": {
        "keccak256": "0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105",
        "urls": [
          "bzz-raw://6fbfa4cee3ce9fe3f5be6eda7e3304263d77b514be0bf5fadffa24d3f654ad2d",
          "dweb:/ipfs/QmTQmA4AJ9NookAyTg9DP6Mem6X8WSHJ5WjQJvqhE8K9qV"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol": {
        "keccak256": "0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7",
        "urls": [
          "bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465",
          "dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol": {
        "keccak256": "0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2",
        "urls": [
          "bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b",
          "dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol": {
        "keccak256": "0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04",
        "urls": [
          "bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a",
          "dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol": {
        "keccak256": "0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0",
        "urls": [
          "bzz-raw://40958fa820d41025822fe423111c74d5b8d0dfe1a30ae4fba4f6896a55fc2868",
          "dweb:/ipfs/QmbwYCM5k6h43T6qQV8DEpUxv5uErVSTCD6Fqm5DMLDgNi"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
        "keccak256": "0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5",
        "urls": [
          "bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd",
          "dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol": {
        "keccak256": "0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68",
        "urls": [
          "bzz-raw://b6ed9275abc614a37a13f86c148f3a4341d955a6b52a1a655357505e0926caab",
          "dweb:/ipfs/Qmaqgq3HiakdSBAe9NtGXYMxVFBjTkLbzyiiyjJUJ1g1M3"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol": {
        "keccak256": "0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a",
        "urls": [
          "bzz-raw://ba8fbc2ccf2b3dfc8249306b7dc63624a4ec6f6ee43649d631f7363710c763b6",
          "dweb:/ipfs/QmePqh8R8EZMygYkawshsWArTrVA8VCdamLGV6ZZsVJgTz"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol": {
        "keccak256": "0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7",
        "urls": [
          "bzz-raw://12ec80973bbc95f59ce3a46aadd7761df6e4131bda14a01a265d76a8e007dd5d",
          "dweb:/ipfs/QmXwhsxjbkuXSHu6SX6tZxrQCXrdnJ4o2M7b3yFSgcWR1f"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/tests/MockV3Aggregator.sol": {
        "keccak256": "0x7a5ac06d48ad507a441c8de5f813765f3beed7fb47aa88b26ad34c020ea0c644",
        "urls": [
          "bzz-raw://ecae51d09e8cb28f7d12203a3fdf44254a73ad9e95074d763a4803bd7a1c3f43",
          "dweb:/ipfs/QmayV4kJPUg5eVUw9N3HyJCzuS2SR5N6299j8Krc2RJH38"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol": {
        "keccak256": "0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d",
        "urls": [
          "bzz-raw://88cb96caa94128821daec5478c0f3646902007b81a0604b2e3ab79ea2f40b056",
          "dweb:/ipfs/Qmd1nu9CpgouPmukNQpZThxKgPZAayXxqBfwbDVHfMrCrF"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol": {
        "keccak256": "0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48",
        "urls": [
          "bzz-raw://d47a793b314afe9cd82fcf05ffe4ebbfa5504c2decc83004edbb3b2069d4f0c3",
          "dweb:/ipfs/Qmd2YLSiS8xeeXqireh6qJgTTwVY2VscZpv2cQBU8gkEJT"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol": {
        "keccak256": "0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d",
        "urls": [
          "bzz-raw://63b50d13ca97c4dd62738398bb2e423a36563b827b0af94c0e7a47cf0d4a2e6b",
          "dweb:/ipfs/QmXjy7BmtnPeCLMaMnGGnsxDPGxohfDpYzP8PnUoh6gBGa"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": {
        "keccak256": "0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff",
        "urls": [
          "bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417",
          "dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/ContractDeployer.sol": {
        "keccak256": "0xdca64558ab666fdad188b1f71695640002f51ae784547ae7c530f89a731cf27b",
        "urls": [
          "bzz-raw://254c4abeb931cc5b0693f520abf5e584c75df360937ad5b45e30cd1fd45f0b61",
          "dweb:/ipfs/QmauU3AwAGu24hKXPi9MuuKQjQCTBpL2sncMkoxVi6KrVU"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/IndexTokenFactory.t.sol": {
        "keccak256": "0x6bf65415389f786c55f15ccbf1b16a72c8112029451ed454a09a67097a12f9cf",
        "urls": [
          "bzz-raw://5126d8ff2c0e4331c4a420533b8295d9dfdaadc8abb5ca7ce802e3129e57508b",
          "dweb:/ipfs/QmW95RRng2osKqWfHitkBASXCA3dqv64KusDWce5yEaBBu"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/IndexTokenFactory.t.sol",
    "id": 59743,
    "exportedSymbols": {
      "AddressUpgradeable": [
        55057
      ],
      "AggregatorInterface": [
        52009
      ],
      "AggregatorV2V3Interface": [
        52018
      ],
      "AggregatorV3Interface": [
        52064
      ],
      "BufferChainlink": [
        53127
      ],
      "CBORChainlink": [
        53574
      ],
      "Chainlink": [
        51961
      ],
      "ChainlinkClient": [
        889
      ],
      "ChainlinkRequestInterface": [
        52097
      ],
      "Context": [
        55811
      ],
      "ContextUpgradeable": [
        55099
      ],
      "ContractDeployer": [
        56558
      ],
      "CounterTest": [
        59742
      ],
      "DSTest": [
        10604
      ],
      "ENSInterface": [
        52177
      ],
      "ENSResolver_Chainlink": [
        53584
      ],
      "ERC20": [
        55686
      ],
      "ERC20Upgradeable": [
        54624
      ],
      "ERC677": [
        5840
      ],
      "ERC677Receiver": [
        5851
      ],
      "ERC677Token": [
        5944
      ],
      "FullMath": [
        4557
      ],
      "IERC20": [
        55764
      ],
      "IERC20Metadata": [
        55789
      ],
      "IERC20MetadataUpgradeable": [
        54727
      ],
      "IERC20Upgradeable": [
        54702
      ],
      "IQuoter": [
        55965
      ],
      "ISwapRouter": [
        56065
      ],
      "IUniswapV2Factory": [
        3404
      ],
      "IUniswapV2Router01": [
        3712
      ],
      "IUniswapV2Router02": [
        3800
      ],
      "IUniswapV3Factory": [
        55894
      ],
      "IUniswapV3Pool": [
        3915
      ],
      "IUniswapV3PoolActions": [
        4028
      ],
      "IUniswapV3PoolDerivedState": [
        4059
      ],
      "IUniswapV3PoolErrors": [
        4087
      ],
      "IUniswapV3PoolEvents": [
        4206
      ],
      "IUniswapV3PoolImmutables": [
        4246
      ],
      "IUniswapV3PoolOwnerActions": [
        4272
      ],
      "IUniswapV3PoolState": [
        4380
      ],
      "IUniswapV3SwapCallback": [
        55908
      ],
      "IWETH": [
        3932
      ],
      "IndexFactory": [
        3392
      ],
      "IndexToken": [
        8163
      ],
      "Initializable": [
        53885
      ],
      "LinkERC20": [
        5984
      ],
      "LinkToken": [
        6085
      ],
      "LinkTokenInterface": [
        52272
      ],
      "LinkTokenReceiver": [
        7119
      ],
      "MockApiOracle": [
        6909
      ],
      "MockV3Aggregator": [
        52605
      ],
      "OperatorInterface": [
        52352
      ],
      "OracleInterface": [
        52391
      ],
      "OracleLibrary": [
        5193
      ],
      "OwnableUpgradeable": [
        53716
      ],
      "PausableUpgradeable": [
        54012
      ],
      "PointerInterface": [
        52399
      ],
      "ProposableOwnableUpgradeable": [
        5811
      ],
      "SafeMathChainlink": [
        7258
      ],
      "StdAssertions": [
        12097
      ],
      "StdChains": [
        12861
      ],
      "StdCheats": [
        15714
      ],
      "StdInvariant": [
        16039
      ],
      "StdStorage": [
        16805
      ],
      "StdStyle": [
        19655
      ],
      "StdUtils": [
        20503
      ],
      "Test": [
        20554
      ],
      "TestBase": [
        10670
      ],
      "TestSwap": [
        7006
      ],
      "TickMath": [
        5739
      ],
      "TokenInterface": [
        8312
      ],
      "TransferHelper": [
        56236
      ],
      "UniswapFactoryByteCode": [
        7012
      ],
      "Vm": [
        22265
      ],
      "console": [
        30329
      ],
      "console2": [
        38454
      ],
      "safeconsole": [
        51692
      ],
      "stdError": [
        15780
      ],
      "stdJson": [
        16631
      ],
      "stdMath": [
        16773
      ],
      "stdStorage": [
        18444
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:18355:80",
    "nodes": [
      {
        "id": 58487,
        "nodeType": "PragmaDirective",
        "src": "40:23:80",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 58488,
        "nodeType": "ImportDirective",
        "src": "67:28:80",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 20555,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58489,
        "nodeType": "ImportDirective",
        "src": "97:46:80",
        "nodes": [],
        "absolutePath": "contracts/token/IndexToken.sol",
        "file": "../../contracts/token/IndexToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 8164,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58490,
        "nodeType": "ImportDirective",
        "src": "145:50:80",
        "nodes": [],
        "absolutePath": "contracts/factory/IndexFactory.sol",
        "file": "../../contracts/factory/IndexFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 3393,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58491,
        "nodeType": "ImportDirective",
        "src": "197:43:80",
        "nodes": [],
        "absolutePath": "contracts/test/TestSwap.sol",
        "file": "../../contracts/test/TestSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 7007,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58492,
        "nodeType": "ImportDirective",
        "src": "242:55:80",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 55687,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58493,
        "nodeType": "ImportDirective",
        "src": "299:55:80",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 55687,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58494,
        "nodeType": "ImportDirective",
        "src": "356:68:80",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 56066,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58495,
        "nodeType": "ImportDirective",
        "src": "426:70:80",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 56237,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58496,
        "nodeType": "ImportDirective",
        "src": "498:64:80",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 55966,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58497,
        "nodeType": "ImportDirective",
        "src": "564:51:80",
        "nodes": [],
        "absolutePath": "contracts/test/MockV3Aggregator.sol",
        "file": "../../contracts/test/MockV3Aggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 6913,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58498,
        "nodeType": "ImportDirective",
        "src": "617:48:80",
        "nodes": [],
        "absolutePath": "contracts/test/MockApiOracle.sol",
        "file": "../../contracts/test/MockApiOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 6910,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58499,
        "nodeType": "ImportDirective",
        "src": "667:44:80",
        "nodes": [],
        "absolutePath": "contracts/test/LinkToken.sol",
        "file": "../../contracts/test/LinkToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 6087,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58500,
        "nodeType": "ImportDirective",
        "src": "713:55:80",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IUniswapV3Pool.sol",
        "file": "../../contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 3916,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58501,
        "nodeType": "ImportDirective",
        "src": "770:51:80",
        "nodes": [],
        "absolutePath": "contracts/test/MockV3Aggregator.sol",
        "file": "../../contracts/test/MockV3Aggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 6913,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58502,
        "nodeType": "ImportDirective",
        "src": "825:32:80",
        "nodes": [],
        "absolutePath": "test/foundry/ContractDeployer.sol",
        "file": "./ContractDeployer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59743,
        "sourceUnit": 56559,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59742,
        "nodeType": "ContractDefinition",
        "src": "861:17534:80",
        "nodes": [
          {
            "id": 58510,
            "nodeType": "UsingForDirective",
            "src": "917:32:80",
            "nodes": [],
            "libraryName": {
              "id": 58507,
              "name": "stdStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18444,
              "src": "923:10:80"
            },
            "typeName": {
              "id": 58509,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58508,
                "name": "StdStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16805,
                "src": "938:10:80"
              },
              "referencedDeclaration": 16805,
              "src": "938:10:80",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 58513,
            "nodeType": "VariableDeclaration",
            "src": "957:39:80",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SCALAR",
            "nameLocation": "983:6:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58511,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "957:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653230",
              "id": 58512,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "992:4:80",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "1e20"
            },
            "visibility": "internal"
          },
          {
            "id": 58516,
            "nodeType": "VariableDeclaration",
            "src": "1005:28:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "e7d015f2",
            "mutability": "mutable",
            "name": "indexToken",
            "nameLocation": "1023:10:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexToken_$8163",
              "typeString": "contract IndexToken"
            },
            "typeName": {
              "id": 58515,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58514,
                "name": "IndexToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8163,
                "src": "1005:10:80"
              },
              "referencedDeclaration": 8163,
              "src": "1005:10:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexToken_$8163",
                "typeString": "contract IndexToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58519,
            "nodeType": "VariableDeclaration",
            "src": "1040:27:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "c45a0155",
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "1060:7:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexFactory_$3392",
              "typeString": "contract IndexFactory"
            },
            "typeName": {
              "id": 58518,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58517,
                "name": "IndexFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3392,
                "src": "1040:12:80"
              },
              "referencedDeclaration": 3392,
              "src": "1040:12:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexFactory_$3392",
                "typeString": "contract IndexFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58522,
            "nodeType": "VariableDeclaration",
            "src": "1074:24:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "6e008a03",
            "mutability": "mutable",
            "name": "testSwap",
            "nameLocation": "1090:8:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestSwap_$7006",
              "typeString": "contract TestSwap"
            },
            "typeName": {
              "id": 58521,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58520,
                "name": "TestSwap",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7006,
                "src": "1074:8:80"
              },
              "referencedDeclaration": 7006,
              "src": "1074:8:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestSwap_$7006",
                "typeString": "contract TestSwap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58525,
            "nodeType": "VariableDeclaration",
            "src": "1105:38:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "ac0e47f5",
            "mutability": "mutable",
            "name": "ethPriceOracle",
            "nameLocation": "1129:14:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockV3Aggregator_$52605",
              "typeString": "contract MockV3Aggregator"
            },
            "typeName": {
              "id": 58524,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58523,
                "name": "MockV3Aggregator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52605,
                "src": "1105:16:80"
              },
              "referencedDeclaration": 52605,
              "src": "1105:16:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockV3Aggregator_$52605",
                "typeString": "contract MockV3Aggregator"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58527,
            "nodeType": "VariableDeclaration",
            "src": "1152:19:80",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mainnetFork",
            "nameLocation": "1160:11:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58526,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1152:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58536,
            "nodeType": "VariableDeclaration",
            "src": "3027:110:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0b4b301",
            "mutability": "mutable",
            "name": "assetList",
            "nameLocation": "3044:9:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 58528,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3027:7:80",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 58529,
              "nodeType": "ArrayTypeName",
              "src": "3027:9:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": {
              "components": [
                {
                  "id": 58530,
                  "name": "WBTC",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 56324,
                  "src": "3067:4:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 58531,
                  "name": "BNB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 56327,
                  "src": "3082:3:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 58532,
                  "name": "CURVE",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 56333,
                  "src": "3096:5:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 58533,
                  "name": "LINK",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 56336,
                  "src": "3112:4:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "id": 58534,
                  "name": "UNI",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 56339,
                  "src": "3127:3:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "id": 58535,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "3056:81:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                "typeString": "address[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58545,
            "nodeType": "VariableDeclaration",
            "src": "3146:115:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "3ae64e0c",
            "mutability": "mutable",
            "name": "tokenShares",
            "nameLocation": "3160:11:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 58537,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3146:4:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 58538,
              "nodeType": "ArrayTypeName",
              "src": "3146:6:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "3230653138",
                  "id": 58539,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3185:5:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 58540,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3201:5:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 58541,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3217:5:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 58542,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3233:5:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                },
                {
                  "hexValue": "3230653138",
                  "id": 58543,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3249:5:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20000000000000000000_by_1",
                    "typeString": "int_const 20000000000000000000"
                  },
                  "value": "20e18"
                }
              ],
              "id": 58544,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "3174:87:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint72_$5_memory_ptr",
                "typeString": "uint72[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58554,
            "nodeType": "VariableDeclaration",
            "src": "3270:96:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "5b718560",
            "mutability": "mutable",
            "name": "swapVersions",
            "nameLocation": "3284:12:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 58546,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3270:4:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 58547,
              "nodeType": "ArrayTypeName",
              "src": "3270:6:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "33",
                  "id": 58548,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3310:1:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 58549,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3322:1:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 58550,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3334:1:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 58551,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3346:1:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                {
                  "hexValue": "33",
                  "id": 58552,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3358:1:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "id": 58553,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "3299:67:80",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
                "typeString": "uint8[5] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58557,
            "nodeType": "VariableDeclaration",
            "src": "4040:16:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "f4b9fa75",
            "mutability": "mutable",
            "name": "dai",
            "nameLocation": "4053:3:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$55686",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 58556,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58555,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55686,
                "src": "4040:5:80"
              },
              "referencedDeclaration": 55686,
              "src": "4040:5:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$55686",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58560,
            "nodeType": "VariableDeclaration",
            "src": "4063:17:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "4076:4:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$3932",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 58559,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58558,
                "name": "IWETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3932,
                "src": "4063:5:80"
              },
              "referencedDeclaration": 3932,
              "src": "4063:5:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$3932",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58563,
            "nodeType": "VariableDeclaration",
            "src": "4115:21:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "c6bbd5a7",
            "mutability": "mutable",
            "name": "quoter",
            "nameLocation": "4130:6:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IQuoter_$55965",
              "typeString": "contract IQuoter"
            },
            "typeName": {
              "id": 58562,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58561,
                "name": "IQuoter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55965,
                "src": "4115:7:80"
              },
              "referencedDeclaration": 55965,
              "src": "4115:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IQuoter_$55965",
                "typeString": "contract IQuoter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58569,
            "nodeType": "VariableDeclaration",
            "src": "4145:56:80",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "MAINNET_RPC_URL",
            "nameLocation": "4152:15:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 58564,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "4145:6:80",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d41494e4e45545f5250435f55524c",
                  "id": 58567,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4183:17:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  },
                  "value": "MAINNET_RPC_URL"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  }
                ],
                "expression": {
                  "id": 58565,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10663,
                  "src": "4170:2:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$22265",
                    "typeString": "contract Vm"
                  }
                },
                "id": 58566,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 20987,
                "src": "4170:12:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 58568,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4170:31:80",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58572,
            "nodeType": "VariableDeclaration",
            "src": "4270:27:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "4291:6:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockApiOracle_$6909",
              "typeString": "contract MockApiOracle"
            },
            "typeName": {
              "id": 58571,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58570,
                "name": "MockApiOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6909,
                "src": "4270:13:80"
              },
              "referencedDeclaration": 6909,
              "src": "4270:13:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockApiOracle_$6909",
                "typeString": "contract MockApiOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58575,
            "nodeType": "VariableDeclaration",
            "src": "4304:14:80",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "link",
            "nameLocation": "4314:4:80",
            "scope": 59742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkToken_$6085",
              "typeString": "contract LinkToken"
            },
            "typeName": {
              "id": 58574,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58573,
                "name": "LinkToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6085,
                "src": "4304:9:80"
              },
              "referencedDeclaration": 6085,
              "src": "4304:9:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkToken_$6085",
                "typeString": "contract LinkToken"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58579,
            "nodeType": "EventDefinition",
            "src": "4327:50:80",
            "nodes": [],
            "anonymous": false,
            "name": "FeeReceiverSet",
            "nameLocation": "4333:14:80",
            "parameters": {
              "id": 58578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58577,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "4364:11:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58579,
                  "src": "4348:27:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4348:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4347:29:80"
            }
          },
          {
            "id": 58583,
            "nodeType": "EventDefinition",
            "src": "4383:54:80",
            "nodes": [],
            "anonymous": false,
            "name": "FeeRateSet",
            "nameLocation": "4389:10:80",
            "parameters": {
              "id": 58582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58581,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeRatePerDayScaled",
                  "nameLocation": "4416:19:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58583,
                  "src": "4400:35:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4400:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4399:37:80"
            }
          },
          {
            "id": 58587,
            "nodeType": "EventDefinition",
            "src": "4443:54:80",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologistSet",
            "nameLocation": "4449:16:80",
            "parameters": {
              "id": 58586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58585,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "methodologist",
                  "nameLocation": "4482:13:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58587,
                  "src": "4466:29:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4466:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4465:31:80"
            }
          },
          {
            "id": 58591,
            "nodeType": "EventDefinition",
            "src": "4503:41:80",
            "nodes": [],
            "anonymous": false,
            "name": "MethodologySet",
            "nameLocation": "4509:14:80",
            "parameters": {
              "id": 58590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58589,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "methodology",
                  "nameLocation": "4531:11:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58591,
                  "src": "4524:18:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58588,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4524:6:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4523:20:80"
            }
          },
          {
            "id": 58595,
            "nodeType": "EventDefinition",
            "src": "4550:40:80",
            "nodes": [],
            "anonymous": false,
            "name": "MinterSet",
            "nameLocation": "4556:9:80",
            "parameters": {
              "id": 58594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58593,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "4582:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58595,
                  "src": "4566:22:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4566:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4565:24:80"
            }
          },
          {
            "id": 58599,
            "nodeType": "EventDefinition",
            "src": "4596:46:80",
            "nodes": [],
            "anonymous": false,
            "name": "SupplyCeilingSet",
            "nameLocation": "4602:16:80",
            "parameters": {
              "id": 58598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58597,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supplyCeiling",
                  "nameLocation": "4627:13:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58599,
                  "src": "4619:21:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4619:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4618:23:80"
            }
          },
          {
            "id": 58609,
            "nodeType": "EventDefinition",
            "src": "4648:101:80",
            "nodes": [],
            "anonymous": false,
            "name": "MintFeeToReceiver",
            "nameLocation": "4654:17:80",
            "parameters": {
              "id": 58608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58601,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeReceiver",
                  "nameLocation": "4680:11:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58609,
                  "src": "4672:19:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4672:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58603,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "4701:9:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58609,
                  "src": "4693:17:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4693:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58605,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "4720:11:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58609,
                  "src": "4712:19:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4712:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58607,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4741:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58609,
                  "src": "4733:14:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4733:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4671:77:80"
            }
          },
          {
            "id": 58615,
            "nodeType": "EventDefinition",
            "src": "4755:68:80",
            "nodes": [],
            "anonymous": false,
            "name": "ToggledRestricted",
            "nameLocation": "4761:17:80",
            "parameters": {
              "id": 58614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58611,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4795:7:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58615,
                  "src": "4779:23:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4779:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58613,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isRestricted",
                  "nameLocation": "4809:12:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 58615,
                  "src": "4804:17:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 58612,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4804:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4778:44:80"
            }
          },
          {
            "id": 58661,
            "nodeType": "FunctionDefinition",
            "src": "4833:1585:80",
            "nodes": [],
            "body": {
              "id": 58660,
              "nodeType": "Block",
              "src": "4857:1561:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 58623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58618,
                      "name": "mainnetFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58527,
                      "src": "4868:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58621,
                          "name": "MAINNET_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58569,
                          "src": "4896:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 58619,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "4882:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$22265",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 58620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21991,
                        "src": "4882:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 58622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4882:30:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4868:44:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58624,
                  "nodeType": "ExpressionStatement",
                  "src": "4868:44:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58628,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58527,
                        "src": "4937:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 58625,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "4923:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22265",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 58627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22054,
                      "src": "4923:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 58629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4923:26:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58630,
                  "nodeType": "ExpressionStatement",
                  "src": "4923:26:80"
                },
                {
                  "expression": {
                    "id": 58640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 58631,
                          "name": "link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58575,
                          "src": "4961:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkToken_$6085",
                            "typeString": "contract LinkToken"
                          }
                        },
                        {
                          "id": 58632,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58572,
                          "src": "4967:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockApiOracle_$6909",
                            "typeString": "contract MockApiOracle"
                          }
                        },
                        {
                          "id": 58633,
                          "name": "indexToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58516,
                          "src": "4975:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexToken_$8163",
                            "typeString": "contract IndexToken"
                          }
                        },
                        {
                          "id": 58634,
                          "name": "ethPriceOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58525,
                          "src": "4987:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockV3Aggregator_$52605",
                            "typeString": "contract MockV3Aggregator"
                          }
                        },
                        {
                          "id": 58635,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58519,
                          "src": "5003:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexFactory_$3392",
                            "typeString": "contract IndexFactory"
                          }
                        },
                        {
                          "id": 58636,
                          "name": "testSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58522,
                          "src": "5012:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestSwap_$7006",
                            "typeString": "contract TestSwap"
                          }
                        }
                      ],
                      "id": 58637,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4960:61:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_LinkToken_$6085_$_t_contract$_MockApiOracle_$6909_$_t_contract$_IndexToken_$8163_$_t_contract$_MockV3Aggregator_$52605_$_t_contract$_IndexFactory_$3392_$_t_contract$_TestSwap_$7006_$",
                        "typeString": "tuple(contract LinkToken,contract MockApiOracle,contract IndexToken,contract MockV3Aggregator,contract IndexFactory,contract TestSwap)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 58638,
                        "name": "deployContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56521,
                        "src": "5024:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_LinkToken_$6085_$_t_contract$_MockApiOracle_$6909_$_t_contract$_IndexToken_$8163_$_t_contract$_MockV3Aggregator_$52605_$_t_contract$_IndexFactory_$3392_$_t_contract$_TestSwap_$7006_$",
                          "typeString": "function () returns (contract LinkToken,contract MockApiOracle,contract IndexToken,contract MockV3Aggregator,contract IndexFactory,contract TestSwap)"
                        }
                      },
                      "id": 58639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5024:17:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_LinkToken_$6085_$_t_contract$_MockApiOracle_$6909_$_t_contract$_IndexToken_$8163_$_t_contract$_MockV3Aggregator_$52605_$_t_contract$_IndexFactory_$3392_$_t_contract$_TestSwap_$7006_$",
                        "typeString": "tuple(contract LinkToken,contract MockApiOracle,contract IndexToken,contract MockV3Aggregator,contract IndexFactory,contract TestSwap)"
                      }
                    },
                    "src": "4960:81:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58641,
                  "nodeType": "ExpressionStatement",
                  "src": "4960:81:80"
                },
                {
                  "expression": {
                    "id": 58646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58642,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58557,
                      "src": "5052:3:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$55686",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58644,
                          "name": "DAI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56279,
                          "src": "5064:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 58643,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55686,
                        "src": "5058:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$55686_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 58645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5058:10:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$55686",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "5052:16:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$55686",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 58647,
                  "nodeType": "ExpressionStatement",
                  "src": "5052:16:80"
                },
                {
                  "expression": {
                    "id": 58652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58648,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58560,
                      "src": "5079:4:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$3932",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58650,
                          "name": "WETH9",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56261,
                          "src": "5092:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 58649,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3932,
                        "src": "5086:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$3932_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 58651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5086:12:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$3932",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "5079:19:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$3932",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 58653,
                  "nodeType": "ExpressionStatement",
                  "src": "5079:19:80"
                },
                {
                  "expression": {
                    "id": 58658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58654,
                      "name": "quoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58563,
                      "src": "5109:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$55965",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58656,
                          "name": "QUOTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56264,
                          "src": "5126:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 58655,
                        "name": "IQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55965,
                        "src": "5118:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IQuoter_$55965_$",
                          "typeString": "type(contract IQuoter)"
                        }
                      },
                      "id": 58657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5118:15:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$55965",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "src": "5109:24:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IQuoter_$55965",
                      "typeString": "contract IQuoter"
                    }
                  },
                  "id": 58659,
                  "nodeType": "ExpressionStatement",
                  "src": "5109:24:80"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "4842:5:80",
            "parameters": {
              "id": 58616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4847:2:80"
            },
            "returnParameters": {
              "id": 58617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4857:0:80"
            },
            "scope": 59742,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58721,
            "nodeType": "FunctionDefinition",
            "src": "6426:475:80",
            "nodes": [],
            "body": {
              "id": 58720,
              "nodeType": "Block",
              "src": "6460:441:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 58665,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "6513:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 58666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53639,
                          "src": "6513:16:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 58667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6513:18:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 58670,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6541:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$59742",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$59742",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 58669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6533:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58668,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6533:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6533:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58664,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8633,
                      "src": "6504:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 58672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6504:43:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58673,
                  "nodeType": "ExpressionStatement",
                  "src": "6504:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 58675,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "6567:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 58676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeRatePerDayScaled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7289,
                          "src": "6567:30:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 58677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6567:32:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 58678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6601:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 58674,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "6558:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6558:48:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58680,
                  "nodeType": "ExpressionStatement",
                  "src": "6558:48:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 58682,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "6626:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 58683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7291,
                          "src": "6626:23:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 58684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6626:25:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 58685,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6653:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 58686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6653:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58681,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "6617:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6617:52:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58688,
                  "nodeType": "ExpressionStatement",
                  "src": "6617:52:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 58690,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "6689:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 58691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeReceiver",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7293,
                          "src": "6689:22:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 58692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6689:24:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 58693,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56345,
                        "src": "6715:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58689,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8633,
                      "src": "6680:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 58694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6680:47:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58695,
                  "nodeType": "ExpressionStatement",
                  "src": "6680:47:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 58697,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "6747:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 58698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "methodology",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7299,
                          "src": "6747:22:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 58699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6747:24:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 58700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6773:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 58696,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 10325,
                      "src": "6738:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 58701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6738:38:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58702,
                  "nodeType": "ExpressionStatement",
                  "src": "6738:38:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 58704,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "6796:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 58705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supplyCeiling",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7301,
                          "src": "6796:24:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 58706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6796:26:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 58707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6824:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "id": 58703,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "6787:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6787:48:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58709,
                  "nodeType": "ExpressionStatement",
                  "src": "6787:48:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 58711,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "6855:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 58712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7297,
                          "src": "6855:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 58713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6855:19:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 58716,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "6884:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 58715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6876:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58714,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6876:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6876:16:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58710,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8633,
                      "src": "6846:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 58718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6846:47:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58719,
                  "nodeType": "ExpressionStatement",
                  "src": "6846:47:80"
                }
              ]
            },
            "functionSelector": "0e7628c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialized",
            "nameLocation": "6435:15:80",
            "parameters": {
              "id": 58662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6450:2:80"
            },
            "returnParameters": {
              "id": 58663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6460:0:80"
            },
            "scope": 59742,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58724,
            "nodeType": "EnumDefinition",
            "src": "6909:64:80",
            "nodes": [],
            "canonicalName": "CounterTest.DexStatus",
            "members": [
              {
                "id": 58722,
                "name": "UNISWAP_V2",
                "nameLocation": "6935:10:80",
                "nodeType": "EnumValue",
                "src": "6935:10:80"
              },
              {
                "id": 58723,
                "name": "UNISWAP_V3",
                "nameLocation": "6956:10:80",
                "nodeType": "EnumValue",
                "src": "6956:10:80"
              }
            ],
            "name": "DexStatus",
            "nameLocation": "6914:9:80"
          },
          {
            "id": 58753,
            "nodeType": "FunctionDefinition",
            "src": "6981:410:80",
            "nodes": [],
            "body": {
              "id": 58752,
              "nodeType": "Block",
              "src": "7016:375:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58732,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "7212:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 58731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7204:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7204:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7204:16:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 58734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7222:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 58727,
                        "name": "link",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58575,
                        "src": "7190:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkToken_$6085",
                          "typeString": "contract LinkToken"
                        }
                      },
                      "id": 58729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55223,
                      "src": "7190:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 58735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7190:37:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58736,
                  "nodeType": "ExpressionStatement",
                  "src": "7190:37:80"
                },
                {
                  "assignments": [
                    58738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58738,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "7246:9:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 58752,
                      "src": "7238:17:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 58737,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7238:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58742,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 58739,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "7258:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 58740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestAssetsData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1478,
                      "src": "7258:25:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () external returns (bytes32)"
                      }
                    },
                    "id": 58741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7258:27:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7238:47:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58746,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58738,
                        "src": "7335:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 58747,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58536,
                        "src": "7346:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "id": 58748,
                        "name": "tokenShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58545,
                        "src": "7357:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "id": 58749,
                        "name": "swapVersions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58554,
                        "src": "7370:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 58743,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58572,
                        "src": "7296:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockApiOracle_$6909",
                          "typeString": "contract MockApiOracle"
                        }
                      },
                      "id": 58745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fulfillOracleFundingRateRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6350,
                      "src": "7296:38:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address[] memory,uint256[] memory,uint256[] memory) external returns (bool)"
                      }
                    },
                    "id": 58750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7296:87:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58751,
                  "nodeType": "ExpressionStatement",
                  "src": "7296:87:80"
                }
              ]
            },
            "functionSelector": "95d5772d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOracleList",
            "nameLocation": "6990:16:80",
            "parameters": {
              "id": 58725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7006:2:80"
            },
            "returnParameters": {
              "id": 58726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7016:0:80"
            },
            "scope": 59742,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58930,
            "nodeType": "FunctionDefinition",
            "src": "7397:2288:80",
            "nodes": [],
            "body": {
              "id": 58929,
              "nodeType": "Block",
              "src": "7430:2255:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58756,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58753,
                      "src": "7441:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 58757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7441:18:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58758,
                  "nodeType": "ExpressionStatement",
                  "src": "7441:18:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 58762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7521:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 58760,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "7502:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 972,
                          "src": "7502:18:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 58763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7502:21:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58764,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58536,
                          "src": "7525:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 58766,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 58765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7535:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7525:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58759,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8633,
                      "src": "7493:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 58767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7493:45:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58768,
                  "nodeType": "ExpressionStatement",
                  "src": "7493:45:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 58772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7577:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 58770,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "7558:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 972,
                          "src": "7558:18:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 58773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7558:21:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58774,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58536,
                          "src": "7581:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 58776,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 58775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7591:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7581:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58769,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8633,
                      "src": "7549:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 58777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7549:45:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58778,
                  "nodeType": "ExpressionStatement",
                  "src": "7549:45:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 58782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7633:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 58780,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "7614:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 972,
                          "src": "7614:18:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 58783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7614:21:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58784,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58536,
                          "src": "7637:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 58786,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 58785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7647:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7637:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58779,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8633,
                      "src": "7605:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 58787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7605:45:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58788,
                  "nodeType": "ExpressionStatement",
                  "src": "7605:45:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 58792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7689:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 58790,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "7670:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 972,
                          "src": "7670:18:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 58793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7670:21:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58794,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58536,
                          "src": "7693:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 58796,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 58795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7703:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7693:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58789,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8633,
                      "src": "7661:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 58797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7661:45:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58798,
                  "nodeType": "ExpressionStatement",
                  "src": "7661:45:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 58802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7745:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 58800,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "7726:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oracleList",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 972,
                          "src": "7726:18:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 58803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7726:21:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58804,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58536,
                          "src": "7749:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 58806,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 58805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7759:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7749:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58799,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8633,
                      "src": "7717:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 58807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7717:45:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58808,
                  "nodeType": "ExpressionStatement",
                  "src": "7717:45:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 58812,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58536,
                              "src": "8133:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 58814,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 58813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8143:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8133:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 58810,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "8102:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenOracleMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 992,
                          "src": "8102:30:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8102:44:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58816,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58545,
                          "src": "8148:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 58818,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 58817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8160:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8148:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58809,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "8093:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8093:70:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58820,
                  "nodeType": "ExpressionStatement",
                  "src": "8093:70:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 58824,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58536,
                              "src": "8214:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 58826,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 58825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8224:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8214:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 58822,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "8183:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenOracleMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 992,
                          "src": "8183:30:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8183:44:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58828,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58545,
                          "src": "8229:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 58830,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 58829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8241:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8229:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58821,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "8174:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8174:70:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58832,
                  "nodeType": "ExpressionStatement",
                  "src": "8174:70:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 58836,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58536,
                              "src": "8295:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 58838,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 58837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8305:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8295:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 58834,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "8264:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenOracleMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 992,
                          "src": "8264:30:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8264:44:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58840,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58545,
                          "src": "8310:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 58842,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 58841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8322:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8310:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58833,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "8255:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8255:70:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58844,
                  "nodeType": "ExpressionStatement",
                  "src": "8255:70:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 58848,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58536,
                              "src": "8376:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 58850,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 58849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8386:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8376:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 58846,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "8345:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenOracleMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 992,
                          "src": "8345:30:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8345:44:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58852,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58545,
                          "src": "8391:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 58854,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 58853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8403:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8391:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58845,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "8336:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8336:70:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58856,
                  "nodeType": "ExpressionStatement",
                  "src": "8336:70:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 58860,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58536,
                              "src": "8457:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 58862,
                            "indexExpression": {
                              "hexValue": "34",
                              "id": 58861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8467:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8457:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 58858,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "8426:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenOracleMarketShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 992,
                          "src": "8426:30:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8426:44:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58864,
                          "name": "tokenShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58545,
                          "src": "8472:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 58866,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 58865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8484:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8472:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58857,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "8417:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8417:70:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58868,
                  "nodeType": "ExpressionStatement",
                  "src": "8417:70:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 58872,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58536,
                              "src": "8947:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 58874,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 58873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8957:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8947:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 58870,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "8922:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 996,
                          "src": "8922:24:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8922:38:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58876,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58554,
                          "src": "8962:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 58878,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 58877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8975:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8962:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58869,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "8913:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8913:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58880,
                  "nodeType": "ExpressionStatement",
                  "src": "8913:65:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 58884,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58536,
                              "src": "9023:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 58886,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 58885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9033:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9023:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 58882,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "8998:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 996,
                          "src": "8998:24:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8998:38:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58888,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58554,
                          "src": "9038:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 58890,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 58889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9051:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9038:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58881,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "8989:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8989:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58892,
                  "nodeType": "ExpressionStatement",
                  "src": "8989:65:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 58896,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58536,
                              "src": "9099:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 58898,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 58897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9109:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9099:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 58894,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "9074:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 996,
                          "src": "9074:24:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9074:38:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58900,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58554,
                          "src": "9114:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 58902,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 58901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9127:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9114:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58893,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "9065:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9065:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58904,
                  "nodeType": "ExpressionStatement",
                  "src": "9065:65:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 58908,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58536,
                              "src": "9175:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 58910,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 58909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9185:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9175:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 58906,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "9150:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 996,
                          "src": "9150:24:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9150:38:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58912,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58554,
                          "src": "9190:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 58914,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 58913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9203:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9190:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58905,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "9141:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9141:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58916,
                  "nodeType": "ExpressionStatement",
                  "src": "9141:65:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 58920,
                              "name": "assetList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58536,
                              "src": "9251:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 58922,
                            "indexExpression": {
                              "hexValue": "34",
                              "id": 58921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9261:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9251:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 58918,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "9226:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 58919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenSwapVersion",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 996,
                          "src": "9226:24:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9226:38:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 58924,
                          "name": "swapVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58554,
                          "src": "9266:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 58926,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 58925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9279:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9266:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58917,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10798,
                        10823,
                        10836,
                        10852,
                        10894,
                        10936,
                        10978,
                        11015,
                        11052,
                        11089,
                        8633,
                        8658,
                        8688,
                        8713,
                        8772,
                        8797,
                        8827,
                        8852,
                        10325,
                        10360
                      ],
                      "referencedDeclaration": 8827,
                      "src": "9217:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 58927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9217:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58928,
                  "nodeType": "ExpressionStatement",
                  "src": "9217:65:80"
                }
              ]
            },
            "functionSelector": "39c66af1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOracleList",
            "nameLocation": "7406:14:80",
            "parameters": {
              "id": 58754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7420:2:80"
            },
            "returnParameters": {
              "id": 58755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7430:0:80"
            },
            "scope": 59742,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59053,
            "nodeType": "FunctionDefinition",
            "src": "9699:797:80",
            "nodes": [],
            "body": {
              "id": 59052,
              "nodeType": "Block",
              "src": "9737:759:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58934,
                      "mutability": "mutable",
                      "name": "startAmount",
                      "nameLocation": "9753:11:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59052,
                      "src": "9748:16:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58933,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9748:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58936,
                  "initialValue": {
                    "hexValue": "31653134",
                    "id": 58935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9767:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000_by_1",
                      "typeString": "int_const 100000000000000"
                    },
                    "value": "1e14"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9748:23:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58937,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58753,
                      "src": "9794:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 58938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9794:18:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58939,
                  "nodeType": "ExpressionStatement",
                  "src": "9794:18:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58943,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56375,
                        "src": "9854:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58940,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "9833:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 58942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5805,
                      "src": "9833:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 58944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9833:27:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58945,
                  "nodeType": "ExpressionStatement",
                  "src": "9833:27:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58949,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56375,
                        "src": "9885:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58946,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "9871:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22265",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 58948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21931,
                      "src": "9871:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 58950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9871:20:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58951,
                  "nodeType": "ExpressionStatement",
                  "src": "9871:20:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58955,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56375,
                        "src": "9928:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58952,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "9902:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 58954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5783,
                      "src": "9902:25:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 58956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9902:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58957,
                  "nodeType": "ExpressionStatement",
                  "src": "9902:32:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 58958,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "9945:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22265",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 58960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21948,
                      "src": "9945:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 58961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9945:14:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58962,
                  "nodeType": "ExpressionStatement",
                  "src": "9945:14:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3131653138",
                        "id": 58968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9993:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11000000000000000000_by_1",
                          "typeString": "int_const 11000000000000000000"
                        },
                        "value": "11e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_11000000000000000000_by_1",
                          "typeString": "int_const 11000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 58965,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56381,
                            "src": "9978:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9970:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 58963,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9970:8:80",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9970:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 58967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9970:22:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 58969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9970:29:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58970,
                  "nodeType": "ExpressionStatement",
                  "src": "9970:29:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58974,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56381,
                        "src": "10024:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58971,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "10010:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22265",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 58973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21931,
                      "src": "10010:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 58975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10010:19:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58976,
                  "nodeType": "ExpressionStatement",
                  "src": "10010:19:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "464c4f4b49",
                        "id": 58980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10052:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        "value": "FLOKI"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 58987,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58519,
                                "src": "10093:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                  "typeString": "contract IndexFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                  "typeString": "contract IndexFactory"
                                }
                              ],
                              "id": 58986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10085:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 58985,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10085:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 58988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10085:16:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 58982,
                                "name": "FLOKI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56300,
                                "src": "10068:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 58981,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55764,
                              "src": "10061:6:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 58983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10061:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$55764",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 58984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55721,
                          "src": "10061:23:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 58989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10061:41:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 58977,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "10040:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 58979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "10040:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 58990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10040:63:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58991,
                  "nodeType": "ExpressionStatement",
                  "src": "10040:63:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 59002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10184:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 58992,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58519,
                          "src": "10124:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IndexFactory_$3392",
                            "typeString": "contract IndexFactory"
                          }
                        },
                        "id": 58994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issuanceIndexTokensWithEth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2263,
                        "src": "10124:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 59001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1001000000000000000_by_1",
                            "typeString": "int_const 1001000000000000000"
                          },
                          "id": 59000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                                  "typeString": "int_const 1001000000000000000000"
                                },
                                "id": 58997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31653138",
                                  "id": 58995,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10167:4:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31303031",
                                  "id": 58996,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10172:4:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1001_by_1",
                                    "typeString": "int_const 1001"
                                  },
                                  "value": "1001"
                                },
                                "src": "10167:9:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                                  "typeString": "int_const 1001000000000000000000"
                                }
                              }
                            ],
                            "id": 58998,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10166:11:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                              "typeString": "int_const 1001000000000000000000"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 58999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10178:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "10166:16:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001000000000000000_by_1",
                            "typeString": "int_const 1001000000000000000"
                          }
                        }
                      ],
                      "src": "10124:59:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 59003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10124:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59004,
                  "nodeType": "ExpressionStatement",
                  "src": "10124:65:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "696e64657820746f6b656e2062616c616e6365",
                        "id": 59008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10212:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        "value": "index token balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 59013,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56381,
                                "src": "10264:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10256:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59011,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10256:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10256:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59009,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "10235:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 59010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54131,
                          "src": "10235:20:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10235:35:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59005,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "10200:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "10200:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10200:71:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59017,
                  "nodeType": "ExpressionStatement",
                  "src": "10200:71:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f7274666f6c696f2076616c7565",
                        "id": 59021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10294:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        "value": "portfolio value"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 59022,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "10313:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 59023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2807,
                          "src": "10313:27:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 59024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10313:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59018,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "10282:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "10282:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10282:61:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59026,
                  "nodeType": "ExpressionStatement",
                  "src": "10282:61:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 59034,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56381,
                                "src": "10402:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10394:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59032,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10394:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10394:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59030,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "10373:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 59031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54131,
                          "src": "10373:20:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10373:35:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 59039,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58560,
                            "src": "10418:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$3932",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$3932",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 59038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10410:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10410:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10410:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 59041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10425:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 59027,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "10354:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 59029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2476,
                      "src": "10354:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 59042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10354:73:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59043,
                  "nodeType": "ExpressionStatement",
                  "src": "10354:73:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 59047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10450:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "expression": {
                          "id": 59048,
                          "name": "add1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56381,
                          "src": "10475:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 59049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10475:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59044,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "10438:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "10438:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10438:50:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59051,
                  "nodeType": "ExpressionStatement",
                  "src": "10438:50:80"
                }
              ]
            },
            "functionSelector": "85f65a27",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIssuanceWithEth",
            "nameLocation": "9708:19:80",
            "parameters": {
              "id": 58931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9727:2:80"
            },
            "returnParameters": {
              "id": 58932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9737:0:80"
            },
            "scope": 59742,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59246,
            "nodeType": "FunctionDefinition",
            "src": "10506:1741:80",
            "nodes": [],
            "body": {
              "id": 59245,
              "nodeType": "Block",
              "src": "10547:1700:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59057,
                      "mutability": "mutable",
                      "name": "startAmount",
                      "nameLocation": "10563:11:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59245,
                      "src": "10558:16:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59056,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10558:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59059,
                  "initialValue": {
                    "hexValue": "31653134",
                    "id": 59058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10577:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000_by_1",
                      "typeString": "int_const 100000000000000"
                    },
                    "value": "1e14"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10558:23:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 59060,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58560,
                          "src": "10602:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$3932",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 59062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3925,
                        "src": "10602:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 59064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130653138",
                          "id": 59063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10621:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10e18"
                        }
                      ],
                      "src": "10602:25:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 59065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10602:27:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59066,
                  "nodeType": "ExpressionStatement",
                  "src": "10602:27:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59073,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56291,
                            "src": "10670:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$56065",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$56065",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 59072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10662:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59071,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10662:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10662:19:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 59075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10683:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 59068,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56261,
                            "src": "10647:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59067,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55764,
                          "src": "10640:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 59069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10640:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$55764",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 59070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55751,
                      "src": "10640:21:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 59076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10640:49:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59077,
                  "nodeType": "ExpressionStatement",
                  "src": "10640:49:80"
                },
                {
                  "assignments": [
                    59082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59082,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "10742:6:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59245,
                      "src": "10700:48:80",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 59081,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59080,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55989,
                          "src": "10700:34:80"
                        },
                        "referencedDeclaration": 55989,
                        "src": "10700:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59098,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59085,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56261,
                        "src": "10820:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59086,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56279,
                        "src": "10850:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 59087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10903:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59090,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10941:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$59742",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$59742",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 59089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10933:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59088,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10933:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10933:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59092,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10971:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 59093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "10971:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 59094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11011:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      },
                      {
                        "hexValue": "30",
                        "id": 59095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11049:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 59096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11283:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 59083,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56065,
                        "src": "10751:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$56065_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 59084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55989,
                      "src": "10751:44:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$55989_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 59097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10751:545:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10700:596:80"
                },
                {
                  "assignments": [
                    59100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59100,
                      "mutability": "mutable",
                      "name": "finalAmountOut",
                      "nameLocation": "11312:14:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59245,
                      "src": "11307:19:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59099,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11307:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59105,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59103,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59082,
                        "src": "11357:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 59101,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56291,
                        "src": "11329:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$56065",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 59102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55998,
                      "src": "11329:27:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$55989_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 59104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11329:35:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11307:57:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6461692062616c616c6e6365",
                        "id": 59109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11387:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        "value": "dai balalnce"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 59116,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11433:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$59742",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$59742",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 59115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11425:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59114,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11425:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11425:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 59111,
                                "name": "DAI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56279,
                                "src": "11410:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59110,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55764,
                              "src": "11403:6:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 59112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11403:11:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$55764",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 59113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55721,
                          "src": "11403:21:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11403:36:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59106,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "11375:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "11375:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11375:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59120,
                  "nodeType": "ExpressionStatement",
                  "src": "11375:65:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 59121,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58753,
                      "src": "11451:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 59122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11451:18:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59123,
                  "nodeType": "ExpressionStatement",
                  "src": "11451:18:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59127,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56375,
                        "src": "11511:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 59124,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "11490:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 59126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5805,
                      "src": "11490:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 59128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11490:27:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59129,
                  "nodeType": "ExpressionStatement",
                  "src": "11490:27:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59133,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56375,
                        "src": "11542:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 59130,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "11528:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22265",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 59132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21931,
                      "src": "11528:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 59134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11528:20:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59135,
                  "nodeType": "ExpressionStatement",
                  "src": "11528:20:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59139,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56375,
                        "src": "11585:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 59136,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "11559:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 59138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5783,
                      "src": "11559:25:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 59140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11559:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59141,
                  "nodeType": "ExpressionStatement",
                  "src": "11559:32:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 59142,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "11602:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22265",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 59144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21948,
                      "src": "11602:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 59145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11602:14:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59146,
                  "nodeType": "ExpressionStatement",
                  "src": "11602:14:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59151,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56381,
                        "src": "11691:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 59152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11697:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 59148,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56279,
                            "src": "11677:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59147,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55764,
                          "src": "11670:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 59149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11670:11:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$55764",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 59150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55731,
                      "src": "11670:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 59153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11670:35:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59154,
                  "nodeType": "ExpressionStatement",
                  "src": "11670:35:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59158,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56381,
                        "src": "11730:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 59155,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "11716:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22265",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 59157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21931,
                      "src": "11716:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 59159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11716:19:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59160,
                  "nodeType": "ExpressionStatement",
                  "src": "11716:19:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "464c4f4b49",
                        "id": 59164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11758:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        "value": "FLOKI"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 59171,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58519,
                                "src": "11799:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                  "typeString": "contract IndexFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                  "typeString": "contract IndexFactory"
                                }
                              ],
                              "id": 59170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11791:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59169,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11791:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11791:16:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 59166,
                                "name": "FLOKI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56300,
                                "src": "11774:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59165,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55764,
                              "src": "11767:6:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 59167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11767:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$55764",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 59168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55721,
                          "src": "11767:23:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11767:41:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59161,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "11746:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "11746:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11746:63:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59175,
                  "nodeType": "ExpressionStatement",
                  "src": "11746:63:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59182,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "11858:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 59181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11850:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59180,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11850:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11850:16:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 59184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11868:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 59177,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56279,
                            "src": "11837:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59176,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55764,
                          "src": "11830:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 59178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11830:11:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$55764",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 59179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55751,
                      "src": "11830:19:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 59185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11830:46:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59186,
                  "nodeType": "ExpressionStatement",
                  "src": "11830:46:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59192,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56279,
                            "src": "11923:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11915:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59190,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11915:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11915:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030653138",
                        "id": 59194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11929:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      },
                      {
                        "hexValue": "33",
                        "id": 59195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11938:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 59187,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "11887:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 59189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuanceIndexTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2096,
                      "src": "11887:27:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 59196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11887:53:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59197,
                  "nodeType": "ExpressionStatement",
                  "src": "11887:53:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "696e64657820746f6b656e2062616c616e6365",
                        "id": 59201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11963:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        "value": "index token balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 59206,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56381,
                                "src": "12015:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12007:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59204,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12007:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12007:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59202,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "11986:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 59203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54131,
                          "src": "11986:20:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11986:35:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59198,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "11951:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "11951:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11951:71:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59210,
                  "nodeType": "ExpressionStatement",
                  "src": "11951:71:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f7274666f6c696f2076616c7565",
                        "id": 59214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12045:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        "value": "portfolio value"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 59215,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "12064:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 59216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2807,
                          "src": "12064:27:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 59217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12064:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59211,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "12033:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "12033:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12033:61:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59219,
                  "nodeType": "ExpressionStatement",
                  "src": "12033:61:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 59227,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56381,
                                "src": "12153:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12145:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59225,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12145:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12145:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59223,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "12124:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 59224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54131,
                          "src": "12124:20:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12124:35:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 59232,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58560,
                            "src": "12169:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$3932",
                              "typeString": "contract IWETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IWETH_$3932",
                              "typeString": "contract IWETH"
                            }
                          ],
                          "id": 59231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12161:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59230,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12161:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12161:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 59234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12176:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 59220,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "12105:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 59222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2476,
                      "src": "12105:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 59235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12105:73:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59236,
                  "nodeType": "ExpressionStatement",
                  "src": "12105:73:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 59240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12201:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "expression": {
                          "id": 59241,
                          "name": "add1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56381,
                          "src": "12226:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 59242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "12226:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59237,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "12189:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "12189:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12189:50:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59244,
                  "nodeType": "ExpressionStatement",
                  "src": "12189:50:80"
                }
              ]
            },
            "functionSelector": "5cc6f954",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIssuanceWithTokens",
            "nameLocation": "10515:22:80",
            "parameters": {
              "id": 59054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10537:2:80"
            },
            "returnParameters": {
              "id": 59055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10547:0:80"
            },
            "scope": 59742,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59505,
            "nodeType": "FunctionDefinition",
            "src": "12257:2192:80",
            "nodes": [],
            "body": {
              "id": 59504,
              "nodeType": "Block",
              "src": "12304:2145:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59250,
                      "mutability": "mutable",
                      "name": "startAmount",
                      "nameLocation": "12320:11:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59504,
                      "src": "12315:16:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59249,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12315:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59252,
                  "initialValue": {
                    "hexValue": "31653134",
                    "id": 59251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12334:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000_by_1",
                      "typeString": "int_const 100000000000000"
                    },
                    "value": "1e14"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12315:23:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 59253,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58560,
                          "src": "12359:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$3932",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 59255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3925,
                        "src": "12359:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 59257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130653138",
                          "id": 59256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12378:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10e18"
                        }
                      ],
                      "src": "12359:25:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 59258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12359:27:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59259,
                  "nodeType": "ExpressionStatement",
                  "src": "12359:27:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59266,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56291,
                            "src": "12427:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$56065",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$56065",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 59265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12419:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12419:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12419:19:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 59268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12440:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 59261,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56261,
                            "src": "12404:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59260,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55764,
                          "src": "12397:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 59262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12397:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$55764",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 59263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55751,
                      "src": "12397:21:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 59269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12397:49:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59270,
                  "nodeType": "ExpressionStatement",
                  "src": "12397:49:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59276,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56261,
                            "src": "12495:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 59277,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56279,
                            "src": "12502:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "3130653138",
                            "id": 59278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12507:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "value": "10e18"
                          },
                          {
                            "hexValue": "33",
                            "id": 59279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12514:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 59274,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "12469:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 59275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExactAmountOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2577,
                          "src": "12469:25:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256,uint256) external returns (uint256)"
                          }
                        },
                        "id": 59280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12469:47:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59271,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "12457:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22846,
                      "src": "12457:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 59281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12457:60:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59282,
                  "nodeType": "ExpressionStatement",
                  "src": "12457:60:80"
                },
                {
                  "assignments": [
                    59287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59287,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "12570:6:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59504,
                      "src": "12528:48:80",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 59286,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59285,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55989,
                          "src": "12528:34:80"
                        },
                        "referencedDeclaration": 55989,
                        "src": "12528:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59303,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59290,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56261,
                        "src": "12648:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59291,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56279,
                        "src": "12678:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 59292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12731:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59295,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12769:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$59742",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$59742",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 59294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12761:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12761:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12761:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59297,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12799:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 59298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12799:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 59299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12839:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      },
                      {
                        "hexValue": "30",
                        "id": 59300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12877:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 59301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13111:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 59288,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56065,
                        "src": "12579:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$56065_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 59289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55989,
                      "src": "12579:44:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$55989_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 59302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "12579:545:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12528:596:80"
                },
                {
                  "assignments": [
                    59305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59305,
                      "mutability": "mutable",
                      "name": "finalAmountOut",
                      "nameLocation": "13140:14:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59504,
                      "src": "13135:19:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59304,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13135:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59310,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59308,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59287,
                        "src": "13185:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 59306,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56291,
                        "src": "13157:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$56065",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 59307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55998,
                      "src": "13157:27:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$55989_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 59309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13157:35:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13135:57:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6461692062616c616c6e6365",
                        "id": 59314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13215:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        "value": "dai balalnce"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 59321,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "13261:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CounterTest_$59742",
                                  "typeString": "contract CounterTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CounterTest_$59742",
                                  "typeString": "contract CounterTest"
                                }
                              ],
                              "id": 59320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13253:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59319,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13253:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13253:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 59316,
                                "name": "DAI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56279,
                                "src": "13238:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59315,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55764,
                              "src": "13231:6:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 59317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13231:11:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$55764",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 59318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55721,
                          "src": "13231:21:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13231:36:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_72ae50e6607575e4847193bf32483d97fb5726627515ca42b151a604f89d28f0",
                          "typeString": "literal_string \"dai balalnce\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59311,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "13203:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "13203:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13203:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59325,
                  "nodeType": "ExpressionStatement",
                  "src": "13203:65:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 59326,
                      "name": "updateOracleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58753,
                      "src": "13279:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 59327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13279:18:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59328,
                  "nodeType": "ExpressionStatement",
                  "src": "13279:18:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59332,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56375,
                        "src": "13339:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 59329,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "13318:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 59331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5805,
                      "src": "13318:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 59333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13318:27:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59334,
                  "nodeType": "ExpressionStatement",
                  "src": "13318:27:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59338,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56375,
                        "src": "13370:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 59335,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "13356:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22265",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 59337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21931,
                      "src": "13356:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 59339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13356:20:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59340,
                  "nodeType": "ExpressionStatement",
                  "src": "13356:20:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59344,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56375,
                        "src": "13413:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 59341,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "13387:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 59343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5783,
                      "src": "13387:25:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 59345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13387:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59346,
                  "nodeType": "ExpressionStatement",
                  "src": "13387:32:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 59347,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "13430:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22265",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 59349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21948,
                      "src": "13430:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 59350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13430:14:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59351,
                  "nodeType": "ExpressionStatement",
                  "src": "13430:14:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59356,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56381,
                        "src": "13519:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 59357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13525:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 59353,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56279,
                            "src": "13505:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59352,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55764,
                          "src": "13498:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 59354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13498:11:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$55764",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 59355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55731,
                      "src": "13498:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 59358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13498:35:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59359,
                  "nodeType": "ExpressionStatement",
                  "src": "13498:35:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59363,
                        "name": "add1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56381,
                        "src": "13558:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 59360,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "13544:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$22265",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 59362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21931,
                      "src": "13544:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 59364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13544:19:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59365,
                  "nodeType": "ExpressionStatement",
                  "src": "13544:19:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "464c4f4b49",
                        "id": 59369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13586:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        "value": "FLOKI"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 59376,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58519,
                                "src": "13627:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                  "typeString": "contract IndexFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                  "typeString": "contract IndexFactory"
                                }
                              ],
                              "id": 59375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13619:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59374,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13619:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13619:16:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 59371,
                                "name": "FLOKI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56300,
                                "src": "13602:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59370,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55764,
                              "src": "13595:6:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 59372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13595:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$55764",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 59373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55721,
                          "src": "13595:23:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13595:41:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d2685df44ed8d92cd381798ca9d3877ed9fca9a24cbfcf0e5985c253410b371",
                          "typeString": "literal_string \"FLOKI\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59366,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "13574:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "13574:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13574:63:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59380,
                  "nodeType": "ExpressionStatement",
                  "src": "13574:63:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59387,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "13686:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          ],
                          "id": 59386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13678:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59385,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13678:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13678:16:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303031653138",
                        "id": 59389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13696:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        },
                        "value": "1001e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1001000000000000000000_by_1",
                          "typeString": "int_const 1001000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 59382,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56279,
                            "src": "13665:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59381,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55764,
                          "src": "13658:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 59383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13658:11:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$55764",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 59384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55751,
                      "src": "13658:19:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 59390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13658:46:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59391,
                  "nodeType": "ExpressionStatement",
                  "src": "13658:46:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "69737375616e6365206f757470757420616d6f756e74",
                        "id": 59395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13727:24:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_359a13672e0efc8e775acc0b85a7529dfd2fae10cbe91c83cc87c206f4e0b150",
                          "typeString": "literal_string \"issuance output amount\""
                        },
                        "value": "issuance output amount"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31303030653138",
                            "id": 59398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13783:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            "value": "1000e18"
                          },
                          {
                            "id": 59399,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56279,
                            "src": "13792:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "33",
                            "id": 59400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13797:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 59396,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "13753:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 59397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getIssuanceAmountOut2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3083,
                          "src": "13753:29:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,address,uint256) external returns (uint256)"
                          }
                        },
                        "id": 59401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13753:46:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_359a13672e0efc8e775acc0b85a7529dfd2fae10cbe91c83cc87c206f4e0b150",
                          "typeString": "literal_string \"issuance output amount\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59392,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "13715:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "13715:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13715:85:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59403,
                  "nodeType": "ExpressionStatement",
                  "src": "13715:85:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59409,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56279,
                            "src": "13847:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13839:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59407,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13839:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13839:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030653138",
                        "id": 59411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13853:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000e18"
                      },
                      {
                        "hexValue": "33",
                        "id": 59412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13862:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 59404,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "13811:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 59406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuanceIndexTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2096,
                      "src": "13811:27:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 59413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13811:53:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59414,
                  "nodeType": "ExpressionStatement",
                  "src": "13811:53:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "696e64657820746f6b656e2062616c616e6365",
                        "id": 59418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13887:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        "value": "index token balance"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 59423,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56381,
                                "src": "13939:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13931:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59421,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13931:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13931:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59419,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "13910:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 59420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54131,
                          "src": "13910:20:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13910:35:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f5af777f2a04f4f0bdca29fbaadcfa6ecb34de007f265ea651ce938d3daa0415",
                          "typeString": "literal_string \"index token balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59415,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "13875:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "13875:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13875:71:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59427,
                  "nodeType": "ExpressionStatement",
                  "src": "13875:71:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f7274666f6c696f2076616c7565",
                        "id": 59431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13969:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        "value": "portfolio value"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 59432,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "13988:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 59433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPortfolioBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2807,
                          "src": "13988:27:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 59434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13988:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_99a2d5a9670f9807fbf82675c4c7c3333a976fe2d38223148e025394d432b731",
                          "typeString": "literal_string \"portfolio value\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59428,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "13957:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "13957:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13957:61:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59436,
                  "nodeType": "ExpressionStatement",
                  "src": "13957:61:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "726564656d7074696f6e206f757470757420616d6f756e74",
                        "id": 59440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14041:26:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97081509a625ccb6248d1b2cd9d29ab9adec84d876c5b6fde56ec070d427bd4b",
                          "typeString": "literal_string \"redemption output amount\""
                        },
                        "value": "redemption output amount"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 59447,
                                    "name": "add1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56381,
                                    "src": "14130:4:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 59446,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14122:7:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 59445,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14122:7:80",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 59448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14122:13:80",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 59443,
                                "name": "indexToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58516,
                                "src": "14101:10:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IndexToken_$8163",
                                  "typeString": "contract IndexToken"
                                }
                              },
                              "id": 59444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54131,
                              "src": "14101:20:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 59449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14101:35:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 59450,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56279,
                            "src": "14138:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "33",
                            "id": 59451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14143:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 59441,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "14069:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 59442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getRedemptionAmountOut2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3259,
                          "src": "14069:31:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,address,uint256) external returns (uint256)"
                          }
                        },
                        "id": 59452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14069:76:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_97081509a625ccb6248d1b2cd9d29ab9adec84d876c5b6fde56ec070d427bd4b",
                          "typeString": "literal_string \"redemption output amount\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59437,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "14029:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "14029:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14029:117:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59454,
                  "nodeType": "ExpressionStatement",
                  "src": "14029:117:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 59458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14169:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59463,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56381,
                            "src": "14216:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 59460,
                                "name": "DAI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56279,
                                "src": "14201:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59459,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55764,
                              "src": "14194:6:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 59461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14194:11:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$55764",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 59462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55721,
                          "src": "14194:21:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14194:27:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59455,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "14157:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "14157:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14157:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59466,
                  "nodeType": "ExpressionStatement",
                  "src": "14157:65:80"
                },
                {
                  "assignments": [
                    59468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59468,
                      "mutability": "mutable",
                      "name": "reallOut",
                      "nameLocation": "14238:8:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59504,
                      "src": "14233:13:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59467,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14233:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59484,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 59475,
                                "name": "add1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56381,
                                "src": "14297:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14289:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59473,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14289:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14289:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 59471,
                            "name": "indexToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58516,
                            "src": "14268:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$8163",
                              "typeString": "contract IndexToken"
                            }
                          },
                          "id": 59472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54131,
                          "src": "14268:20:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14268:35:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 59480,
                            "name": "DAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56279,
                            "src": "14313:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14305:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59478,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14305:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14305:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 59482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14319:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 59469,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58519,
                        "src": "14249:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexFactory_$3392",
                          "typeString": "contract IndexFactory"
                        }
                      },
                      "id": 59470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redemption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2476,
                      "src": "14249:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 59483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14249:72:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14233:88:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7265616c206f7574",
                        "id": 59488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14344:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a49a1fe9cb4f3ae4c0d88351fabd7783fcae2b6187f1831ec0415e94522bb731",
                          "typeString": "literal_string \"real out\""
                        },
                        "value": "real out"
                      },
                      {
                        "id": 59489,
                        "name": "reallOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59468,
                        "src": "14356:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a49a1fe9cb4f3ae4c0d88351fabd7783fcae2b6187f1831ec0415e94522bb731",
                          "typeString": "literal_string \"real out\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59485,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "14332:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "14332:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14332:33:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59491,
                  "nodeType": "ExpressionStatement",
                  "src": "14332:33:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7765746820616674657220726564656d7074696f6e",
                        "id": 59495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14388:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        "value": "weth after redemption"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59500,
                            "name": "add1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56381,
                            "src": "14435:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 59497,
                                "name": "DAI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56279,
                                "src": "14420:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 59496,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55764,
                              "src": "14413:6:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 59498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14413:11:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$55764",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 59499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55721,
                          "src": "14413:21:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 59501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14413:27:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_582c67d4364f1a90b4218902705f088dd3ce087cdc372efa35cefa408f91bfeb",
                          "typeString": "literal_string \"weth after redemption\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59492,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "14376:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22973,
                      "src": "14376:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 59502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14376:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59503,
                  "nodeType": "ExpressionStatement",
                  "src": "14376:65:80"
                }
              ]
            },
            "functionSelector": "037e5f68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIssuanceWithTokensOutput",
            "nameLocation": "12266:28:80",
            "parameters": {
              "id": 59247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12294:2:80"
            },
            "returnParameters": {
              "id": 59248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12304:0:80"
            },
            "scope": 59742,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59608,
            "nodeType": "FunctionDefinition",
            "src": "15798:1384:80",
            "nodes": [],
            "body": {
              "id": 59607,
              "nodeType": "Block",
              "src": "15829:1353:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59509,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "15848:4:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59607,
                      "src": "15840:12:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 59508,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15840:7:80",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59516,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59512,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56261,
                        "src": "15887:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59513,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56324,
                        "src": "15907:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 59514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15926:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        }
                      ],
                      "expression": {
                        "id": 59510,
                        "name": "factoryV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56285,
                        "src": "15855:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Factory_$55894",
                          "typeString": "contract IUniswapV3Factory"
                        }
                      },
                      "id": 59511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55867,
                      "src": "15855:17:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
                        "typeString": "function (address,address,uint24) view external returns (address)"
                      }
                    },
                    "id": 59515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15855:86:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15840:101:80"
                },
                {
                  "assignments": [
                    59518,
                    59520,
                    59522,
                    59524,
                    59526,
                    59528,
                    59530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59518,
                      "mutability": "mutable",
                      "name": "sqrtPriceX96",
                      "nameLocation": "15974:12:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59607,
                      "src": "15966:20:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 59517,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "15966:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59520,
                      "mutability": "mutable",
                      "name": "tick",
                      "nameLocation": "16007:4:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59607,
                      "src": "16001:10:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 59519,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "16001:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59522,
                      "mutability": "mutable",
                      "name": "observationIndex",
                      "nameLocation": "16033:16:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59607,
                      "src": "16026:23:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 59521,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "16026:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59524,
                      "mutability": "mutable",
                      "name": "observationCardinality",
                      "nameLocation": "16071:22:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59607,
                      "src": "16064:29:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 59523,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "16064:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59526,
                      "mutability": "mutable",
                      "name": "observationCardinalityNext",
                      "nameLocation": "16115:26:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59607,
                      "src": "16108:33:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 59525,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "16108:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59528,
                      "mutability": "mutable",
                      "name": "feeProtocol",
                      "nameLocation": "16162:11:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59607,
                      "src": "16156:17:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 59527,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16156:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59530,
                      "mutability": "mutable",
                      "name": "unlocked",
                      "nameLocation": "16193:8:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59607,
                      "src": "16188:13:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 59529,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16188:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59536,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 59532,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59509,
                            "src": "16230:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59531,
                          "name": "IUniswapV3Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3915,
                          "src": "16215:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$3915_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        },
                        "id": 59533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16215:20:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3915",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 59534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4293,
                      "src": "16215:26:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 59535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16215:28:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15951:292:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59540,
                        "name": "sqrtPriceX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59518,
                        "src": "16266:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "expression": {
                        "id": 59537,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "16254:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22846,
                      "src": "16254:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 59541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16254:25:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59542,
                  "nodeType": "ExpressionStatement",
                  "src": "16254:25:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59548,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56261,
                            "src": "16323:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 59549,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56324,
                            "src": "16330:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31653138",
                            "id": 59550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16336:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          {
                            "hexValue": "33",
                            "id": 59551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16342:1:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 59546,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58519,
                            "src": "16302:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexFactory_$3392",
                              "typeString": "contract IndexFactory"
                            }
                          },
                          "id": 59547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAmountOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2752,
                          "src": "16302:20:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 59552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16302:42:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59543,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "16290:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22846,
                      "src": "16290:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 59553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16290:55:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59554,
                  "nodeType": "ExpressionStatement",
                  "src": "16290:55:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 59555,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58560,
                          "src": "16374:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$3932",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 59557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3925,
                        "src": "16374:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 59559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31653138",
                          "id": 59558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16393:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        }
                      ],
                      "src": "16374:24:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 59560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16374:26:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59561,
                  "nodeType": "ExpressionStatement",
                  "src": "16374:26:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59568,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56291,
                            "src": "16441:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$56065",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$56065",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 59567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16433:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59566,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16433:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16433:19:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 59570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16454:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 59563,
                            "name": "WETH9",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56261,
                            "src": "16418:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59562,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55764,
                          "src": "16411:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$55764_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 59564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16411:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$55764",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 59565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55751,
                      "src": "16411:21:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 59571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16411:48:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59572,
                  "nodeType": "ExpressionStatement",
                  "src": "16411:48:80"
                },
                {
                  "assignments": [
                    59577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59577,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "16512:6:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59607,
                      "src": "16470:48:80",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 59576,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59575,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55989,
                          "src": "16470:34:80"
                        },
                        "referencedDeclaration": 55989,
                        "src": "16470:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59593,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59580,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56261,
                        "src": "16590:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59581,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56324,
                        "src": "16620:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 59582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16674:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 59585,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16712:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CounterTest_$59742",
                              "typeString": "contract CounterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CounterTest_$59742",
                              "typeString": "contract CounterTest"
                            }
                          ],
                          "id": 59584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16704:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 59583,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16704:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 59586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16704:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59587,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "16742:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 59588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "16742:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 59589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16782:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "30",
                        "id": 59590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16819:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 59591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17053:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 59578,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56065,
                        "src": "16521:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$56065_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 59579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55989,
                      "src": "16521:44:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$55989_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 59592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16521:545:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16470:596:80"
                },
                {
                  "assignments": [
                    59595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59595,
                      "mutability": "mutable",
                      "name": "finalAmountOut",
                      "nameLocation": "17082:14:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 59607,
                      "src": "17077:19:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59594,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17077:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59600,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59598,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59577,
                        "src": "17127:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$55989_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 59596,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56291,
                        "src": "17099:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$56065",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 59597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55998,
                      "src": "17099:27:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$55989_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 59599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17099:35:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17077:57:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59604,
                        "name": "finalAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59595,
                        "src": "17157:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59601,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30329,
                        "src": "17145:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$30329_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 59603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22846,
                      "src": "17145:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 59605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17145:27:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59606,
                  "nodeType": "ExpressionStatement",
                  "src": "17145:27:80"
                }
              ]
            },
            "functionSelector": "2a888735",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetPrice",
            "nameLocation": "15807:12:80",
            "parameters": {
              "id": 59506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15819:2:80"
            },
            "returnParameters": {
              "id": 59507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15829:0:80"
            },
            "scope": 59742,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59741,
            "nodeType": "FunctionDefinition",
            "src": "17192:1184:80",
            "nodes": [],
            "body": {
              "id": 59740,
              "nodeType": "Block",
              "src": "17230:1146:80",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 59706,
                    "nodeType": "Block",
                    "src": "17284:730:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 59637,
                                "name": "assetList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58536,
                                "src": "17438:9:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 59639,
                              "indexExpression": {
                                "id": 59638,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59612,
                                "src": "17448:1:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17438:12:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 59634,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59612,
                                  "src": "17407:1:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "6f7261636c654c6973742875696e7432353629",
                                      "id": 59631,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17361:21:80",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_239aad0df7726bcd645ee02195770ea74ffd42d5dc84b1eb9279ea9cf39a39a1",
                                        "typeString": "literal_string \"oracleList(uint256)\""
                                      },
                                      "value": "oracleList(uint256)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_239aad0df7726bcd645ee02195770ea74ffd42d5dc84b1eb9279ea9cf39a39a1",
                                        "typeString": "literal_string \"oracleList(uint256)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 59627,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 58519,
                                              "src": "17333:7:80",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 59626,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "17325:7:80",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 59625,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "17325:7:80",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 59628,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17325:16:80",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 59622,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10666,
                                          "src": "17295:8:80",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$16805_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 59624,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 17915,
                                        "src": "17295:29:80",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 59629,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17295:47:80",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 59630,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17951,
                                    "src": "17295:65:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 59632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17295:88:80",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 59633,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17987,
                                "src": "17295:111:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_uint256_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,uint256) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 59635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17295:114:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 59636,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18046,
                            "src": "17295:142:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,address)"
                            }
                          },
                          "id": 59640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17295:156:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59641,
                        "nodeType": "ExpressionStatement",
                        "src": "17295:156:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 59657,
                                "name": "assetList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58536,
                                "src": "17606:9:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 59659,
                              "indexExpression": {
                                "id": 59658,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59612,
                                "src": "17616:1:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17606:12:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 59654,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59612,
                                  "src": "17575:1:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "63757272656e744c6973742875696e7432353629",
                                      "id": 59651,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17528:22:80",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_9932ba4c600b0d32a7f3471f2819be02d7a06b8a7a4a3c683d5e79d6635739d4",
                                        "typeString": "literal_string \"currentList(uint256)\""
                                      },
                                      "value": "currentList(uint256)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_9932ba4c600b0d32a7f3471f2819be02d7a06b8a7a4a3c683d5e79d6635739d4",
                                        "typeString": "literal_string \"currentList(uint256)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 59647,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 58519,
                                              "src": "17500:7:80",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 59646,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "17492:7:80",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 59645,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "17492:7:80",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 59648,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17492:16:80",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 59642,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10666,
                                          "src": "17462:8:80",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$16805_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 59644,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 17915,
                                        "src": "17462:29:80",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 59649,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17462:47:80",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 59650,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17951,
                                    "src": "17462:65:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 59652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17462:89:80",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 59653,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17987,
                                "src": "17462:112:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_uint256_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,uint256) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 59655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17462:115:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 59656,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18046,
                            "src": "17462:143:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,address)"
                            }
                          },
                          "id": 59660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17462:157:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59661,
                        "nodeType": "ExpressionStatement",
                        "src": "17462:157:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 59679,
                                "name": "tokenShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58545,
                                "src": "17790:11:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 59681,
                              "indexExpression": {
                                "id": 59680,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59612,
                                "src": "17802:1:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17790:14:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 59674,
                                    "name": "assetList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58536,
                                    "src": "17748:9:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 59676,
                                  "indexExpression": {
                                    "id": 59675,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59612,
                                    "src": "17758:1:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17748:12:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "746f6b656e4d61726b65745368617265286164647265737329",
                                      "id": 59671,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17696:27:80",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_fcaae87b56804c66b17f138a81029c896b0ec3952302a16dfb275660ea7f1540",
                                        "typeString": "literal_string \"tokenMarketShare(address)\""
                                      },
                                      "value": "tokenMarketShare(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_fcaae87b56804c66b17f138a81029c896b0ec3952302a16dfb275660ea7f1540",
                                        "typeString": "literal_string \"tokenMarketShare(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 59667,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 58519,
                                              "src": "17668:7:80",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 59666,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "17660:7:80",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 59665,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "17660:7:80",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 59668,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17660:16:80",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 59662,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10666,
                                          "src": "17630:8:80",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$16805_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 59664,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 17915,
                                        "src": "17630:29:80",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 59669,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17630:47:80",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 59670,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17951,
                                    "src": "17630:65:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 59672,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17630:94:80",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 59673,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17969,
                                "src": "17630:117:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 59677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17630:131:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 59678,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18063,
                            "src": "17630:159:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 59682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17630:175:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59683,
                        "nodeType": "ExpressionStatement",
                        "src": "17630:175:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 59701,
                                "name": "swapVersions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58554,
                                "src": "17976:12:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 59703,
                              "indexExpression": {
                                "id": 59702,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59612,
                                "src": "17989:1:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17976:15:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 59696,
                                    "name": "assetList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58536,
                                    "src": "17934:9:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 59698,
                                  "indexExpression": {
                                    "id": 59697,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59612,
                                    "src": "17944:1:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17934:12:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "746f6b656e5377617056657273696f6e286164647265737329",
                                      "id": 59693,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17882:27:80",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_d90bc211448c02154e13cc66867cb2fa9b509ab0ca2b6f62443e8f6dc26d7274",
                                        "typeString": "literal_string \"tokenSwapVersion(address)\""
                                      },
                                      "value": "tokenSwapVersion(address)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_d90bc211448c02154e13cc66867cb2fa9b509ab0ca2b6f62443e8f6dc26d7274",
                                        "typeString": "literal_string \"tokenSwapVersion(address)\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 59689,
                                              "name": "factory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 58519,
                                              "src": "17854:7:80",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                                "typeString": "contract IndexFactory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                                "typeString": "contract IndexFactory"
                                              }
                                            ],
                                            "id": 59688,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "17846:7:80",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 59687,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "17846:7:80",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 59690,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17846:16:80",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 59684,
                                          "name": "stdstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10666,
                                          "src": "17816:8:80",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StdStorage_$16805_storage",
                                            "typeString": "struct StdStorage storage ref"
                                          }
                                        },
                                        "id": 59686,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 17915,
                                        "src": "17816:29:80",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                          "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                        }
                                      },
                                      "id": 59691,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17816:47:80",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                        "typeString": "struct StdStorage storage pointer"
                                      }
                                    },
                                    "id": 59692,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sig",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 17951,
                                    "src": "17816:65:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                      "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                                    }
                                  },
                                  "id": 59694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17816:94:80",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                    "typeString": "struct StdStorage storage pointer"
                                  }
                                },
                                "id": 59695,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "with_key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 17969,
                                "src": "17816:117:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                  "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                }
                              },
                              "id": 59699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17816:131:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                                "typeString": "struct StdStorage storage pointer"
                              }
                            },
                            "id": 59700,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checked_write",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18063,
                            "src": "17816:159:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                              "typeString": "function (struct StdStorage storage pointer,uint256)"
                            }
                          },
                          "id": 59704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17816:176:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59705,
                        "nodeType": "ExpressionStatement",
                        "src": "17816:176:80"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59615,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59612,
                      "src": "17257:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 59616,
                        "name": "assetList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58536,
                        "src": "17261:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 59617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "17261:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17257:20:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59707,
                  "initializationExpression": {
                    "assignments": [
                      59612
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 59612,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "17250:1:80",
                        "nodeType": "VariableDeclaration",
                        "scope": 59707,
                        "src": "17245:6:80",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 59611,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17245:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 59614,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 59613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17254:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17245:10:80"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 59620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "17279:3:80",
                      "subExpression": {
                        "id": 59619,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59612,
                        "src": "17279:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 59621,
                    "nodeType": "ExpressionStatement",
                    "src": "17279:3:80"
                  },
                  "nodeType": "ForStatement",
                  "src": "17241:773:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59720,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58536,
                          "src": "18168:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 59721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "18168:16:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c4f7261636c654c6973742829",
                            "id": 59717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18090:19:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c8599dedd2267d7ace54d927af92d01c1f424c72735cd282fed113a258ea6c35",
                              "typeString": "literal_string \"totalOracleList()\""
                            },
                            "value": "totalOracleList()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c8599dedd2267d7ace54d927af92d01c1f424c72735cd282fed113a258ea6c35",
                              "typeString": "literal_string \"totalOracleList()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 59713,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58519,
                                    "src": "18062:7:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                      "typeString": "contract IndexFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                      "typeString": "contract IndexFactory"
                                    }
                                  ],
                                  "id": 59712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18054:7:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 59711,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18054:7:80",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 59714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18054:16:80",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 59708,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10666,
                                "src": "18024:8:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$16805_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 59710,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17915,
                              "src": "18024:29:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 59715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18024:47:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 59716,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17951,
                          "src": "18024:65:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 59718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18024:86:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 59719,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18063,
                      "src": "18024:143:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 59722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18024:161:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59723,
                  "nodeType": "ExpressionStatement",
                  "src": "18024:161:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59736,
                          "name": "assetList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58536,
                          "src": "18341:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 59737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "18341:16:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "746f74616c43757272656e744c6973742829",
                            "id": 59733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18262:20:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_53fd4332f2a0b7090fb49c3aa55b2f1e0988040a339bc2dee556b3d3a622838d",
                              "typeString": "literal_string \"totalCurrentList()\""
                            },
                            "value": "totalCurrentList()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_53fd4332f2a0b7090fb49c3aa55b2f1e0988040a339bc2dee556b3d3a622838d",
                              "typeString": "literal_string \"totalCurrentList()\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 59729,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58519,
                                    "src": "18234:7:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                      "typeString": "contract IndexFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IndexFactory_$3392",
                                      "typeString": "contract IndexFactory"
                                    }
                                  ],
                                  "id": 59728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18226:7:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 59727,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18226:7:80",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 59730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18226:16:80",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 59724,
                                "name": "stdstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10666,
                                "src": "18196:8:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$16805_storage",
                                  "typeString": "struct StdStorage storage ref"
                                }
                              },
                              "id": 59726,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17915,
                              "src": "18196:29:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 59731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18196:47:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 59732,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17951,
                          "src": "18196:65:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_string_memory_ptr_$returns$_t_struct$_StdStorage_$16805_storage_ptr_$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,string memory) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 59734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18196:87:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$16805_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 59735,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18063,
                      "src": "18196:144:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$16805_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$16805_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 59738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18196:162:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59739,
                  "nodeType": "ExpressionStatement",
                  "src": "18196:162:80"
                }
              ]
            },
            "functionSelector": "e1497cff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeAssetList",
            "nameLocation": "17201:19:80",
            "parameters": {
              "id": 59609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17220:2:80"
            },
            "returnParameters": {
              "id": 59610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17230:0:80"
            },
            "scope": 59742,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 58503,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20554,
              "src": "885:4:80"
            },
            "id": 58504,
            "nodeType": "InheritanceSpecifier",
            "src": "885:4:80"
          },
          {
            "baseName": {
              "id": 58505,
              "name": "ContractDeployer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56558,
              "src": "891:16:80"
            },
            "id": 58506,
            "nodeType": "InheritanceSpecifier",
            "src": "891:16:80"
          }
        ],
        "contractDependencies": [
          3392,
          6085,
          6909,
          7006,
          8163,
          52605
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          59742,
          56558,
          7012,
          20554,
          20503,
          16039,
          15714,
          14921,
          12861,
          12097,
          10604,
          10670,
          10667
        ],
        "name": "CounterTest",
        "nameLocation": "870:11:80",
        "scope": 59743,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 80
}