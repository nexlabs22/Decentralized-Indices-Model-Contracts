{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "feeRatePerDayScaled",
          "type": "uint256"
        }
      ],
      "name": "FeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "FeeReceiverSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "methodologist",
          "type": "address"
        }
      ],
      "name": "MethodologistSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "methodology",
          "type": "string"
        }
      ],
      "name": "MethodologySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintFeeToReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "SupplyCeilingSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRestricted",
          "type": "bool"
        }
      ],
      "name": "ToggledRestricted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "QUOTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRatePerDayScaled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_feeRatePerDayScaled",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_feeReceiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRestricted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "methodologist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "methodology",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintToFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "mintToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proposedOwner",
          "type": "address"
        }
      ],
      "name": "proposeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposedOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoter",
      "outputs": [
        {
          "internalType": "contract IQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeRatePerDayScaled",
          "type": "uint256"
        }
      ],
      "name": "setFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeReceiver",
          "type": "address"
        }
      ],
      "name": "setFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_methodologist",
          "type": "address"
        }
      ],
      "name": "setMethodologist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_methodology",
          "type": "string"
        }
      ],
      "name": "setMethodology",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "setMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "setSupplyCeiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyCeiling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "toggleRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405261010480546001600160a01b031990811673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217909155610105805490911673b27308f9f90d607463bb33ea1bebb41c27ce5ab617905534801561005a57600080fd5b5061234e8061006a6000396000f3fe60806040526004361061026b5760003560e01c80638da5cb5b11610144578063b5ed298a116100b6578063dd62ed3e1161007a578063dd62ed3e1461074b578063efdcd9741461076b578063f2fde38b1461078b578063f734e22a146107ab578063fca3b5aa146107c0578063fede0276146107e057600080fd5b8063b5ed298a14610691578063c01bc982146106b1578063c31c9c07146106e2578063c6bbd5a71461070a578063d153b60c1461072b57600080fd5b80639eeb1d50116101085780639eeb1d50146105dc5780639f8e67bf146105f1578063a457c2d714610611578063a9059cbb14610631578063aaa4a18414610651578063b3f006741461067157600080fd5b80638da5cb5b146105415780638dae88c21461055f57806391fe1b921461058757806395d89b41146105a75780639dc29fac146105bc57600080fd5b80633fc8cef3116101dd578063660db484116101a1578063660db484146104815780636e01a686146104a157806370a08231146104c1578063715018a6146104f757806379c650681461050c5780638456cb591461052c57600080fd5b80633fc8cef3146103e057806340c10f191461040157806345596e2e146104215780634aa4a4fc146104415780635c975abb1461046957600080fd5b806323b872dd1161022f57806323b872dd146103405780632b52684d146103605780632fecd58914610377578063313ce5671461038d57806339509351146103a95780633f4ba83a146103c957600080fd5b806306fdde031461027757806307546172146102a2578063095ea7b3146102db57806318160ddd1461030b578063184a732f1461032a57600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061028c610800565b60405161029991906120ac565b60405180910390f35b3480156102ae57600080fd5b50610100546102c3906001600160a01b031681565b6040516001600160a01b039091168152602001610299565b3480156102e757600080fd5b506102fb6102f6366004611f84565b610892565b6040519015158152602001610299565b34801561031757600080fd5b506035545b604051908152602001610299565b34801561033657600080fd5b5061031c60fd5481565b34801561034c57600080fd5b506102fb61035b366004611f48565b6108aa565b34801561036c57600080fd5b5061031c6101025481565b34801561038357600080fd5b5061031c60fc5481565b34801561039957600080fd5b5060405160128152602001610299565b3480156103b557600080fd5b506102fb6103c4366004611f84565b61099d565b3480156103d557600080fd5b506103de6109bf565b005b3480156103ec57600080fd5b50610104546102c3906001600160a01b031681565b34801561040d57600080fd5b506103de61041c366004611f84565b6109d1565b34801561042d57600080fd5b506103de61043c366004612093565b610aeb565b34801561044d57600080fd5b506102c373c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b34801561047557600080fd5b5060ca5460ff166102fb565b34801561048d57600080fd5b506103de61049c366004611ef3565b610b2e565b3480156104ad57600080fd5b506103de6104bc366004612093565b610b93565b3480156104cd57600080fd5b5061031c6104dc366004611ef3565b6001600160a01b031660009081526033602052604090205490565b34801561050357600080fd5b506103de610bd8565b34801561051857600080fd5b506103de610527366004611f84565b610bea565b34801561053857600080fd5b506103de610c75565b34801561054d57600080fd5b506065546001600160a01b03166102c3565b34801561056b57600080fd5b506102c373b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b34801561059357600080fd5b506103de6105a2366004611fd0565b610c85565b3480156105b357600080fd5b5061028c610d37565b3480156105c857600080fd5b506103de6105d7366004611f84565b610d46565b3480156105e857600080fd5b5061028c610e1b565b3480156105fd57600080fd5b5060ff546102c3906001600160a01b031681565b34801561061d57600080fd5b506102fb61062c366004611f84565b610eaa565b34801561063d57600080fd5b506102fb61064c366004611f84565b610f30565b34801561065d57600080fd5b506103de61066c366004611ef3565b610fb9565b34801561067d57600080fd5b5060fe546102c3906001600160a01b031681565b34801561069d57600080fd5b506103de6106ac366004611ef3565b61102d565b3480156106bd57600080fd5b506102fb6106cc366004611ef3565b6101036020526000908152604090205460ff1681565b3480156106ee57600080fd5b506102c373e592427a0aece92de3edee1f18e0157c0586156481565b34801561071657600080fd5b50610105546102c3906001600160a01b031681565b34801561073757600080fd5b506097546102c3906001600160a01b031681565b34801561075757600080fd5b5061031c610766366004611f15565b61107d565b34801561077757600080fd5b506103de610786366004611ef3565b6110a8565b34801561079757600080fd5b506103de6107a6366004611ef3565b61110d565b3480156107b757600080fd5b506103de611235565b3480156107cc57600080fd5b506103de6107db366004611ef3565b611245565b3480156107ec57600080fd5b506103de6107fb36600461200d565b6112ab565b60606036805461080f906122b1565b80601f016020809104026020016040519081016040528092919081815260200182805461083b906122b1565b80156108885780601f1061085d57610100808354040283529160200191610888565b820191906000526020600020905b81548152906001019060200180831161086b57829003601f168201915b5050505050905090565b6000336108a0818585611418565b5060019392505050565b60006108b461153c565b336000908152610103602052604090205460ff16156108ee5760405162461bcd60e51b81526004016108e59061212b565b60405180910390fd5b6001600160a01b0383166000908152610103602052604090205460ff16156109285760405162461bcd60e51b81526004016108e590612101565b6001600160a01b0384166000908152610103602052604090205460ff16156109875760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016108e5565b610992843384611582565b6108a08484846115fc565b6000336108a08185856109b0838361107d565b6109ba9190612241565b611418565b6109c76117a7565b6109cf611801565b565b6109d961153c565b610100546001600160a01b03163314610a045760405162461bcd60e51b81526004016108e590612162565b6101025481610a1260355490565b610a1c9190612241565b1115610a6a5760405162461bcd60e51b815260206004820152601a60248201527f77696c6c2065786365656420737570706c79206365696c696e6700000000000060448201526064016108e5565b6001600160a01b0382166000908152610103602052604090205460ff1615610aa45760405162461bcd60e51b81526004016108e590612101565b336000908152610103602052604090205460ff1615610ad55760405162461bcd60e51b81526004016108e59061212b565b610add611853565b610ae78282611981565b5050565b610af36117a7565b610afb611853565b60fc81905560405181907f45398c451b1a31b88dbaed4e7b89a632f43cc4b50149d437db03a5300afe40d190600090a250565b610b366117a7565b6001600160a01b038116610b4957600080fd5b60ff80546001600160a01b0319166001600160a01b0383169081179091556040517f164d8ef0d742b45087644f55c61abeb84557df70d06730591e451f0981e278ca90600090a250565b610b9b6117a7565b6101028190556040518181527fe35be406f69e9d11d6ac8e5b54bbc8b6c4baf2fa2359f84a56baa5ea5d07dc8f906020015b60405180910390a150565b610be06117a7565b6109cf6000611a42565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401602060405180830381600087803b158015610c3857600080fd5b505af1158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611fae565b505050565b610c7d6117a7565b6109cf611a94565b60ff546001600160a01b03163314610cf35760405162461bcd60e51b815260206004820152602b60248201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6560448201526a1d1a1bd91bdb1bd9da5cdd60aa1b60648201526084016108e5565b8051610d0790610101906020840190611db1565b507fe6be68107100e39cb16d675c1086a4d5479fbd01108d721dabbccaa2249b995f81604051610bcd91906120ac565b60606037805461080f906122b1565b610d4e61153c565b610100546001600160a01b03163314610d795760405162461bcd60e51b81526004016108e590612162565b6001600160a01b0382166000908152610103602052604090205460ff1615610dd85760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016108e5565b336000908152610103602052604090205460ff1615610e095760405162461bcd60e51b81526004016108e59061212b565b610e11611853565b610ae78282611ad1565b6101018054610e29906122b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610e55906122b1565b8015610ea25780601f10610e7757610100808354040283529160200191610ea2565b820191906000526020600020905b815481529060010190602001808311610e8557829003601f168201915b505050505081565b60003381610eb8828661107d565b905083811015610f185760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108e5565b610f258286868403611418565b506001949350505050565b6000610f3a61153c565b336000908152610103602052604090205460ff1615610f6b5760405162461bcd60e51b81526004016108e59061212b565b6001600160a01b0383166000908152610103602052604090205460ff1615610fa55760405162461bcd60e51b81526004016108e590612101565b610fb03384846115fc565b50600192915050565b610fc16117a7565b6001600160a01b0381166000818152610103602052604090819020805460ff19811660ff9182161590811790925591517f14ddf324cc5d8b14a3c3b12c84b0a7d578d72c8d60655c06d6a457e71431d5ee9261102292161515815260200190565b60405180910390a250565b6110356117a7565b6001600160a01b03811661105b5760405162461bcd60e51b81526004016108e5906121a6565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6110b06117a7565b6001600160a01b0381166110c357600080fd5b60fe80546001600160a01b0319166001600160a01b0383169081179091556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90600090a250565b6001600160a01b0381166111335760405162461bcd60e51b81526004016108e5906121a6565b6097546001600160a01b038281169116146111ab5760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b60648201526084016108e5565b6001600160a01b03811633146112295760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e657200000000000060648201526084016108e5565b61123281611a42565b50565b61123d6117a7565b6109cf611853565b61124d6117a7565b6001600160a01b03811661126057600080fd5b61010080546001600160a01b0319166001600160a01b0383169081179091556040517f726b590ef91a8c76ad05bbe91a57ef84605276528f49cd47d787f558a4e755b690600090a250565b600054610100900460ff16158080156112cb5750600054600160ff909116105b806112e55750303b1580156112e5575060005460ff166001145b6113485760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108e5565b6000805460ff19166001179055801561136b576000805461ff0019166101001790555b6001600160a01b03831661137e57600080fd5b611386611c05565b61138e611c34565b6113988686611c63565b6113a0611c94565b60fc84905560fe80546001600160a01b0319166001600160a01b0385161790556101028290554260fd558015611410576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b03831661147a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108e5565b6001600160a01b0382166114db5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108e5565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60ca5460ff16156109cf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016108e5565b600061158e848461107d565b905060001981146115f657818110156115e95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108e5565b6115f68484848403611418565b50505050565b6001600160a01b0383166116605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108e5565b6001600160a01b0382166116c25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108e5565b6001600160a01b0383166000908152603360205260409020548181101561173a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108e5565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061179a9086815260200190565b60405180910390a36115f6565b6065546001600160a01b031633146109cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108e5565b611809611cbb565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006201518060fd5442611867919061229a565b6118719190612259565b90506001811061123257600061188660355490565b60fc54909150819060005b848110156118cb5768056bc75e2d631000006118ad838561227b565b6118b79190612259565b6118c19084612241565b9250600101611891565b5060006118d8848461229a565b90506118e7856201518061227b565b60fd60008282546118f89190612241565b909155505060fe54611913906001600160a01b031682611981565b60fe547f07982395c678b2ffc23fcf59aaec243ca79418c285af0d0e10b4e65bc4189f4c906001600160a01b03164261194b60355490565b604080516001600160a01b0390941684526020840192909252908201526060810183905260800160405180910390a15050505050565b6001600160a01b0382166119d75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108e5565b80603560008282546119e99190612241565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611a9c61153c565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118363390565b6001600160a01b038216611b315760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108e5565b6001600160a01b03821660009081526033602052604090205481811015611ba55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108e5565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff16611c2c5760405162461bcd60e51b81526004016108e5906121f6565b6109cf611d04565b600054610100900460ff16611c5b5760405162461bcd60e51b81526004016108e5906121f6565b6109cf611d34565b600054610100900460ff16611c8a5760405162461bcd60e51b81526004016108e5906121f6565b610ae78282611d67565b600054610100900460ff166109cf5760405162461bcd60e51b81526004016108e5906121f6565b60ca5460ff166109cf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016108e5565b600054610100900460ff16611d2b5760405162461bcd60e51b81526004016108e5906121f6565b6109cf33611a42565b600054610100900460ff16611d5b5760405162461bcd60e51b81526004016108e5906121f6565b60ca805460ff19169055565b600054610100900460ff16611d8e5760405162461bcd60e51b81526004016108e5906121f6565b8151611da1906036906020850190611db1565b508051610c709060379060208401905b828054611dbd906122b1565b90600052602060002090601f016020900481019282611ddf5760008555611e25565b82601f10611df857805160ff1916838001178555611e25565b82800160010185558215611e25579182015b82811115611e25578251825591602001919060010190611e0a565b50611e31929150611e35565b5090565b5b80821115611e315760008155600101611e36565b80356001600160a01b0381168114611e6157600080fd5b919050565b600082601f830112611e7757600080fd5b813567ffffffffffffffff80821115611e9257611e92612302565b604051601f8301601f19908116603f01168101908282118183101715611eba57611eba612302565b81604052838152866020858801011115611ed357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611f0557600080fd5b611f0e82611e4a565b9392505050565b60008060408385031215611f2857600080fd5b611f3183611e4a565b9150611f3f60208401611e4a565b90509250929050565b600080600060608486031215611f5d57600080fd5b611f6684611e4a565b9250611f7460208501611e4a565b9150604084013590509250925092565b60008060408385031215611f9757600080fd5b611fa083611e4a565b946020939093013593505050565b600060208284031215611fc057600080fd5b81518015158114611f0e57600080fd5b600060208284031215611fe257600080fd5b813567ffffffffffffffff811115611ff957600080fd5b61200584828501611e66565b949350505050565b600080600080600060a0868803121561202557600080fd5b853567ffffffffffffffff8082111561203d57600080fd5b61204989838a01611e66565b9650602088013591508082111561205f57600080fd5b5061206c88828901611e66565b9450506040860135925061208260608701611e4a565b949793965091946080013592915050565b6000602082840312156120a557600080fd5b5035919050565b600060208083528351808285015260005b818110156120d9578581018301518582016040015282016120bd565b818111156120eb576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526010908201526f1d1bc81a5cc81c995cdd1c9a58dd195960821b604082015260600190565b60208082526018908201527f6d73672e73656e64657220697320726573747269637465640000000000000000604082015260600190565b60208082526024908201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d69604082015263373a32b960e11b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115612254576122546122ec565b500190565b60008261227657634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612295576122956122ec565b500290565b6000828210156122ac576122ac6122ec565b500390565b600181811c908216806122c557607f821691505b602082108114156122e657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220df0d1fa2196dc51128dbe939df7e06d58b2b24e4a943ea1a2a36cf5c4cdadd2364736f6c63430008070033",
    "sourceMap": "852:9277:3:-:0;;;1976:32;;;-1:-1:-1;;;;;;1976:32:3;;;1731:42;1976:32;;;;2015:39;;;;;;1813:42;2015:39;;;852:9277;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061026b5760003560e01c80638da5cb5b11610144578063b5ed298a116100b6578063dd62ed3e1161007a578063dd62ed3e1461074b578063efdcd9741461076b578063f2fde38b1461078b578063f734e22a146107ab578063fca3b5aa146107c0578063fede0276146107e057600080fd5b8063b5ed298a14610691578063c01bc982146106b1578063c31c9c07146106e2578063c6bbd5a71461070a578063d153b60c1461072b57600080fd5b80639eeb1d50116101085780639eeb1d50146105dc5780639f8e67bf146105f1578063a457c2d714610611578063a9059cbb14610631578063aaa4a18414610651578063b3f006741461067157600080fd5b80638da5cb5b146105415780638dae88c21461055f57806391fe1b921461058757806395d89b41146105a75780639dc29fac146105bc57600080fd5b80633fc8cef3116101dd578063660db484116101a1578063660db484146104815780636e01a686146104a157806370a08231146104c1578063715018a6146104f757806379c650681461050c5780638456cb591461052c57600080fd5b80633fc8cef3146103e057806340c10f191461040157806345596e2e146104215780634aa4a4fc146104415780635c975abb1461046957600080fd5b806323b872dd1161022f57806323b872dd146103405780632b52684d146103605780632fecd58914610377578063313ce5671461038d57806339509351146103a95780633f4ba83a146103c957600080fd5b806306fdde031461027757806307546172146102a2578063095ea7b3146102db57806318160ddd1461030b578063184a732f1461032a57600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061028c610800565b60405161029991906120ac565b60405180910390f35b3480156102ae57600080fd5b50610100546102c3906001600160a01b031681565b6040516001600160a01b039091168152602001610299565b3480156102e757600080fd5b506102fb6102f6366004611f84565b610892565b6040519015158152602001610299565b34801561031757600080fd5b506035545b604051908152602001610299565b34801561033657600080fd5b5061031c60fd5481565b34801561034c57600080fd5b506102fb61035b366004611f48565b6108aa565b34801561036c57600080fd5b5061031c6101025481565b34801561038357600080fd5b5061031c60fc5481565b34801561039957600080fd5b5060405160128152602001610299565b3480156103b557600080fd5b506102fb6103c4366004611f84565b61099d565b3480156103d557600080fd5b506103de6109bf565b005b3480156103ec57600080fd5b50610104546102c3906001600160a01b031681565b34801561040d57600080fd5b506103de61041c366004611f84565b6109d1565b34801561042d57600080fd5b506103de61043c366004612093565b610aeb565b34801561044d57600080fd5b506102c373c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b34801561047557600080fd5b5060ca5460ff166102fb565b34801561048d57600080fd5b506103de61049c366004611ef3565b610b2e565b3480156104ad57600080fd5b506103de6104bc366004612093565b610b93565b3480156104cd57600080fd5b5061031c6104dc366004611ef3565b6001600160a01b031660009081526033602052604090205490565b34801561050357600080fd5b506103de610bd8565b34801561051857600080fd5b506103de610527366004611f84565b610bea565b34801561053857600080fd5b506103de610c75565b34801561054d57600080fd5b506065546001600160a01b03166102c3565b34801561056b57600080fd5b506102c373b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b34801561059357600080fd5b506103de6105a2366004611fd0565b610c85565b3480156105b357600080fd5b5061028c610d37565b3480156105c857600080fd5b506103de6105d7366004611f84565b610d46565b3480156105e857600080fd5b5061028c610e1b565b3480156105fd57600080fd5b5060ff546102c3906001600160a01b031681565b34801561061d57600080fd5b506102fb61062c366004611f84565b610eaa565b34801561063d57600080fd5b506102fb61064c366004611f84565b610f30565b34801561065d57600080fd5b506103de61066c366004611ef3565b610fb9565b34801561067d57600080fd5b5060fe546102c3906001600160a01b031681565b34801561069d57600080fd5b506103de6106ac366004611ef3565b61102d565b3480156106bd57600080fd5b506102fb6106cc366004611ef3565b6101036020526000908152604090205460ff1681565b3480156106ee57600080fd5b506102c373e592427a0aece92de3edee1f18e0157c0586156481565b34801561071657600080fd5b50610105546102c3906001600160a01b031681565b34801561073757600080fd5b506097546102c3906001600160a01b031681565b34801561075757600080fd5b5061031c610766366004611f15565b61107d565b34801561077757600080fd5b506103de610786366004611ef3565b6110a8565b34801561079757600080fd5b506103de6107a6366004611ef3565b61110d565b3480156107b757600080fd5b506103de611235565b3480156107cc57600080fd5b506103de6107db366004611ef3565b611245565b3480156107ec57600080fd5b506103de6107fb36600461200d565b6112ab565b60606036805461080f906122b1565b80601f016020809104026020016040519081016040528092919081815260200182805461083b906122b1565b80156108885780601f1061085d57610100808354040283529160200191610888565b820191906000526020600020905b81548152906001019060200180831161086b57829003601f168201915b5050505050905090565b6000336108a0818585611418565b5060019392505050565b60006108b461153c565b336000908152610103602052604090205460ff16156108ee5760405162461bcd60e51b81526004016108e59061212b565b60405180910390fd5b6001600160a01b0383166000908152610103602052604090205460ff16156109285760405162461bcd60e51b81526004016108e590612101565b6001600160a01b0384166000908152610103602052604090205460ff16156109875760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016108e5565b610992843384611582565b6108a08484846115fc565b6000336108a08185856109b0838361107d565b6109ba9190612241565b611418565b6109c76117a7565b6109cf611801565b565b6109d961153c565b610100546001600160a01b03163314610a045760405162461bcd60e51b81526004016108e590612162565b6101025481610a1260355490565b610a1c9190612241565b1115610a6a5760405162461bcd60e51b815260206004820152601a60248201527f77696c6c2065786365656420737570706c79206365696c696e6700000000000060448201526064016108e5565b6001600160a01b0382166000908152610103602052604090205460ff1615610aa45760405162461bcd60e51b81526004016108e590612101565b336000908152610103602052604090205460ff1615610ad55760405162461bcd60e51b81526004016108e59061212b565b610add611853565b610ae78282611981565b5050565b610af36117a7565b610afb611853565b60fc81905560405181907f45398c451b1a31b88dbaed4e7b89a632f43cc4b50149d437db03a5300afe40d190600090a250565b610b366117a7565b6001600160a01b038116610b4957600080fd5b60ff80546001600160a01b0319166001600160a01b0383169081179091556040517f164d8ef0d742b45087644f55c61abeb84557df70d06730591e451f0981e278ca90600090a250565b610b9b6117a7565b6101028190556040518181527fe35be406f69e9d11d6ac8e5b54bbc8b6c4baf2fa2359f84a56baa5ea5d07dc8f906020015b60405180910390a150565b610be06117a7565b6109cf6000611a42565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401602060405180830381600087803b158015610c3857600080fd5b505af1158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611fae565b505050565b610c7d6117a7565b6109cf611a94565b60ff546001600160a01b03163314610cf35760405162461bcd60e51b815260206004820152602b60248201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6560448201526a1d1a1bd91bdb1bd9da5cdd60aa1b60648201526084016108e5565b8051610d0790610101906020840190611db1565b507fe6be68107100e39cb16d675c1086a4d5479fbd01108d721dabbccaa2249b995f81604051610bcd91906120ac565b60606037805461080f906122b1565b610d4e61153c565b610100546001600160a01b03163314610d795760405162461bcd60e51b81526004016108e590612162565b6001600160a01b0382166000908152610103602052604090205460ff1615610dd85760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016108e5565b336000908152610103602052604090205460ff1615610e095760405162461bcd60e51b81526004016108e59061212b565b610e11611853565b610ae78282611ad1565b6101018054610e29906122b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610e55906122b1565b8015610ea25780601f10610e7757610100808354040283529160200191610ea2565b820191906000526020600020905b815481529060010190602001808311610e8557829003601f168201915b505050505081565b60003381610eb8828661107d565b905083811015610f185760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108e5565b610f258286868403611418565b506001949350505050565b6000610f3a61153c565b336000908152610103602052604090205460ff1615610f6b5760405162461bcd60e51b81526004016108e59061212b565b6001600160a01b0383166000908152610103602052604090205460ff1615610fa55760405162461bcd60e51b81526004016108e590612101565b610fb03384846115fc565b50600192915050565b610fc16117a7565b6001600160a01b0381166000818152610103602052604090819020805460ff19811660ff9182161590811790925591517f14ddf324cc5d8b14a3c3b12c84b0a7d578d72c8d60655c06d6a457e71431d5ee9261102292161515815260200190565b60405180910390a250565b6110356117a7565b6001600160a01b03811661105b5760405162461bcd60e51b81526004016108e5906121a6565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6110b06117a7565b6001600160a01b0381166110c357600080fd5b60fe80546001600160a01b0319166001600160a01b0383169081179091556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90600090a250565b6001600160a01b0381166111335760405162461bcd60e51b81526004016108e5906121a6565b6097546001600160a01b038281169116146111ab5760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b60648201526084016108e5565b6001600160a01b03811633146112295760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e657200000000000060648201526084016108e5565b61123281611a42565b50565b61123d6117a7565b6109cf611853565b61124d6117a7565b6001600160a01b03811661126057600080fd5b61010080546001600160a01b0319166001600160a01b0383169081179091556040517f726b590ef91a8c76ad05bbe91a57ef84605276528f49cd47d787f558a4e755b690600090a250565b600054610100900460ff16158080156112cb5750600054600160ff909116105b806112e55750303b1580156112e5575060005460ff166001145b6113485760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108e5565b6000805460ff19166001179055801561136b576000805461ff0019166101001790555b6001600160a01b03831661137e57600080fd5b611386611c05565b61138e611c34565b6113988686611c63565b6113a0611c94565b60fc84905560fe80546001600160a01b0319166001600160a01b0385161790556101028290554260fd558015611410576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b03831661147a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108e5565b6001600160a01b0382166114db5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108e5565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60ca5460ff16156109cf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016108e5565b600061158e848461107d565b905060001981146115f657818110156115e95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108e5565b6115f68484848403611418565b50505050565b6001600160a01b0383166116605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108e5565b6001600160a01b0382166116c25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108e5565b6001600160a01b0383166000908152603360205260409020548181101561173a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108e5565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061179a9086815260200190565b60405180910390a36115f6565b6065546001600160a01b031633146109cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108e5565b611809611cbb565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006201518060fd5442611867919061229a565b6118719190612259565b90506001811061123257600061188660355490565b60fc54909150819060005b848110156118cb5768056bc75e2d631000006118ad838561227b565b6118b79190612259565b6118c19084612241565b9250600101611891565b5060006118d8848461229a565b90506118e7856201518061227b565b60fd60008282546118f89190612241565b909155505060fe54611913906001600160a01b031682611981565b60fe547f07982395c678b2ffc23fcf59aaec243ca79418c285af0d0e10b4e65bc4189f4c906001600160a01b03164261194b60355490565b604080516001600160a01b0390941684526020840192909252908201526060810183905260800160405180910390a15050505050565b6001600160a01b0382166119d75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108e5565b80603560008282546119e99190612241565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611a9c61153c565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118363390565b6001600160a01b038216611b315760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108e5565b6001600160a01b03821660009081526033602052604090205481811015611ba55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108e5565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff16611c2c5760405162461bcd60e51b81526004016108e5906121f6565b6109cf611d04565b600054610100900460ff16611c5b5760405162461bcd60e51b81526004016108e5906121f6565b6109cf611d34565b600054610100900460ff16611c8a5760405162461bcd60e51b81526004016108e5906121f6565b610ae78282611d67565b600054610100900460ff166109cf5760405162461bcd60e51b81526004016108e5906121f6565b60ca5460ff166109cf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016108e5565b600054610100900460ff16611d2b5760405162461bcd60e51b81526004016108e5906121f6565b6109cf33611a42565b600054610100900460ff16611d5b5760405162461bcd60e51b81526004016108e5906121f6565b60ca805460ff19169055565b600054610100900460ff16611d8e5760405162461bcd60e51b81526004016108e5906121f6565b8151611da1906036906020850190611db1565b508051610c709060379060208401905b828054611dbd906122b1565b90600052602060002090601f016020900481019282611ddf5760008555611e25565b82601f10611df857805160ff1916838001178555611e25565b82800160010185558215611e25579182015b82811115611e25578251825591602001919060010190611e0a565b50611e31929150611e35565b5090565b5b80821115611e315760008155600101611e36565b80356001600160a01b0381168114611e6157600080fd5b919050565b600082601f830112611e7757600080fd5b813567ffffffffffffffff80821115611e9257611e92612302565b604051601f8301601f19908116603f01168101908282118183101715611eba57611eba612302565b81604052838152866020858801011115611ed357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611f0557600080fd5b611f0e82611e4a565b9392505050565b60008060408385031215611f2857600080fd5b611f3183611e4a565b9150611f3f60208401611e4a565b90509250929050565b600080600060608486031215611f5d57600080fd5b611f6684611e4a565b9250611f7460208501611e4a565b9150604084013590509250925092565b60008060408385031215611f9757600080fd5b611fa083611e4a565b946020939093013593505050565b600060208284031215611fc057600080fd5b81518015158114611f0e57600080fd5b600060208284031215611fe257600080fd5b813567ffffffffffffffff811115611ff957600080fd5b61200584828501611e66565b949350505050565b600080600080600060a0868803121561202557600080fd5b853567ffffffffffffffff8082111561203d57600080fd5b61204989838a01611e66565b9650602088013591508082111561205f57600080fd5b5061206c88828901611e66565b9450506040860135925061208260608701611e4a565b949793965091946080013592915050565b6000602082840312156120a557600080fd5b5035919050565b600060208083528351808285015260005b818110156120d9578581018301518582016040015282016120bd565b818111156120eb576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526010908201526f1d1bc81a5cc81c995cdd1c9a58dd195960821b604082015260600190565b60208082526018908201527f6d73672e73656e64657220697320726573747269637465640000000000000000604082015260600190565b60208082526024908201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d69604082015263373a32b960e11b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115612254576122546122ec565b500190565b60008261227657634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612295576122956122ec565b500290565b6000828210156122ac576122ac6122ec565b500390565b600181811c908216806122c557607f821691505b602082108114156122e657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220df0d1fa2196dc51128dbe939df7e06d58b2b24e4a943ea1a2a36cf5c4cdadd2364736f6c63430008070033",
    "sourceMap": "852:9277:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1545:21:3;;;;;;;;;;-1:-1:-1;1545:21:3;;;;-1:-1:-1;;;;;1545:21:3;;;;;;-1:-1:-1;;;;;3682:32:42;;;;3664:51;;3652:2;3637:18;1545:21:3;3518:203:42;4781:197:26;;;;;;;;;;-1:-1:-1;4781:197:26;;;;;:::i;:::-;;:::i;:::-;;;4693:14:42;;4686:22;4668:41;;4656:2;4641:18;4781:197:26;4528:187:42;3592:106:26;;;;;;;;;;-1:-1:-1;3679:12:26;;3592:106;;;15657:25:42;;;15645:2;15630:18;3592:106:26;15511:177:42;1245:27:3;;;;;;;;;;;;;;;;8530:456;;;;;;;;;;-1:-1:-1;8530:456:3;;;;;:::i;:::-;;:::i;1609:28::-;;;;;;;;;;;;;;;;1150:34;;;;;;;;;;;;;;;;3441:91:26;;;;;;;;;;-1:-1:-1;3441:91:26;;3523:2;5546:36:42;;5534:2;5519:18;3441:91:26;5394:194:42;6191:234:26;;;;;;;;;;-1:-1:-1;6191:234:26;;;;;:::i;:::-;;:::i;7480:76:3:-;;;;;;;;;;;;;:::i;:::-;;1976:32;;;;;;;;;;-1:-1:-1;1976:32:3;;;;-1:-1:-1;;;;;1976:32:3;;;3444:371;;;;;;;;;;-1:-1:-1;3444:371:3;;;;;:::i;:::-;;:::i;6257:218::-;;;;;;;;;;-1:-1:-1;6257:218:3;;;;;:::i;:::-;;:::i;1699:74::-;;;;;;;;;;;;1731:42;1699:74;;1858:84:25;;;;;;;;;;-1:-1:-1;1928:7:25;;;;1858:84;;5497:223:3;;;;;;;;;;-1:-1:-1;5497:223:3;;;;;:::i;:::-;;:::i;7211:175::-;;;;;;;;;;-1:-1:-1;7211:175:3;;;;;:::i;:::-;;:::i;3756:125:26:-;;;;;;;;;;-1:-1:-1;3756:125:26;;;;;:::i;:::-;-1:-1:-1;;;;;3856:18:26;3830:7;3856:18;;;:9;:18;;;;;;;3756:125;2064:101:23;;;;;;;;;;;;;:::i;9851:263:3:-;;;;;;;;;;-1:-1:-1;9851:263:3;;;;;:::i;:::-;;:::i;7400:72::-;;;;;;;;;;;;;:::i;1441:85:23:-;;;;;;;;;;-1:-1:-1;1513:6:23;;-1:-1:-1;;;;;1513:6:23;1441:85;;1780:75:3;;;;;;;;;;;;1813:42;1780:75;;5879:177;;;;;;;;;;-1:-1:-1;5879:177:3;;;;;:::i;:::-;;:::i;2706:102:26:-;;;;;;;;;;;;;:::i;3999:290:3:-;;;;;;;;;;-1:-1:-1;3999:290:3;;;;;:::i;:::-;;:::i;1575:25::-;;;;;;;;;;;;;:::i;1413:28::-;;;;;;;;;;-1:-1:-1;1413:28:3;;;;-1:-1:-1;;;;;1413:28:3;;;6912:427:26;;;;;;;;;;-1:-1:-1;6912:427:26;;;;;:::i;:::-;;:::i;8047:297:3:-;;;;;;;;;;-1:-1:-1;8047:297:3;;;;;:::i;:::-;;:::i;7706:182::-;;;;;;;;;;-1:-1:-1;7706:182:3;;;;;:::i;:::-;;:::i;1326:26::-;;;;;;;;;;-1:-1:-1;1326:26:3;;;;-1:-1:-1;;;;;1326:26:3;;;863:220:2;;;;;;;;;;-1:-1:-1;863:220:2;;;;;:::i;:::-;;:::i;1646:44:3:-;;;;;;;;;;-1:-1:-1;1646:44:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;1862:105;;;;;;;;;;;;1924:42;1862:105;;2015:39;;;;;;;;;;-1:-1:-1;2015:39:3;;;;-1:-1:-1;;;;;2015:39:3;;;405:28:2;;;;;;;;;;-1:-1:-1;405:28:2;;;;-1:-1:-1;;;;;405:28:2;;;4324:149:26;;;;;;;;;;-1:-1:-1;4324:149:26;;;;;:::i;:::-;-1:-1:-1;;;;;4439:18:26;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149;6574:209:3;;;;;;;;;;-1:-1:-1;6574:209:3;;;;;:::i;:::-;;:::i;442:413:2:-;;;;;;;;;;-1:-1:-1;442:413:2;;;;;:::i;:::-;;:::i;5281:96:3:-;;;;;;;;;;;;;:::i;6899:174::-;;;;;;;;;;-1:-1:-1;6899:174:3;;;;;:::i;:::-;;:::i;2350:589::-;;;;;;;;;;-1:-1:-1;2350:589:3;;;;;:::i;:::-;;:::i;2495:98:26:-;2549:13;2581:5;2574:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98;:::o;4781:197::-;4864:4;929:10:30;4918:32:26;929:10:30;4934:7:26;4943:6;4918:8;:32::i;:::-;-1:-1:-1;4967:4:26;;4781:197;-1:-1:-1;;;4781:197:26:o;8530:456:3:-;8667:4;1482:19:25;:17;:19::i;:::-;8706:10:3::1;8693:24;::::0;;;:12:::1;:24;::::0;;;;;::::1;;8692:25;8684:62;;;::::0;-1:-1:-1;;;8684:62:3;;::::1;::::0;::::1;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;8766:16:3;::::1;;::::0;;;:12:::1;:16;::::0;;;;;::::1;;8765:17;8757:46;;;::::0;-1:-1:-1;;;8757:46:3;;7553:2:42;8757:46:3::1;::::0;::::1;7535:21:42::0;7592:2;7572:18;;;7565:30;-1:-1:-1;;;7611:18:42;;;7604:46;7667:18;;8757:46:3::1;7351:340:42::0;8757:46:3::1;-1:-1:-1::0;;;;;8823:18:3;::::1;;::::0;;;:12:::1;:18;::::0;;;;;::::1;;8822:19;8814:50;;;::::0;-1:-1:-1;;;8814:50:3;;14600:2:42;8814:50:3::1;::::0;::::1;14582:21:42::0;14639:2;14619:18;;;14612:30;-1:-1:-1;;;14658:18:42;;;14651:48;14716:18;;8814:50:3::1;14398:342:42::0;8814:50:3::1;8877:41;8893:4;8899:10;8911:6;8877:15;:41::i;:::-;8929:27;8939:4;8945:2;8949:6;8929:9;:27::i;6191:234:26:-:0;929:10:30;6279:4:26;4439:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4439:27:26;;;;;;;;;;6279:4;;929:10:30;6333:64:26;;929:10:30;;4439:27:26;;6358:38;;6386:10;;6358:38;:::i;:::-;6333:8;:64::i;7480:76:3:-;1334:13:23;:11;:13::i;:::-;7538:10:3::1;:8;:10::i;:::-;7480:76::o:0;3444:371::-;1482:19:25;:17;:19::i;:::-;2269:6:3::1;::::0;-1:-1:-1;;;;;2269:6:3::1;2255:10;:20;2247:69;;;::::0;-1:-1:-1;;;2247:69:3;;::::1;::::0;::::1;;;:::i;:::-;3574:13:::2;;3564:6;3548:13;3679:12:26::0;;;3592:106;3548:13:3::2;:22;;;;:::i;:::-;:39;;3540:78;;;::::0;-1:-1:-1;;;3540:78:3;;13428:2:42;3540:78:3::2;::::0;::::2;13410:21:42::0;13467:2;13447:18;;;13440:30;13506:28;13486:18;;;13479:56;13552:18;;3540:78:3::2;13226:350:42::0;3540:78:3::2;-1:-1:-1::0;;;;;3638:16:3;::::2;;::::0;;;:12:::2;:16;::::0;;;;;::::2;;3637:17;3629:46;;;::::0;-1:-1:-1;;;3629:46:3;;7553:2:42;3629:46:3::2;::::0;::::2;7535:21:42::0;7592:2;7572:18;;;7565:30;-1:-1:-1;;;7611:18:42;;;7604:46;7667:18;;3629:46:3::2;7351:340:42::0;3629:46:3::2;3708:10;3695:24;::::0;;;:12:::2;:24;::::0;;;;;::::2;;3694:25;3686:62;;;::::0;-1:-1:-1;;;3686:62:3;;::::2;::::0;::::2;;;:::i;:::-;3759:20;:18;:20::i;:::-;3790:17;3796:2;3800:6;3790:5;:17::i;:::-;3444:371:::0;;:::o;6257:218::-;1334:13:23;:11;:13::i;:::-;6346:20:3::1;:18;:20::i;:::-;6377:19;:42:::0;;;6435:32:::1;::::0;6399:20;;6435:32:::1;::::0;;;::::1;6257:218:::0;:::o;5497:223::-;1334:13:23;:11;:13::i;:::-;-1:-1:-1;;;;;5594:28:3;::::1;5586:37;;;::::0;::::1;;5634:13;:30:::0;;-1:-1:-1;;;;;;5634:30:3::1;-1:-1:-1::0;;;;;5634:30:3;::::1;::::0;;::::1;::::0;;;5680:32:::1;::::0;::::1;::::0;-1:-1:-1;;5680:32:3::1;5497:223:::0;:::o;7211:175::-;1334:13:23;:11;:13::i;:::-;7300::3::1;:30:::0;;;7346:32:::1;::::0;15657:25:42;;;7346:32:3::1;::::0;15645:2:42;15630:18;7346:32:3::1;;;;;;;;7211:175:::0;:::o;2064:101:23:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;9851:263:3:-:0;9920:65;;-1:-1:-1;;;9920:65:3;;9949:10;9920:65;;;3966:34:42;9969:4:3;4016:18:42;;;4009:43;4068:18;;;4061:34;;;-1:-1:-1;;;;;9920:28:3;;;;;3901:18:42;;9920:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9851:263;;:::o;7400:72::-;1334:13:23;:11;:13::i;:::-;7456:8:3::1;:6;:8::i;5879:177::-:0;2125:13;;-1:-1:-1;;;;;2125:13:3;2111:10;:27;2103:83;;;;-1:-1:-1;;;2103:83:3;;10243:2:42;2103:83:3;;;10225:21:42;10282:2;10262:18;;;10255:30;10321:34;10301:18;;;10294:62;-1:-1:-1;;;10372:18:42;;;10365:41;10423:19;;2103:83:3;10041:407:42;2103:83:3;5978:26;;::::1;::::0;:11:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;6020:28;6035:12;6020:28;;;;;;:::i;2706:102:26:-:0;2762:13;2794:7;2787:14;;;;;:::i;3999:290:3:-;1482:19:25;:17;:19::i;:::-;2269:6:3::1;::::0;-1:-1:-1;;;;;2269:6:3::1;2255:10;:20;2247:69;;;::::0;-1:-1:-1;;;2247:69:3;;::::1;::::0;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;4106:18:3;::::2;;::::0;;;:12:::2;:18;::::0;;;;;::::2;;4105:19;4097:50;;;::::0;-1:-1:-1;;;4097:50:3;;14600:2:42;4097:50:3::2;::::0;::::2;14582:21:42::0;14639:2;14619:18;;;14612:30;-1:-1:-1;;;14658:18:42;;;14651:48;14716:18;;4097:50:3::2;14398:342:42::0;4097:50:3::2;4180:10;4167:24;::::0;;;:12:::2;:24;::::0;;;;;::::2;;4166:25;4158:62;;;::::0;-1:-1:-1;;;4158:62:3;;::::2;::::0;::::2;;;:::i;:::-;4231:20;:18;:20::i;:::-;4262:19;4268:4;4274:6;4262:5;:19::i;1575:25::-:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6912:427:26:-;929:10:30;7005:4:26;4439:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4439:27:26;;;;;;;;;;7005:4;;929:10:30;7129:35:26;;;;7121:85;;;;-1:-1:-1;;;7121:85:26;;14947:2:42;7121:85:26;;;14929:21:42;14986:2;14966:18;;;14959:30;15025:34;15005:18;;;14998:62;-1:-1:-1;;;15076:18:42;;;15069:35;15121:19;;7121:85:26;14745:401:42;7121:85:26;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;:::-;-1:-1:-1;7328:4:26;;6912:427;-1:-1:-1;;;;6912:427:26:o;8047:297:3:-;8132:4;1482:19:25;:17;:19::i;:::-;8171:10:3::1;8158:24;::::0;;;:12:::1;:24;::::0;;;;;::::1;;8157:25;8149:62;;;::::0;-1:-1:-1;;;8149:62:3;;::::1;::::0;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;8231:16:3;::::1;;::::0;;;:12:::1;:16;::::0;;;;;::::1;;8230:17;8222:46;;;::::0;-1:-1:-1;;;8222:46:3;;7553:2:42;8222:46:3::1;::::0;::::1;7535:21:42::0;7592:2;7572:18;;;7565:30;-1:-1:-1;;;7611:18:42;;;7604:46;7667:18;;8222:46:3::1;7351:340:42::0;8222:46:3::1;8281:33;8291:10;8303:2;8307:6;8281:9;:33::i;:::-;-1:-1:-1::0;8332:4:3::1;8047:297:::0;;;;:::o;7706:182::-;1334:13:23;:11;:13::i;:::-;-1:-1:-1;;;;;7806:17:3;::::1;;::::0;;;:12:::1;:17;::::0;;;;;;;;;;-1:-1:-1;7806:17:3;;::::1;7805:18;-1:-1:-1::0;;7785:38:3;;::::1;::::0;::::1;::::0;;;7839:41;;7862:17;;4693:14:42;4686:22;4668:41;;7839::3;;::::1;::::0;;;;;;;;::::1;7706:182:::0;:::o;863:220:2:-;1334:13:23;:11;:13::i;:::-;-1:-1:-1;;;;;953:28:2;::::1;945:89;;;::::0;-1:-1:-1;;;945:89:2;;::::1;::::0;::::1;;;:::i;:::-;1045:13;:30:::0;;-1:-1:-1;;;;;;1045:30:2::1;-1:-1:-1::0;;;;;1045:30:2;;;::::1;::::0;;;::::1;::::0;;863:220::o;6574:209:3:-;1334:13:23;:11;:13::i;:::-;-1:-1:-1;;;;;6667:26:3;::::1;6659:35;;;::::0;::::1;;6705:11;:26:::0;;-1:-1:-1;;;;;;6705:26:3::1;-1:-1:-1::0;;;;;6705:26:3;::::1;::::0;;::::1;::::0;;;6747:28:::1;::::0;::::1;::::0;-1:-1:-1;;6747:28:3::1;6574:209:::0;:::o;442:413:2:-;-1:-1:-1;;;;;530:22:2;;522:83;;;;-1:-1:-1;;;522:83:2;;;;;;;:::i;:::-;636:13;;-1:-1:-1;;;;;624:25:2;;;636:13;;624:25;616:88;;;;-1:-1:-1;;;616:88:2;;9824:2:42;616:88:2;;;9806:21:42;9863:2;9843:18;;;9836:30;9902:34;9882:18;;;9875:62;-1:-1:-1;;;9953:18:42;;;9946:48;10011:19;;616:88:2;9622:414:42;616:88:2;735:10;-1:-1:-1;;;;;723:22:2;;;715:93;;;;-1:-1:-1;;;715:93:2;;11000:2:42;715:93:2;;;10982:21:42;11039:2;11019:18;;;11012:30;11078:34;11058:18;;;11051:62;11149:28;11129:18;;;11122:56;11195:19;;715:93:2;10798:422:42;715:93:2;819:28;838:8;819:18;:28::i;:::-;442:413;:::o;5281:96:3:-;1334:13:23;:11;:13::i;:::-;5349:20:3::1;:18;:20::i;6899:174::-:0;1334:13:23;:11;:13::i;:::-;-1:-1:-1;;;;;6982:21:3;::::1;6974:30;;;::::0;::::1;;7015:6;:16:::0;;-1:-1:-1;;;;;;7015:16:3::1;-1:-1:-1::0;;;;;7015:16:3;::::1;::::0;;::::1;::::0;;;7047:18:::1;::::0;::::1;::::0;-1:-1:-1;;7047:18:3::1;6899:174:::0;:::o;2350:589::-;3279:19:24;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:24;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:24;1713:19:29;:23;;;3387:66:24;;-1:-1:-1;3436:12:24;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:24;;11427:2:42;3325:201:24;;;11409:21:42;11466:2;11446:18;;;11439:30;11505:34;11485:18;;;11478:62;-1:-1:-1;;;11556:18:42;;;11549:44;11610:19;;3325:201:24;11225:410:42;3325:201:24;3536:12;:16;;-1:-1:-1;;3536:16:24;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:24;;;;;3562:65;-1:-1:-1;;;;;2599:26:3;::::1;2591:35;;;::::0;::::1;;2639:16;:14;:16::i;:::-;2666:17;:15;:17::i;:::-;2694:36;2707:9;2718:11;2694:12;:36::i;:::-;2741:16;:14;:16::i;:::-;2770:19;:42:::0;;;2823:11:::1;:26:::0;;-1:-1:-1;;;;;;2823:26:3::1;-1:-1:-1::0;;;;;2823:26:3;::::1;;::::0;;2860:13:::1;:30:::0;;;2916:15:::1;2901:12;:30:::0;3647:99:24;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:24;;;3721:14;;-1:-1:-1;5546:36:42;;3721:14:24;;5534:2:42;5519:18;3721:14:24;;;;;;;3647:99;3269:483;2350:589:3;;;;;:::o;10794:340:26:-;-1:-1:-1;;;;;10895:19:26;;10887:68;;;;-1:-1:-1;;;10887:68:26;;13783:2:42;10887:68:26;;;13765:21:42;13822:2;13802:18;;;13795:30;13861:34;13841:18;;;13834:62;-1:-1:-1;;;13912:18:42;;;13905:34;13956:19;;10887:68:26;13581:400:42;10887:68:26;-1:-1:-1;;;;;10973:21:26;;10965:68;;;;-1:-1:-1;;;10965:68:26;;7898:2:42;10965:68:26;;;7880:21:42;7937:2;7917:18;;;7910:30;7976:34;7956:18;;;7949:62;-1:-1:-1;;;8027:18:42;;;8020:32;8069:19;;10965:68:26;7696:398:42;10965:68:26;-1:-1:-1;;;;;11044:18:26;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11095:32;;15657:25:42;;;11095:32:26;;;;;;;;;;;;10794:340;;;:::o;2010:106:25:-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:25;;10655:2:42;2071:38:25;;;10637:21:42;10694:2;10674:18;;;10667:30;-1:-1:-1;;;10713:18:42;;;10706:46;10769:18;;2071:38:25;10453:340:42;11415:411:26;-1:-1:-1;;;;;4439:18:26;;;11515:24;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11581:37:26;;11577:243;;11662:6;11642:16;:26;;11634:68;;;;-1:-1:-1;;;11634:68:26;;9059:2:42;11634:68:26;;;9041:21:42;9098:2;9078:18;;;9071:30;9137:31;9117:18;;;9110:59;9186:18;;11634:68:26;8857:353:42;11634:68:26;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11505:321;11415:411;;;:::o;7793:788::-;-1:-1:-1;;;;;7889:18:26;;7881:68;;;;-1:-1:-1;;;7881:68:26;;13022:2:42;7881:68:26;;;13004:21:42;13061:2;13041:18;;;13034:30;13100:34;13080:18;;;13073:62;-1:-1:-1;;;13151:18:42;;;13144:35;13196:19;;7881:68:26;12820:401:42;7881:68:26;-1:-1:-1;;;;;7967:16:26;;7959:64;;;;-1:-1:-1;;;7959:64:26;;6397:2:42;7959:64:26;;;6379:21:42;6436:2;6416:18;;;6409:30;6475:34;6455:18;;;6448:62;-1:-1:-1;;;6526:18:42;;;6519:33;6569:19;;7959:64:26;6195:399:42;7959:64:26;-1:-1:-1;;;;;8105:15:26;;8083:19;8105:15;;;:9;:15;;;;;;8138:21;;;;8130:72;;;;-1:-1:-1;;;8130:72:26;;9417:2:42;8130:72:26;;;9399:21:42;9456:2;9436:18;;;9429:30;9495:34;9475:18;;;9468:62;-1:-1:-1;;;9546:18:42;;;9539:36;9592:19;;8130:72:26;9215:402:42;8130:72:26;-1:-1:-1;;;;;8236:15:26;;;;;;;:9;:15;;;;;;;;8254:20;;;8236:38;;8451:13;;;;;;;;;;:23;;;;;;8500:26;;15657:25:42;;;8500:26:26;;8451:13;;8500:26;;;;;;;;;;;8537:37;9851:263:3;1599:130:23;1513:6;;-1:-1:-1;;;;;1513:6:23;929:10:30;1662:23:23;1654:68;;;;-1:-1:-1;;;1654:68:23;;11842:2:42;1654:68:23;;;11824:21:42;;;11861:18;;;11854:30;11920:34;11900:18;;;11893:62;11972:18;;1654:68:23;11640:356:42;2676:117:25;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:25::1;::::0;;2764:22:::1;929:10:30::0;2773:12:25::1;2764:22;::::0;;-1:-1:-1;;;;;3682:32:42;;;;3664:51;;2764:22:25;;;;;3652:2:42;2764:22:25;;::::1;2676:117::o:0;4297:754:3:-;4388:13;4439:6;4423:12;;4405:15;:30;;;;:::i;:::-;4404:41;;;;:::i;:::-;4388:57;;4471:1;4462:5;:10;4458:586;;4489:15;4507:13;3679:12:26;;;3592:106;4507:13:3;4593:19;;4489:31;;-1:-1:-1;4489:31:3;;4535:14;4629:178;4649:5;4645:1;:9;4629:178;;;1053:4;4689:17;4698:8;4689:6;:17;:::i;:::-;4688:28;;;;:::i;:::-;4677:40;;;;:::i;:::-;;-1:-1:-1;4769:3:3;;4629:178;;;-1:-1:-1;4821:14:3;4838:16;4847:7;4838:6;:16;:::i;:::-;4821:33;-1:-1:-1;4885:14:3;4894:5;4885:6;:14;:::i;:::-;4869:12;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;4920:11:3;;4914:26;;-1:-1:-1;;;;;4920:11:3;4933:6;4914:5;:26::i;:::-;4980:11;;3679:12:26;;4962:70:3;;;-1:-1:-1;;;;;4980:11:3;;;4337:51:42;;4993:15:3;4419:2:42;4404:18;;4397:34;4447:18;;;4440:34;;;;4505:2;4490:18;;4483:34;;;4962:70:3;;;;;;4324:3:42;4962:70:3;;;4474:570;;;;4336:715;4297:754::o;8857:535:26:-;-1:-1:-1;;;;;8940:21:26;;8932:65;;;;-1:-1:-1;;;8932:65:26;;15353:2:42;8932:65:26;;;15335:21:42;15392:2;15372:18;;;15365:30;15431:33;15411:18;;;15404:61;15482:18;;8932:65:26;15151:355:42;8932:65:26;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9236:18:26;;;;;;:9;:18;;;;;;;;:28;;;;;;9289:37;15657:25:42;;;9289:37:26;;15630:18:42;9289:37:26;;;;;;;3444:371:3;;:::o;2666:187:23:-;2758:6;;;-1:-1:-1;;;;;2774:17:23;;;-1:-1:-1;;;;;;2774:17:23;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;-1:-1:-1;;2806:40:23;2729:124;2666:187;:::o;2429:115:25:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:25::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:30::0;;850:96;9712:659:26;-1:-1:-1;;;;;9795:21:26;;9787:67;;;;-1:-1:-1;;;9787:67:26;;12620:2:42;9787:67:26;;;12602:21:42;12659:2;12639:18;;;12632:30;12698:34;12678:18;;;12671:62;-1:-1:-1;;;12749:18:42;;;12742:31;12790:19;;9787:67:26;12418:397:42;9787:67:26;-1:-1:-1;;;;;9950:18:26;;9925:22;9950:18;;;:9;:18;;;;;;9986:24;;;;9978:71;;;;-1:-1:-1;;;9978:71:26;;7150:2:42;9978:71:26;;;7132:21:42;7189:2;7169:18;;;7162:30;7228:34;7208:18;;;7201:62;-1:-1:-1;;;7279:18:42;;;7272:32;7321:19;;9978:71:26;6948:398:42;9978:71:26;-1:-1:-1;;;;;10083:18:26;;;;;;:9;:18;;;;;;;;10104:23;;;10083:44;;10220:12;:22;;;;;;;10268:37;15657:25:42;;;10083:18:26;;;10268:37;;15630:18:42;10268:37:26;;;;;;;9920:65:3;9851:263;;:::o;1003:95:23:-;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;1065:26:23::1;:24;:26::i;1063:97:25:-:0;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;1126:27:25::1;:25;:27::i;2118:147:26:-:0;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;2220:38:26::1;2243:5;2250:7;2220:22;:38::i;711:59:30:-:0;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;2188:106:25:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:25;;6801:2:42;2246:41:25;;;6783:21:42;6840:2;6820:18;;;6813:30;-1:-1:-1;;;6859:18:42;;;6852:50;6919:18;;2246:41:25;6599:344:42;1104:111:23;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;1176:32:23::1;929:10:30::0;1176:18:23::1;:32::i;1166:95:25:-:0;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;1239:7:25::1;:15:::0;;-1:-1:-1;;1239:15:25::1;::::0;;1166:95::o;2271:159:26:-;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;2383:13:26;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2406:17:26;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:42;82:20;;-1:-1:-1;;;;;131:31:42;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:719::-;235:5;288:3;281:4;273:6;269:17;265:27;255:55;;306:1;303;296:12;255:55;342:6;329:20;368:18;405:2;401;398:10;395:36;;;411:18;;:::i;:::-;486:2;480:9;454:2;540:13;;-1:-1:-1;;536:22:42;;;560:2;532:31;528:40;516:53;;;584:18;;;604:22;;;581:46;578:72;;;630:18;;:::i;:::-;670:10;666:2;659:22;705:2;697:6;690:18;751:3;744:4;739:2;731:6;727:15;723:26;720:35;717:55;;;768:1;765;758:12;717:55;832:2;825:4;817:6;813:17;806:4;798:6;794:17;781:54;879:1;872:4;867:2;859:6;855:15;851:26;844:37;899:6;890:15;;;;;;192:719;;;;:::o;916:186::-;975:6;1028:2;1016:9;1007:7;1003:23;999:32;996:52;;;1044:1;1041;1034:12;996:52;1067:29;1086:9;1067:29;:::i;:::-;1057:39;916:186;-1:-1:-1;;;916:186:42:o;1107:260::-;1175:6;1183;1236:2;1224:9;1215:7;1211:23;1207:32;1204:52;;;1252:1;1249;1242:12;1204:52;1275:29;1294:9;1275:29;:::i;:::-;1265:39;;1323:38;1357:2;1346:9;1342:18;1323:38;:::i;:::-;1313:48;;1107:260;;;;;:::o;1372:328::-;1449:6;1457;1465;1518:2;1506:9;1497:7;1493:23;1489:32;1486:52;;;1534:1;1531;1524:12;1486:52;1557:29;1576:9;1557:29;:::i;:::-;1547:39;;1605:38;1639:2;1628:9;1624:18;1605:38;:::i;:::-;1595:48;;1690:2;1679:9;1675:18;1662:32;1652:42;;1372:328;;;;;:::o;1705:254::-;1773:6;1781;1834:2;1822:9;1813:7;1809:23;1805:32;1802:52;;;1850:1;1847;1840:12;1802:52;1873:29;1892:9;1873:29;:::i;:::-;1863:39;1949:2;1934:18;;;;1921:32;;-1:-1:-1;;;1705:254:42:o;1964:277::-;2031:6;2084:2;2072:9;2063:7;2059:23;2055:32;2052:52;;;2100:1;2097;2090:12;2052:52;2132:9;2126:16;2185:5;2178:13;2171:21;2164:5;2161:32;2151:60;;2207:1;2204;2197:12;2246:322;2315:6;2368:2;2356:9;2347:7;2343:23;2339:32;2336:52;;;2384:1;2381;2374:12;2336:52;2424:9;2411:23;2457:18;2449:6;2446:30;2443:50;;;2489:1;2486;2479:12;2443:50;2512;2554:7;2545:6;2534:9;2530:22;2512:50;:::i;:::-;2502:60;2246:322;-1:-1:-1;;;;2246:322:42:o;2573:755::-;2688:6;2696;2704;2712;2720;2773:3;2761:9;2752:7;2748:23;2744:33;2741:53;;;2790:1;2787;2780:12;2741:53;2830:9;2817:23;2859:18;2900:2;2892:6;2889:14;2886:34;;;2916:1;2913;2906:12;2886:34;2939:50;2981:7;2972:6;2961:9;2957:22;2939:50;:::i;:::-;2929:60;;3042:2;3031:9;3027:18;3014:32;2998:48;;3071:2;3061:8;3058:16;3055:36;;;3087:1;3084;3077:12;3055:36;;3110:52;3154:7;3143:8;3132:9;3128:24;3110:52;:::i;:::-;3100:62;;;3209:2;3198:9;3194:18;3181:32;3171:42;;3232:38;3266:2;3255:9;3251:18;3232:38;:::i;:::-;2573:755;;;;-1:-1:-1;2573:755:42;;3317:3;3302:19;3289:33;;2573:755;-1:-1:-1;;2573:755:42:o;3333:180::-;3392:6;3445:2;3433:9;3424:7;3420:23;3416:32;3413:52;;;3461:1;3458;3451:12;3413:52;-1:-1:-1;3484:23:42;;3333:180;-1:-1:-1;3333:180:42:o;5593:597::-;5705:4;5734:2;5763;5752:9;5745:21;5795:6;5789:13;5838:6;5833:2;5822:9;5818:18;5811:34;5863:1;5873:140;5887:6;5884:1;5881:13;5873:140;;;5982:14;;;5978:23;;5972:30;5948:17;;;5967:2;5944:26;5937:66;5902:10;;5873:140;;;6031:6;6028:1;6025:13;6022:91;;;6101:1;6096:2;6087:6;6076:9;6072:22;6068:31;6061:42;6022:91;-1:-1:-1;6174:2:42;6153:15;-1:-1:-1;;6149:29:42;6134:45;;;;6181:2;6130:54;;5593:597;-1:-1:-1;;;5593:597:42:o;8099:348::-;8301:2;8283:21;;;8340:2;8320:18;;;8313:30;8379:26;8374:2;8359:18;;8352:54;8438:2;8423:18;;8099:348::o;8452:400::-;8654:2;8636:21;;;8693:2;8673:18;;;8666:30;8732:34;8727:2;8712:18;;8705:62;-1:-1:-1;;;8798:2:42;8783:18;;8776:34;8842:3;8827:19;;8452:400::o;12001:412::-;12203:2;12185:21;;;12242:2;12222:18;;;12215:30;12281:34;12276:2;12261:18;;12254:62;-1:-1:-1;;;12347:2:42;12332:18;;12325:46;-1:-1:-1;12388:19:42;;12001:412::o;13986:407::-;14188:2;14170:21;;;14227:2;14207:18;;;14200:30;14266:34;14261:2;14246:18;;14239:62;-1:-1:-1;;;14332:2:42;14317:18;;14310:41;14383:3;14368:19;;13986:407::o;15882:128::-;15922:3;15953:1;15949:6;15946:1;15943:13;15940:39;;;15959:18;;:::i;:::-;-1:-1:-1;15995:9:42;;15882:128::o;16015:217::-;16055:1;16081;16071:132;;16125:10;16120:3;16116:20;16113:1;16106:31;16160:4;16157:1;16150:15;16188:4;16185:1;16178:15;16071:132;-1:-1:-1;16217:9:42;;16015:217::o;16237:168::-;16277:7;16343:1;16339;16335:6;16331:14;16328:1;16325:21;16320:1;16313:9;16306:17;16302:45;16299:71;;;16350:18;;:::i;:::-;-1:-1:-1;16390:9:42;;16237:168::o;16410:125::-;16450:4;16478:1;16475;16472:8;16469:34;;;16483:18;;:::i;:::-;-1:-1:-1;16520:9:42;;16410:125::o;16540:380::-;16619:1;16615:12;;;;16662;;;16683:61;;16737:4;16729:6;16725:17;16715:27;;16683:61;16790:2;16782:6;16779:14;16759:18;16756:38;16753:161;;;16836:10;16831:3;16827:20;16824:1;16817:31;16871:4;16868:1;16861:15;16899:4;16896:1;16889:15;16753:161;;16540:380;;;:::o;16925:127::-;16986:10;16981:3;16977:20;16974:1;16967:31;17017:4;17014:1;17007:15;17041:4;17038:1;17031:15;17057:127;17118:10;17113:3;17109:20;17106:1;17099:31;17149:4;17146:1;17139:15;17173:4;17170:1;17163:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "QUOTER()": "8dae88c2",
    "WETH9()": "4aa4a4fc",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "feeRatePerDayScaled()": "2fecd589",
    "feeReceiver()": "b3f00674",
    "feeTimestamp()": "184a732f",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string,uint256,address,uint256)": "fede0276",
    "isRestricted(address)": "c01bc982",
    "methodologist()": "9f8e67bf",
    "methodology()": "9eeb1d50",
    "mint(address,uint256)": "40c10f19",
    "mintToFeeReceiver()": "f734e22a",
    "mintToken(address,uint256)": "79c65068",
    "minter()": "07546172",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "proposeOwner(address)": "b5ed298a",
    "proposedOwner()": "d153b60c",
    "quoter()": "c6bbd5a7",
    "renounceOwnership()": "715018a6",
    "setFeeRate(uint256)": "45596e2e",
    "setFeeReceiver(address)": "efdcd974",
    "setMethodologist(address)": "660db484",
    "setMethodology(string)": "91fe1b92",
    "setMinter(address)": "fca3b5aa",
    "setSupplyCeiling(uint256)": "6e01a686",
    "supplyCeiling()": "2b52684d",
    "swapRouter()": "c31c9c07",
    "symbol()": "95d89b41",
    "toggleRestriction(address)": "aaa4a184",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeRatePerDayScaled\",\"type\":\"uint256\"}],\"name\":\"FeeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"methodologist\",\"type\":\"address\"}],\"name\":\"MethodologistSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"methodology\",\"type\":\"string\"}],\"name\":\"MethodologySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintFeeToReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"SupplyCeilingSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRestricted\",\"type\":\"bool\"}],\"name\":\"ToggledRestricted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"QUOTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRatePerDayScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_feeRatePerDayScaled\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"methodologist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"methodology\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintToFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"proposeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"contract IQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeRatePerDayScaled\",\"type\":\"uint256\"}],\"name\":\"setFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_methodologist\",\"type\":\"address\"}],\"name\":\"setMethodologist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_methodology\",\"type\":\"string\"}],\"name\":\"setMethodology\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"setSupplyCeiling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyCeiling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"toggleRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"NEX Labs Protocol\",\"details\":\"This contract uses an upgradeable pattern\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"burn function can only be called externally by the controller\",\"params\":{\"amount\":\"uint256\",\"from\":\"address\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Mint function can only be called externally by the controller\",\"params\":{\"amount\":\"uint256\",\"to\":\"address\"}},\"mintToFeeReceiver()\":{\"details\":\"Can only be called by the owner externally,_mintToFeeReciver is the internal function and is called after each supply/rate change\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFeeRate(uint256)\":{\"details\":\"Given the annual fee rate this function sets and calculates the rate per second\",\"params\":{\"_feeRatePerDayScaled\":\"uint256\"}},\"setFeeReceiver(address)\":{\"params\":{\"_feeReceiver\":\"address\"}},\"setMethodologist(address)\":{\"params\":{\"_methodologist\":\"address\"}},\"setMethodology(string)\":{\"params\":{\"_methodology\":\"string\"}},\"setMinter(address)\":{\"params\":{\"_minter\":\"address\"}},\"setSupplyCeiling(uint256)\":{\"params\":{\"_supplyCeiling\":\"uint256\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"toggleRestriction(address)\":{\"details\":\"Negates current restriction state\",\"params\":{\"who\":\"address\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"uint256\",\"to\":\"address\"},\"returns\":{\"_0\":\"bool\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"uint256\",\"from\":\"address\",\"to\":\"address\"},\"returns\":{\"_0\":\"bool\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Index Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"External burn function\"},\"initialize(string,string,uint256,address,uint256)\":{\"notice\":\"============================================================================================= Initializer =============================================================================================\"},\"mint(address,uint256)\":{\"notice\":\"External mint function\"},\"mintToFeeReceiver()\":{\"notice\":\"Expands supply and mints fees to fee reciever\"},\"pause()\":{\"notice\":\"============================================================================================= Pausable Logic =============================================================================================\"},\"setFeeRate(uint256)\":{\"notice\":\"Ownable function to set the fee rate\"},\"setFeeReceiver(address)\":{\"notice\":\"Ownable function to set the receiver\"},\"setMethodologist(address)\":{\"notice\":\"Only owner function for setting the methodologist\"},\"setMethodology(string)\":{\"notice\":\"Callable only by the methodoligst to store on chain data about the underlying weight of the token\"},\"setMinter(address)\":{\"notice\":\"Ownable function to set the contract that controls minting\"},\"setSupplyCeiling(uint256)\":{\"notice\":\"Ownable function to set the limit at which the total supply cannot exceed\"},\"toggleRestriction(address)\":{\"notice\":\"Compliance feature to blacklist bad actors\"},\"transfer(address,uint256)\":{\"notice\":\"Overriden ERC20 transfer to include restriction\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Overriden ERC20 transferFrom to include restriction\"}},\"notice\":\"The main token contract for Index Token (NEX Labs Protocol)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/IndexToken.sol\":\"IndexToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x94dfbd5474881d8f4f122e7c6d00ec2e6966ed7866f73a9ba964d164732cb4ab\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b3ed4a03060e542c16f47466c3e2412c92a48f7a9bb42dc7ff3c8216030ef3f\",\"dweb:/ipfs/QmQ1Fz9iwE8r8MvEZA6KVYhMLCVXvxUQKoUXSYJmkyGT8N\"]},\"contracts/proposable/ProposableOwnableUpgradeable.sol\":{\"keccak256\":\"0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65\",\"dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72\"]},\"contracts/token/IndexToken.sol\":{\"keccak256\":\"0x6cd3f9725cf8c1dda92534b2ab7b430066455b2563f4817e00de5ec89b1db3c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31eb08181fb7cf06e5522c747d94bdcc3a23172114ecd2edab86b3937935a246\",\"dweb:/ipfs/QmeUFsUev33xZESrktfijnGs3YifusLbwYbMQjwjVGMZzc\"]},\"contracts/token/TokenInterface.sol\":{\"keccak256\":\"0xd530600bcc7a81e3996517a2c6967dd448b2b9702eca4efe15f772de69c6d880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f61d2aab02ee0f4c376b1b41629632d894c52127cd15669e9ffca3fb21f1307\",\"dweb:/ipfs/Qmb47gpnWD7i6Va4nKcmg7kPyaYcpXb74QFCQePomaJjZj\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "feeRatePerDayScaled",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeRateSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeReceiverSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "methodologist",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MethodologistSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "methodology",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MethodologySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintFeeToReceiver",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MinterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supplyCeiling",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupplyCeilingSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isRestricted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ToggledRestricted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeRatePerDayScaled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_feeRatePerDayScaled",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_feeReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_supplyCeiling",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRestricted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "methodologist",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "methodology",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintToFeeReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintToken"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_proposedOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proposeOwner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposedOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quoter",
          "outputs": [
            {
              "internalType": "contract IQuoter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_feeRatePerDayScaled",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeRate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeReceiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_methodologist",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMethodologist"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_methodology",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMethodology"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supplyCeiling",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSupplyCeiling"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "supplyCeiling",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "toggleRestriction"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(address,uint256)": {
            "details": "burn function can only be called externally by the controller",
            "params": {
              "amount": "uint256",
              "from": "address"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mint(address,uint256)": {
            "details": "Mint function can only be called externally by the controller",
            "params": {
              "amount": "uint256",
              "to": "address"
            }
          },
          "mintToFeeReceiver()": {
            "details": "Can only be called by the owner externally,_mintToFeeReciver is the internal function and is called after each supply/rate change"
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setFeeRate(uint256)": {
            "details": "Given the annual fee rate this function sets and calculates the rate per second",
            "params": {
              "_feeRatePerDayScaled": "uint256"
            }
          },
          "setFeeReceiver(address)": {
            "params": {
              "_feeReceiver": "address"
            }
          },
          "setMethodologist(address)": {
            "params": {
              "_methodologist": "address"
            }
          },
          "setMethodology(string)": {
            "params": {
              "_methodology": "string"
            }
          },
          "setMinter(address)": {
            "params": {
              "_minter": "address"
            }
          },
          "setSupplyCeiling(uint256)": {
            "params": {
              "_supplyCeiling": "uint256"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "toggleRestriction(address)": {
            "details": "Negates current restriction state",
            "params": {
              "who": "address"
            }
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "params": {
              "amount": "uint256",
              "to": "address"
            },
            "returns": {
              "_0": "bool"
            }
          },
          "transferFrom(address,address,uint256)": {
            "params": {
              "amount": "uint256",
              "from": "address",
              "to": "address"
            },
            "returns": {
              "_0": "bool"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(address,uint256)": {
            "notice": "External burn function"
          },
          "initialize(string,string,uint256,address,uint256)": {
            "notice": "============================================================================================= Initializer ============================================================================================="
          },
          "mint(address,uint256)": {
            "notice": "External mint function"
          },
          "mintToFeeReceiver()": {
            "notice": "Expands supply and mints fees to fee reciever"
          },
          "pause()": {
            "notice": "============================================================================================= Pausable Logic ============================================================================================="
          },
          "setFeeRate(uint256)": {
            "notice": "Ownable function to set the fee rate"
          },
          "setFeeReceiver(address)": {
            "notice": "Ownable function to set the receiver"
          },
          "setMethodologist(address)": {
            "notice": "Only owner function for setting the methodologist"
          },
          "setMethodology(string)": {
            "notice": "Callable only by the methodoligst to store on chain data about the underlying weight of the token"
          },
          "setMinter(address)": {
            "notice": "Ownable function to set the contract that controls minting"
          },
          "setSupplyCeiling(uint256)": {
            "notice": "Ownable function to set the limit at which the total supply cannot exceed"
          },
          "toggleRestriction(address)": {
            "notice": "Compliance feature to blacklist bad actors"
          },
          "transfer(address,uint256)": {
            "notice": "Overriden ERC20 transfer to include restriction"
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Overriden ERC20 transferFrom to include restriction"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/token/IndexToken.sol": "IndexToken"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x94dfbd5474881d8f4f122e7c6d00ec2e6966ed7866f73a9ba964d164732cb4ab",
        "urls": [
          "bzz-raw://2b3ed4a03060e542c16f47466c3e2412c92a48f7a9bb42dc7ff3c8216030ef3f",
          "dweb:/ipfs/QmQ1Fz9iwE8r8MvEZA6KVYhMLCVXvxUQKoUXSYJmkyGT8N"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/proposable/ProposableOwnableUpgradeable.sol": {
        "keccak256": "0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70",
        "urls": [
          "bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65",
          "dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72"
        ],
        "license": "MIT"
      },
      "contracts/token/IndexToken.sol": {
        "keccak256": "0x6cd3f9725cf8c1dda92534b2ab7b430066455b2563f4817e00de5ec89b1db3c9",
        "urls": [
          "bzz-raw://31eb08181fb7cf06e5522c747d94bdcc3a23172114ecd2edab86b3937935a246",
          "dweb:/ipfs/QmeUFsUev33xZESrktfijnGs3YifusLbwYbMQjwjVGMZzc"
        ],
        "license": "MIT"
      },
      "contracts/token/TokenInterface.sol": {
        "keccak256": "0xd530600bcc7a81e3996517a2c6967dd448b2b9702eca4efe15f772de69c6d880",
        "urls": [
          "bzz-raw://6f61d2aab02ee0f4c376b1b41629632d894c52127cd15669e9ffca3fb21f1307",
          "dweb:/ipfs/Qmb47gpnWD7i6Va4nKcmg7kPyaYcpXb74QFCQePomaJjZj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": {
        "keccak256": "0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff",
        "urls": [
          "bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417",
          "dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/token/IndexToken.sol",
    "id": 748,
    "exportedSymbols": {
      "AddressUpgradeable": [
        2346
      ],
      "ContextUpgradeable": [
        2388
      ],
      "ERC20Upgradeable": [
        1913
      ],
      "IERC20": [
        5054
      ],
      "IERC20MetadataUpgradeable": [
        2016
      ],
      "IERC20Upgradeable": [
        1991
      ],
      "IQuoter": [
        5111
      ],
      "ISwapRouter": [
        5211
      ],
      "IUniswapV3SwapCallback": [
        6332
      ],
      "IWETH": [
        4976
      ],
      "IndexToken": [
        747
      ],
      "Initializable": [
        1174
      ],
      "OwnableUpgradeable": [
        1005
      ],
      "PausableUpgradeable": [
        1301
      ],
      "ProposableOwnableUpgradeable": [
        71
      ],
      "TokenInterface": [
        873
      ],
      "TransferHelper": [
        5382
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:10096:3",
    "nodes": [
      {
        "id": 73,
        "nodeType": "PragmaDirective",
        "src": "33:22:3",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 74,
        "nodeType": "ImportDirective",
        "src": "59:56:3",
        "nodes": [],
        "absolutePath": "contracts/proposable/ProposableOwnableUpgradeable.sol",
        "file": "../proposable/ProposableOwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 748,
        "sourceUnit": 72,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75,
        "nodeType": "ImportDirective",
        "src": "117:78:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 748,
        "sourceUnit": 1302,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76,
        "nodeType": "ImportDirective",
        "src": "197:78:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 748,
        "sourceUnit": 1914,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 77,
        "nodeType": "ImportDirective",
        "src": "277:30:3",
        "nodes": [],
        "absolutePath": "contracts/token/TokenInterface.sol",
        "file": "./TokenInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 748,
        "sourceUnit": 874,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78,
        "nodeType": "ImportDirective",
        "src": "309:68:3",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 748,
        "sourceUnit": 5212,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 79,
        "nodeType": "ImportDirective",
        "src": "379:70:3",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 748,
        "sourceUnit": 5383,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 80,
        "nodeType": "ImportDirective",
        "src": "451:64:3",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 748,
        "sourceUnit": 5112,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 81,
        "nodeType": "ImportDirective",
        "src": "577:56:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 748,
        "sourceUnit": 5055,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 82,
        "nodeType": "ImportDirective",
        "src": "635:33:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IWETH.sol",
        "file": "../interfaces/IWETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 748,
        "sourceUnit": 4977,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 747,
        "nodeType": "ContractDefinition",
        "src": "852:9277:3",
        "nodes": [
          {
            "id": 96,
            "nodeType": "VariableDeclaration",
            "src": "1018:39:3",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SCALAR",
            "nameLocation": "1044:6:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 94,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1018:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653230",
              "id": 95,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1053:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "1e20"
            },
            "visibility": "internal"
          },
          {
            "id": 98,
            "nodeType": "VariableDeclaration",
            "src": "1150:34:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "2fecd589",
            "mutability": "mutable",
            "name": "feeRatePerDayScaled",
            "nameLocation": "1165:19:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 97,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1150:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 100,
            "nodeType": "VariableDeclaration",
            "src": "1245:27:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "184a732f",
            "mutability": "mutable",
            "name": "feeTimestamp",
            "nameLocation": "1260:12:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 99,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1245:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 102,
            "nodeType": "VariableDeclaration",
            "src": "1326:26:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "b3f00674",
            "mutability": "mutable",
            "name": "feeReceiver",
            "nameLocation": "1341:11:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 101,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1326:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104,
            "nodeType": "VariableDeclaration",
            "src": "1413:28:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "9f8e67bf",
            "mutability": "mutable",
            "name": "methodologist",
            "nameLocation": "1428:13:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 103,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1413:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 106,
            "nodeType": "VariableDeclaration",
            "src": "1545:21:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "07546172",
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "1560:6:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 105,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1545:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 108,
            "nodeType": "VariableDeclaration",
            "src": "1575:25:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "9eeb1d50",
            "mutability": "mutable",
            "name": "methodology",
            "nameLocation": "1589:11:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 107,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1575:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 110,
            "nodeType": "VariableDeclaration",
            "src": "1609:28:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "2b52684d",
            "mutability": "mutable",
            "name": "supplyCeiling",
            "nameLocation": "1624:13:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1609:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 114,
            "nodeType": "VariableDeclaration",
            "src": "1646:44:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "c01bc982",
            "mutability": "mutable",
            "name": "isRestricted",
            "nameLocation": "1678:12:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 113,
              "keyType": {
                "id": 111,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1654:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1646:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 112,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1665:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 117,
            "nodeType": "VariableDeclaration",
            "src": "1699:74:3",
            "nodes": [],
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "mutability": "constant",
            "name": "WETH9",
            "nameLocation": "1723:5:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 115,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1699:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1731:42:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "id": 120,
            "nodeType": "VariableDeclaration",
            "src": "1780:75:3",
            "nodes": [],
            "constant": true,
            "functionSelector": "8dae88c2",
            "mutability": "constant",
            "name": "QUOTER",
            "nameLocation": "1804:6:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 118,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1780:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862323733303866394639304436303734363362623333654131426542623431433237434535414236",
              "id": 119,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1813:42:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6"
            },
            "visibility": "public"
          },
          {
            "id": 126,
            "nodeType": "VariableDeclaration",
            "src": "1862:105:3",
            "nodes": [],
            "constant": true,
            "functionSelector": "c31c9c07",
            "mutability": "constant",
            "name": "swapRouter",
            "nameLocation": "1890:10:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$5211",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 122,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 121,
                "name": "ISwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5211,
                "src": "1862:11:3"
              },
              "referencedDeclaration": 5211,
              "src": "1862:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$5211",
                "typeString": "contract ISwapRouter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                  "id": 124,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1924:42:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 123,
                "name": "ISwapRouter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5211,
                "src": "1912:11:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$5211_$",
                  "typeString": "type(contract ISwapRouter)"
                }
              },
              "id": 125,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1912:55:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$5211",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 132,
            "nodeType": "VariableDeclaration",
            "src": "1976:32:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "1989:4:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$4976",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 128,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 127,
                "name": "IWETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4976,
                "src": "1976:5:3"
              },
              "referencedDeclaration": 4976,
              "src": "1976:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$4976",
                "typeString": "contract IWETH"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 130,
                  "name": "WETH9",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 117,
                  "src": "2002:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 129,
                "name": "IWETH",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4976,
                "src": "1996:5:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IWETH_$4976_$",
                  "typeString": "type(contract IWETH)"
                }
              },
              "id": 131,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1996:12:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$4976",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 138,
            "nodeType": "VariableDeclaration",
            "src": "2015:39:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "c6bbd5a7",
            "mutability": "mutable",
            "name": "quoter",
            "nameLocation": "2030:6:3",
            "scope": 747,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IQuoter_$5111",
              "typeString": "contract IQuoter"
            },
            "typeName": {
              "id": 134,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 133,
                "name": "IQuoter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5111,
                "src": "2015:7:3"
              },
              "referencedDeclaration": 5111,
              "src": "2015:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IQuoter_$5111",
                "typeString": "contract IQuoter"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 136,
                  "name": "QUOTER",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 120,
                  "src": "2047:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 135,
                "name": "IQuoter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5111,
                "src": "2039:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IQuoter_$5111_$",
                  "typeString": "type(contract IQuoter)"
                }
              },
              "id": 137,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2039:15:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IQuoter_$5111",
                "typeString": "contract IQuoter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 150,
            "nodeType": "ModifierDefinition",
            "src": "2063:143:3",
            "nodes": [],
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "2092:114:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 141,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2111:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2111:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 143,
                          "name": "methodologist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "2125:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2111:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6574686f646f6c6f67697374",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2140:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6495b064261cd723792edaea6983aedde45829fc71123661796bf11478985e61",
                          "typeString": "literal_string \"IndexToken: caller is not the methodologist\""
                        },
                        "value": "IndexToken: caller is not the methodologist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6495b064261cd723792edaea6983aedde45829fc71123661796bf11478985e61",
                          "typeString": "literal_string \"IndexToken: caller is not the methodologist\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2103:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2103:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2103:83:3"
                },
                {
                  "id": 148,
                  "nodeType": "PlaceholderStatement",
                  "src": "2197:1:3"
                }
              ]
            },
            "name": "onlyMethodologist",
            "nameLocation": "2072:17:3",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:3"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 162,
            "nodeType": "ModifierDefinition",
            "src": "2214:122:3",
            "nodes": [],
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2236:100:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 153,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2255:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2255:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 155,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "2269:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2255:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d696e746572",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2277:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a90fb2a8327fe6d3a121a4e6690fd254668cd113738fc219dd278c3edb8c045",
                          "typeString": "literal_string \"IndexToken: caller is not the minter\""
                        },
                        "value": "IndexToken: caller is not the minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a90fb2a8327fe6d3a121a4e6690fd254668cd113738fc219dd278c3edb8c045",
                          "typeString": "literal_string \"IndexToken: caller is not the minter\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2247:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2247:69:3"
                },
                {
                  "id": 160,
                  "nodeType": "PlaceholderStatement",
                  "src": "2327:1:3"
                }
              ]
            },
            "name": "onlyMinter",
            "nameLocation": "2223:10:3",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2233:2:3"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 219,
            "nodeType": "FunctionDefinition",
            "src": "2350:589:3",
            "nodes": [],
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "2580:359:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 179,
                          "name": "_feeReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "2599:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2623:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2615:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 180,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2615:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2615:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2599:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2591:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2591:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2591:35:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 187,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "2639:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2639:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2639:16:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 190,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1205,
                      "src": "2666:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2666:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2666:17:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 194,
                        "name": "tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "2707:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 195,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2718:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 193,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1348,
                      "src": "2694:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2694:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "2694:36:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 198,
                      "name": "__Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2358,
                      "src": "2741:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2741:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2741:16:3"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 201,
                      "name": "feeRatePerDayScaled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2770:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 202,
                      "name": "_feeRatePerDayScaled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "2792:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2770:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:42:3"
                },
                {
                  "expression": {
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 205,
                      "name": "feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "2823:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 206,
                      "name": "_feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "2837:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2823:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "2823:26:3"
                },
                {
                  "expression": {
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 209,
                      "name": "supplyCeiling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "2860:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 210,
                      "name": "_supplyCeiling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "2876:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2860:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:30:3"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 213,
                      "name": "feeTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "2901:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 214,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2916:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2916:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2901:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:30:3"
                }
              ]
            },
            "baseFunctions": [
              803
            ],
            "functionSelector": "fede0276",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 176,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 175,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1076,
                  "src": "2568:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2568:11:3"
              }
            ],
            "name": "initialize",
            "nameLocation": "2359:10:3",
            "overrides": {
              "id": 174,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2559:8:3"
            },
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "2394:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "2380:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "2428:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "2414:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "_feeRatePerDayScaled",
                  "nameLocation": "2458:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "2450:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "_feeReceiver",
                  "nameLocation": "2497:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "2489:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2489:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "_supplyCeiling",
                  "nameLocation": "2528:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "2520:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2369:180:3"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2580:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 224,
            "nodeType": "FunctionDefinition",
            "src": "3165:93:3",
            "nodes": [],
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3192:66:3",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 220,
              "nodeType": "StructuredDocumentation",
              "src": "2946:213:3",
              "text": " @dev The contract's fallback function that does not allow direct payments to the contract.\n @notice Prevents users from sending ether directly to the contract by reverting the transaction."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3172:2:3"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3192:0:3"
            },
            "scope": 747,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 273,
            "nodeType": "FunctionDefinition",
            "src": "3444:371:3",
            "nodes": [],
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "3529:286:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 238,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1406,
                              "src": "3548:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3548:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 240,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "3564:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3548:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 242,
                          "name": "supplyCeiling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "3574:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3548:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77696c6c2065786365656420737570706c79206365696c696e67",
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3589:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc92595dbb409de1d426fa39c98b3cffdd700bcf7c02676dc21ae9dc3573d87b",
                          "typeString": "literal_string \"will exceed supply ceiling\""
                        },
                        "value": "will exceed supply ceiling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc92595dbb409de1d426fa39c98b3cffdd700bcf7c02676dc21ae9dc3573d87b",
                          "typeString": "literal_string \"will exceed supply ceiling\""
                        }
                      ],
                      "id": 237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3540:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3540:78:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "3540:78:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3637:17:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 248,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "3638:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 250,
                          "indexExpression": {
                            "id": 249,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "3651:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f2069732072657374726963746564",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3656:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        },
                        "value": "to is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3629:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3629:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "3629:46:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3694:25:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 256,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "3695:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 259,
                          "indexExpression": {
                            "expression": {
                              "id": 257,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3708:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3708:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3695:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d73672e73656e6465722069732072657374726963746564",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3721:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        },
                        "value": "msg.sender is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        }
                      ],
                      "id": 255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3686:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3686:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "3686:62:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 264,
                      "name": "_mintToFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "3759:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3759:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "3759:20:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 268,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3796:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 269,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "3800:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 267,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1725,
                      "src": "3790:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:17:3"
                }
              ]
            },
            "baseFunctions": [
              811
            ],
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "3270:168:3",
              "text": "@notice External mint function\n @dev Mint function can only be called externally by the controller\n @param to address\n @param amount uint256"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 233,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 232,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1223,
                  "src": "3504:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3504:13:3"
              },
              {
                "id": 235,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 234,
                  "name": "onlyMinter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 162,
                  "src": "3518:10:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3518:10:3"
              }
            ],
            "name": "mint",
            "nameLocation": "3453:4:3",
            "overrides": {
              "id": 231,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3495:8:3"
            },
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3466:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "3458:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3478:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "3470:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3457:28:3"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3529:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 312,
            "nodeType": "FunctionDefinition",
            "src": "3999:290:3",
            "nodes": [],
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "4086:203:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4105:19:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 287,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "4106:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 289,
                          "indexExpression": {
                            "id": 288,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "4119:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4106:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66726f6d2069732072657374726963746564",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4126:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7c94ad03512178aaaa18bb65554bce6f67cf0ed71115cfc1109bd05ddaff6a3",
                          "typeString": "literal_string \"from is restricted\""
                        },
                        "value": "from is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7c94ad03512178aaaa18bb65554bce6f67cf0ed71115cfc1109bd05ddaff6a3",
                          "typeString": "literal_string \"from is restricted\""
                        }
                      ],
                      "id": 286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4097:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4097:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "4097:50:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4166:25:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 295,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "4167:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 298,
                          "indexExpression": {
                            "expression": {
                              "id": 296,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4180:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4180:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4167:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d73672e73656e6465722069732072657374726963746564",
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4193:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        },
                        "value": "msg.sender is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        }
                      ],
                      "id": 294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4158:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4158:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "4158:62:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 303,
                      "name": "_mintToFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "4231:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "4231:20:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 307,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "4268:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 308,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "4274:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 306,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1797,
                      "src": "4262:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4262:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "4262:19:3"
                }
              ]
            },
            "baseFunctions": [
              819
            ],
            "documentation": {
              "id": 274,
              "nodeType": "StructuredDocumentation",
              "src": "3823:170:3",
              "text": "@notice External burn function\n @dev burn function can only be called externally by the controller\n @param from address\n @param amount uint256"
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 281,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1223,
                  "src": "4061:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4061:13:3"
              },
              {
                "id": 284,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 283,
                  "name": "onlyMinter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 162,
                  "src": "4075:10:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4075:10:3"
              }
            ],
            "name": "burn",
            "nameLocation": "4008:4:3",
            "overrides": {
              "id": 280,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4052:8:3"
            },
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4021:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "4013:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4013:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4035:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "4027:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4027:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4012:30:3"
            },
            "returnParameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4086:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 392,
            "nodeType": "FunctionDefinition",
            "src": "4297:754:3",
            "nodes": [],
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "4336:715:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 316,
                      "mutability": "mutable",
                      "name": "_days",
                      "nameLocation": "4396:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 391,
                      "src": "4388:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4388:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 324,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 317,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4405:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4405:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 319,
                            "name": "feeTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "4423:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4405:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 321,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4404:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4439:6:3",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "4404:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4388:57:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 325,
                      "name": "_days",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "4462:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4471:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4462:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 390,
                  "nodeType": "IfStatement",
                  "src": "4458:586:3",
                  "trueBody": {
                    "id": 389,
                    "nodeType": "Block",
                    "src": "4474:570:3",
                    "statements": [
                      {
                        "assignments": [
                          329
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 329,
                            "mutability": "mutable",
                            "name": "initial",
                            "nameLocation": "4497:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 389,
                            "src": "4489:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 328,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4489:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 332,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 330,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "4507:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4507:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4489:31:3"
                      },
                      {
                        "assignments": [
                          334
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 334,
                            "mutability": "mutable",
                            "name": "supply",
                            "nameLocation": "4543:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 389,
                            "src": "4535:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 333,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4535:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 336,
                        "initialValue": {
                          "id": 335,
                          "name": "initial",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 329,
                          "src": "4552:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4535:24:3"
                      },
                      {
                        "assignments": [
                          338
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 338,
                            "mutability": "mutable",
                            "name": "_feeRate",
                            "nameLocation": "4582:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 389,
                            "src": "4574:16:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 337,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4574:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 340,
                        "initialValue": {
                          "id": 339,
                          "name": "feeRatePerDayScaled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "4593:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4574:38:3"
                      },
                      {
                        "body": {
                          "id": 361,
                          "nodeType": "Block",
                          "src": "4658:149:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 347,
                                  "name": "supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 334,
                                  "src": "4677:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 353,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 350,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 348,
                                              "name": "supply",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 334,
                                              "src": "4689:6:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 349,
                                              "name": "_feeRate",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 338,
                                              "src": "4698:8:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "4689:17:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 351,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "4688:19:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 352,
                                        "name": "SCALAR",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 96,
                                        "src": "4710:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4688:28:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 354,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4687:30:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4677:40:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 356,
                              "nodeType": "ExpressionStatement",
                              "src": "4677:40:3"
                            },
                            {
                              "id": 360,
                              "nodeType": "UncheckedBlock",
                              "src": "4736:56:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "4769:3:3",
                                    "subExpression": {
                                      "id": 357,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 342,
                                      "src": "4771:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 359,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4769:3:3"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 344,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "4645:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 345,
                            "name": "_days",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 316,
                            "src": "4649:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4645:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 362,
                        "initializationExpression": {
                          "assignments": [
                            342
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 342,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4642:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 362,
                              "src": "4634:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 341,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4634:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 343,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4634:9:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "4629:178:3"
                      },
                      {
                        "assignments": [
                          364
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 364,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "4829:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 389,
                            "src": "4821:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 363,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4821:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 368,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 365,
                            "name": "supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
                            "src": "4838:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 366,
                            "name": "initial",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "4847:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4838:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4821:33:3"
                      },
                      {
                        "expression": {
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 369,
                            "name": "feeTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "4869:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31",
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4885:6:3",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 371,
                              "name": "_days",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 316,
                              "src": "4894:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4885:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4869:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 374,
                        "nodeType": "ExpressionStatement",
                        "src": "4869:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 376,
                              "name": "feeReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "4920:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 377,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "4933:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 375,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1725,
                            "src": "4914:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4914:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "4914:26:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 381,
                              "name": "feeReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "4980:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 382,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4993:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4993:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 384,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1406,
                                "src": "5010:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5010:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 386,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "5025:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 380,
                            "name": "MintFeeToReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 783,
                            "src": "4962:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4962:70:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 388,
                        "nodeType": "EmitStatement",
                        "src": "4957:75:3"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintToFeeReceiver",
            "nameLocation": "4306:18:3",
            "parameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4324:2:3"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4336:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 403,
            "nodeType": "FunctionDefinition",
            "src": "5281:96:3",
            "nodes": [],
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "5338:39:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 399,
                      "name": "_mintToFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "5349:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5349:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "5349:20:3"
                }
              ]
            },
            "baseFunctions": [
              823
            ],
            "documentation": {
              "id": 393,
              "nodeType": "StructuredDocumentation",
              "src": "5059:216:3",
              "text": "@notice Expands supply and mints fees to fee reciever\n @dev Can only be called by the owner externally,\n @dev _mintToFeeReciver is the internal function and is called after each supply/rate change"
            },
            "functionSelector": "f734e22a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 397,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 396,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "5328:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "5328:9:3"
              }
            ],
            "name": "mintToFeeReceiver",
            "nameLocation": "5290:17:3",
            "overrides": {
              "id": 395,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5319:8:3"
            },
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5307:2:3"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5338:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 430,
            "nodeType": "FunctionDefinition",
            "src": "5497:223:3",
            "nodes": [],
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "5575:145:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 413,
                          "name": "_methodologist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 406,
                          "src": "5594:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5620:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5612:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5612:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5612:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5594:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5586:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5586:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "5586:37:3"
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 421,
                      "name": "methodologist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "5634:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 422,
                      "name": "_methodologist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "5650:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5634:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "5634:30:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 426,
                        "name": "_methodologist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "5697:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 425,
                      "name": "MethodologistSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "5680:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5680:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "EmitStatement",
                  "src": "5675:37:3"
                }
              ]
            },
            "baseFunctions": [
              829
            ],
            "documentation": {
              "id": 404,
              "nodeType": "StructuredDocumentation",
              "src": "5391:100:3",
              "text": "@notice Only owner function for setting the methodologist\n @param _methodologist address"
            },
            "functionSelector": "660db484",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 409,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "5565:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "5565:9:3"
              }
            ],
            "name": "setMethodologist",
            "nameLocation": "5506:16:3",
            "overrides": {
              "id": 408,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5556:8:3"
            },
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "_methodologist",
                  "nameLocation": "5531:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "5523:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5523:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5522:24:3"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5575:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 448,
            "nodeType": "FunctionDefinition",
            "src": "5879:177:3",
            "nodes": [],
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "5967:89:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 439,
                      "name": "methodology",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "5978:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 440,
                      "name": "_methodology",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "5992:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5978:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "5978:26:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 444,
                        "name": "_methodology",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "6035:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 443,
                      "name": "MethodologySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "6020:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6020:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "EmitStatement",
                  "src": "6015:33:3"
                }
              ]
            },
            "baseFunctions": [
              835
            ],
            "documentation": {
              "id": 431,
              "nodeType": "StructuredDocumentation",
              "src": "5728:145:3",
              "text": "@notice Callable only by the methodoligst to store on chain data about the underlying weight of the token\n @param _methodology string"
            },
            "functionSelector": "91fe1b92",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 437,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 436,
                  "name": "onlyMethodologist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "5949:17:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "5949:17:3"
              }
            ],
            "name": "setMethodology",
            "nameLocation": "5888:14:3",
            "overrides": {
              "id": 435,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5940:8:3"
            },
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "_methodology",
                  "nameLocation": "5917:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "5903:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5903:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5902:28:3"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5967:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 469,
            "nodeType": "FunctionDefinition",
            "src": "6257:218:3",
            "nodes": [],
            "body": {
              "id": 468,
              "nodeType": "Block",
              "src": "6335:140:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 457,
                      "name": "_mintToFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "6346:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6346:20:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "6346:20:3"
                },
                {
                  "expression": {
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 460,
                      "name": "feeRatePerDayScaled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "6377:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 461,
                      "name": "_feeRatePerDayScaled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 451,
                      "src": "6399:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6377:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "6377:42:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 465,
                        "name": "_feeRatePerDayScaled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "6446:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 464,
                      "name": "FeeRateSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "6435:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6435:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "EmitStatement",
                  "src": "6430:37:3"
                }
              ]
            },
            "baseFunctions": [
              841
            ],
            "documentation": {
              "id": 449,
              "nodeType": "StructuredDocumentation",
              "src": "6064:187:3",
              "text": "@notice Ownable function to set the fee rate\n @dev Given the annual fee rate this function sets and calculates the rate per second\n @param _feeRatePerDayScaled uint256"
            },
            "functionSelector": "45596e2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 455,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 454,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "6325:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "6325:9:3"
              }
            ],
            "name": "setFeeRate",
            "nameLocation": "6266:10:3",
            "overrides": {
              "id": 453,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6316:8:3"
            },
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "_feeRatePerDayScaled",
                  "nameLocation": "6285:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "6277:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6277:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6276:30:3"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6335:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 496,
            "nodeType": "FunctionDefinition",
            "src": "6574:209:3",
            "nodes": [],
            "body": {
              "id": 495,
              "nodeType": "Block",
              "src": "6648:135:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 479,
                          "name": "_feeReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "6667:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6691:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6683:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 480,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6683:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6683:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6667:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6659:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6659:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "6659:35:3"
                },
                {
                  "expression": {
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 487,
                      "name": "feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "6705:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 488,
                      "name": "_feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 472,
                      "src": "6719:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6705:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "6705:26:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 492,
                        "name": "_feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "6762:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 491,
                      "name": "FeeReceiverSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "6747:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6747:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "EmitStatement",
                  "src": "6742:33:3"
                }
              ]
            },
            "baseFunctions": [
              847
            ],
            "documentation": {
              "id": 470,
              "nodeType": "StructuredDocumentation",
              "src": "6483:85:3",
              "text": "@notice Ownable function to set the receiver\n @param _feeReceiver address"
            },
            "functionSelector": "efdcd974",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 476,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 475,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "6638:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "6638:9:3"
              }
            ],
            "name": "setFeeReceiver",
            "nameLocation": "6583:14:3",
            "overrides": {
              "id": 474,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6629:8:3"
            },
            "parameters": {
              "id": 473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 472,
                  "mutability": "mutable",
                  "name": "_feeReceiver",
                  "nameLocation": "6606:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "6598:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6598:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6597:22:3"
            },
            "returnParameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6648:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 523,
            "nodeType": "FunctionDefinition",
            "src": "6899:174:3",
            "nodes": [],
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "6963:110:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 506,
                          "name": "_minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 499,
                          "src": "6982:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7001:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6993:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 507,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6993:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6993:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6982:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6974:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6974:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:30:3"
                },
                {
                  "expression": {
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 514,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "7015:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 515,
                      "name": "_minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "7024:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7015:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "7015:16:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 519,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "7057:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 518,
                      "name": "MinterSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "7047:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7047:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 521,
                  "nodeType": "EmitStatement",
                  "src": "7042:23:3"
                }
              ]
            },
            "baseFunctions": [
              853
            ],
            "documentation": {
              "id": 497,
              "nodeType": "StructuredDocumentation",
              "src": "6791:102:3",
              "text": "@notice Ownable function to set the contract that controls minting\n @param _minter address"
            },
            "functionSelector": "fca3b5aa",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 503,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 502,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "6953:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "6953:9:3"
              }
            ],
            "name": "setMinter",
            "nameLocation": "6908:9:3",
            "overrides": {
              "id": 501,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6944:8:3"
            },
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "6926:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "6918:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6918:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6917:17:3"
            },
            "returnParameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6963:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 541,
            "nodeType": "FunctionDefinition",
            "src": "7211:175:3",
            "nodes": [],
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "7289:97:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 532,
                      "name": "supplyCeiling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "7300:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 533,
                      "name": "_supplyCeiling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "7316:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7300:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "7300:30:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 537,
                        "name": "_supplyCeiling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "7363:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 536,
                      "name": "SupplyCeilingSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "7346:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7346:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "EmitStatement",
                  "src": "7341:37:3"
                }
              ]
            },
            "baseFunctions": [
              859
            ],
            "documentation": {
              "id": 524,
              "nodeType": "StructuredDocumentation",
              "src": "7081:124:3",
              "text": "@notice Ownable function to set the limit at which the total supply cannot exceed\n @param _supplyCeiling uint256"
            },
            "functionSelector": "6e01a686",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 530,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 529,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "7279:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7279:9:3"
              }
            ],
            "name": "setSupplyCeiling",
            "nameLocation": "7220:16:3",
            "overrides": {
              "id": 528,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7270:8:3"
            },
            "parameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "_supplyCeiling",
                  "nameLocation": "7245:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "7237:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7237:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7236:24:3"
            },
            "returnParameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7289:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 551,
            "nodeType": "FunctionDefinition",
            "src": "7400:72:3",
            "nodes": [],
            "body": {
              "id": 550,
              "nodeType": "Block",
              "src": "7445:27:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 547,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1279,
                      "src": "7456:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7456:8:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "7456:8:3"
                }
              ]
            },
            "baseFunctions": [
              863
            ],
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 545,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 544,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "7435:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7435:9:3"
              }
            ],
            "name": "pause",
            "nameLocation": "7409:5:3",
            "overrides": {
              "id": 543,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7426:8:3"
            },
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7414:2:3"
            },
            "returnParameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7445:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 561,
            "nodeType": "FunctionDefinition",
            "src": "7480:76:3",
            "nodes": [],
            "body": {
              "id": 560,
              "nodeType": "Block",
              "src": "7527:29:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 557,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1295,
                      "src": "7538:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7538:10:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "7538:10:3"
                }
              ]
            },
            "baseFunctions": [
              866
            ],
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 555,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 554,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "7517:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7517:9:3"
              }
            ],
            "name": "unpause",
            "nameLocation": "7489:7:3",
            "overrides": {
              "id": 553,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7508:8:3"
            },
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7496:2:3"
            },
            "returnParameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7527:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 587,
            "nodeType": "FunctionDefinition",
            "src": "7706:182:3",
            "nodes": [],
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "7774:114:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 570,
                        "name": "isRestricted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "7785:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 572,
                      "indexExpression": {
                        "id": 571,
                        "name": "who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "7798:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7785:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "7805:18:3",
                      "subExpression": {
                        "baseExpression": {
                          "id": 573,
                          "name": "isRestricted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "7806:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 575,
                        "indexExpression": {
                          "id": 574,
                          "name": "who",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 564,
                          "src": "7819:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7806:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7785:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "7785:38:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 580,
                        "name": "who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "7857:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 581,
                          "name": "isRestricted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "7862:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 583,
                        "indexExpression": {
                          "id": 582,
                          "name": "who",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 564,
                          "src": "7875:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7862:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 579,
                      "name": "ToggledRestricted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 789,
                      "src": "7839:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7839:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "EmitStatement",
                  "src": "7834:46:3"
                }
              ]
            },
            "baseFunctions": [
              872
            ],
            "documentation": {
              "id": 562,
              "nodeType": "StructuredDocumentation",
              "src": "7570:130:3",
              "text": "@notice Compliance feature to blacklist bad actors\n @dev Negates current restriction state\n @param who address"
            },
            "functionSelector": "aaa4a184",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 568,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 567,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "7764:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7764:9:3"
              }
            ],
            "name": "toggleRestriction",
            "nameLocation": "7715:17:3",
            "overrides": {
              "id": 566,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7755:8:3"
            },
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "7741:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "7733:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7733:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7732:13:3"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7774:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 627,
            "nodeType": "FunctionDefinition",
            "src": "8047:297:3",
            "nodes": [],
            "body": {
              "id": 626,
              "nodeType": "Block",
              "src": "8138:206:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8157:25:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 601,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "8158:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 604,
                          "indexExpression": {
                            "expression": {
                              "id": 602,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8171:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8171:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8158:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d73672e73656e6465722069732072657374726963746564",
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8184:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        },
                        "value": "msg.sender is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8149:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8149:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 608,
                  "nodeType": "ExpressionStatement",
                  "src": "8149:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8230:17:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 610,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "8231:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 612,
                          "indexExpression": {
                            "id": 611,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "8244:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8231:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f2069732072657374726963746564",
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8249:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        },
                        "value": "to is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        }
                      ],
                      "id": 609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8222:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8222:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 616,
                  "nodeType": "ExpressionStatement",
                  "src": "8222:46:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 618,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8291:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8291:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 620,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "8303:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 621,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "8307:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 617,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1668,
                      "src": "8281:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8281:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "8281:33:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8332:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 599,
                  "id": 625,
                  "nodeType": "Return",
                  "src": "8325:11:3"
                }
              ]
            },
            "baseFunctions": [
              1445
            ],
            "documentation": {
              "id": 588,
              "nodeType": "StructuredDocumentation",
              "src": "7902:139:3",
              "text": "@notice Overriden ERC20 transfer to include restriction\n @param to address\n @param amount uint256\n @return bool"
            },
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 595,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1223,
                  "src": "8109:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8109:13:3"
              }
            ],
            "name": "transfer",
            "nameLocation": "8056:8:3",
            "overrides": {
              "id": 594,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8100:8:3"
            },
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8073:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 627,
                  "src": "8065:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8065:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8085:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 627,
                  "src": "8077:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8077:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8064:28:3"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 598,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 627,
                  "src": "8132:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 597,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8132:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8131:6:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 683,
            "nodeType": "FunctionDefinition",
            "src": "8530:456:3",
            "nodes": [],
            "body": {
              "id": 682,
              "nodeType": "Block",
              "src": "8673:313:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8692:25:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 643,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "8693:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 646,
                          "indexExpression": {
                            "expression": {
                              "id": 644,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8706:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8706:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8693:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d73672e73656e6465722069732072657374726963746564",
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8719:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        },
                        "value": "msg.sender is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        }
                      ],
                      "id": 642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8684:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8684:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 650,
                  "nodeType": "ExpressionStatement",
                  "src": "8684:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8765:17:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 652,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "8766:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 654,
                          "indexExpression": {
                            "id": 653,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "8779:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8766:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f2069732072657374726963746564",
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8784:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        },
                        "value": "to is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        }
                      ],
                      "id": 651,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8757:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8757:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "8757:46:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8822:19:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 660,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "8823:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 662,
                          "indexExpression": {
                            "id": 661,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "8836:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8823:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66726f6d2069732072657374726963746564",
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8843:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7c94ad03512178aaaa18bb65554bce6f67cf0ed71115cfc1109bd05ddaff6a3",
                          "typeString": "literal_string \"from is restricted\""
                        },
                        "value": "from is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7c94ad03512178aaaa18bb65554bce6f67cf0ed71115cfc1109bd05ddaff6a3",
                          "typeString": "literal_string \"from is restricted\""
                        }
                      ],
                      "id": 659,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8814:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8814:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "8814:50:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 668,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 630,
                        "src": "8893:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 669,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8899:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8899:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 671,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "8911:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 667,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1885,
                      "src": "8877:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8877:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "8877:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 675,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 630,
                        "src": "8939:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 676,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "8945:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 677,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "8949:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 674,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1668,
                      "src": "8929:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8929:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "8929:27:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8974:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 641,
                  "id": 681,
                  "nodeType": "Return",
                  "src": "8967:11:3"
                }
              ]
            },
            "baseFunctions": [
              1521
            ],
            "documentation": {
              "id": 628,
              "nodeType": "StructuredDocumentation",
              "src": "8352:172:3",
              "text": "@notice Overriden ERC20 transferFrom to include restriction\n @param from address\n @param to address\n @param amount uint256\n @return bool"
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 638,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 637,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1223,
                  "src": "8644:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8644:13:3"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "8539:12:3",
            "overrides": {
              "id": 636,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8635:8:3"
            },
            "parameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 630,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8570:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "8562:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8562:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8593:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "8585:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8585:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 634,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8614:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "8606:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8606:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8551:76:3"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 683,
                  "src": "8667:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8667:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8666:6:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 725,
            "nodeType": "FunctionDefinition",
            "src": "8994:808:3",
            "nodes": [],
            "body": {
              "id": 724,
              "nodeType": "Block",
              "src": "9087:715:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "9140:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 724,
                      "src": "9098:48:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$5135_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 697,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 696,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5135,
                          "src": "9098:34:3"
                        },
                        "referencedDeclaration": 5135,
                        "src": "9098:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$5135_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 714,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 701,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "9218:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 702,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "9250:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9308:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 706,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9346:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          ],
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9338:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 704,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9338:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9338:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 708,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "9376:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "9376:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 710,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "9416:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9457:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9691:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 699,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5211,
                        "src": "9149:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$5211_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5135,
                      "src": "9149:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$5135_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9149:555:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$5135_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9098:606:3"
                },
                {
                  "assignments": [
                    716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 716,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "9720:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 724,
                      "src": "9715:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 715,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9715:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 721,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 719,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "9760:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$5135_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$5135_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 717,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "9732:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$5211",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5144,
                      "src": "9732:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$5135_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9732:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9715:52:3"
                },
                {
                  "expression": {
                    "id": 722,
                    "name": "amountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 716,
                    "src": "9785:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 693,
                  "id": 723,
                  "nodeType": "Return",
                  "src": "9778:16:3"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swapSingle",
            "nameLocation": "9003:11:3",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "9023:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "9015:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9015:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "9040:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "9032:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9032:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "9055:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "9050:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9050:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9014:50:3"
            },
            "returnParameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "9082:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9082:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9081:6:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 746,
            "nodeType": "FunctionDefinition",
            "src": "9851:263:3",
            "nodes": [],
            "body": {
              "id": 745,
              "nodeType": "Block",
              "src": "9909:205:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 736,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9949:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9949:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 740,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9969:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IndexToken_$747",
                              "typeString": "contract IndexToken"
                            }
                          ],
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9961:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 738,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9961:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9961:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 742,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "9976:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 733,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 727,
                            "src": "9927:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 732,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5054,
                          "src": "9920:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5054_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9920:15:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5054",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5053,
                      "src": "9920:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9920:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 744,
                  "nodeType": "ExpressionStatement",
                  "src": "9920:65:3"
                }
              ]
            },
            "functionSelector": "79c65068",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nameLocation": "9860:9:3",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "9878:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "9870:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9870:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "9892:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 746,
                  "src": "9887:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9887:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9869:32:3"
            },
            "returnParameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9909:0:3"
            },
            "scope": 747,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 84,
              "name": "ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2388,
              "src": "880:18:3"
            },
            "id": 85,
            "nodeType": "InheritanceSpecifier",
            "src": "880:18:3"
          },
          {
            "baseName": {
              "id": 86,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1913,
              "src": "905:16:3"
            },
            "id": 87,
            "nodeType": "InheritanceSpecifier",
            "src": "905:16:3"
          },
          {
            "baseName": {
              "id": 88,
              "name": "ProposableOwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 71,
              "src": "928:28:3"
            },
            "id": 89,
            "nodeType": "InheritanceSpecifier",
            "src": "928:28:3"
          },
          {
            "baseName": {
              "id": 90,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1301,
              "src": "963:19:3"
            },
            "id": 91,
            "nodeType": "InheritanceSpecifier",
            "src": "963:19:3"
          },
          {
            "baseName": {
              "id": 92,
              "name": "TokenInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 873,
              "src": "989:14:3"
            },
            "id": 93,
            "nodeType": "InheritanceSpecifier",
            "src": "989:14:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 83,
          "nodeType": "StructuredDocumentation",
          "src": "672:180:3",
          "text": "@title Index Token\n @author NEX Labs Protocol\n @notice The main token contract for Index Token (NEX Labs Protocol)\n @dev This contract uses an upgradeable pattern"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          747,
          873,
          1301,
          71,
          1005,
          1913,
          2016,
          1991,
          2388,
          1174
        ],
        "name": "IndexToken",
        "nameLocation": "861:10:3",
        "scope": 748,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 3
}