{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoter",
      "outputs": [
        {
          "internalType": "contract IQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swap",
      "outputs": [
        {
          "internalType": "contract Swap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanSelectFork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanSetForkBlockNumber",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604081905260078054600160ff199182168117909255600b8054909116909117905563f877cb1960e01b90526020608452600f60a4526e1350525393915517d49410d7d55493608a1b60c452737109709ecfa91a80626ff3989d68f67f5b1dd12d63f877cb1960e4600060405180830381865afa15801562000087573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000b19190810190620000eb565b602190620000c090826200024f565b50348015620000ce57600080fd5b506200031b565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620000ff57600080fd5b82516001600160401b03808211156200011757600080fd5b818501915085601f8301126200012c57600080fd5b815181811115620001415762000141620000d5565b604051601f8201601f19908116603f011681019083821181831017156200016c576200016c620000d5565b8160405282815288868487010111156200018557600080fd5b600093505b82841015620001a957848401860151818501870152928501926200018a565b600086848301015280965050505050505092915050565b600181811c90821680620001d557607f821691505b602082108103620001f657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024a57600081815260208120601f850160051c81016020861015620002255750805b601f850160051c820191505b81811015620002465782815560010162000231565b5050505b505050565b81516001600160401b038111156200026b576200026b620000d5565b62000283816200027c8454620001c0565b84620001fc565b602080601f831160018114620002bb5760008415620002a25750858301515b600019600386901b1c1916600185901b17855562000246565b600085815260208120601f198616915b82811015620002ec57888601518255948401946001909101908401620002cb565b50858210156200030b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612945806200032b6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806385226c81116100c3578063c31c9c071161007c578063c31c9c071461027d578063c6bbd5a714610298578063e0bab4c4146102ab578063e20c9f71146102c6578063f4b9fa75146102ce578063fa7626d4146102e157600080fd5b806385226c811461021d5780638dae88c214610232578063916a17c61461024d578063b5508aa914610255578063b888f4aa1461025d578063ba414fa61461026557600080fd5b80633f7286f4116101155780633f7286f41461019f5780633fc8cef3146101a75780634aa4a4fc146101d257806366d9a9a0146101ed5780636e008a03146102025780638119c0651461020a57600080fd5b80630a9254e4146101525780631ed7831c1461015c57806325b7d54e1461017a5780632ade3880146101825780633e5e3c2314610197575b600080fd5b61015a6102ee565b005b610164610411565b6040516101719190611826565b60405180910390f35b61015a610473565b61018a61056e565b60405161017191906118c3565b6101646106b0565b610164610710565b601e546101ba906001600160a01b031681565b6040516001600160a01b039091168152602001610171565b6101ba73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6101f5610770565b6040516101719190611983565b61015a610856565b601f546101ba906001600160a01b031681565b610225610f87565b6040516101719190611a36565b6101ba73b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b6101f5611057565b61022561113d565b61015a61120d565b61026d611364565b6040519015158152602001610171565b6101ba73e592427a0aece92de3edee1f18e0157c0586156481565b6020546101ba906001600160a01b031681565b6101ba736b175474e89094c44da98b954eedeac495271d0f81565b610164611491565b601d546101ba906001600160a01b031681565b60075461026d9060ff1681565b604051630637469360e31b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba34989061032690602190600401611ad2565b6020604051808303816000875af1158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190611b7e565b601c5560405161037890611819565b604051809103906000f080158015610394573d6000803e3d6000fd5b50601f80546001600160a01b03929092166001600160a01b0319928316179055601d80548216736b175474e89094c44da98b954eedeac495271d0f179055601e8054821673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21790556020805490911673b27308f9f90d607463bb33ea1bebb41c27ce5ab6179055565b6060601480548060200260200160405190810160405280929190818152602001828054801561046957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161044b575b5050505050905090565b601c54604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b5050505061056c7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316632f103f226040518163ffffffff1660e01b8152600401602060405180830381865afa158015610540573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105649190611b7e565b601c546114f1565b565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156106a757600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101561069057838290600052602060002001805461060390611a98565b80601f016020809104026020016040519081016040528092919081815260200182805461062f90611a98565b801561067c5780601f106106515761010080835404028352916020019161067c565b820191906000526020600020905b81548152906001019060200180831161065f57829003601f168201915b5050505050815260200190600101906105e4565b505050508152505081526020019060010190610592565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610469576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161044b575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610469576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161044b575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156106a75760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561083e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108005790505b50505050508152505081526020019060010190610794565b601c54604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b1580156108a757600080fd5b505af11580156108bb573d6000803e3d6000fd5b50505050601e60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db067016345785d8a00006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561091757600080fd5b505af115801561092b573d6000803e3d6000fd5b5050601e546040516370a0823160e01b81523060048201526109ae94506001600160a01b0390911692506370a082319150602401602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190611b7e565b67016345785d8a00006114f1565b601e5460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c05861564600482015267016345785d8a000060248201526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e9190611b97565b50604080516101008101825273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28152736b175474e89094c44da98b954eedeac495271d0f6020820152610bb88183015230606082015242608082015267016345785d8a000060a0820152600060c0820181905260e0820152905163414bf38960e01b8152610b2c9073e592427a0aece92de3edee1f18e0157c058615649063414bf38990610ae4908590600401611bc0565b6020604051808303816000875af1158015610b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b279190611b7e565b61161c565b601d546040516370a0823160e01b8152306004820152610b77916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610b03573d6000803e3d6000fd5b601e546040516370a0823160e01b8152306004820152610ba9916001600160a01b0316906370a0823190602401610b5a565b602054601d546040516370a0823160e01b81523060048201526000926001600160a01b039081169263f7729d4392736b175474e89094c44da98b954eedeac495271d0f9273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc292610bb8929116906370a0823190602401602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190611b7e565b6040516001600160e01b031960e087901b1681526001600160a01b03948516600482015293909216602484015262ffffff16604483015260648201526000608482015260a4016020604051808303816000875af1158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd9190611b7e565b9050610d116040518060400160405280601081526020016f195e1c1d1958dd195908185b5bdd5b9d60821b81525082611664565b601d546040516370a0823160e01b81523060048201526001600160a01b039091169063095ea7b39073e592427a0aece92de3edee1f18e0157c058615649083906370a0823190602401602060405180830381865afa158015610d77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9b9190611b7e565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610de6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0a9190611b97565b506040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26020820152610bb8818301523060608201819052426080830152601d5492516370a0823160e01b8152600481019190915260009260a08301916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610ead573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed19190611b7e565b81526000602082018190526040918201525163414bf38960e01b8152909150610f1e9073e592427a0aece92de3edee1f18e0157c058615649063414bf38990610ae4908590600401611bc0565b601d546040516370a0823160e01b8152306004820152610f50916001600160a01b0316906370a0823190602401610b5a565b601e546040516370a0823160e01b8152306004820152610f82916001600160a01b0316906370a0823190602401610b5a565b505050565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156106a7578382906000526020600020018054610fca90611a98565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff690611a98565b80156110435780601f1061101857610100808354040283529160200191611043565b820191906000526020600020905b81548152906001019060200180831161102657829003601f168201915b505050505081526020019060010190610fab565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156106a75760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561112557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116110e75790505b5050505050815250508152602001906001019061107b565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156106a757838290600052602060002001805461118090611a98565b80601f01602080910402602001604051908101604052809291908181526020018280546111ac90611a98565b80156111f95780601f106111ce576101008083540402835291602001916111f9565b820191906000526020600020905b8154815290600101906020018083116111dc57829003601f168201915b505050505081526020019060010190611161565b601c54604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b15801561125e57600080fd5b505af1158015611272573d6000803e3d6000fd5b505060405163d9bbf3a160e01b8152630119b6df6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063d9bbf3a19150602401600060405180830381600087803b1580156112c657600080fd5b505af11580156112da573d6000803e3d6000fd5b505050506112ec43630119b6df6114f1565b601d54604080516306fdde0360e01b8152905161056c926001600160a01b0316916306fdde039160048083019260009291908290030181865afa158015611337573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261135f9190810190611c3f565b6116a9565b600754600090610100900460ff16156113865750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561148c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091611414917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611cec565b60408051601f198184030181529082905261142e91611d1d565b6000604051808303816000865af19150503d806000811461146b576040519150601f19603f3d011682016040523d82523d6000602084013e611470565b606091505b50915050808060200190518101906114889190611b97565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610469576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161044b575050505050905090565b808214611618577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516115629060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16116186116ec565b5050565b6116618160405160240161163291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790526117f8565b50565b611618828260405160240161167a929190611d39565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526117f8565b611661816040516024016116bd9190611d5b565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526117f8565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156117e75760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526117869291602001611cec565b60408051601f19818403018152908290526117a091611d1d565b6000604051808303816000865af19150503d80600081146117dd576040519150601f19603f3d011682016040523d82523d6000602084013e6117e2565b606091505b505050505b6007805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610ba180611d6f83390190565b6020808252825182820181905260009190848201906040850190845b818110156118675783516001600160a01b031683529284019291840191600101611842565b50909695505050505050565b60005b8381101561188e578181015183820152602001611876565b50506000910152565b600081518084526118af816020860160208601611873565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101561197357603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101561195d57605f1989850301835261194b848651611897565b948e01949350918d019160010161192f565b505050978a0197945050918801916001016118ea565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611a2757898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611a125783516001600160e01b0319168252928b019260019290920191908b01906119e8565b50978a019795505050918701916001016119ab565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611a8b57603f19888603018452611a79858351611897565b94509285019290850190600101611a5d565b5092979650505050505050565b600181811c90821680611aac57607f821691505b602082108103611acc57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208083526000845481600182811c915080831680611af457607f831692505b8583108103611b1157634e487b7160e01b85526022600452602485fd5b878601838152602001818015611b2e5760018114611b4457611b6f565b60ff198616825284151560051b82019650611b6f565b60008b81526020902060005b86811015611b6957815484820152908501908901611b50565b83019750505b50949998505050505050505050565b600060208284031215611b9057600080fd5b5051919050565b600060208284031215611ba957600080fd5b81518015158114611bb957600080fd5b9392505050565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611c5157600080fd5b815167ffffffffffffffff80821115611c6957600080fd5b818401915084601f830112611c7d57600080fd5b815181811115611c8f57611c8f611c29565b604051601f8201601f19908116603f01168101908382118183101715611cb757611cb7611c29565b81604052828152876020848701011115611cd057600080fd5b611ce1836020830160208801611873565b979650505050505050565b6001600160e01b0319831681528151600090611d0f816004850160208701611873565b919091016004019392505050565b60008251611d2f818460208701611873565b9190910192915050565b604081526000611d4c6040830185611897565b90508260208301529392505050565b602081526000611bb9602083018461189756fe608060405234801561001057600080fd5b50610b81806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806389a302711161005b57806389a302711461010f5780638c5c5ca21461012a578063c31c9c071461013d578063e0bab4c41461015857600080fd5b80633c8c4e931461008d57806348946cee146100b35780634aa4a4fc146100c6578063793ea8d1146100f9575b600080fd5b6100a061009b36600461099d565b610173565b6040519081526020015b60405180910390f35b6100a06100c13660046109c9565b6102e5565b6100e173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6040516001600160a01b0390911681526020016100aa565b6100a061010736600461099d565b600092915050565b6100e173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b6100a06101383660046109fe565b6104bd565b6100e173e592427a0aece92de3edee1f18e0157c0586156481565b6100e1736b175474e89094c44da98b954eedeac495271d0f81565b600061019573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333086610679565b6101c873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156485610788565b6040805160a081018252736015551cd911ff4685072e2793f56c841e3ab66160611b60c082015261017760eb1b60d48201527314170d3238c43166d83a33a945d3d619c6c0dd6960631b60d7820152601960ea1b60eb820152606084811b6bffffffffffffffffffffffff191660ee830152825180830360e20181526101028301845282523360208301524282840152810185905260006080820152905163c04b8d5960e01b815273e592427a0aece92de3edee1f18e0157c058615649063c04b8d599061029a908490600401610ab3565b6020604051808303816000875af11580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd9190610acd565b949350505050565b600061030773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333086610679565b61033a73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156485610788565b604080516101008101825273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281526001600160a01b0384811660208301908152610bb88385019081523360608501908152426080860190815260a086018b815260c087018b8152600060e089019081529851631b67c43360e31b8152885188166004820152955187166024870152935162ffffff1660448601529151851660648501525160848401525160a48301525160c482015292511660e48301529073e592427a0aece92de3edee1f18e0157c058615649063db3e219890610104016020604051808303816000875af115801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610acd565b9150838210156104b55761048d73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c058615646000610788565b6104b573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2336104b08588610ae6565b610888565b509392505050565b60006104df73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333086610679565b61051273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156485610788565b6040805160a08101825260c08101849052601960ea1b60e08201527314170d3238c43166d83a33a945d3d619c6c0dd6960631b60e382015261017760eb1b60f7820152736015551cd911ff4685072e2793f56c841e3ab66160611b60fa820152815160ee81830301815261010e820183528152336020820152428183015260608101869052608081018590529051631e51809360e31b815273e592427a0aece92de3edee1f18e0157c058615649063f28c0498906105d4908490600401610ab3565b6020604051808303816000875af11580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190610acd565b9150838210156104b55761065573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c058615646000610788565b6104b573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc230336106798689610ae6565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916106dd9190610b0d565b6000604051808303816000865af19150503d806000811461071a576040519150601f19603f3d011682016040523d82523d6000602084013e61071f565b606091505b50915091508180156107495750805115806107495750808060200190518101906107499190610b29565b6107805760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b60448201526064015b60405180910390fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291516000928392908716916107e49190610b0d565b6000604051808303816000865af19150503d8060008114610821576040519150601f19603f3d011682016040523d82523d6000602084013e610826565b606091505b50915091508180156108505750805115806108505750808060200190518101906108509190610b29565b6108815760405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606401610777565b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916108e49190610b0d565b6000604051808303816000865af19150503d8060008114610921576040519150601f19603f3d011682016040523d82523d6000602084013e610926565b606091505b50915091508180156109505750805115806109505750808060200190518101906109509190610b29565b6108815760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610777565b80356001600160a01b038116811461099857600080fd5b919050565b600080604083850312156109b057600080fd5b823591506109c060208401610981565b90509250929050565b6000806000606084860312156109de57600080fd5b83359250602084013591506109f560408501610981565b90509250925092565b600080600060608486031215610a1357600080fd5b505081359360208301359350604090920135919050565b60005b83811015610a45578181015183820152602001610a2d565b50506000910152565b6000815160a0845280518060a0860152610a6f8160c0870160208501610a2a565b6020848101516001600160a01b0316908601526040808501519086015260608085015190860152608093840151938501939093525050601f01601f19160160c00190565b602081526000610ac66020830184610a4e565b9392505050565b600060208284031215610adf57600080fd5b5051919050565b81810381811115610b0757634e487b7160e01b600052601160045260246000fd5b92915050565b60008251610b1f818460208701610a2a565b9190910192915050565b600060208284031215610b3b57600080fd5b81518015158114610ac657600080fdfea26469706673582212206770b368b96c8cd92af6d9be2164ed05bb3e9df68bece93b998fc8b59f6096da64736f6c63430008110033a2646970667358221220fe22a53e5b94fddc27e75e3938784ab31432a3f2f0c5fd982e2235b09ddd4fa864736f6c63430008110033",
    "sourceMap": "501:3874:28:-:0;;;;;1609:26:2;;;1631:4;-1:-1:-1;;1609:26:2;;;;;;;;3191:44:5;;;;;;;;;;;-1:-1:-1;;;1378:31:28;;216:2:29;1378:31:28;198:21:29;255:2;235:18;228:30;-1:-1:-1;;;274:18:29;267:45;1378:12:28;;329:18:29;1378:31:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1378:31:28;;;;;;;;;;;;:::i;:::-;1353:56;;;;;;:::i;:::-;;501:3874;;;;;;;;;;;;358:127:29;419:10;414:3;410:20;407:1;400:31;450:4;447:1;440:15;474:4;471:1;464:15;490:1042;570:6;601:2;644;632:9;623:7;619:23;615:32;612:52;;;660:1;657;650:12;612:52;687:16;;-1:-1:-1;;;;;752:14:29;;;749:34;;;779:1;776;769:12;749:34;817:6;806:9;802:22;792:32;;862:7;855:4;851:2;847:13;843:27;833:55;;884:1;881;874:12;833:55;913:2;907:9;935:2;931;928:10;925:36;;;941:18;;:::i;:::-;1016:2;1010:9;984:2;1070:13;;-1:-1:-1;;1066:22:29;;;1090:2;1062:31;1058:40;1046:53;;;1114:18;;;1134:22;;;1111:46;1108:72;;;1160:18;;:::i;:::-;1200:10;1196:2;1189:22;1235:2;1227:6;1220:18;1275:7;1270:2;1265;1261;1257:11;1253:20;1250:33;1247:53;;;1296:1;1293;1286:12;1247:53;1318:1;1309:10;;1328:129;1342:2;1339:1;1336:9;1328:129;;;1430:10;;;1426:19;;1420:26;1399:14;;;1395:23;;1388:59;1353:10;;;;1328:129;;;1499:1;1494:2;1489;1481:6;1477:15;1473:24;1466:35;1520:6;1510:16;;;;;;;;490:1042;;;;:::o;1537:380::-;1616:1;1612:12;;;;1659;;;1680:61;;1734:4;1726:6;1722:17;1712:27;;1680:61;1787:2;1779:6;1776:14;1756:18;1753:38;1750:161;;1833:10;1828:3;1824:20;1821:1;1814:31;1868:4;1865:1;1858:15;1896:4;1893:1;1886:15;1750:161;;1537:380;;;:::o;2048:545::-;2150:2;2145:3;2142:11;2139:448;;;2186:1;2211:5;2207:2;2200:17;2256:4;2252:2;2242:19;2326:2;2314:10;2310:19;2307:1;2303:27;2297:4;2293:38;2362:4;2350:10;2347:20;2344:47;;;-1:-1:-1;2385:4:29;2344:47;2440:2;2435:3;2431:12;2428:1;2424:20;2418:4;2414:31;2404:41;;2495:82;2513:2;2506:5;2503:13;2495:82;;;2558:17;;;2539:1;2528:13;2495:82;;;2499:3;;;2139:448;2048:545;;;:::o;2769:1352::-;2889:10;;-1:-1:-1;;;;;2911:30:29;;2908:56;;;2944:18;;:::i;:::-;2973:97;3063:6;3023:38;3055:4;3049:11;3023:38;:::i;:::-;3017:4;2973:97;:::i;:::-;3125:4;;3189:2;3178:14;;3206:1;3201:663;;;;3908:1;3925:6;3922:89;;;-1:-1:-1;3977:19:29;;;3971:26;3922:89;-1:-1:-1;;2726:1:29;2722:11;;;2718:24;2714:29;2704:40;2750:1;2746:11;;;2701:57;4024:81;;3171:944;;3201:663;1995:1;1988:14;;;2032:4;2019:18;;-1:-1:-1;;3237:20:29;;;3355:236;3369:7;3366:1;3363:14;3355:236;;;3458:19;;;3452:26;3437:42;;3550:27;;;;3518:1;3506:14;;;;3385:19;;3355:236;;;3359:3;3619:6;3610:7;3607:19;3604:201;;;3680:19;;;3674:26;-1:-1:-1;;3763:1:29;3759:14;;;3775:3;3755:24;3751:37;3747:42;3732:58;3717:74;;3604:201;-1:-1:-1;;;;;3851:1:29;3835:14;;;3831:22;3818:36;;-1:-1:-1;2769:1352:29:o;:::-;501:3874:28;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806385226c81116100c3578063c31c9c071161007c578063c31c9c071461027d578063c6bbd5a714610298578063e0bab4c4146102ab578063e20c9f71146102c6578063f4b9fa75146102ce578063fa7626d4146102e157600080fd5b806385226c811461021d5780638dae88c214610232578063916a17c61461024d578063b5508aa914610255578063b888f4aa1461025d578063ba414fa61461026557600080fd5b80633f7286f4116101155780633f7286f41461019f5780633fc8cef3146101a75780634aa4a4fc146101d257806366d9a9a0146101ed5780636e008a03146102025780638119c0651461020a57600080fd5b80630a9254e4146101525780631ed7831c1461015c57806325b7d54e1461017a5780632ade3880146101825780633e5e3c2314610197575b600080fd5b61015a6102ee565b005b610164610411565b6040516101719190611826565b60405180910390f35b61015a610473565b61018a61056e565b60405161017191906118c3565b6101646106b0565b610164610710565b601e546101ba906001600160a01b031681565b6040516001600160a01b039091168152602001610171565b6101ba73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6101f5610770565b6040516101719190611983565b61015a610856565b601f546101ba906001600160a01b031681565b610225610f87565b6040516101719190611a36565b6101ba73b27308f9f90d607463bb33ea1bebb41c27ce5ab681565b6101f5611057565b61022561113d565b61015a61120d565b61026d611364565b6040519015158152602001610171565b6101ba73e592427a0aece92de3edee1f18e0157c0586156481565b6020546101ba906001600160a01b031681565b6101ba736b175474e89094c44da98b954eedeac495271d0f81565b610164611491565b601d546101ba906001600160a01b031681565b60075461026d9060ff1681565b604051630637469360e31b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba34989061032690602190600401611ad2565b6020604051808303816000875af1158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190611b7e565b601c5560405161037890611819565b604051809103906000f080158015610394573d6000803e3d6000fd5b50601f80546001600160a01b03929092166001600160a01b0319928316179055601d80548216736b175474e89094c44da98b954eedeac495271d0f179055601e8054821673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21790556020805490911673b27308f9f90d607463bb33ea1bebb41c27ce5ab6179055565b6060601480548060200260200160405190810160405280929190818152602001828054801561046957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161044b575b5050505050905090565b601c54604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b5050505061056c7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316632f103f226040518163ffffffff1660e01b8152600401602060405180830381865afa158015610540573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105649190611b7e565b601c546114f1565b565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156106a757600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101561069057838290600052602060002001805461060390611a98565b80601f016020809104026020016040519081016040528092919081815260200182805461062f90611a98565b801561067c5780601f106106515761010080835404028352916020019161067c565b820191906000526020600020905b81548152906001019060200180831161065f57829003601f168201915b5050505050815260200190600101906105e4565b505050508152505081526020019060010190610592565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610469576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161044b575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610469576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161044b575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156106a75760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561083e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108005790505b50505050508152505081526020019060010190610794565b601c54604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b1580156108a757600080fd5b505af11580156108bb573d6000803e3d6000fd5b50505050601e60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db067016345785d8a00006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561091757600080fd5b505af115801561092b573d6000803e3d6000fd5b5050601e546040516370a0823160e01b81523060048201526109ae94506001600160a01b0390911692506370a082319150602401602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190611b7e565b67016345785d8a00006114f1565b601e5460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c05861564600482015267016345785d8a000060248201526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e9190611b97565b50604080516101008101825273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28152736b175474e89094c44da98b954eedeac495271d0f6020820152610bb88183015230606082015242608082015267016345785d8a000060a0820152600060c0820181905260e0820152905163414bf38960e01b8152610b2c9073e592427a0aece92de3edee1f18e0157c058615649063414bf38990610ae4908590600401611bc0565b6020604051808303816000875af1158015610b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b279190611b7e565b61161c565b601d546040516370a0823160e01b8152306004820152610b77916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610b03573d6000803e3d6000fd5b601e546040516370a0823160e01b8152306004820152610ba9916001600160a01b0316906370a0823190602401610b5a565b602054601d546040516370a0823160e01b81523060048201526000926001600160a01b039081169263f7729d4392736b175474e89094c44da98b954eedeac495271d0f9273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc292610bb8929116906370a0823190602401602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190611b7e565b6040516001600160e01b031960e087901b1681526001600160a01b03948516600482015293909216602484015262ffffff16604483015260648201526000608482015260a4016020604051808303816000875af1158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd9190611b7e565b9050610d116040518060400160405280601081526020016f195e1c1d1958dd195908185b5bdd5b9d60821b81525082611664565b601d546040516370a0823160e01b81523060048201526001600160a01b039091169063095ea7b39073e592427a0aece92de3edee1f18e0157c058615649083906370a0823190602401602060405180830381865afa158015610d77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9b9190611b7e565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610de6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0a9190611b97565b506040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26020820152610bb8818301523060608201819052426080830152601d5492516370a0823160e01b8152600481019190915260009260a08301916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610ead573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed19190611b7e565b81526000602082018190526040918201525163414bf38960e01b8152909150610f1e9073e592427a0aece92de3edee1f18e0157c058615649063414bf38990610ae4908590600401611bc0565b601d546040516370a0823160e01b8152306004820152610f50916001600160a01b0316906370a0823190602401610b5a565b601e546040516370a0823160e01b8152306004820152610f82916001600160a01b0316906370a0823190602401610b5a565b505050565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156106a7578382906000526020600020018054610fca90611a98565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff690611a98565b80156110435780601f1061101857610100808354040283529160200191611043565b820191906000526020600020905b81548152906001019060200180831161102657829003601f168201915b505050505081526020019060010190610fab565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156106a75760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561112557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116110e75790505b5050505050815250508152602001906001019061107b565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156106a757838290600052602060002001805461118090611a98565b80601f01602080910402602001604051908101604052809291908181526020018280546111ac90611a98565b80156111f95780601f106111ce576101008083540402835291602001916111f9565b820191906000526020600020905b8154815290600101906020018083116111dc57829003601f168201915b505050505081526020019060010190611161565b601c54604051639ebf682760e01b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d90639ebf682790602401600060405180830381600087803b15801561125e57600080fd5b505af1158015611272573d6000803e3d6000fd5b505060405163d9bbf3a160e01b8152630119b6df6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063d9bbf3a19150602401600060405180830381600087803b1580156112c657600080fd5b505af11580156112da573d6000803e3d6000fd5b505050506112ec43630119b6df6114f1565b601d54604080516306fdde0360e01b8152905161056c926001600160a01b0316916306fdde039160048083019260009291908290030181865afa158015611337573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261135f9190810190611c3f565b6116a9565b600754600090610100900460ff16156113865750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561148c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091611414917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611cec565b60408051601f198184030181529082905261142e91611d1d565b6000604051808303816000865af19150503d806000811461146b576040519150601f19603f3d011682016040523d82523d6000602084013e611470565b606091505b50915050808060200190518101906114889190611b97565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610469576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161044b575050505050905090565b808214611618577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516115629060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16116186116ec565b5050565b6116618160405160240161163291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790526117f8565b50565b611618828260405160240161167a929190611d39565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526117f8565b611661816040516024016116bd9190611d5b565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526117f8565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156117e75760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526117869291602001611cec565b60408051601f19818403018152908290526117a091611d1d565b6000604051808303816000865af19150503d80600081146117dd576040519150601f19603f3d011682016040523d82523d6000602084013e6117e2565b606091505b505050505b6007805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610ba180611d6f83390190565b6020808252825182820181905260009190848201906040850190845b818110156118675783516001600160a01b031683529284019291840191600101611842565b50909695505050505050565b60005b8381101561188e578181015183820152602001611876565b50506000910152565b600081518084526118af816020860160208601611873565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101561197357603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101561195d57605f1989850301835261194b848651611897565b948e01949350918d019160010161192f565b505050978a0197945050918801916001016118ea565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611a2757898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611a125783516001600160e01b0319168252928b019260019290920191908b01906119e8565b50978a019795505050918701916001016119ab565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611a8b57603f19888603018452611a79858351611897565b94509285019290850190600101611a5d565b5092979650505050505050565b600181811c90821680611aac57607f821691505b602082108103611acc57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208083526000845481600182811c915080831680611af457607f831692505b8583108103611b1157634e487b7160e01b85526022600452602485fd5b878601838152602001818015611b2e5760018114611b4457611b6f565b60ff198616825284151560051b82019650611b6f565b60008b81526020902060005b86811015611b6957815484820152908501908901611b50565b83019750505b50949998505050505050505050565b600060208284031215611b9057600080fd5b5051919050565b600060208284031215611ba957600080fd5b81518015158114611bb957600080fd5b9392505050565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b634e487b7160e01b600052604160045260246000fd5b600060208284031215611c5157600080fd5b815167ffffffffffffffff80821115611c6957600080fd5b818401915084601f830112611c7d57600080fd5b815181811115611c8f57611c8f611c29565b604051601f8201601f19908116603f01168101908382118183101715611cb757611cb7611c29565b81604052828152876020848701011115611cd057600080fd5b611ce1836020830160208801611873565b979650505050505050565b6001600160e01b0319831681528151600090611d0f816004850160208701611873565b919091016004019392505050565b60008251611d2f818460208701611873565b9190910192915050565b604081526000611d4c6040830185611897565b90508260208301529392505050565b602081526000611bb9602083018461189756fe608060405234801561001057600080fd5b50610b81806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806389a302711161005b57806389a302711461010f5780638c5c5ca21461012a578063c31c9c071461013d578063e0bab4c41461015857600080fd5b80633c8c4e931461008d57806348946cee146100b35780634aa4a4fc146100c6578063793ea8d1146100f9575b600080fd5b6100a061009b36600461099d565b610173565b6040519081526020015b60405180910390f35b6100a06100c13660046109c9565b6102e5565b6100e173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6040516001600160a01b0390911681526020016100aa565b6100a061010736600461099d565b600092915050565b6100e173a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b6100a06101383660046109fe565b6104bd565b6100e173e592427a0aece92de3edee1f18e0157c0586156481565b6100e1736b175474e89094c44da98b954eedeac495271d0f81565b600061019573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333086610679565b6101c873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156485610788565b6040805160a081018252736015551cd911ff4685072e2793f56c841e3ab66160611b60c082015261017760eb1b60d48201527314170d3238c43166d83a33a945d3d619c6c0dd6960631b60d7820152601960ea1b60eb820152606084811b6bffffffffffffffffffffffff191660ee830152825180830360e20181526101028301845282523360208301524282840152810185905260006080820152905163c04b8d5960e01b815273e592427a0aece92de3edee1f18e0157c058615649063c04b8d599061029a908490600401610ab3565b6020604051808303816000875af11580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd9190610acd565b949350505050565b600061030773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333086610679565b61033a73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156485610788565b604080516101008101825273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281526001600160a01b0384811660208301908152610bb88385019081523360608501908152426080860190815260a086018b815260c087018b8152600060e089019081529851631b67c43360e31b8152885188166004820152955187166024870152935162ffffff1660448601529151851660648501525160848401525160a48301525160c482015292511660e48301529073e592427a0aece92de3edee1f18e0157c058615649063db3e219890610104016020604051808303816000875af115801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610acd565b9150838210156104b55761048d73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c058615646000610788565b6104b573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2336104b08588610ae6565b610888565b509392505050565b60006104df73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2333086610679565b61051273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156485610788565b6040805160a08101825260c08101849052601960ea1b60e08201527314170d3238c43166d83a33a945d3d619c6c0dd6960631b60e382015261017760eb1b60f7820152736015551cd911ff4685072e2793f56c841e3ab66160611b60fa820152815160ee81830301815261010e820183528152336020820152428183015260608101869052608081018590529051631e51809360e31b815273e592427a0aece92de3edee1f18e0157c058615649063f28c0498906105d4908490600401610ab3565b6020604051808303816000875af11580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190610acd565b9150838210156104b55761065573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c058615646000610788565b6104b573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc230336106798689610ae6565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916106dd9190610b0d565b6000604051808303816000865af19150503d806000811461071a576040519150601f19603f3d011682016040523d82523d6000602084013e61071f565b606091505b50915091508180156107495750805115806107495750808060200190518101906107499190610b29565b6107805760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b60448201526064015b60405180910390fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291516000928392908716916107e49190610b0d565b6000604051808303816000865af19150503d8060008114610821576040519150601f19603f3d011682016040523d82523d6000602084013e610826565b606091505b50915091508180156108505750805115806108505750808060200190518101906108509190610b29565b6108815760405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606401610777565b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916108e49190610b0d565b6000604051808303816000865af19150503d8060008114610921576040519150601f19603f3d011682016040523d82523d6000602084013e610926565b606091505b50915091508180156109505750805115806109505750808060200190518101906109509190610b29565b6108815760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610777565b80356001600160a01b038116811461099857600080fd5b919050565b600080604083850312156109b057600080fd5b823591506109c060208401610981565b90509250929050565b6000806000606084860312156109de57600080fd5b83359250602084013591506109f560408501610981565b90509250925092565b600080600060608486031215610a1357600080fd5b505081359360208301359350604090920135919050565b60005b83811015610a45578181015183820152602001610a2d565b50506000910152565b6000815160a0845280518060a0860152610a6f8160c0870160208501610a2a565b6020848101516001600160a01b0316908601526040808501519086015260608085015190860152608093840151938501939093525050601f01601f19160160c00190565b602081526000610ac66020830184610a4e565b9392505050565b600060208284031215610adf57600080fd5b5051919050565b81810381811115610b0757634e487b7160e01b600052601160045260246000fd5b92915050565b60008251610b1f818460208701610a2a565b9190910192915050565b600060208284031215610b3b57600080fd5b81518015158114610ac657600080fdfea26469706673582212206770b368b96c8cd92af6d9be2164ed05bb3e9df68bece93b998fc8b59f6096da64736f6c63430008110033a2646970667358221220fe22a53e5b94fddc27e75e3938784ab31432a3f2f0c5fd982e2235b09ddd4fa864736f6c63430008110033",
    "sourceMap": "501:3874:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:267;;;:::i;:::-;;2531:136:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1850:158:28;;;:::i;3463:153:8:-;;;:::i;:::-;;;;;;;:::i;3320:135::-;;;:::i;3013:143::-;;;:::i;1010:17:28:-;;;;;-1:-1:-1;;;;;1010:17:28;;;;;;-1:-1:-1;;;;;3298:32:29;;;3280:51;;3268:2;3253:18;1010:17:28;3121:216:29;708:74:28;;740:42;708:74;;2825:180:8;;;:::i;:::-;;;;;;;:::i;2304:2068:28:-;;;:::i;1036:16::-;;;;;-1:-1:-1;;;;;1036:16:28;;;2675:142:8;;;:::i;:::-;;;;;;;:::i;789:75:28:-;;822:42;789:75;;3164:148:8;;;:::i;2228:143::-;;;:::i;2061:198:28:-;;;:::i;1865:600:2:-;;;:::i;:::-;;;6315:14:29;;6308:22;6290:41;;6278:2;6263:18;1865:600:2;6150:187:29;873:105:28;;935:42;873:105;;1059:21;;;;;-1:-1:-1;;;;;1059:21:28;;;629:72;;659:42;629:72;;2379:144:8;;;:::i;987:16:28:-;;;;;-1:-1:-1;;;;;987:16:28;;;1609:26:2;;;;;;;;;1536:267:28;1585:30;;-1:-1:-1;;;1585:30:28;;:13;;;;:30;;1599:15;;1585:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1571:11;:44;1633:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1626:4:28;:17;;-1:-1:-1;;;;;1626:17:28;;;;-1:-1:-1;;;;;;1626:17:28;;;;;;1654:3;:16;;;;659:42;1654:16;;;1681:4;:19;;;;740:42;1681:19;;;1711:6;:24;;;;;822:42;1711:24;;;1536:267::o;2531:136:8:-;2578:33;2643:16;2624:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2624:35:8;;;;;;;;;;;;;;;;;;;;;;;2531:136;:::o;1850:158:28:-;1939:11;;1925:26;;-1:-1:-1;;;1925:26:28;;;;;9095:25:29;;;;1925:13:28;;;;9068:18:29;;1925:26:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:38;325:28:3;317:37;;-1:-1:-1;;;;;1971:13:28;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1988:11;;1962:8;:38::i;:::-;1850:158::o;3463:153:8:-;3512:42;3589:19;3567:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3567:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3463:153;:::o;3320:135::-;3366:33;3431:16;3412:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3412:35:8;;;;;;;;;;;;;;;;;;;;;;3320:135;:::o;3013:143::-;3061:35;3130:18;3109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3109:39:8;;;;;;;;;;;;;;;;;;;;;;3013:143;:::o;2825:180::-;2881:48;2971:26;2942:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2942:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2304:2068:28;2356:11;;2342:26;;-1:-1:-1;;;2342:26:28;;;;;9095:25:29;;;;2342:13:28;;;;9068:18:29;;2342:26:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:4;;;;;;;;;-1:-1:-1;;;;;2414:4:28;-1:-1:-1;;;;;2414:12:28;;2434:4;2414:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2461:4:28;;:29;;-1:-1:-1;;;2461:29:28;;2484:4;2461:29;;;3280:51:29;2452:45:28;;-1:-1:-1;;;;;;2461:4:28;;;;-1:-1:-1;2461:14:28;;-1:-1:-1;3253:18:29;;2461:29:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2492:4;2452:8;:45::i;:::-;2508:4;;:39;;-1:-1:-1;;;2508:39:28;;935:42;2508:39;;;9330:51:29;2542:4:28;9397:18:29;;;9390:34;-1:-1:-1;;;;;2508:4:28;;;;:12;;9303:18:29;;2508:39:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2621:544:28;;;;;;;;740:42;2621:544;;659:42;2621:544;;;;2773:4;2621:544;;;;2811:4;2621:544;;;;2841:15;2621:544;;;;2881:4;2621:544;;;;2570:48;2621:544;;;;;;;;;;3188:35;;-1:-1:-1;;;3188:35:28;;3176:48;;935:42;;3188:27;;:35;;2621:544;;3188:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3176:11;:48::i;:::-;3247:3;;:28;;-1:-1:-1;;;3247:28:28;;3269:4;3247:28;;;3280:51:29;3235:41:28;;-1:-1:-1;;;;;3247:3:28;;:13;;3253:18:29;;3247:28:28;;;;;;;;;;;;;;;;;;;;;;;3235:41;3299:4;;:29;;-1:-1:-1;;;3299:29:28;;3322:4;3299:29;;;3280:51:29;3287:42:28;;-1:-1:-1;;;;;3299:4:28;;:14;;3253:18:29;;3299:29:28;3121:216:29;3287:42:28;3359:6;;3406:3;;:28;;-1:-1:-1;;;3406:28:28;;3428:4;3406:28;;;3280:51:29;3342:14:28;;-1:-1:-1;;;;;3359:6:28;;;;:28;;659:42;;740;;3400:4;;3406:3;;;:13;;3253:18:29;;3406:28:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3359:79;;-1:-1:-1;;;;;;3359:79:28;;;;;;;-1:-1:-1;;;;;10852:15:29;;;3359:79:28;;;10834:34:29;10904:15;;;;10884:18;;;10877:43;10968:8;10956:21;10936:18;;;10929:49;10994:18;;;10987:34;3436:1:28;11037:19:29;;;11030:44;10768:19;;3359:79:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3342:96;;3449:42;;;;;;;;;;;;;;-1:-1:-1;;;3449:42:28;;;3481:9;3449:11;:42::i;:::-;3502:3;;3535:28;;-1:-1:-1;;;3535:28:28;;3557:4;3535:28;;;3280:51:29;-1:-1:-1;;;;;3502:3:28;;;;:11;;935:42;;3502:3;;3535:13;;3253:18:29;;3535:28:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3502:62;;-1:-1:-1;;;;;;3502:62:28;;;;;;;-1:-1:-1;;;;;9348:32:29;;;3502:62:28;;;9330:51:29;9397:18;;;9390:34;9303:18;;3502:62:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3629:568:28;;;;;;;;659:42;3629:568;;740:42;3629:568;;;;3781:4;3629:568;;;;3819:4;3629:568;;;;;;3849:15;3629:568;;;;3889:3;;:28;;-1:-1:-1;;;3889:28:28;;;;;3280:51:29;;;;-1:-1:-1;;3629:568:28;;;;-1:-1:-1;;;;;3889:3:28;;;;:13;;3253:18:29;;3889:28:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3629:568;;3950:1;3629:568;;;;;;;;;;;4222:36;-1:-1:-1;;;4222:36:28;;3577:620;;-1:-1:-1;4210:49:28;;935:42;;4222:27;;:36;;3577:620;;4222:36;;;:::i;4210:49::-;4282:3;;:28;;-1:-1:-1;;;4282:28:28;;4304:4;4282:28;;;3280:51:29;4270:41:28;;-1:-1:-1;;;;;4282:3:28;;:13;;3253:18:29;;4282:28:28;3121:216:29;4270:41:28;4334:4;;:29;;-1:-1:-1;;;4334:29:28;;4357:4;4334:29;;;3280:51:29;4322:42:28;;-1:-1:-1;;;;;4334:4:28;;:14;;3253:18:29;;4334:29:28;3121:216:29;4322:42:28;2331:2041;;;2304:2068::o;2675:142:8:-;2723:34;2791:18;2770:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3164:148;3212:40;3286:18;3265:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3265:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:143;2277:34;2345:18;2324:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2061:198:28;2130:11;;2116:26;;-1:-1:-1;;;2116:26:28;;;;;9095:25:29;;;;2116:13:28;;;;9068:18:29;;2116:26:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2153:21:28;;-1:-1:-1;;;2153:21:28;;2165:8;2153:21;;;9095:25:29;2153:11:28;;-1:-1:-1;2153:11:28;;-1:-1:-1;9068:18:29;;2153:21:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:32;2194:12;2208:8;2185;:32::i;:::-;2240:3;;:10;;;-1:-1:-1;;;2240:10:28;;;;2228:23;;-1:-1:-1;;;;;2240:3:28;;:8;;:10;;;;;:3;;:10;;;;;;;:3;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2240:10:28;;;;;;;;;;;;:::i;:::-;2228:11;:23::i;1865:600:2:-;1920:7;;1899:4;;1920:7;;;;;1916:542;;;-1:-1:-1;1951:7:2;;;;;;;;1865:600::o;1916:542::-;1991:17;3077:42;3065:55;3148:16;2031:382;;2251:43;;;1712:64;2251:43;;;9330:51:29;;;-1:-1:-1;;;9397:18:29;;;9390:34;2251:43:2;;;;;;;;;9303:18:29;;;2251:43:2;;;-1:-1:-1;;1712:64:2;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:2;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:2:o;2379:144:8:-;2428:35;2497:18;2476:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2476:39:8;;;;;;;;;;;;;;;;;;;;;;2379:144;:::o;5365:269:2:-;5428:1;5423;:6;5419:208;;5451:41;;;;;13757:2:29;13739:21;;;13796:2;13776:18;;;13769:30;13835:34;13830:2;13815:18;;13808:62;-1:-1:-1;;;13901:2:29;13886:18;;13879:32;13943:3;13928:19;;13555:398;5451:41:2;;;;;;;;5512:31;;;14170:21:29;;;14227:2;14207:18;;;14200:30;-1:-1:-1;;;14261:2:29;14246:18;;14239:40;14346:4;14331:20;;14324:36;;;5512:31:2;;;;;;;14311:3:29;5512:31:2;;;5563;;;14583:21:29;;;14640:2;14620:18;;;14613:30;-1:-1:-1;;;14674:2:29;14659:18;;14652:40;14759:4;14744:20;;14737:36;;;5563:31:2;;;;;;;14724:3:29;5563:31:2;;;5609:6;:4;:6::i;:::-;5365:269;;:::o;5686:112:16:-;5733:57;5786:2;5749:40;;;;;;9095:25:29;;9083:2;9068:18;;8949:177;5749:40:16;;;;-1:-1:-1;;5749:40:16;;;;;;;;;;;;;;-1:-1:-1;;;;;5749:40:16;-1:-1:-1;;;5749:40:16;;;5733:15;:57::i;:::-;5686:112;:::o;6752:141::-;6817:68;6877:2;6881;6833:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6833:51:16;;;;;;;;;;;;;;-1:-1:-1;;;;;6833:51:16;-1:-1:-1;;;6833:51:16;;;6817:15;:68::i;5806:123::-;5862:59;5917:2;5878:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5878:42:16;;;;;;;;;;;;;;-1:-1:-1;;;;;5878:42:16;-1:-1:-1;;;5878:42:16;;;5862:15;:59::i;2473:443:2:-;3077:42;3065:55;3148:16;2517:367;;2721:67;;;1712:64;2721:67;;;15507:51:29;;;-1:-1:-1;;;15574:18:29;;;15567:34;;;;2781:4:2;15617:18:29;;;15610:34;2555:11:2;;1712:64;2654:43;;15480:18:29;;2721:67:2;;;-1:-1:-1;;2721:67:2;;;;;;;;;;2608:199;;;2721:67;2608:199;;:::i;:::-;;;;-1:-1:-1;;2608:199:2;;;;;;;;;;2572:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2517:367:2;2894:7;:14;;-1:-1:-1;;2894:14:2;;;;;2473:443::o;187:384:16:-;282:14;;135:42;459:2;446:16;;258:21;;282:14;446:16;135:42;496:5;485:68;476:77;;411:153;;187:384;:::o;-1:-1:-1:-;;;;;;;;:::o;180:658:29:-;351:2;403:21;;;473:13;;376:18;;;495:22;;;322:4;;351:2;574:15;;;;548:2;533:18;;;322:4;617:195;631:6;628:1;625:13;617:195;;;696:13;;-1:-1:-1;;;;;692:39:29;680:52;;787:15;;;;752:12;;;;728:1;646:9;617:195;;;-1:-1:-1;829:3:29;;180:658;-1:-1:-1;;;;;;180:658:29:o;843:250::-;928:1;938:113;952:6;949:1;946:13;938:113;;;1028:11;;;1022:18;1009:11;;;1002:39;974:2;967:10;938:113;;;-1:-1:-1;;1085:1:29;1067:16;;1060:27;843:250::o;1098:271::-;1140:3;1178:5;1172:12;1205:6;1200:3;1193:19;1221:76;1290:6;1283:4;1278:3;1274:14;1267:4;1260:5;1256:16;1221:76;:::i;:::-;1351:2;1330:15;-1:-1:-1;;1326:29:29;1317:39;;;;1358:4;1313:50;;1098:271;-1:-1:-1;;1098:271:29:o;1374:1742::-;1607:2;1659:21;;;1729:13;;1632:18;;;1751:22;;;1578:4;;1607:2;1792;;1810:18;;;;1847:1;1890:15;;;1875:31;;1871:40;;1934:15;;;1578:4;;1998:1089;2014:6;2009:3;2006:15;1998:1089;;;-1:-1:-1;;2083:22:29;;;2079:36;2067:49;;2139:13;;2226:9;;-1:-1:-1;;;;;2222:35:29;2207:51;;2297:11;;2291:18;2329:15;;;2322:27;;;2410:19;;2179:15;;;2442:24;;;2623:21;;;;2489:2;2571:17;;;2559:30;;2555:39;;;2513:15;;;;2668:1;2682:296;2698:8;2693:3;2690:17;2682:296;;;2804:2;2800:7;2791:6;2783;2779:19;2775:33;2768:5;2761:48;2836:42;2871:6;2860:8;2854:15;2836:42;:::i;:::-;2907:17;;;;2826:52;-1:-1:-1;2950:14:29;;;;2726:1;2717:11;2682:296;;;-1:-1:-1;;;3065:12:29;;;;3001:6;-1:-1:-1;;3030:15:29;;;;2040:1;2031:11;1998:1089;;;-1:-1:-1;3104:6:29;;1374:1742;-1:-1:-1;;;;;;;;;;1374:1742:29:o;3550:1567::-;3752:4;3781:2;3821;3810:9;3806:18;3851:2;3840:9;3833:21;3874:6;3909;3903:13;3940:6;3932;3925:22;3966:2;3956:12;;3999:2;3988:9;3984:18;3977:25;;4061:2;4051:6;4048:1;4044:14;4033:9;4029:30;4025:39;4099:2;4091:6;4087:15;4120:1;4141;4151:937;4167:6;4162:3;4159:15;4151:937;;;4236:22;;;-1:-1:-1;;4232:36:29;4220:49;;4292:13;;4379:9;;-1:-1:-1;;;;;4375:35:29;4360:51;;4450:11;;4444:18;4482:15;;;4475:27;;;4563:19;;4332:15;;;4595:24;;;4685:21;;;;4730:1;;4653:2;4641:15;;;4744:236;4760:8;4755:3;4752:17;4744:236;;;4841:15;;-1:-1:-1;;;;;;4837:42:29;4823:57;;4949:17;;;;4788:1;4779:11;;;;;4906:14;;;;4744:236;;;-1:-1:-1;5066:12:29;;;;5003:5;-1:-1:-1;;;5031:15:29;;;;4193:1;4184:11;4151:937;;;-1:-1:-1;5105:6:29;;3550:1567;-1:-1:-1;;;;;;;;;3550:1567:29:o;5342:803::-;5504:4;5533:2;5573;5562:9;5558:18;5603:2;5592:9;5585:21;5626:6;5661;5655:13;5692:6;5684;5677:22;5730:2;5719:9;5715:18;5708:25;;5792:2;5782:6;5779:1;5775:14;5764:9;5760:30;5756:39;5742:53;;5830:2;5822:6;5818:15;5851:1;5861:255;5875:6;5872:1;5869:13;5861:255;;;5968:2;5964:7;5952:9;5944:6;5940:22;5936:36;5931:3;5924:49;5996:40;6029:6;6020;6014:13;5996:40;:::i;:::-;5986:50;-1:-1:-1;6094:12:29;;;;6059:15;;;;5897:1;5890:9;5861:255;;;-1:-1:-1;6133:6:29;;5342:803;-1:-1:-1;;;;;;;5342:803:29:o;7019:380::-;7098:1;7094:12;;;;7141;;;7162:61;;7216:4;7208:6;7204:17;7194:27;;7162:61;7269:2;7261:6;7258:14;7238:18;7235:38;7232:161;;7315:10;7310:3;7306:20;7303:1;7296:31;7350:4;7347:1;7340:15;7378:4;7375:1;7368:15;7232:161;;7019:380;;;:::o;7530:1225::-;7639:4;7668:2;7697;7686:9;7679:21;7720:1;7753:6;7747:13;7783:3;7805:1;7833:9;7829:2;7825:18;7815:28;;7893:2;7882:9;7878:18;7915;7905:61;;7959:4;7951:6;7947:17;7937:27;;7905:61;8012:2;8004:6;8001:14;7981:18;7978:38;7975:165;;-1:-1:-1;;;8039:33:29;;8095:4;8092:1;8085:15;8125:4;8046:3;8113:17;7975:165;8207:18;;;112:19;;;164:4;155:14;8250:18;8277:128;;;;8419:1;8414:315;;;;8243:486;;8277:128;-1:-1:-1;;8310:24:29;;8298:37;;8378:14;;8371:22;8368:1;8364:30;8355:40;;;-1:-1:-1;8277:128:29;;8414:315;7477:1;7470:14;;;7514:4;7501:18;;8509:1;8523:165;8537:6;8534:1;8531:13;8523:165;;;8615:14;;8602:11;;;8595:35;8658:16;;;;8552:10;;8523:165;;;8708:11;;;-1:-1:-1;;8243:486:29;-1:-1:-1;8746:3:29;;7530:1225;-1:-1:-1;;;;;;;;;7530:1225:29:o;8760:184::-;8830:6;8883:2;8871:9;8862:7;8858:23;8854:32;8851:52;;;8899:1;8896;8889:12;8851:52;-1:-1:-1;8922:16:29;;8760:184;-1:-1:-1;8760:184:29:o;9435:277::-;9502:6;9555:2;9543:9;9534:7;9530:23;9526:32;9523:52;;;9571:1;9568;9561:12;9523:52;9603:9;9597:16;9656:5;9649:13;9642:21;9635:5;9632:32;9622:60;;9678:1;9675;9668:12;9622:60;9701:5;9435:277;-1:-1:-1;;;9435:277:29:o;9717:797::-;10006:13;;-1:-1:-1;;;;;10002:22:29;;;9984:41;;10085:4;10073:17;;;10067:24;10063:33;;10041:20;;;10034:63;10157:4;10145:17;;;10139:24;10165:8;10135:39;10113:20;;;10106:69;10235:4;10223:17;;;10217:24;10213:33;;10191:20;;;10184:63;10303:4;10291:17;;;10285:24;10263:20;;;10256:54;9964:3;10354:17;;;10348:24;10326:20;;;10319:54;10429:4;10417:17;;;10411:24;10389:20;;;10382:54;10496:4;10484:17;;;10478:24;10474:33;10452:20;;;10445:63;;;;9933:3;9918:19;;9717:797::o;11561:127::-;11622:10;11617:3;11613:20;11610:1;11603:31;11653:4;11650:1;11643:15;11677:4;11674:1;11667:15;11693:897;11773:6;11826:2;11814:9;11805:7;11801:23;11797:32;11794:52;;;11842:1;11839;11832:12;11794:52;11875:9;11869:16;11904:18;11945:2;11937:6;11934:14;11931:34;;;11961:1;11958;11951:12;11931:34;11999:6;11988:9;11984:22;11974:32;;12044:7;12037:4;12033:2;12029:13;12025:27;12015:55;;12066:1;12063;12056:12;12015:55;12095:2;12089:9;12117:2;12113;12110:10;12107:36;;;12123:18;;:::i;:::-;12198:2;12192:9;12166:2;12252:13;;-1:-1:-1;;12248:22:29;;;12272:2;12244:31;12240:40;12228:53;;;12296:18;;;12316:22;;;12293:46;12290:72;;;12342:18;;:::i;:::-;12382:10;12378:2;12371:22;12417:2;12409:6;12402:18;12457:7;12452:2;12447;12443;12439:11;12435:20;12432:33;12429:53;;;12478:1;12475;12468:12;12429:53;12491:68;12556:2;12551;12543:6;12539:15;12534:2;12530;12526:11;12491:68;:::i;:::-;12578:6;11693:897;-1:-1:-1;;;;;;;11693:897:29:o;12874:384::-;-1:-1:-1;;;;;;13059:33:29;;13047:46;;13116:13;;13029:3;;13138:74;13116:13;13201:1;13192:11;;13185:4;13173:17;;13138:74;:::i;:::-;13232:16;;;;13250:1;13228:24;;12874:384;-1:-1:-1;;;12874:384:29:o;13263:287::-;13392:3;13430:6;13424:13;13446:66;13505:6;13500:3;13493:4;13485:6;13481:17;13446:66;:::i;:::-;13528:16;;;;;13263:287;-1:-1:-1;;13263:287:29:o;14784:291::-;14961:2;14950:9;14943:21;14924:4;14981:45;15022:2;15011:9;15007:18;14999:6;14981:45;:::i;:::-;14973:53;;15062:6;15057:2;15046:9;15042:18;15035:34;14784:291;;;;;:::o;15080:220::-;15229:2;15218:9;15211:21;15192:4;15249:45;15290:2;15279:9;15275:18;15267:6;15249:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DAI()": "e0bab4c4",
    "IS_TEST()": "fa7626d4",
    "QUOTER()": "8dae88c2",
    "WETH9()": "4aa4a4fc",
    "dai()": "f4b9fa75",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "quoter()": "c6bbd5a7",
    "setUp()": "0a9254e4",
    "swap()": "8119c065",
    "swapRouter()": "c31c9c07",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testCanSelectFork()": "25b7d54e",
    "testCanSetForkBlockNumber()": "b888f4aa",
    "testSwap()": "6e008a03",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"contract IQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"contract Swap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCanSelectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCanSetForkBlockNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/Fork.t.sol\":\"ForkTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/Swap.sol\":{\"keccak256\":\"0x808bd198771ca3f0a0de288ef983c740e3901bb22a54ea2660bd8feaed73ec81\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://76a1c5724749cb8bab3e6ed97220587b3b098a303551d6889a73f327e5bb50ae\",\"dweb:/ipfs/QmXGdZESB51BEd2RVsCaxTYxWakU5ZH3SUamaDvJgfQ4oo\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x94dfbd5474881d8f4f122e7c6d00ec2e6966ed7866f73a9ba964d164732cb4ab\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b3ed4a03060e542c16f47466c3e2412c92a48f7a9bb42dc7ff3c8216030ef3f\",\"dweb:/ipfs/QmQ1Fz9iwE8r8MvEZA6KVYhMLCVXvxUQKoUXSYJmkyGT8N\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce\",\"dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d\",\"dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3\",\"dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731\",\"dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a\",\"dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f\",\"dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c\",\"dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a\",\"dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254\",\"dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f\",\"dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc\",\"dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1\",\"dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"test/foundry/Fork.t.sol\":{\"keccak256\":\"0x0e73faeee8fa8aefdcd5131476a89f6395f192fe9a9953eb0d93ff1de235a25c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b035975813fe1e51aa42541cbbcd6b5ec9e3fb4d20c95327452ca3ec49a912f3\",\"dweb:/ipfs/Qmd1Qpqvz7VGMsKsTYU4gz9BF3L48XByRpbb1Pm5BJ9LaN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dai",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "quoter",
          "outputs": [
            {
              "internalType": "contract IQuoter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "contract Swap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCanSelectFork"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCanSetForkBlockNumber"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSwap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/Fork.t.sol": "ForkTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Swap.sol": {
        "keccak256": "0x808bd198771ca3f0a0de288ef983c740e3901bb22a54ea2660bd8feaed73ec81",
        "urls": [
          "bzz-raw://76a1c5724749cb8bab3e6ed97220587b3b098a303551d6889a73f327e5bb50ae",
          "dweb:/ipfs/QmXGdZESB51BEd2RVsCaxTYxWakU5ZH3SUamaDvJgfQ4oo"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x94dfbd5474881d8f4f122e7c6d00ec2e6966ed7866f73a9ba964d164732cb4ab",
        "urls": [
          "bzz-raw://2b3ed4a03060e542c16f47466c3e2412c92a48f7a9bb42dc7ff3c8216030ef3f",
          "dweb:/ipfs/QmQ1Fz9iwE8r8MvEZA6KVYhMLCVXvxUQKoUXSYJmkyGT8N"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xff80f41dd0d31e4bbda7ffba2f1f80d28493a6af85c13e4d700c09a6a5f9c9b4",
        "urls": [
          "bzz-raw://5853c4b5e16a81e400c9ed44de8aaaf480b0266da017c55f6f6901808cf23cce",
          "dweb:/ipfs/QmXx6ybo4apj3GPLhA9Q4wDU9FQ3YzMYytjbgqFQVrxqem"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261",
        "urls": [
          "bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379",
          "dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xe485eccdb0534dde34b7b8061e4e817c977803eafb0203013f9931452fd04471",
        "urls": [
          "bzz-raw://b1d3b82b6afe6bc54d6e4a41c022adcd6614abffa82db36e8f41611fbe637d7d",
          "dweb:/ipfs/Qmd9zdvci5pof4Aoo9YnV2DprTV1dWRgm2BY16wmsBdGGR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x0fbdbaf561ffeaf70308f9a493acc86f54aae0578376cbe3a1d2e4481ad23f0e",
        "urls": [
          "bzz-raw://9f6e5ba6a8a95d391eb6ba9ba5f055f1961a8d031257b4b3fad72e74bc6028d3",
          "dweb:/ipfs/QmQ8WDUBtGM332wAXMt3Acc8c4ojksqqQ2iAkE9PgarGb7"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0acf2b89a63dbc2f3dbab48d1b8e3b2ebc014cef1e16c7807a3826f51adcc3cc",
        "urls": [
          "bzz-raw://903c973ddab09497ea57d7f33d757af851322d330225792993f14f13c7e82731",
          "dweb:/ipfs/QmSm3hdFVfE4hqtw8CBHjZvMoCR3STe8k7pLjfDpwQWSw2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xaffbb74d0276b7eea8d5a6de6f003d3dc151c5520bf2094e48b5098b60935f52",
        "urls": [
          "bzz-raw://e84280959bc8677be79bb09c401341eee8f4f5932de549f423474b65dbed7c8a",
          "dweb:/ipfs/QmU4LJnAcrDX69fCgmwEpFP1CsEjNR6LS8EFVHy4axkH6e"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xa915d14227430c3a1ed8e80bdd5ceb5a1fff791a4454565f5122d9685914cffb",
        "urls": [
          "bzz-raw://db8ae45845bfb42d0ddb2ffd7233b803c02f4d0eef3140211eb06266fd59645f",
          "dweb:/ipfs/QmW7oRpvPsCW2BU8HFZXPJAQwEWZszjeEmD1y7sdFPoCfw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xee79340b675b42ba1192a7698aceaf775518099bd9d89c88eb5a890e8c3bef04",
        "urls": [
          "bzz-raw://3f2f034f1f0e6c2b7cef172d457872e060a1309a4b69630d9c30caaa12f83c1c",
          "dweb:/ipfs/QmPAaZeAKCn4JLafoxVL4TBYzcrADAVC8dmjT1WPpZ4f4D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417",
        "urls": [
          "bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a",
          "dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x41cafaff048da9639ce9ec82f0d0f0dc7d1430c2e029cad49010bd8d77e81357",
        "urls": [
          "bzz-raw://a4193803ee128be194786ff806e4a39b6498331969df756bc41985dd3d26c254",
          "dweb:/ipfs/QmcdNtApALPVkoZG5V24ttXJsDKnyQ53LKTfYsCyiuv8m9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x071599d8ff5638e3ba28ef07c9d6a943fb9528f580d4b5054791c9d908d09f1a",
        "urls": [
          "bzz-raw://851f906606b73d69f541184800b2cd948f0486ec6c93c80ab0ad9af281c7b61f",
          "dweb:/ipfs/QmXcxVSbbfXf4Z34WDDFc73ErmC7LFR16W7SH6F8ERJYD9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x2a9081ab9a764847d9126266224f520260e2ac237fbbd9852eac426cda41d05a",
        "urls": [
          "bzz-raw://7b2d045ee971d8e8c5508fe1f5abe00292dc39aeb0a29a60bf1f047eb3cd04bc",
          "dweb:/ipfs/Qmdxu5z1W1k6HpbMQse2it2Mvs82UvSSR1aCmnZyXeMvz1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb",
        "urls": [
          "bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4",
          "dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb",
        "urls": [
          "bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1",
          "dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": {
        "keccak256": "0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff",
        "urls": [
          "bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417",
          "dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/Fork.t.sol": {
        "keccak256": "0x0e73faeee8fa8aefdcd5131476a89f6395f192fe9a9953eb0d93ff1de235a25c",
        "urls": [
          "bzz-raw://b035975813fe1e51aa42541cbbcd6b5ec9e3fb4d20c95327452ca3ec49a912f3",
          "dweb:/ipfs/Qmd1Qpqvz7VGMsKsTYU4gz9BF3L48XByRpbb1Pm5BJ9LaN"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/Fork.t.sol",
    "id": 45131,
    "exportedSymbols": {
      "Context": [
        44466
      ],
      "DSTest": [
        2666
      ],
      "ERC20": [
        44341
      ],
      "ForkTest": [
        45130
      ],
      "IERC20": [
        44419
      ],
      "IERC20Metadata": [
        44444
      ],
      "IQuoter": [
        44537
      ],
      "ISwapRouter": [
        44637
      ],
      "IUniswapV3SwapCallback": [
        44480
      ],
      "IWETH": [
        374
      ],
      "StdAssertions": [
        4159
      ],
      "StdChains": [
        4923
      ],
      "StdCheats": [
        7776
      ],
      "StdInvariant": [
        8101
      ],
      "StdStorage": [
        8867
      ],
      "StdStyle": [
        11717
      ],
      "StdUtils": [
        12565
      ],
      "Swap": [
        297
      ],
      "Test": [
        12616
      ],
      "TestBase": [
        2732
      ],
      "TransferHelper": [
        44808
      ],
      "Vm": [
        14327
      ],
      "console": [
        22391
      ],
      "console2": [
        30516
      ],
      "safeconsole": [
        43754
      ],
      "stdError": [
        7842
      ],
      "stdJson": [
        8693
      ],
      "stdMath": [
        8835
      ],
      "stdStorage": [
        10506
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:4335:28",
    "nodes": [
      {
        "id": 44810,
        "nodeType": "PragmaDirective",
        "src": "40:24:28",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 44811,
        "nodeType": "ImportDirective",
        "src": "68:28:28",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45131,
        "sourceUnit": 12617,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44812,
        "nodeType": "ImportDirective",
        "src": "98:34:28",
        "nodes": [],
        "absolutePath": "contracts/Swap.sol",
        "file": "../../contracts/Swap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45131,
        "sourceUnit": 298,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44813,
        "nodeType": "ImportDirective",
        "src": "134:46:28",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IWETH.sol",
        "file": "../../contracts/interfaces/IWETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45131,
        "sourceUnit": 375,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44814,
        "nodeType": "ImportDirective",
        "src": "234:55:28",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45131,
        "sourceUnit": 44342,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44815,
        "nodeType": "ImportDirective",
        "src": "291:68:28",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45131,
        "sourceUnit": 44638,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44816,
        "nodeType": "ImportDirective",
        "src": "361:70:28",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45131,
        "sourceUnit": 44809,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44817,
        "nodeType": "ImportDirective",
        "src": "433:64:28",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45131,
        "sourceUnit": 44538,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45130,
        "nodeType": "ContractDefinition",
        "src": "501:3874:28",
        "nodes": [
          {
            "id": 44821,
            "nodeType": "VariableDeclaration",
            "src": "571:19:28",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mainnetFork",
            "nameLocation": "579:11:28",
            "scope": 45130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44820,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "571:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44824,
            "nodeType": "VariableDeclaration",
            "src": "629:72:28",
            "nodes": [],
            "constant": true,
            "functionSelector": "e0bab4c4",
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "653:3:28",
            "scope": 45130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44822,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "629:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 44823,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "659:42:28",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "id": 44827,
            "nodeType": "VariableDeclaration",
            "src": "708:74:28",
            "nodes": [],
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "mutability": "constant",
            "name": "WETH9",
            "nameLocation": "732:5:28",
            "scope": 45130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44825,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "708:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 44826,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "740:42:28",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "id": 44830,
            "nodeType": "VariableDeclaration",
            "src": "789:75:28",
            "nodes": [],
            "constant": true,
            "functionSelector": "8dae88c2",
            "mutability": "constant",
            "name": "QUOTER",
            "nameLocation": "813:6:28",
            "scope": 45130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44828,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "789:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862323733303866394639304436303734363362623333654131426542623431433237434535414236",
              "id": 44829,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "822:42:28",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6"
            },
            "visibility": "public"
          },
          {
            "id": 44836,
            "nodeType": "VariableDeclaration",
            "src": "873:105:28",
            "nodes": [],
            "constant": true,
            "functionSelector": "c31c9c07",
            "mutability": "constant",
            "name": "swapRouter",
            "nameLocation": "901:10:28",
            "scope": 45130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$44637",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 44832,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44831,
                "name": "ISwapRouter",
                "nameLocations": [
                  "873:11:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44637,
                "src": "873:11:28"
              },
              "referencedDeclaration": 44637,
              "src": "873:11:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$44637",
                "typeString": "contract ISwapRouter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                  "id": 44834,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "935:42:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 44833,
                "name": "ISwapRouter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 44637,
                "src": "923:11:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$44637_$",
                  "typeString": "type(contract ISwapRouter)"
                }
              },
              "id": 44835,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "923:55:28",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$44637",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44839,
            "nodeType": "VariableDeclaration",
            "src": "987:16:28",
            "nodes": [],
            "constant": false,
            "functionSelector": "f4b9fa75",
            "mutability": "mutable",
            "name": "dai",
            "nameLocation": "1000:3:28",
            "scope": 45130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$44341",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 44838,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44837,
                "name": "ERC20",
                "nameLocations": [
                  "987:5:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44341,
                "src": "987:5:28"
              },
              "referencedDeclaration": 44341,
              "src": "987:5:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$44341",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44842,
            "nodeType": "VariableDeclaration",
            "src": "1010:17:28",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "1023:4:28",
            "scope": 45130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$374",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 44841,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44840,
                "name": "IWETH",
                "nameLocations": [
                  "1010:5:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 374,
                "src": "1010:5:28"
              },
              "referencedDeclaration": 374,
              "src": "1010:5:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$374",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44845,
            "nodeType": "VariableDeclaration",
            "src": "1036:16:28",
            "nodes": [],
            "constant": false,
            "functionSelector": "8119c065",
            "mutability": "mutable",
            "name": "swap",
            "nameLocation": "1048:4:28",
            "scope": 45130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Swap_$297",
              "typeString": "contract Swap"
            },
            "typeName": {
              "id": 44844,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44843,
                "name": "Swap",
                "nameLocations": [
                  "1036:4:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 297,
                "src": "1036:4:28"
              },
              "referencedDeclaration": 297,
              "src": "1036:4:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Swap_$297",
                "typeString": "contract Swap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44848,
            "nodeType": "VariableDeclaration",
            "src": "1059:21:28",
            "nodes": [],
            "constant": false,
            "functionSelector": "c6bbd5a7",
            "mutability": "mutable",
            "name": "quoter",
            "nameLocation": "1074:6:28",
            "scope": 45130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IQuoter_$44537",
              "typeString": "contract IQuoter"
            },
            "typeName": {
              "id": 44847,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44846,
                "name": "IQuoter",
                "nameLocations": [
                  "1059:7:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44537,
                "src": "1059:7:28"
              },
              "referencedDeclaration": 44537,
              "src": "1059:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IQuoter_$44537",
                "typeString": "contract IQuoter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44854,
            "nodeType": "VariableDeclaration",
            "src": "1353:56:28",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "MAINNET_RPC_URL",
            "nameLocation": "1360:15:28",
            "scope": 45130,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 44849,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1353:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d41494e4e45545f5250435f55524c",
                  "id": 44852,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1391:17:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  },
                  "value": "MAINNET_RPC_URL"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f",
                    "typeString": "literal_string \"MAINNET_RPC_URL\""
                  }
                ],
                "expression": {
                  "id": 44850,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2725,
                  "src": "1378:2:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$14327",
                    "typeString": "contract Vm"
                  }
                },
                "id": 44851,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "1381:9:28",
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 13049,
                "src": "1378:12:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 44853,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1378:31:28",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44890,
            "nodeType": "FunctionDefinition",
            "src": "1536:267:28",
            "nodes": [],
            "body": {
              "id": 44889,
              "nodeType": "Block",
              "src": "1560:243:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44857,
                      "name": "mainnetFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44821,
                      "src": "1571:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44860,
                          "name": "MAINNET_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44854,
                          "src": "1599:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 44858,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2725,
                          "src": "1585:2:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$14327",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 44859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1588:10:28",
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14053,
                        "src": "1585:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 44861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1585:30:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1571:44:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44863,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:44:28"
                },
                {
                  "expression": {
                    "id": 44869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44864,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44845,
                      "src": "1626:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Swap_$297",
                        "typeString": "contract Swap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1633:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Swap_$297_$",
                          "typeString": "function () returns (contract Swap)"
                        },
                        "typeName": {
                          "id": 44866,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44865,
                            "name": "Swap",
                            "nameLocations": [
                              "1637:4:28"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 297,
                            "src": "1637:4:28"
                          },
                          "referencedDeclaration": 297,
                          "src": "1637:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Swap_$297",
                            "typeString": "contract Swap"
                          }
                        }
                      },
                      "id": 44868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1633:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Swap_$297",
                        "typeString": "contract Swap"
                      }
                    },
                    "src": "1626:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Swap_$297",
                      "typeString": "contract Swap"
                    }
                  },
                  "id": 44870,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:17:28"
                },
                {
                  "expression": {
                    "id": 44875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44871,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44839,
                      "src": "1654:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$44341",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44873,
                          "name": "DAI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44824,
                          "src": "1666:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44872,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44341,
                        "src": "1660:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$44341_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 44874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1660:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$44341",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1654:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$44341",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 44876,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:16:28"
                },
                {
                  "expression": {
                    "id": 44881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44877,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44842,
                      "src": "1681:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$374",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44879,
                          "name": "WETH9",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44827,
                          "src": "1694:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44878,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "1688:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$374_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 44880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1688:12:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$374",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "1681:19:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$374",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 44882,
                  "nodeType": "ExpressionStatement",
                  "src": "1681:19:28"
                },
                {
                  "expression": {
                    "id": 44887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44883,
                      "name": "quoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44848,
                      "src": "1711:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$44537",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44885,
                          "name": "QUOTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44830,
                          "src": "1728:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44884,
                        "name": "IQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44537,
                        "src": "1720:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IQuoter_$44537_$",
                          "typeString": "type(contract IQuoter)"
                        }
                      },
                      "id": 44886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1720:15:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuoter_$44537",
                        "typeString": "contract IQuoter"
                      }
                    },
                    "src": "1711:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IQuoter_$44537",
                      "typeString": "contract IQuoter"
                    }
                  },
                  "id": 44888,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:24:28"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1545:5:28",
            "parameters": {
              "id": 44855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1550:2:28"
            },
            "returnParameters": {
              "id": 44856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1560:0:28"
            },
            "scope": 45130,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44907,
            "nodeType": "FunctionDefinition",
            "src": "1850:158:28",
            "nodes": [],
            "body": {
              "id": 44906,
              "nodeType": "Block",
              "src": "1886:122:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44896,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44821,
                        "src": "1939:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44893,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2725,
                        "src": "1925:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14327",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1928:10:28",
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14116,
                      "src": "1925:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1925:26:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44898,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:26:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44900,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2725,
                            "src": "1971:2:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$14327",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 44901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1974:10:28",
                          "memberName": "activeFork",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14037,
                          "src": "1971:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 44902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1971:15:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 44903,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44821,
                        "src": "1988:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44899,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2860,
                        2885,
                        2898,
                        2914,
                        2956,
                        2998,
                        3040,
                        3077,
                        3114,
                        3151,
                        695,
                        720,
                        750,
                        775,
                        834,
                        859,
                        889,
                        914,
                        2387,
                        2422
                      ],
                      "referencedDeclaration": 889,
                      "src": "1962:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1962:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44905,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:38:28"
                }
              ]
            },
            "functionSelector": "25b7d54e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanSelectFork",
            "nameLocation": "1859:17:28",
            "parameters": {
              "id": 44891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1876:2:28"
            },
            "returnParameters": {
              "id": 44892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1886:0:28"
            },
            "scope": 45130,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44937,
            "nodeType": "FunctionDefinition",
            "src": "2061:198:28",
            "nodes": [],
            "body": {
              "id": 44936,
              "nodeType": "Block",
              "src": "2105:154:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44913,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44821,
                        "src": "2130:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44910,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2725,
                        "src": "2116:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14327",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2119:10:28",
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14116,
                      "src": "2116:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:26:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44915,
                  "nodeType": "ExpressionStatement",
                  "src": "2116:26:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3138343632343331",
                        "id": 44919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18462431_by_1",
                          "typeString": "int_const 18462431"
                        },
                        "value": "18462431"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_18462431_by_1",
                          "typeString": "int_const 18462431"
                        }
                      ],
                      "expression": {
                        "id": 44916,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2725,
                        "src": "2153:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14327",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2156:8:28",
                      "memberName": "rollFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14092,
                      "src": "2153:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2153:21:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44921,
                  "nodeType": "ExpressionStatement",
                  "src": "2153:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44923,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2194:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 44924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2200:6:28",
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "2194:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138343632343331",
                        "id": 44925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2208:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18462431_by_1",
                          "typeString": "int_const 18462431"
                        },
                        "value": "18462431"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18462431_by_1",
                          "typeString": "int_const 18462431"
                        }
                      ],
                      "id": 44922,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2860,
                        2885,
                        2898,
                        2914,
                        2956,
                        2998,
                        3040,
                        3077,
                        3114,
                        3151,
                        695,
                        720,
                        750,
                        775,
                        834,
                        859,
                        889,
                        914,
                        2387,
                        2422
                      ],
                      "referencedDeclaration": 889,
                      "src": "2185:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2185:32:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44927,
                  "nodeType": "ExpressionStatement",
                  "src": "2185:32:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44931,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44839,
                            "src": "2240:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44341",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 44932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2244:4:28",
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43809,
                          "src": "2240:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 44933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2240:10:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 44928,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22391,
                        "src": "2228:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$22391_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 44930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2236:3:28",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14922,
                      "src": "2228:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 44934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2228:23:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44935,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:23:28"
                }
              ]
            },
            "functionSelector": "b888f4aa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanSetForkBlockNumber",
            "nameLocation": "2070:25:28",
            "parameters": {
              "id": 44908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2095:2:28"
            },
            "returnParameters": {
              "id": 44909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2105:0:28"
            },
            "scope": 45130,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45129,
            "nodeType": "FunctionDefinition",
            "src": "2304:2068:28",
            "nodes": [],
            "body": {
              "id": 45128,
              "nodeType": "Block",
              "src": "2331:2041:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44943,
                        "name": "mainnetFork",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44821,
                        "src": "2356:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44940,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2725,
                        "src": "2342:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14327",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2345:10:28",
                      "memberName": "selectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14116,
                      "src": "2342:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 44944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2342:26:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44945,
                  "nodeType": "ExpressionStatement",
                  "src": "2342:26:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 44946,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44842,
                          "src": "2414:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$374",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 44948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2419:7:28",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 302,
                        "src": "2414:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 44950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31653137",
                          "id": 44949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2434:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "1e17"
                        }
                      ],
                      "src": "2414:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 44951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2414:27:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44952,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:27:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44958,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2484:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              ],
                              "id": 44957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2476:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44956,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2476:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2476:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 44954,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44842,
                            "src": "2461:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$374",
                              "typeString": "contract IWETH"
                            }
                          },
                          "id": 44955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2466:9:28",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "2461:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2461:29:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 44961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2492:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "id": 44953,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2860,
                        2885,
                        2898,
                        2914,
                        2956,
                        2998,
                        3040,
                        3077,
                        3114,
                        3151,
                        695,
                        720,
                        750,
                        775,
                        834,
                        859,
                        889,
                        914,
                        2387,
                        2422
                      ],
                      "referencedDeclaration": 889,
                      "src": "2452:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2452:45:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44963,
                  "nodeType": "ExpressionStatement",
                  "src": "2452:45:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44969,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44836,
                            "src": "2529:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$44637",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$44637",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 44968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2521:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44967,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2521:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2521:19:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 44971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2542:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44964,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44842,
                        "src": "2508:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$374",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 44966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2513:7:28",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 346,
                      "src": "2508:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2508:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44973,
                  "nodeType": "ExpressionStatement",
                  "src": "2508:39:28"
                },
                {
                  "assignments": [
                    44978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44978,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "2612:6:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 45128,
                      "src": "2570:48:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$44561_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 44977,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44976,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nameLocations": [
                            "2570:11:28",
                            "2582:22:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44561,
                          "src": "2570:34:28"
                        },
                        "referencedDeclaration": 44561,
                        "src": "2570:34:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$44561_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44994,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44981,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44827,
                        "src": "2690:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44982,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44824,
                        "src": "2720:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 44983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2773:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 44986,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2811:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForkTest_$45130",
                              "typeString": "contract ForkTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForkTest_$45130",
                              "typeString": "contract ForkTest"
                            }
                          ],
                          "id": 44985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2803:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44984,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2803:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2803:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44988,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2841:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 44989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2847:9:28",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2841:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653137",
                        "id": 44990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2881:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "1e17"
                      },
                      {
                        "hexValue": "30",
                        "id": 44991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2918:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 44992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3152:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44979,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44637,
                        "src": "2621:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$44637_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 44980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2643:22:28",
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44561,
                      "src": "2621:44:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$44561_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 44993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "2681:7:28",
                      "2710:8:28",
                      "2768:3:28",
                      "2792:9:28",
                      "2831:8:28",
                      "2871:8:28",
                      "2900:16:28",
                      "3133:17:28"
                    ],
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2621:544:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$44561_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2570:595:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45000,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44978,
                            "src": "3216:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$44561_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$44561_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          ],
                          "expression": {
                            "id": 44998,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44836,
                            "src": "3188:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$44637",
                              "typeString": "contract ISwapRouter"
                            }
                          },
                          "id": 44999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3199:16:28",
                          "memberName": "exactInputSingle",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44570,
                          "src": "3188:27:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$44561_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                          }
                        },
                        "id": 45001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3188:35:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44995,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22391,
                        "src": "3176:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$22391_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 44997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3184:3:28",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14908,
                      "src": "3176:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 45002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3176:48:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45003,
                  "nodeType": "ExpressionStatement",
                  "src": "3176:48:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45011,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3269:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              ],
                              "id": 45010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3261:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45009,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3261:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3261:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45007,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44839,
                            "src": "3247:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44341",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 45008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3251:9:28",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43853,
                          "src": "3247:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3247:28:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45004,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22391,
                        "src": "3235:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$22391_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 45006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3243:3:28",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14908,
                      "src": "3235:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 45014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3235:41:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45015,
                  "nodeType": "ExpressionStatement",
                  "src": "3235:41:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45023,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3322:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              ],
                              "id": 45022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3314:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45021,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3314:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3314:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45019,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44842,
                            "src": "3299:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$374",
                              "typeString": "contract IWETH"
                            }
                          },
                          "id": 45020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3304:9:28",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "3299:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3299:29:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45016,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22391,
                        "src": "3287:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$22391_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 45018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3295:3:28",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14908,
                      "src": "3287:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 45026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3287:42:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45027,
                  "nodeType": "ExpressionStatement",
                  "src": "3287:42:28"
                },
                {
                  "assignments": [
                    45029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45029,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "3347:9:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 45128,
                      "src": "3342:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45028,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3342:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45044,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45032,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44824,
                        "src": "3388:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45033,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44827,
                        "src": "3393:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 45034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3400:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45039,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3428:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              ],
                              "id": 45038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3420:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45037,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3420:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3420:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45035,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44839,
                            "src": "3406:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44341",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 45036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3410:9:28",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43853,
                          "src": "3406:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3406:28:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3436:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45030,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44848,
                        "src": "3359:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IQuoter_$44537",
                          "typeString": "contract IQuoter"
                        }
                      },
                      "id": 45031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3366:21:28",
                      "memberName": "quoteExactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44510,
                      "src": "3359:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_uint160_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint24,uint256,uint160) external returns (uint256)"
                      }
                    },
                    "id": 45043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:79:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3342:96:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "65787074656374656420616d6f756e74",
                        "id": 45048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3461:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85144b65a3ec3ebfc6893156bfb6214cfb2eadb74cfb66a862e8235c901f414d",
                          "typeString": "literal_string \"exptected amount\""
                        },
                        "value": "exptected amount"
                      },
                      {
                        "id": 45049,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45029,
                        "src": "3481:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_85144b65a3ec3ebfc6893156bfb6214cfb2eadb74cfb66a862e8235c901f414d",
                          "typeString": "literal_string \"exptected amount\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45045,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22391,
                        "src": "3449:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$22391_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 45047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3457:3:28",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15035,
                      "src": "3449:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 45050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3449:42:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45051,
                  "nodeType": "ExpressionStatement",
                  "src": "3449:42:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45057,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44836,
                            "src": "3522:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$44637",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$44637",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 45056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3514:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45055,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3514:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3514:19:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45063,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3557:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              ],
                              "id": 45062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3549:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45061,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3549:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3549:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45059,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44839,
                            "src": "3535:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44341",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 45060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3539:9:28",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43853,
                          "src": "3535:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3535:28:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45052,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44839,
                        "src": "3502:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$44341",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 45054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3506:7:28",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43921,
                      "src": "3502:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3502:62:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45067,
                  "nodeType": "ExpressionStatement",
                  "src": "3502:62:28"
                },
                {
                  "assignments": [
                    45072
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45072,
                      "mutability": "mutable",
                      "name": "params2",
                      "nameLocation": "3619:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 45128,
                      "src": "3577:49:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$44561_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 45071,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45070,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nameLocations": [
                            "3577:11:28",
                            "3589:22:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44561,
                          "src": "3577:34:28"
                        },
                        "referencedDeclaration": 44561,
                        "src": "3577:34:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$44561_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45094,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45075,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44824,
                        "src": "3698:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45076,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44827,
                        "src": "3726:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 45077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3781:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 45080,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3819:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForkTest_$45130",
                              "typeString": "contract ForkTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForkTest_$45130",
                              "typeString": "contract ForkTest"
                            }
                          ],
                          "id": 45079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3811:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45078,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3811:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3811:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 45082,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3849:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 45083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3855:9:28",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3849:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45088,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3911:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              ],
                              "id": 45087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3903:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45086,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3903:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3903:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45084,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44839,
                            "src": "3889:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44341",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 45085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3893:9:28",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43853,
                          "src": "3889:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3889:28:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3950:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 45092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4184:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45073,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44637,
                        "src": "3629:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$44637_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 45074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3651:22:28",
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44561,
                      "src": "3629:44:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$44561_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 45093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "3689:7:28",
                      "3716:8:28",
                      "3776:3:28",
                      "3800:9:28",
                      "3839:8:28",
                      "3879:8:28",
                      "3932:16:28",
                      "4165:17:28"
                    ],
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3629:568:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$44561_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3577:620:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45100,
                            "name": "params2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45072,
                            "src": "4250:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$44561_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$44561_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                            }
                          ],
                          "expression": {
                            "id": 45098,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44836,
                            "src": "4222:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$44637",
                              "typeString": "contract ISwapRouter"
                            }
                          },
                          "id": 45099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4233:16:28",
                          "memberName": "exactInputSingle",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44570,
                          "src": "4222:27:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$44561_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                          }
                        },
                        "id": 45101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4222:36:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45095,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22391,
                        "src": "4210:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$22391_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 45097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4218:3:28",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14908,
                      "src": "4210:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 45102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4210:49:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45103,
                  "nodeType": "ExpressionStatement",
                  "src": "4210:49:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45111,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4304:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              ],
                              "id": 45110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4296:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45109,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4296:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4296:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45107,
                            "name": "dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44839,
                            "src": "4282:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$44341",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 45108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4286:9:28",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43853,
                          "src": "4282:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4282:28:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45104,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22391,
                        "src": "4270:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$22391_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 45106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4278:3:28",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14908,
                      "src": "4270:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 45114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4270:41:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45115,
                  "nodeType": "ExpressionStatement",
                  "src": "4270:41:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45123,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4357:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForkTest_$45130",
                                  "typeString": "contract ForkTest"
                                }
                              ],
                              "id": 45122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4349:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45121,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4349:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4349:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45119,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44842,
                            "src": "4334:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IWETH_$374",
                              "typeString": "contract IWETH"
                            }
                          },
                          "id": 45120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4339:9:28",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 319,
                          "src": "4334:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4334:29:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45116,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22391,
                        "src": "4322:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$22391_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 45118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4330:3:28",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14908,
                      "src": "4322:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 45126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4322:42:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45127,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:42:28"
                }
              ]
            },
            "functionSelector": "6e008a03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSwap",
            "nameLocation": "2313:8:28",
            "parameters": {
              "id": 44938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2321:2:28"
            },
            "returnParameters": {
              "id": 44939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2331:0:28"
            },
            "scope": 45130,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44818,
              "name": "Test",
              "nameLocations": [
                "522:4:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12616,
              "src": "522:4:28"
            },
            "id": 44819,
            "nodeType": "InheritanceSpecifier",
            "src": "522:4:28"
          }
        ],
        "canonicalName": "ForkTest",
        "contractDependencies": [
          297
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45130,
          12616,
          12565,
          8101,
          7776,
          6983,
          4923,
          4159,
          2666,
          2732,
          2729
        ],
        "name": "ForkTest",
        "nameLocation": "510:8:28",
        "scope": 45131,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 28
}