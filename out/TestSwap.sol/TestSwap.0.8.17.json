{
  "abi": [
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600080546001600160a01b0319908116736b175474e89094c44da98b954eedeac495271d0f179091556001805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc217905534801561005857600080fd5b50610464806100686000396000f3fe6080604052600436106100745760003560e01c8063b6b55f251161004e578063b6b55f251461010c578063c31c9c071461012e578063e0bab4c414610156578063f4b9fa751461017e57600080fd5b80633fc8cef3146100805780634aa4a4fc146100bc57806389a30271146100e457600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100a073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b3480156100f057600080fd5b506100a073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b34801561011857600080fd5b5061012c6101273660046103d3565b61019e565b005b34801561013a57600080fd5b506100a073e592427a0aece92de3edee1f18e0157c0586156481565b34801561016257600080fd5b506100a0736b175474e89094c44da98b954eedeac495271d0f81565b34801561018a57600080fd5b506000546100a0906001600160a01b031681565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156101f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021991906103ec565b5060005460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af115801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a391906103ec565b506040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260208201908152610bb88284019081523060608401908152426080850190815260a08501878152600060c0870181815260e08801918252975163414bf38960e01b815287516001600160a01b039081166004830152965187166024820152945162ffffff166044860152925185166064850152905160848401525160a4830152935160c482015292511660e48301529073e592427a0aece92de3edee1f18e0157c058615649063414bf38990610104016020604051808303816000875af11580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce9190610415565b505050565b6000602082840312156103e557600080fd5b5035919050565b6000602082840312156103fe57600080fd5b8151801515811461040e57600080fd5b9392505050565b60006020828403121561042757600080fd5b505191905056fea2646970667358221220938c033ce40273243a564bbc825a6dbcb8b30c6b9d5b1db9d9c46961407a735364736f6c63430008110033",
    "sourceMap": "504:1458:24:-:0;;;735:68;;;-1:-1:-1;;;;;;735:68:24;;;760:42;735:68;;;;;1054:32;;;;;923:42;1054:32;;;504:1458;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100745760003560e01c8063b6b55f251161004e578063b6b55f251461010c578063c31c9c071461012e578063e0bab4c414610156578063f4b9fa751461017e57600080fd5b80633fc8cef3146100805780634aa4a4fc146100bc57806389a30271146100e457600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506001546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100a073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b3480156100f057600080fd5b506100a073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b34801561011857600080fd5b5061012c6101273660046103d3565b61019e565b005b34801561013a57600080fd5b506100a073e592427a0aece92de3edee1f18e0157c0586156481565b34801561016257600080fd5b506100a0736b175474e89094c44da98b954eedeac495271d0f81565b34801561018a57600080fd5b506000546100a0906001600160a01b031681565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156101f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021991906103ec565b5060005460405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af115801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a391906103ec565b506040805161010081018252736b175474e89094c44da98b954eedeac495271d0f815273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260208201908152610bb88284019081523060608401908152426080850190815260a08501878152600060c0870181815260e08801918252975163414bf38960e01b815287516001600160a01b039081166004830152965187166024820152945162ffffff166044860152925185166064850152905160848401525160a4830152935160c482015292511660e48301529073e592427a0aece92de3edee1f18e0157c058615649063414bf38990610104016020604051808303816000875af11580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce9190610415565b505050565b6000602082840312156103e557600080fd5b5035919050565b6000602082840312156103fe57600080fd5b8151801515811461040e57600080fd5b9392505050565b60006020828403121561042757600080fd5b505191905056fea2646970667358221220938c033ce40273243a564bbc825a6dbcb8b30c6b9d5b1db9d9c46961407a735364736f6c63430008110033",
    "sourceMap": "504:1458:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1054:32;;;;;;;;;;-1:-1:-1;1054:32:24;;;;-1:-1:-1;;;;;1054:32:24;;;;;;-1:-1:-1;;;;;192:32:96;;;174:51;;162:2;147:18;1054:32:24;;;;;;;891:74;;;;;;;;;;;;923:42;891:74;;972:73;;;;;;;;;;;;1003:42;972:73;;1099:860;;;;;;;;;;-1:-1:-1;1099:860:24;;;;;:::i;:::-;;:::i;:::-;;617:105;;;;;;;;;;;;679:42;617:105;;812:72;;;;;;;;;;;;842:42;812:72;;735:68;;;;;;;;;;-1:-1:-1;735:68:24;;;;-1:-1:-1;;;;;735:68:24;;;1099:860;1193:3;;:51;;-1:-1:-1;;;1193:51:24;;1210:10;1193:51;;;1321:34:96;1230:4:24;1371:18:96;;;1364:43;1423:18;;;1416:34;;;-1:-1:-1;;;;;1193:3:24;;;;:16;;1256:18:96;;1193:51:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1255:3:24;;:40;;-1:-1:-1;;;1255:40:24;;679:42;1255:40;;;1917:51:96;1984:18;;;1977:34;;;-1:-1:-1;;;;;1255:3:24;;;;:11;;1890:18:96;;1255:40:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1357:546:24;;;;;;;;842:42;1357:546;;923:42;1357:546;;;;;;1509:4;1357:546;;;;;;1547:4;1357:546;;;;;;1577:15;1357:546;;;;;;;;;;;;-1:-1:-1;1357:546:24;;;;;;;;;;;;1916:35;;-1:-1:-1;;;1916:35:24;;2311:13:96;;-1:-1:-1;;;;;2307:22:96;;;1916:35:24;;;2289:41:96;2372:24;;2368:33;;2346:20;;;2339:63;2444:24;;2470:8;2440:39;2418:20;;;2411:69;2522:24;;2518:33;;2496:20;;;2489:63;2590:24;;2568:20;;;2561:54;2653:24;2631:20;;;2624:54;2716:24;;2694:20;;;2687:54;2783:24;;2779:33;2757:20;;;2750:63;1357:546:24;679:42;;1916:27;;2223:19:96;;1916:35:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1136:823;1099:860;:::o;444:180:96:-;503:6;556:2;544:9;535:7;531:23;527:32;524:52;;;572:1;569;562:12;524:52;-1:-1:-1;595:23:96;;444:180;-1:-1:-1;444:180:96:o;1461:277::-;1528:6;1581:2;1569:9;1560:7;1556:23;1552:32;1549:52;;;1597:1;1594;1587:12;1549:52;1629:9;1623:16;1682:5;1675:13;1668:21;1661:5;1658:32;1648:60;;1704:1;1701;1694:12;1648:60;1727:5;1461:277;-1:-1:-1;;;1461:277:96:o;2824:184::-;2894:6;2947:2;2935:9;2926:7;2922:23;2918:32;2915:52;;;2963:1;2960;2953:12;2915:52;-1:-1:-1;2986:16:96;;2824:184;-1:-1:-1;2824:184:96:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DAI()": "e0bab4c4",
    "USDC()": "89a30271",
    "WETH9()": "4aa4a4fc",
    "dai()": "f4b9fa75",
    "deposit(uint256)": "b6b55f25",
    "swapRouter()": "c31c9c07",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestSwap.sol\":\"TestSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2\",\"dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro\"]},\"contracts/test/TestSwap.sol\":{\"keccak256\":\"0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b\",\"dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAI",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USDC",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dai",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/TestSwap.sol": "TestSwap"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IWETH.sol": {
        "keccak256": "0x4181c58ac81fe9d7d359d35eaa7e767a3281cf33b328198fb0618ec9d77f3cb9",
        "urls": [
          "bzz-raw://33233319bc151a1eae1e94a9cb83d803bcf2addd8c42dec31601c1ed773e35e2",
          "dweb:/ipfs/QmTknmftCWvekvNwHRz5eQPsNdRpbY3ZS6HWHbbPEghnro"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/test/TestSwap.sol": {
        "keccak256": "0x1e8b5bcf3b6633958608e8bf665c8812d86b1783b85b4bd64f5f9081ba7458b3",
        "urls": [
          "bzz-raw://426be4791bde5cfe5efa7ed1631238f95aef2e1caf0bac9894af929e0daf177b",
          "dweb:/ipfs/QmT2UncG6383nojsLMHrCQ4B5LoHA5AAWtf2DNS5MshpuW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": {
        "keccak256": "0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff",
        "urls": [
          "bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417",
          "dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/TestSwap.sol",
    "id": 4613,
    "exportedSymbols": {
      "Context": [
        11817
      ],
      "ERC20": [
        11553
      ],
      "IERC20": [
        10966
      ],
      "IERC20Metadata": [
        11907
      ],
      "IQuoter": [
        10617
      ],
      "ISwapRouter": [
        10717
      ],
      "IUniswapV3SwapCallback": [
        11882
      ],
      "IWETH": [
        1610
      ],
      "TestSwap": [
        4612
      ],
      "TransferHelper": [
        10888
      ]
    },
    "nodeType": "SourceUnit",
    "src": "74:1888:24",
    "nodes": [
      {
        "id": 4520,
        "nodeType": "PragmaDirective",
        "src": "74:23:24",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 4521,
        "nodeType": "ImportDirective",
        "src": "125:70:24",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4613,
        "sourceUnit": 10889,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4522,
        "nodeType": "ImportDirective",
        "src": "197:64:24",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4613,
        "sourceUnit": 10618,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4523,
        "nodeType": "ImportDirective",
        "src": "263:68:24",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4613,
        "sourceUnit": 10718,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4524,
        "nodeType": "ImportDirective",
        "src": "410:33:24",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IWETH.sol",
        "file": "../interfaces/IWETH.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4613,
        "sourceUnit": 1611,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4525,
        "nodeType": "ImportDirective",
        "src": "445:55:24",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4613,
        "sourceUnit": 11554,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4612,
        "nodeType": "ContractDefinition",
        "src": "504:1458:24",
        "nodes": [
          {
            "id": 4529,
            "nodeType": "FunctionDefinition",
            "src": "535:28:24",
            "nodes": [],
            "body": {
              "id": 4528,
              "nodeType": "Block",
              "src": "561:2:24",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 4526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:2:24"
            },
            "returnParameters": {
              "id": 4527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:0:24"
            },
            "scope": 4612,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4535,
            "nodeType": "VariableDeclaration",
            "src": "617:105:24",
            "nodes": [],
            "constant": true,
            "functionSelector": "c31c9c07",
            "mutability": "constant",
            "name": "swapRouter",
            "nameLocation": "645:10:24",
            "scope": 4612,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$10717",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 4531,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4530,
                "name": "ISwapRouter",
                "nameLocations": [
                  "617:11:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10717,
                "src": "617:11:24"
              },
              "referencedDeclaration": 10717,
              "src": "617:11:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$10717",
                "typeString": "contract ISwapRouter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                  "id": 4533,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "679:42:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 4532,
                "name": "ISwapRouter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 10717,
                "src": "667:11:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$10717_$",
                  "typeString": "type(contract ISwapRouter)"
                }
              },
              "id": 4534,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "667:55:24",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$10717",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4541,
            "nodeType": "VariableDeclaration",
            "src": "735:68:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "f4b9fa75",
            "mutability": "mutable",
            "name": "dai",
            "nameLocation": "748:3:24",
            "scope": 4612,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$11553",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 4537,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4536,
                "name": "ERC20",
                "nameLocations": [
                  "735:5:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11553,
                "src": "735:5:24"
              },
              "referencedDeclaration": 11553,
              "src": "735:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11553",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
                  "id": 4539,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "760:42:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 4538,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 11553,
                "src": "754:5:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$11553_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 4540,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "754:49:24",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$11553",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4544,
            "nodeType": "VariableDeclaration",
            "src": "812:72:24",
            "nodes": [],
            "constant": true,
            "functionSelector": "e0bab4c4",
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "836:3:24",
            "scope": 4612,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4542,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "812:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
              "id": 4543,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "842:42:24",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
            },
            "visibility": "public"
          },
          {
            "id": 4547,
            "nodeType": "VariableDeclaration",
            "src": "891:74:24",
            "nodes": [],
            "constant": true,
            "functionSelector": "4aa4a4fc",
            "mutability": "constant",
            "name": "WETH9",
            "nameLocation": "915:5:24",
            "scope": 4612,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4545,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "891:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 4546,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "923:42:24",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "id": 4550,
            "nodeType": "VariableDeclaration",
            "src": "972:73:24",
            "nodes": [],
            "constant": true,
            "functionSelector": "89a30271",
            "mutability": "constant",
            "name": "USDC",
            "nameLocation": "996:4:24",
            "scope": 4612,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4548,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "972:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
              "id": 4549,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1003:42:24",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
            },
            "visibility": "public"
          },
          {
            "id": 4556,
            "nodeType": "VariableDeclaration",
            "src": "1054:32:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "1067:4:24",
            "scope": 4612,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$1610",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 4552,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4551,
                "name": "IWETH",
                "nameLocations": [
                  "1054:5:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1610,
                "src": "1054:5:24"
              },
              "referencedDeclaration": 1610,
              "src": "1054:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$1610",
                "typeString": "contract IWETH"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 4554,
                  "name": "WETH9",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4547,
                  "src": "1080:5:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 4553,
                "name": "IWETH",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1610,
                "src": "1074:5:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IWETH_$1610_$",
                  "typeString": "type(contract IWETH)"
                }
              },
              "id": 4555,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1074:12:24",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$1610",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4611,
            "nodeType": "FunctionDefinition",
            "src": "1099:860:24",
            "nodes": [],
            "body": {
              "id": 4610,
              "nodeType": "Block",
              "src": "1136:823:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1210:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1214:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1210:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4568,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1230:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestSwap_$4612",
                              "typeString": "contract TestSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestSwap_$4612",
                              "typeString": "contract TestSwap"
                            }
                          ],
                          "id": 4567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1222:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4566,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1222:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1222:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4570,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "1237:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4561,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4541,
                        "src": "1193:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11553",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1197:12:24",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11166,
                      "src": "1193:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:51:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4572,
                  "nodeType": "ExpressionStatement",
                  "src": "1193:51:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4578,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4535,
                            "src": "1275:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$10717",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$10717",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 4577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1267:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4576,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1267:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1267:19:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4580,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "1288:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4573,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4541,
                        "src": "1255:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$11553",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1259:7:24",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11133,
                      "src": "1255:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1255:40:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4582,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:40:24"
                },
                {
                  "assignments": [
                    4587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4587,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "1348:6:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 4610,
                      "src": "1306:48:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$10641_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 4586,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4585,
                          "name": "ISwapRouter.ExactInputSingleParams",
                          "nameLocations": [
                            "1306:11:24",
                            "1318:22:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10641,
                          "src": "1306:34:24"
                        },
                        "referencedDeclaration": 10641,
                        "src": "1306:34:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$10641_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4603,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4590,
                        "name": "DAI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4544,
                        "src": "1426:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4591,
                        "name": "WETH9",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4547,
                        "src": "1454:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 4592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1509:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      },
                      {
                        "arguments": [
                          {
                            "id": 4595,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1547:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestSwap_$4612",
                              "typeString": "contract TestSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestSwap_$4612",
                              "typeString": "contract TestSwap"
                            }
                          ],
                          "id": 4594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1539:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4593,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1539:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4597,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1577:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1583:9:24",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1577:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4599,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "1617:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1656:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 4601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1890:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 4588,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10717,
                        "src": "1357:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$10717_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 4589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1379:22:24",
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10641,
                      "src": "1357:44:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$10641_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 4602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1417:7:24",
                      "1444:8:24",
                      "1504:3:24",
                      "1528:9:24",
                      "1567:8:24",
                      "1607:8:24",
                      "1638:16:24",
                      "1871:17:24"
                    ],
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1357:546:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$10641_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1306:597:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4607,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4587,
                        "src": "1944:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$10641_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$10641_memory_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                        }
                      ],
                      "expression": {
                        "id": 4604,
                        "name": "swapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4535,
                        "src": "1916:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISwapRouter_$10717",
                          "typeString": "contract ISwapRouter"
                        }
                      },
                      "id": 4606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1927:16:24",
                      "memberName": "exactInputSingle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10650,
                      "src": "1916:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$10641_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                      }
                    },
                    "id": 4608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1916:35:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4609,
                  "nodeType": "ExpressionStatement",
                  "src": "1916:35:24"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1108:7:24",
            "parameters": {
              "id": 4559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4558,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1121:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4611,
                  "src": "1116:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4557,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1115:13:24"
            },
            "returnParameters": {
              "id": 4560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1136:0:24"
            },
            "scope": 4612,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TestSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4612
        ],
        "name": "TestSwap",
        "nameLocation": "513:8:24",
        "scope": 4613,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 24
}