{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "path",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "quoteExactInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceLimitX96",
          "type": "uint160"
        }
      ],
      "name": "quoteExactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "path",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "quoteExactOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceLimitX96",
          "type": "uint160"
        }
      ],
      "name": "quoteExactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "quoteExactInput(bytes,uint256)": "cdca1753",
    "quoteExactInputSingle(address,address,uint24,uint256,uint160)": "f7729d43",
    "quoteExactOutput(bytes,uint256)": "2f80bb1d",
    "quoteExactOutputSingle(address,address,uint24,uint256,uint160)": "30d07f21"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\"}},\"quoteExactInputSingle(address,address,uint24,uint256,uint160)\":{\"params\":{\"amountIn\":\"The desired input amount\",\"fee\":\"The fee of the token pool to consider for the pair\",\"sqrtPriceLimitX96\":\"The price limit of the pool that cannot be exceeded by the swap\",\"tokenIn\":\"The token being swapped in\",\"tokenOut\":\"The token being swapped out\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\"}},\"quoteExactOutputSingle(address,address,uint24,uint256,uint160)\":{\"params\":{\"amountOut\":\"The desired output amount\",\"fee\":\"The fee of the token pool to consider for the pair\",\"sqrtPriceLimitX96\":\"The price limit of the pool that cannot be exceeded by the swap\",\"tokenIn\":\"The token being swapped in\",\"tokenOut\":\"The token being swapped out\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\"}}},\"title\":\"Quoter Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle(address,address,uint24,uint256,uint160)\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle(address,address,uint24,uint256,uint160)\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"}},\"notice\":\"Supports quoting the calculated amounts from exact input or exact output swaps\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":\"IQuoter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol\":{\"keccak256\":\"0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417\",\"dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExactInput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExactInputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExactOutput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExactOutputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "quoteExactInput(bytes,uint256)": {
            "params": {
              "amountIn": "The amount of the first token to swap",
              "path": "The path of the swap, i.e. each token pair and the pool fee"
            },
            "returns": {
              "amountOut": "The amount of the last token that would be received"
            }
          },
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)": {
            "params": {
              "amountIn": "The desired input amount",
              "fee": "The fee of the token pool to consider for the pair",
              "sqrtPriceLimitX96": "The price limit of the pool that cannot be exceeded by the swap",
              "tokenIn": "The token being swapped in",
              "tokenOut": "The token being swapped out"
            },
            "returns": {
              "amountOut": "The amount of `tokenOut` that would be received"
            }
          },
          "quoteExactOutput(bytes,uint256)": {
            "params": {
              "amountOut": "The amount of the last token to receive",
              "path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
            },
            "returns": {
              "amountIn": "The amount of first token required to be paid"
            }
          },
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)": {
            "params": {
              "amountOut": "The desired output amount",
              "fee": "The fee of the token pool to consider for the pair",
              "sqrtPriceLimitX96": "The price limit of the pool that cannot be exceeded by the swap",
              "tokenIn": "The token being swapped in",
              "tokenOut": "The token being swapped out"
            },
            "returns": {
              "amountIn": "The amount required as the input for the swap in order to receive `amountOut`"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "quoteExactInput(bytes,uint256)": {
            "notice": "Returns the amount out received for a given exact input swap without executing the swap"
          },
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)": {
            "notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
          },
          "quoteExactOutput(bytes,uint256)": {
            "notice": "Returns the amount in required for a given exact output swap without executing the swap"
          },
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)": {
            "notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": "IQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol": {
        "keccak256": "0x124b4334f058f70afd8f3b04315cc0812961d400957225d0875872b2a31afbff",
        "urls": [
          "bzz-raw://efdc8133033a1596f60f3619a317f8b3af98a6adffd85a9898c5a809c5c22417",
          "dweb:/ipfs/QmRkGjgzgSxhUVxwqiWZuz9M4Ff3TwTbzUgN3yJd4gxMfN"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol",
    "id": 54663,
    "exportedSymbols": {
      "IQuoter": [
        54662
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2746:92",
    "nodes": [
      {
        "id": 54607,
        "nodeType": "PragmaDirective",
        "src": "45:24:92",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ]
      },
      {
        "id": 54608,
        "nodeType": "PragmaDirective",
        "src": "70:19:92",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 54662,
        "nodeType": "ContractDefinition",
        "src": "411:2379:92",
        "nodes": [
          {
            "id": 54619,
            "nodeType": "FunctionDefinition",
            "src": "759:99:92",
            "nodes": [],
            "documentation": {
              "id": 54610,
              "nodeType": "StructuredDocumentation",
              "src": "435:319:92",
              "text": "@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received"
            },
            "functionSelector": "cdca1753",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExactInput",
            "nameLocation": "768:15:92",
            "parameters": {
              "id": 54615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54612,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "797:4:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54619,
                  "src": "784:17:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54611,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:5:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54614,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "811:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54619,
                  "src": "803:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:37:92"
            },
            "returnParameters": {
              "id": 54618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54617,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "847:9:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54619,
                  "src": "839:17:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:19:92"
            },
            "scope": 54662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54635,
            "nodeType": "FunctionDefinition",
            "src": "1360:206:92",
            "nodes": [],
            "documentation": {
              "id": 54620,
              "nodeType": "StructuredDocumentation",
              "src": "864:491:92",
              "text": "@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param tokenIn The token being swapped in\n @param tokenOut The token being swapped out\n @param fee The fee of the token pool to consider for the pair\n @param amountIn The desired input amount\n @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received"
            },
            "functionSelector": "f7729d43",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExactInputSingle",
            "nameLocation": "1369:21:92",
            "parameters": {
              "id": 54631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54622,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "1408:7:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54635,
                  "src": "1400:15:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54624,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "1433:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54635,
                  "src": "1425:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54626,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1458:3:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54635,
                  "src": "1451:10:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 54625,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54628,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "1479:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54635,
                  "src": "1471:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54630,
                  "mutability": "mutable",
                  "name": "sqrtPriceLimitX96",
                  "nameLocation": "1505:17:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54635,
                  "src": "1497:25:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 54629,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1390:138:92"
            },
            "returnParameters": {
              "id": 54634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54633,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1555:9:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54635,
                  "src": "1547:17:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1547:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1546:19:92"
            },
            "scope": 54662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54645,
            "nodeType": "FunctionDefinition",
            "src": "1932:100:92",
            "nodes": [],
            "documentation": {
              "id": 54636,
              "nodeType": "StructuredDocumentation",
              "src": "1572:355:92",
              "text": "@notice Returns the amount in required for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n @param amountOut The amount of the last token to receive\n @return amountIn The amount of first token required to be paid"
            },
            "functionSelector": "2f80bb1d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExactOutput",
            "nameLocation": "1941:16:92",
            "parameters": {
              "id": 54641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54638,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "1971:4:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54645,
                  "src": "1958:17:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54637,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1958:5:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54640,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1985:9:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54645,
                  "src": "1977:17:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1957:38:92"
            },
            "returnParameters": {
              "id": 54644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54643,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "2022:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54645,
                  "src": "2014:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2014:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2013:18:92"
            },
            "scope": 54662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54661,
            "nodeType": "FunctionDefinition",
            "src": "2581:207:92",
            "nodes": [],
            "documentation": {
              "id": 54646,
              "nodeType": "StructuredDocumentation",
              "src": "2038:538:92",
              "text": "@notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n @param tokenIn The token being swapped in\n @param tokenOut The token being swapped out\n @param fee The fee of the token pool to consider for the pair\n @param amountOut The desired output amount\n @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount required as the input for the swap in order to receive `amountOut`"
            },
            "functionSelector": "30d07f21",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExactOutputSingle",
            "nameLocation": "2590:22:92",
            "parameters": {
              "id": 54657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54648,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "2630:7:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54661,
                  "src": "2622:15:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54650,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "2655:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54661,
                  "src": "2647:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2647:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54652,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "2680:3:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54661,
                  "src": "2673:10:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 54651,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54654,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "2701:9:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54661,
                  "src": "2693:17:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54656,
                  "mutability": "mutable",
                  "name": "sqrtPriceLimitX96",
                  "nameLocation": "2728:17:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54661,
                  "src": "2720:25:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 54655,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2612:139:92"
            },
            "returnParameters": {
              "id": 54660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54659,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "2778:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 54661,
                  "src": "2770:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2770:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2769:18:92"
            },
            "scope": 54662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IQuoter",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 54609,
          "nodeType": "StructuredDocumentation",
          "src": "91:320:92",
          "text": "@title Quoter Interface\n @notice Supports quoting the calculated amounts from exact input or exact output swaps\n @dev These functions are not marked view because they rely on calling non-view functions and reverting\n to compute the result. They are also not gas efficient and should not be called on-chain."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          54662
        ],
        "name": "IQuoter",
        "nameLocation": "421:7:92",
        "scope": 54663,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 92
}